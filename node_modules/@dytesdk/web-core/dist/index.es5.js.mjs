import { validate as uh, v4 as Bs } from "uuid";
import Ho from "axios";
import nl from "bowser";
import * as ve from "sdp-transform";
import { MessageType as W, PbLong as ds, typeofJsonValue as Pf } from "@protobuf-ts/runtime";
import { io as Cf } from "socket.io-client";
import * as jo from "worker-timers";
var rh, df = ["id"], pf = ["id"], Lr, Ze, Wi, Ua, An, Be, on, Fa, Ji, Kn, Ki, ha, th, er, un, yt, zi, va, Qi, zn, Ye, cn, Pt, kr, Yi, Qn, Va, Yn, Pr, Ha, Qt, lr, Xn, fa, so, Yt, ir, ja, Zn, Xi, xr, ln, st, Zi, xi, dn, es, et, pn, $e, xn, Yr, ei, Xr, Ga, oo, rs, $t, ts, as, uo, ns, Ba, is, ss, co, hn, os, lo, us, Wr, Io, po, Ps, cs, Eu, ri, ls, _u, Cr, Do, Ru;
function ah(o, c) {
  if (o == null)
    return {};
  var r = hf(o, c), t, e;
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(o);
    for (e = 0; e < a.length; e++)
      t = a[e], !(c.indexOf(t) >= 0) && Object.prototype.propertyIsEnumerable.call(o, t) && (r[t] = o[t]);
  }
  return r;
}
function hf(o, c) {
  if (o == null)
    return {};
  var r = {}, t = Object.keys(o), e, a;
  for (a = 0; a < t.length; a++)
    e = t[a], !(c.indexOf(e) >= 0) && (r[e] = o[e]);
  return r;
}
function _i(o, c, r) {
  return vf(o, c), r;
}
function vf(o, c) {
  if (o !== c)
    throw new TypeError("Private static access of wrong provenance");
}
function Or(o, c) {
  nh(o, c), c.add(o);
}
function Ne(o, c, r) {
  if (!c.has(o))
    throw new TypeError("attempted to get private field on non-instance");
  return r;
}
function z(o, c, r) {
  nh(o, c), c.set(o, r);
}
function nh(o, c) {
  if (c.has(o))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function f(o, c) {
  var r = ih(o, c, "get");
  return ff(o, r);
}
function ff(o, c) {
  return c.get ? c.get.call(o) : c.value;
}
function V(o, c, r) {
  var t = ih(o, c, "set");
  return mf(o, t, r), r;
}
function ih(o, c, r) {
  if (!c.has(o))
    throw new TypeError("attempted to " + r + " private field on non-instance");
  return c.get(o);
}
function mf(o, c, r) {
  if (c.set)
    c.set.call(o, r);
  else {
    if (!c.writable)
      throw new TypeError("attempted to set read only private field");
    c.value = r;
  }
}
function Bt(o) {
  var c = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
  return Bt = function(t) {
    if (t === null || !gf(t))
      return t;
    if (typeof t != "function")
      throw new TypeError("Super expression must either be null or a function");
    if (typeof c != "undefined") {
      if (c.has(t))
        return c.get(t);
      c.set(t, e);
    }
    function e() {
      return Ao(t, arguments, Pe(this).constructor);
    }
    return e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), Os(e, t);
  }, Bt(o);
}
function Ao(o, c, r) {
  return sh() ? Ao = Reflect.construct.bind() : Ao = function(e, a, n) {
    var i = [null];
    i.push.apply(i, a);
    var s = Function.bind.apply(e, i), u = new s();
    return n && Os(u, n.prototype), u;
  }, Ao.apply(null, arguments);
}
function gf(o) {
  try {
    return Function.toString.call(o).indexOf("[native code]") !== -1;
  } catch (c) {
    return typeof o == "function";
  }
}
function sr(o) {
  return wf(o) || kf(o) || al(o) || yf();
}
function yf() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function kf(o) {
  if (typeof Symbol != "undefined" && o[Symbol.iterator] != null || o["@@iterator"] != null)
    return Array.from(o);
}
function wf(o) {
  if (Array.isArray(o))
    return gc(o);
}
function td(o, c) {
  var r = Object.keys(o);
  if (Object.getOwnPropertySymbols) {
    var t = Object.getOwnPropertySymbols(o);
    c && (t = t.filter(function(e) {
      return Object.getOwnPropertyDescriptor(o, e).enumerable;
    })), r.push.apply(r, t);
  }
  return r;
}
function Q(o) {
  for (var c = 1; c < arguments.length; c++) {
    var r = arguments[c] != null ? arguments[c] : {};
    c % 2 ? td(Object(r), !0).forEach(function(t) {
      R(o, t, r[t]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(o, Object.getOwnPropertyDescriptors(r)) : td(Object(r)).forEach(function(t) {
      Object.defineProperty(o, t, Object.getOwnPropertyDescriptor(r, t));
    });
  }
  return o;
}
function ae(o, c) {
  var r = typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (!r) {
    if (Array.isArray(o) || (r = al(o)) || c && o && typeof o.length == "number") {
      r && (o = r);
      var t = 0, e = function() {
      };
      return { s: e, n: function() {
        return t >= o.length ? { done: !0 } : { done: !1, value: o[t++] };
      }, e: function(u) {
        throw u;
      }, f: e };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var a = !0, n = !1, i;
  return { s: function() {
    r = r.call(o);
  }, n: function() {
    var u = r.next();
    return a = u.done, u;
  }, e: function(u) {
    n = !0, i = u;
  }, f: function() {
    try {
      !a && r.return != null && r.return();
    } finally {
      if (n)
        throw i;
    }
  } };
}
function Oe() {
  return typeof Reflect != "undefined" && Reflect.get ? Oe = Reflect.get.bind() : Oe = function(c, r, t) {
    var e = Tf(c, r);
    if (e) {
      var a = Object.getOwnPropertyDescriptor(e, r);
      return a.get ? a.get.call(arguments.length < 3 ? c : t) : a.value;
    }
  }, Oe.apply(this, arguments);
}
function Tf(o, c) {
  for (; !Object.prototype.hasOwnProperty.call(o, c) && (o = Pe(o), o !== null); )
    ;
  return o;
}
function ar(o, c) {
  return Ef(o) || Sf(o, c) || al(o, c) || bf();
}
function bf() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function al(o, c) {
  if (o) {
    if (typeof o == "string")
      return gc(o, c);
    var r = Object.prototype.toString.call(o).slice(8, -1);
    if (r === "Object" && o.constructor && (r = o.constructor.name), r === "Map" || r === "Set")
      return Array.from(o);
    if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))
      return gc(o, c);
  }
}
function gc(o, c) {
  (c == null || c > o.length) && (c = o.length);
  for (var r = 0, t = new Array(c); r < c; r++)
    t[r] = o[r];
  return t;
}
function Sf(o, c) {
  var r = o == null ? null : typeof Symbol != "undefined" && o[Symbol.iterator] || o["@@iterator"];
  if (r != null) {
    var t, e, a, n, i = [], s = !0, u = !1;
    try {
      if (a = (r = r.call(o)).next, c === 0) {
        if (Object(r) !== r)
          return;
        s = !1;
      } else
        for (; !(s = (t = a.call(r)).done) && (i.push(t.value), i.length !== c); s = !0)
          ;
    } catch (l) {
      u = !0, e = l;
    } finally {
      try {
        if (!s && r.return != null && (n = r.return(), Object(n) !== n))
          return;
      } finally {
        if (u)
          throw e;
      }
    }
    return i;
  }
}
function Ef(o) {
  if (Array.isArray(o))
    return o;
}
function d() {
  "use strict";
  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  d = function() {
    return c;
  };
  var o, c = {}, r = Object.prototype, t = r.hasOwnProperty, e = Object.defineProperty || function(B, H, U) {
    B[H] = U.value;
  }, a = typeof Symbol == "function" ? Symbol : {}, n = a.iterator || "@@iterator", i = a.asyncIterator || "@@asyncIterator", s = a.toStringTag || "@@toStringTag";
  function u(B, H, U) {
    return Object.defineProperty(B, H, { value: U, enumerable: !0, configurable: !0, writable: !0 }), B[H];
  }
  try {
    u({}, "");
  } catch (B) {
    u = function(U, J, X) {
      return U[J] = X;
    };
  }
  function l(B, H, U, J) {
    var X = H && H.prototype instanceof k ? H : k, re = Object.create(X.prototype), pe = new x(J || []);
    return e(re, "_invoke", { value: ee(B, U, pe) }), re;
  }
  function p(B, H, U) {
    try {
      return { type: "normal", arg: B.call(H, U) };
    } catch (J) {
      return { type: "throw", arg: J };
    }
  }
  c.wrap = l;
  var h = "suspendedStart", v = "suspendedYield", m = "executing", g = "completed", w = {};
  function k() {
  }
  function T() {
  }
  function _() {
  }
  var E = {};
  u(E, n, function() {
    return this;
  });
  var S = Object.getPrototypeOf, C = S && S(S(ie([])));
  C && C !== r && t.call(C, n) && (E = C);
  var L = _.prototype = k.prototype = Object.create(E);
  function G(B) {
    ["next", "throw", "return"].forEach(function(H) {
      u(B, H, function(U) {
        return this._invoke(H, U);
      });
    });
  }
  function j(B, H) {
    function U(X, re, pe, Ge) {
      var oe = p(B[X], B, re);
      if (oe.type !== "throw") {
        var te = oe.arg, Ue = te.value;
        return Ue && ce(Ue) == "object" && t.call(Ue, "__await") ? H.resolve(Ue.__await).then(function(xe) {
          U("next", xe, pe, Ge);
        }, function(xe) {
          U("throw", xe, pe, Ge);
        }) : H.resolve(Ue).then(function(xe) {
          te.value = xe, pe(te);
        }, function(xe) {
          return U("throw", xe, pe, Ge);
        });
      }
      Ge(oe.arg);
    }
    var J;
    e(this, "_invoke", { value: function(re, pe) {
      function Ge() {
        return new H(function(oe, te) {
          U(re, pe, oe, te);
        });
      }
      return J = J ? J.then(Ge, Ge) : Ge();
    } });
  }
  function ee(B, H, U) {
    var J = h;
    return function(X, re) {
      if (J === m)
        throw new Error("Generator is already running");
      if (J === g) {
        if (X === "throw")
          throw re;
        return { value: o, done: !0 };
      }
      for (U.method = X, U.arg = re; ; ) {
        var pe = U.delegate;
        if (pe) {
          var Ge = Y(pe, U);
          if (Ge) {
            if (Ge === w)
              continue;
            return Ge;
          }
        }
        if (U.method === "next")
          U.sent = U._sent = U.arg;
        else if (U.method === "throw") {
          if (J === h)
            throw J = g, U.arg;
          U.dispatchException(U.arg);
        } else
          U.method === "return" && U.abrupt("return", U.arg);
        J = m;
        var oe = p(B, H, U);
        if (oe.type === "normal") {
          if (J = U.done ? g : v, oe.arg === w)
            continue;
          return { value: oe.arg, done: U.done };
        }
        oe.type === "throw" && (J = g, U.method = "throw", U.arg = oe.arg);
      }
    };
  }
  function Y(B, H) {
    var U = H.method, J = B.iterator[U];
    if (J === o)
      return H.delegate = null, U === "throw" && B.iterator.return && (H.method = "return", H.arg = o, Y(B, H), H.method === "throw") || U !== "return" && (H.method = "throw", H.arg = new TypeError("The iterator does not provide a '" + U + "' method")), w;
    var X = p(J, B.iterator, H.arg);
    if (X.type === "throw")
      return H.method = "throw", H.arg = X.arg, H.delegate = null, w;
    var re = X.arg;
    return re ? re.done ? (H[B.resultName] = re.value, H.next = B.nextLoc, H.method !== "return" && (H.method = "next", H.arg = o), H.delegate = null, w) : re : (H.method = "throw", H.arg = new TypeError("iterator result is not an object"), H.delegate = null, w);
  }
  function Z(B) {
    var H = { tryLoc: B[0] };
    1 in B && (H.catchLoc = B[1]), 2 in B && (H.finallyLoc = B[2], H.afterLoc = B[3]), this.tryEntries.push(H);
  }
  function F(B) {
    var H = B.completion || {};
    H.type = "normal", delete H.arg, B.completion = H;
  }
  function x(B) {
    this.tryEntries = [{ tryLoc: "root" }], B.forEach(Z, this), this.reset(!0);
  }
  function ie(B) {
    if (B || B === "") {
      var H = B[n];
      if (H)
        return H.call(B);
      if (typeof B.next == "function")
        return B;
      if (!isNaN(B.length)) {
        var U = -1, J = function X() {
          for (; ++U < B.length; )
            if (t.call(B, U))
              return X.value = B[U], X.done = !1, X;
          return X.value = o, X.done = !0, X;
        };
        return J.next = J;
      }
    }
    throw new TypeError(ce(B) + " is not iterable");
  }
  return T.prototype = _, e(L, "constructor", { value: _, configurable: !0 }), e(_, "constructor", { value: T, configurable: !0 }), T.displayName = u(_, s, "GeneratorFunction"), c.isGeneratorFunction = function(B) {
    var H = typeof B == "function" && B.constructor;
    return !!H && (H === T || (H.displayName || H.name) === "GeneratorFunction");
  }, c.mark = function(B) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(B, _) : (B.__proto__ = _, u(B, s, "GeneratorFunction")), B.prototype = Object.create(L), B;
  }, c.awrap = function(B) {
    return { __await: B };
  }, G(j.prototype), u(j.prototype, i, function() {
    return this;
  }), c.AsyncIterator = j, c.async = function(B, H, U, J, X) {
    X === void 0 && (X = Promise);
    var re = new j(l(B, H, U, J), X);
    return c.isGeneratorFunction(H) ? re : re.next().then(function(pe) {
      return pe.done ? pe.value : re.next();
    });
  }, G(L), u(L, s, "Generator"), u(L, n, function() {
    return this;
  }), u(L, "toString", function() {
    return "[object Generator]";
  }), c.keys = function(B) {
    var H = Object(B), U = [];
    for (var J in H)
      U.push(J);
    return U.reverse(), function X() {
      for (; U.length; ) {
        var re = U.pop();
        if (re in H)
          return X.value = re, X.done = !1, X;
      }
      return X.done = !0, X;
    };
  }, c.values = ie, x.prototype = { constructor: x, reset: function(H) {
    if (this.prev = 0, this.next = 0, this.sent = this._sent = o, this.done = !1, this.delegate = null, this.method = "next", this.arg = o, this.tryEntries.forEach(F), !H)
      for (var U in this)
        U.charAt(0) === "t" && t.call(this, U) && !isNaN(+U.slice(1)) && (this[U] = o);
  }, stop: function() {
    this.done = !0;
    var H = this.tryEntries[0].completion;
    if (H.type === "throw")
      throw H.arg;
    return this.rval;
  }, dispatchException: function(H) {
    if (this.done)
      throw H;
    var U = this;
    function J(te, Ue) {
      return pe.type = "throw", pe.arg = H, U.next = te, Ue && (U.method = "next", U.arg = o), !!Ue;
    }
    for (var X = this.tryEntries.length - 1; X >= 0; --X) {
      var re = this.tryEntries[X], pe = re.completion;
      if (re.tryLoc === "root")
        return J("end");
      if (re.tryLoc <= this.prev) {
        var Ge = t.call(re, "catchLoc"), oe = t.call(re, "finallyLoc");
        if (Ge && oe) {
          if (this.prev < re.catchLoc)
            return J(re.catchLoc, !0);
          if (this.prev < re.finallyLoc)
            return J(re.finallyLoc);
        } else if (Ge) {
          if (this.prev < re.catchLoc)
            return J(re.catchLoc, !0);
        } else {
          if (!oe)
            throw new Error("try statement without catch or finally");
          if (this.prev < re.finallyLoc)
            return J(re.finallyLoc);
        }
      }
    }
  }, abrupt: function(H, U) {
    for (var J = this.tryEntries.length - 1; J >= 0; --J) {
      var X = this.tryEntries[J];
      if (X.tryLoc <= this.prev && t.call(X, "finallyLoc") && this.prev < X.finallyLoc) {
        var re = X;
        break;
      }
    }
    re && (H === "break" || H === "continue") && re.tryLoc <= U && U <= re.finallyLoc && (re = null);
    var pe = re ? re.completion : {};
    return pe.type = H, pe.arg = U, re ? (this.method = "next", this.next = re.finallyLoc, w) : this.complete(pe);
  }, complete: function(H, U) {
    if (H.type === "throw")
      throw H.arg;
    return H.type === "break" || H.type === "continue" ? this.next = H.arg : H.type === "return" ? (this.rval = this.arg = H.arg, this.method = "return", this.next = "end") : H.type === "normal" && U && (this.next = U), w;
  }, finish: function(H) {
    for (var U = this.tryEntries.length - 1; U >= 0; --U) {
      var J = this.tryEntries[U];
      if (J.finallyLoc === H)
        return this.complete(J.completion, J.afterLoc), F(J), w;
    }
  }, catch: function(H) {
    for (var U = this.tryEntries.length - 1; U >= 0; --U) {
      var J = this.tryEntries[U];
      if (J.tryLoc === H) {
        var X = J.completion;
        if (X.type === "throw") {
          var re = X.arg;
          F(J);
        }
        return re;
      }
    }
    throw new Error("illegal catch attempt");
  }, delegateYield: function(H, U, J) {
    return this.delegate = { iterator: ie(H), resultName: U, nextLoc: J }, this.method === "next" && (this.arg = o), w;
  } }, c;
}
function ad(o, c, r, t, e, a, n) {
  try {
    var i = o[a](n), s = i.value;
  } catch (u) {
    r(u);
    return;
  }
  i.done ? c(s) : Promise.resolve(s).then(t, e);
}
function y(o) {
  return function() {
    var c = this, r = arguments;
    return new Promise(function(t, e) {
      var a = o.apply(c, r);
      function n(s) {
        ad(a, t, e, n, i, "next", s);
      }
      function i(s) {
        ad(a, t, e, n, i, "throw", s);
      }
      n(void 0);
    });
  };
}
function O(o, c) {
  if (typeof c != "function" && c !== null)
    throw new TypeError("Super expression must either be null or a function");
  o.prototype = Object.create(c && c.prototype, { constructor: { value: o, writable: !0, configurable: !0 } }), Object.defineProperty(o, "prototype", { writable: !1 }), c && Os(o, c);
}
function Os(o, c) {
  return Os = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
    return t.__proto__ = e, t;
  }, Os(o, c);
}
function N(o) {
  var c = sh();
  return function() {
    var t = Pe(o), e;
    if (c) {
      var a = Pe(this).constructor;
      e = Reflect.construct(t, arguments, a);
    } else
      e = t.apply(this, arguments);
    return _f(this, e);
  };
}
function _f(o, c) {
  if (c && (ce(c) === "object" || typeof c == "function"))
    return c;
  if (c !== void 0)
    throw new TypeError("Derived constructors may only return object or undefined");
  return b(o);
}
function b(o) {
  if (o === void 0)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return o;
}
function sh() {
  if (typeof Reflect == "undefined" || !Reflect.construct || Reflect.construct.sham)
    return !1;
  if (typeof Proxy == "function")
    return !0;
  try {
    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
    })), !0;
  } catch (o) {
    return !1;
  }
}
function Pe(o) {
  return Pe = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(r) {
    return r.__proto__ || Object.getPrototypeOf(r);
  }, Pe(o);
}
function I(o, c) {
  if (!(o instanceof c))
    throw new TypeError("Cannot call a class as a function");
}
function nd(o, c) {
  for (var r = 0; r < c.length; r++) {
    var t = c[r];
    t.enumerable = t.enumerable || !1, t.configurable = !0, "value" in t && (t.writable = !0), Object.defineProperty(o, oh(t.key), t);
  }
}
function D(o, c, r) {
  return c && nd(o.prototype, c), r && nd(o, r), Object.defineProperty(o, "prototype", { writable: !1 }), o;
}
function R(o, c, r) {
  return c = oh(c), c in o ? Object.defineProperty(o, c, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : o[c] = r, o;
}
function oh(o) {
  var c = Rf(o, "string");
  return ce(c) === "symbol" ? c : String(c);
}
function Rf(o, c) {
  if (ce(o) !== "object" || o === null)
    return o;
  var r = o[Symbol.toPrimitive];
  if (r !== void 0) {
    var t = r.call(o, c || "default");
    if (ce(t) !== "object")
      return t;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (c === "string" ? String : Number)(o);
}
function ce(o) {
  return ce = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(c) {
    return typeof c;
  } : function(c) {
    return c && typeof Symbol == "function" && c.constructor === Symbol && c !== Symbol.prototype ? "symbol" : typeof c;
  }, ce(o);
}
var Se;
(function(o) {
  o[o.MAJOR_EVENT = 0] = "MAJOR_EVENT", o[o.MINOR_EVENT = 1] = "MINOR_EVENT";
})(Se || (Se = {}));
var ne;
(function(o) {
  o.PRECALL_TEST_BEGIN = "precall_begin", o.PRECALL_TEST_COMPLETE = "precall_end", o.CALL_JOIN_BEGIN = "call_join", o.NET_QUALITY_TEST_BEGIN = "net_quality_test_begin", o.NET_QUALITY_TEST_END = "net_quality_test_end", o.WEBSOCKET_CONNECTED = "websocket_connected", o.TRANSPORT_CONNECTED = "transport_connected", o.AUDIO_ON = "audio_on", o.AUDIO_OFF = "audio_off", o.VIDEO_ON = "video_on", o.VIDEO_OFF = "video_off", o.PARTICIPANT_ROLE = "participant_role", o.PING_STAT = "ping_stat", o.DISCONNECT = "disconnect", o.RECONNECT_ATTEMPT = "reconnect_attempt", o.SCREENSHARE_START_REQUESTED = "screenshare_start_requested", o.SCREENSHARE_STARTED = "screenshare_started", o.SCREENSHARE_STOPPED = "screenshare_stopped", o.TAB_CHANGE = "tab_change", o.BROWSER_BACKGROUNDED = "browser_backgrounded", o.BROWSER_FOREGROUNDED = "browser_foregrounded", o.DOMINANT_SPEAKER = "dominant_speaker", o.AUDIO_DEVICES_UPDATES = "audio_devices_updates", o.VIDEO_DEVICES_UPDATES = "video_devices_updates", o.SPEAKER_DEVICES_UPDATES = "speaker_devices_updates", o.SELECTED_MICROHPONE_UPDATE = "selected_microphone_update", o.SELECTED_CAMERA_UPDATE = "selected_camera_update", o.SELECTED_SPEAKER_UPDATE = "selected_speaker_update", o.MEDIA_PERMISSION = "camera_permission", o.LEGACY_SWITCH = "legacy_switch", o.AUDIO_PLAY_FAILED = "audio_play_failed", o.VIDEO_PLAY_FAILED = "video_play_failed", o.AUDIO_TRACK_MUTED = "audio_track_muted", o.VIDEO_TRACK_MUTED = "video_track_muted", o.IVS_PLAYER_REBUFFERING = "ivs_player_rebuffering", o.IVS_PLAYER_AUDIO_BLOCKED = "ivs_player_audio_blocked", o.IVS_PLAYER_PLAYBACK_BLOCKED = "ivs_player_playback_blocked", o.IVS_PLAYER_ERROR = "ivs_player_error", o.IVS_PLAYER_RECOVERABLE_ERROR = "ivs_player_recoverable_error", o.IVS_PLAYER_WORKER_ERROR = "ivs_player_worker_error", o.IVS_PLAYER_NETWORK_UNAVAILABLE = "ivs_player_network_unavailable", o.LIVESTREAM_LATENCY = "livestream_latency", o.IVS_PLAYER_ANALYTICS_EVENT = "ivs_player_analytics_event", o.IVS_PLAYER_PLAYBACK_RATE_CHANGED = "ivs_player_playback_rate_changed", o.IVS_PLAYER_QUALITY_CHANGED = "ivs_player_quality_changed", o.IVS_PLAYER_INITIALIZED = "ivs_player_initialized";
})(ne || (ne = {}));
var If = /* @__PURE__ */ new Map([
  [ne.PRECALL_TEST_BEGIN, Se.MINOR_EVENT],
  [ne.PRECALL_TEST_COMPLETE, Se.MINOR_EVENT],
  [ne.CALL_JOIN_BEGIN, Se.MAJOR_EVENT],
  [ne.NET_QUALITY_TEST_BEGIN, Se.MINOR_EVENT],
  [ne.NET_QUALITY_TEST_END, Se.MINOR_EVENT],
  [ne.WEBSOCKET_CONNECTED, Se.MINOR_EVENT],
  [ne.TRANSPORT_CONNECTED, Se.MAJOR_EVENT],
  [ne.AUDIO_ON, Se.MINOR_EVENT],
  [ne.AUDIO_OFF, Se.MINOR_EVENT],
  [ne.VIDEO_ON, Se.MINOR_EVENT],
  [ne.VIDEO_OFF, Se.MINOR_EVENT],
  [ne.PARTICIPANT_ROLE, Se.MINOR_EVENT],
  [ne.PING_STAT, Se.MAJOR_EVENT],
  [ne.DISCONNECT, Se.MAJOR_EVENT],
  [ne.RECONNECT_ATTEMPT, Se.MAJOR_EVENT],
  [ne.SCREENSHARE_START_REQUESTED, Se.MINOR_EVENT],
  [ne.SCREENSHARE_STARTED, Se.MINOR_EVENT],
  [ne.SCREENSHARE_STOPPED, Se.MINOR_EVENT],
  [ne.TAB_CHANGE, Se.MINOR_EVENT],
  [ne.BROWSER_BACKGROUNDED, Se.MINOR_EVENT],
  [ne.BROWSER_FOREGROUNDED, Se.MINOR_EVENT],
  [ne.DOMINANT_SPEAKER, Se.MINOR_EVENT],
  [ne.AUDIO_DEVICES_UPDATES, Se.MINOR_EVENT],
  [ne.VIDEO_DEVICES_UPDATES, Se.MINOR_EVENT],
  [ne.SPEAKER_DEVICES_UPDATES, Se.MINOR_EVENT],
  [ne.SELECTED_MICROHPONE_UPDATE, Se.MINOR_EVENT],
  [ne.SELECTED_CAMERA_UPDATE, Se.MINOR_EVENT],
  [ne.SELECTED_SPEAKER_UPDATE, Se.MINOR_EVENT],
  [ne.MEDIA_PERMISSION, Se.MINOR_EVENT],
  [ne.LEGACY_SWITCH, Se.MINOR_EVENT],
  [ne.AUDIO_PLAY_FAILED, Se.MINOR_EVENT],
  [ne.VIDEO_PLAY_FAILED, Se.MINOR_EVENT],
  [ne.AUDIO_TRACK_MUTED, Se.MINOR_EVENT],
  [ne.VIDEO_TRACK_MUTED, Se.MINOR_EVENT],
  // IVS Player Events
  [ne.IVS_PLAYER_REBUFFERING, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_AUDIO_BLOCKED, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_PLAYBACK_BLOCKED, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_ERROR, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_RECOVERABLE_ERROR, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_WORKER_ERROR, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_NETWORK_UNAVAILABLE, Se.MAJOR_EVENT],
  // We are keeping live latency as major, so that it
  // acts as a ping alternative for livestream viewer
  [ne.LIVESTREAM_LATENCY, Se.MAJOR_EVENT],
  [ne.IVS_PLAYER_ANALYTICS_EVENT, Se.MINOR_EVENT],
  [ne.IVS_PLAYER_PLAYBACK_RATE_CHANGED, Se.MINOR_EVENT],
  [ne.IVS_PLAYER_QUALITY_CHANGED, Se.MINOR_EVENT],
  [ne.IVS_PLAYER_INITIALIZED, Se.MINOR_EVENT]
]), yc = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {}, at = {}, Df = { get exports() {
  return at;
}, set exports(o) {
  at = o;
} }, Ri = (typeof Reflect == "undefined" ? "undefined" : ce(Reflect)) === "object" ? Reflect : null, id = Ri && typeof Ri.apply == "function" ? Ri.apply : function(c, r, t) {
  return Function.prototype.apply.call(c, r, t);
}, Mo;
Ri && typeof Ri.ownKeys == "function" ? Mo = Ri.ownKeys : Object.getOwnPropertySymbols ? Mo = function(c) {
  return Object.getOwnPropertyNames(c).concat(Object.getOwnPropertySymbols(c));
} : Mo = function(c) {
  return Object.getOwnPropertyNames(c);
};
function Af(o) {
  console && console.warn && console.warn(o);
}
var ch = Number.isNaN || function(c) {
  return c !== c;
};
function or() {
  or.init.call(this);
}
Df.exports = or;
at.once = $f;
or.EventEmitter = or;
or.prototype._events = void 0;
or.prototype._eventsCount = 0;
or.prototype._maxListeners = void 0;
var sd = 10;
function ru(o) {
  if (typeof o != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + ce(o));
}
Object.defineProperty(or, "defaultMaxListeners", { enumerable: !0, get: function() {
  return sd;
}, set: function(c) {
  if (typeof c != "number" || c < 0 || ch(c))
    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + c + ".");
  sd = c;
} });
or.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
or.prototype.setMaxListeners = function(c) {
  if (typeof c != "number" || c < 0 || ch(c))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + c + ".");
  return this._maxListeners = c, this;
};
function lh(o) {
  return o._maxListeners === void 0 ? or.defaultMaxListeners : o._maxListeners;
}
or.prototype.getMaxListeners = function() {
  return lh(this);
};
or.prototype.emit = function(c) {
  for (var r = [], t = 1; t < arguments.length; t++)
    r.push(arguments[t]);
  var e = c === "error", a = this._events;
  if (a !== void 0)
    e = e && a.error === void 0;
  else if (!e)
    return !1;
  if (e) {
    var n;
    if (r.length > 0 && (n = r[0]), n instanceof Error)
      throw n;
    var i = new Error("Unhandled error." + (n ? " (" + n.message + ")" : ""));
    throw i.context = n, i;
  }
  var s = a[c];
  if (s === void 0)
    return !1;
  if (typeof s == "function")
    id(s, this, r);
  else
    for (var u = s.length, l = fh(s, u), t = 0; t < u; ++t)
      id(l[t], this, r);
  return !0;
};
function dh(o, c, r, t) {
  var e, a, n;
  if (ru(r), a = o._events, a === void 0 ? (a = o._events = /* @__PURE__ */ Object.create(null), o._eventsCount = 0) : (a.newListener !== void 0 && (o.emit("newListener", c, r.listener ? r.listener : r), a = o._events), n = a[c]), n === void 0)
    n = a[c] = r, ++o._eventsCount;
  else if (typeof n == "function" ? n = a[c] = t ? [r, n] : [n, r] : t ? n.unshift(r) : n.push(r), e = lh(o), e > 0 && n.length > e && !n.warned) {
    n.warned = !0;
    var i = new Error("Possible EventEmitter memory leak detected. " + n.length + " " + String(c) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    i.name = "MaxListenersExceededWarning", i.emitter = o, i.type = c, i.count = n.length, Af(i);
  }
  return o;
}
or.prototype.addListener = function(c, r) {
  return dh(this, c, r, !1);
};
or.prototype.on = or.prototype.addListener;
or.prototype.prependListener = function(c, r) {
  return dh(this, c, r, !0);
};
function Mf() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function ph(o, c, r) {
  var t = { fired: !1, wrapFn: void 0, target: o, type: c, listener: r }, e = Mf.bind(t);
  return e.listener = r, t.wrapFn = e, e;
}
or.prototype.once = function(c, r) {
  return ru(r), this.on(c, ph(this, c, r)), this;
};
or.prototype.prependOnceListener = function(c, r) {
  return ru(r), this.prependListener(c, ph(this, c, r)), this;
};
or.prototype.removeListener = function(c, r) {
  var t, e, a, n, i;
  if (ru(r), e = this._events, e === void 0)
    return this;
  if (t = e[c], t === void 0)
    return this;
  if (t === r || t.listener === r)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete e[c], e.removeListener && this.emit("removeListener", c, t.listener || r));
  else if (typeof t != "function") {
    for (a = -1, n = t.length - 1; n >= 0; n--)
      if (t[n] === r || t[n].listener === r) {
        i = t[n].listener, a = n;
        break;
      }
    if (a < 0)
      return this;
    a === 0 ? t.shift() : Of(t, a), t.length === 1 && (e[c] = t[0]), e.removeListener !== void 0 && this.emit("removeListener", c, i || r);
  }
  return this;
};
or.prototype.off = or.prototype.removeListener;
or.prototype.removeAllListeners = function(c) {
  var r, t, e;
  if (t = this._events, t === void 0)
    return this;
  if (t.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : t[c] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete t[c]), this;
  if (arguments.length === 0) {
    var a = Object.keys(t), n;
    for (e = 0; e < a.length; ++e)
      n = a[e], n !== "removeListener" && this.removeAllListeners(n);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (r = t[c], typeof r == "function")
    this.removeListener(c, r);
  else if (r !== void 0)
    for (e = r.length - 1; e >= 0; e--)
      this.removeListener(c, r[e]);
  return this;
};
function hh(o, c, r) {
  var t = o._events;
  if (t === void 0)
    return [];
  var e = t[c];
  return e === void 0 ? [] : typeof e == "function" ? r ? [e.listener || e] : [e] : r ? Nf(e) : fh(e, e.length);
}
or.prototype.listeners = function(c) {
  return hh(this, c, !0);
};
or.prototype.rawListeners = function(c) {
  return hh(this, c, !1);
};
or.listenerCount = function(o, c) {
  return typeof o.listenerCount == "function" ? o.listenerCount(c) : vh.call(o, c);
};
or.prototype.listenerCount = vh;
function vh(o) {
  var c = this._events;
  if (c !== void 0) {
    var r = c[o];
    if (typeof r == "function")
      return 1;
    if (r !== void 0)
      return r.length;
  }
  return 0;
}
or.prototype.eventNames = function() {
  return this._eventsCount > 0 ? Mo(this._events) : [];
};
function fh(o, c) {
  for (var r = new Array(c), t = 0; t < c; ++t)
    r[t] = o[t];
  return r;
}
function Of(o, c) {
  for (; c + 1 < o.length; c++)
    o[c] = o[c + 1];
  o.pop();
}
function Nf(o) {
  for (var c = new Array(o.length), r = 0; r < c.length; ++r)
    c[r] = o[r].listener || o[r];
  return c;
}
function $f(o, c) {
  return new Promise(function(r, t) {
    function e(n) {
      o.removeListener(c, a), t(n);
    }
    function a() {
      typeof o.removeListener == "function" && o.removeListener("error", e), r([].slice.call(arguments));
    }
    mh(o, c, a, { once: !0 }), c !== "error" && Lf(o, e, { once: !0 });
  });
}
function Lf(o, c, r) {
  typeof o.on == "function" && mh(o, "error", c, r);
}
function mh(o, c, r, t) {
  if (typeof o.on == "function")
    t.once ? o.once(c, r) : o.on(c, r);
  else if (typeof o.addEventListener == "function")
    o.addEventListener(c, function e(a) {
      t.once && o.removeEventListener(c, e), r(a);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + ce(o));
}
var Uf = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "events", void 0), this.events = [];
  }
  return D(o, [{ key: "add", value: function(r) {
    this.events.push(r);
  } }, { key: "flush", value: function() {
    var r = this.events.splice(0, 25);
    return { entries: r };
  } }]), o;
}(), Ff = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.logger, n = t.peerId, i = t.apiHostnames;
    return I(this, r), e = c.call(this), R(b(e), "logger", void 0), R(b(e), "peerId", void 0), R(b(e), "eventStore", void 0), R(b(e), "apiEndpoint", void 0), e.logger = a, e.peerId = n, e.apiEndpoint = "https://".concat(i.daCollector, "/api/v1/message"), e.eventStore = new Uf(), e;
  }
  return D(r, [{ key: "sendEventsChunkToServer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = { payload: n, peerId: this.peerId }, p.prev = 1, p.next = 4, fetch(this.apiEndpoint, { method: "POST", body: JSON.stringify(s) });
            case 4:
              return p.abrupt("return", !0);
            case 7:
              return p.prev = 7, p.t0 = p.catch(1), this.logger.error("callStats::sendEventsChunkToServer::catch", { error: p.t0 }), (u = n.entries) === null || u === void 0 || u.forEach(function(h) {
                i.eventStore.add(h);
              }), p.abrupt("return", !1);
            case 12:
            case "end":
              return p.stop();
          }
      }, a, this, [[1, 7]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "callEvent", value: function(e) {
    e.timestamp = new Date(), this.eventStore.add(e), this.emit(e.event, e.metaData), If.get(e.event) === Se.MAJOR_EVENT && this.flush();
  } }, { key: "flush", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this.eventStore.flush(), !(i != null && (n = i.entries) !== null && n !== void 0 && n.length)) {
                u.next = 5;
                break;
              }
              return u.next = 4, this.sendEventsChunkToServer(i);
            case 4:
              return u.abrupt("return", !0);
            case 5:
              return u.abrupt("return", !1);
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(at), od;
(function(o) {
  o.CHROMIUM = "chromum", o.FIREFOX = "firefox", o.SAFARI = "safari";
})(od || (od = {}));
var Ti = { DEVEL: "devel", PREPROD: "preprod", PROD: "prod" }, It;
(function(o) {
  o.AUDIO = "AUDIO", o.VIDEO = "VIDEO", o.SPEAKER = "SPEAKER";
})(It || (It = {}));
var jt;
(function(o) {
  o[o.INIT = 0] = "INIT", o[o.ACCEPTED = 1] = "ACCEPTED", o[o.DENIED = 2] = "DENIED", o[o.SYS_DENIED = 3] = "SYS_DENIED", o[o.FAILED = 4] = "FAILED", o[o.NOTFOUND = 5] = "NOTFOUND", o[o.NOT_APPLICABLE = 6] = "NOT_APPLICABLE";
})(jt || (jt = {}));
var Li = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), R(this, "pc1", void 0), R(this, "pc2", void 0), R(this, "constrainVideoBitrateKbps", void 0), R(this, "constrainOfferToRemoveVideoFec", !1), R(this, "iceCandidateFilter", void 0);
    var r = new RTCPeerConnection(c), t = new RTCPeerConnection(c);
    this.pc1 = r, this.pc2 = t, this.iceCandidateFilter = o.noFilter, this.pc1.addEventListener("icecandidate", this.onIceCandidate.bind(this, this.pc2)), this.pc2.addEventListener("icecandidate", this.onIceCandidate.bind(this, this.pc1));
  }
  return D(o, [{ key: "onIceCandidate", value: function(r, t) {
    if (t.candidate) {
      var e = o.parseCandidate(t.candidate.candidate);
      this.iceCandidateFilter(e) && r.addIceCandidate(t.candidate);
    }
  } }, {
    key: "setIceCandidateFilter",
    value: function(r) {
      this.iceCandidateFilter = r;
    }
    // Constraint max video bitrate by modifying the SDP when creating an answer.
  }, {
    key: "constrainVideoBitrate",
    value: function(r) {
      this.constrainVideoBitrateKbps = r;
    }
    // Remove video FEC if available on the offer.
  }, { key: "disableVideoFec", value: function() {
    this.constrainOfferToRemoveVideoFec = !0;
  } }, { key: "gotOffer", value: function(r) {
    this.constrainOfferToRemoveVideoFec && (r.sdp = r.sdp.replace(/(m=video 1 [^\r]+)(116 117)(\r\n)/g, `$1\r
`), r.sdp = r.sdp.replace(/a=rtpmap:116 red\/90000\r\n/g, ""), r.sdp = r.sdp.replace(/a=rtpmap:117 ulpfec\/90000\r\n/g, ""), r.sdp = r.sdp.replace(/a=rtpmap:98 rtx\/90000\r\n/g, ""), r.sdp = r.sdp.replace(/a=fmtp:98 apt=116\r\n/g, "")), this.pc1.setLocalDescription(r), this.pc2.setRemoteDescription(r), this.pc2.createAnswer().then(this.gotAnswer.bind(this), this.reportFatal.bind(this));
  } }, { key: "gotAnswer", value: function(r) {
    this.constrainVideoBitrateKbps && (r.sdp = r.sdp.replace(/a=mid:video\r\n/g, `a=mid:video\r
b=AS:`.concat(this.constrainVideoBitrateKbps, `\r
`))), this.pc2.setLocalDescription(r), this.pc1.setRemoteDescription(r);
  } }, {
    key: "establishConnection",
    value: function() {
      this.pc1.createOffer().then(this.gotOffer.bind(this), this.reportFatal.bind(this));
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "reportFatal", value: function(r) {
    console.error("Error:", r);
  } }, { key: "getRoundTripTime", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, Promise.all([this.pc1.getStats(), this.pc2.getStats()]);
            case 2:
              if (e = h.sent, a = ar(e, 2), n = a[0], i = a[1], n.forEach(function(v) {
                v.type === "candidate-pair" && v.nominated === !0 && v.bytesSent > 0 && (s = v);
              }), i.forEach(function(v) {
                v.type === "candidate-pair" && v.nominated === !0 && v.bytesReceived > 0 && (u = v);
              }), !(s && u)) {
                h.next = 19;
                break;
              }
              if (h.prev = 9, !(s.currentRoundTripTime && u.currentRoundTripTime)) {
                h.next = 12;
                break;
              }
              return h.abrupt("return", { rtt: s.currentRoundTripTime, backendRTT: u.currentRoundTripTime });
            case 12:
              return l = (u.lastPacketReceivedTimestamp - s.lastPacketSentTimestamp) / 1e3, h.abrupt("return", { rtt: l, backendRTT: l });
            case 16:
              return h.prev = 16, h.t0 = h.catch(9), h.abrupt("return", void 0);
            case 19:
              return h.abrupt("return", void 0);
            case 20:
            case "end":
              return h.stop();
          }
      }, t, this, [[9, 16]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "close", value: function() {
    this.pc1.close(), this.pc2.close();
  } }], [{ key: "parseCandidate", value: function(r) {
    var t = "candidate:", e = r.indexOf(t) + t.length, a = r.substr(e).split(" ");
    return { type: a[7], protocol: a[2], address: a[4] };
  } }, { key: "isNotHostCandidate", value: function(r) {
    return r.type !== "host";
  } }, { key: "isHost", value: function(r) {
    return r.type === "host";
  } }, { key: "isRelay", value: function(r) {
    return r.type === "relay";
  } }, { key: "isReflexive", value: function(r) {
    return r.type === "srflx";
  } }, { key: "noFilter", value: function(r) {
    return !0;
  } }]), o;
}(), gh = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), R(b(e), "call", void 0), R(b(e), "timeOut", void 0), e.call = new Li(t), e;
  }
  return D(r, [{ key: "start", value: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1e4;
    this.call.establishConnection(), this.timeOut = setTimeout(this.testFailed.bind(this), e);
  } }, { key: "testComplete", value: function(e) {
    clearTimeout(this.timeOut), this.call.close(), this.emit("done", e);
  } }, { key: "testFailed", value: function(e) {
    console.warn("Test failed, ", e), this.call.close(), this.emit("failed", e);
  } }]), r;
}(at), Vf = 8, Hf = 1 / 1e3, jf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    I(this, r), e = c.call(this, t), R(b(e), "senderChannel", void 0), R(b(e), "recieveChannel", void 0), R(b(e), "startTime", void 0), R(b(e), "lastBitrateMeasureTime", void 0), R(b(e), "sentPayloadBytes", 0), R(b(e), "recievedPayloadBytes", 0), R(b(e), "lastReceivedPayloadBytes", 0), R(b(e), "stopSending", !1), R(b(e), "testProgress", 0), R(b(e), "samplePacket", ""), R(b(e), "finalBitrateSum", 0), R(b(e), "bitRateSampels", 0), R(b(e), "maxNumberOfPacketsToSend", 0), R(b(e), "bytesToKeepBuffered", 0), R(b(e), "testDurationSeconds", 5), e.call.setIceCandidateFilter(Li.isNotHostCandidate), e.senderChannel = e.call.pc1.createDataChannel(null);
    for (var a = 0; a < 1024 * 256; a += 1)
      e.samplePacket += "h";
    return e.maxNumberOfPacketsToSend = 1, e.bytesToKeepBuffered = 1024 * e.maxNumberOfPacketsToSend, e.testDurationSeconds = 4, e.senderChannel.addEventListener("open", e.sendingStep.bind(b(e))), e.call.pc2.addEventListener("datachannel", e.onRecieverChannel.bind(b(e))), e;
  }
  return D(r, [{ key: "sendingStep", value: function() {
    var e = new Date();
    this.startTime || (this.startTime = e, this.lastBitrateMeasureTime = e);
    for (var a = 0; a !== this.maxNumberOfPacketsToSend && !(this.senderChannel.bufferedAmount >= this.bytesToKeepBuffered); a += 1) {
      this.sentPayloadBytes += this.samplePacket.length;
      try {
        this.senderChannel.send(this.samplePacket);
      } catch (i) {
      }
    }
    var n = e.getTime() - this.startTime.getTime();
    n >= 1e3 * this.testDurationSeconds ? (this.stopSending = !0, this.testProgress = 100) : (this.testProgress = n / (10 * this.testDurationSeconds), setTimeout(this.sendingStep.bind(this), 1));
  } }, { key: "onMessageRecieved", value: function(e) {
    this.recievedPayloadBytes += e.data.length;
    var a = new Date(), n = a.getTime() - this.lastBitrateMeasureTime.getTime();
    if (n >= 1e3) {
      var i = this.recievedPayloadBytes - this.lastReceivedPayloadBytes, s = i * Vf / (n / 1e3);
      this.finalBitrateSum += s, this.bitRateSampels += 1, this.lastReceivedPayloadBytes = this.recievedPayloadBytes, this.lastBitrateMeasureTime = a;
    }
    if (this.stopSending && this.sentPayloadBytes === this.recievedPayloadBytes) {
      var u = this.finalBitrateSum / this.bitRateSampels;
      this.testComplete({ throughput: Math.round(u * Hf) });
    }
  } }, { key: "testComplete", value: function(e) {
    var a = this;
    this.call.getRoundTripTime().then(function(n) {
      var i = n.rtt, s = n.backendRTT;
      return Oe(Pe(r.prototype), "testComplete", a).call(a, { RTT: i, backendRTT: s, throughput: e.throughput });
    });
  } }, { key: "onRecieverChannel", value: function(e) {
    this.recieveChannel = e.channel, this.recieveChannel.addEventListener("message", this.onMessageRecieved.bind(this));
  } }]), r;
}(gh), il = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Li.noFilter;
    I(this, r), e = c.call(this, t), R(b(e), "ch1", void 0), R(b(e), "ch2", void 0), e.call.setIceCandidateFilter(a);
    var n = e.call.pc1.createDataChannel(null);
    return e.ch1 = n, n.addEventListener("open", function() {
      n.send("hello");
    }), n.addEventListener("message", e.onCh1Recieve.bind(b(e))), e.call.pc2.addEventListener("datachannel", e.dataChannelHandler.bind(b(e))), e;
  }
  return D(r, [{ key: "onCh1Recieve", value: function(e) {
    e.data !== "world" ? this.hangup("Invalid data transmitted.") : this.testComplete({ connectivity: !0 });
  } }, { key: "onCh2Recieve", value: function(e) {
    if (e.data !== "hello")
      this.hangup("Invalid data transmitted.");
    else
      try {
        this.ch2.send("world");
      } catch (a) {
      }
  } }, { key: "dataChannelHandler", value: function(e) {
    var a = e.channel;
    this.ch2 = a, a.addEventListener("message", this.onCh2Recieve.bind(this));
  } }, { key: "hangup", value: function(e) {
    this.testFailed(e);
  } }]), r;
}(gh), Gf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    return I(this, r), c.call(this, t, Li.isHost);
  }
  return D(r);
}(il), Bf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    return I(this, r), c.call(this, t, Li.isRelay);
  }
  return D(r);
}(il), qf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    return I(this, r), c.call(this, t, Li.isReflexive);
  }
  return D(r);
}(il), Wf = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "ipInformation", null);
  }
  return D(o, [{ key: "getIPDetails", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (a = e.peerId, n = e.apiHostnames, this.ipInformation) {
                v.next = 24;
                break;
              }
              return v.prev = 2, s = "https://".concat(n.location), v.next = 6, fetch(s);
            case 6:
              return u = v.sent, v.next = 9, u.json();
            case 9:
              if (l = v.sent, !(((i = l.loc) === null || i === void 0 ? void 0 : i.length) > 5)) {
                v.next = 13;
                break;
              }
              return this.ipInformation = l, v.abrupt("return", l);
            case 13:
              throw Error("Insufficient data");
            case 16:
              v.prev = 16, v.t0 = v.catch(2);
            case 18:
              return v.next = 20, fetch("https://".concat(n.locationLegacy, "/?token=3c493932b0624c&peerId=").concat(a), { method: "POST" });
            case 20:
              return p = v.sent, v.next = 23, p.json();
            case 23:
              this.ipInformation = v.sent;
            case 24:
              return v.abrupt("return", this.ipInformation);
            case 25:
            case "end":
              return v.stop();
          }
      }, t, this, [[2, 16]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), sl = new Wf(), ud = [{ urls: "turn:turn.dyte.in:443?transport=tcp", username: "dyte", credential: "dytein", credentialType: "password" }, { urls: "turn:turn.dyte.in:3478?transport=udp", username: "dyte", credential: "dytein", credentialType: "password" }];
function Jf(o) {
  var c = o.split(","), r = ar(c, 2), t = r[0], e = r[1];
  return { coords: { latitude: Number(t), longitude: Number(e) } };
}
var yh = /* @__PURE__ */ D(function o() {
  I(this, o), R(this, "transport", void 0), R(this, "candidatePair", void 0), R(this, "outboundVideoRtp", /* @__PURE__ */ new Map()), R(this, "inboundVideoRtp", /* @__PURE__ */ new Map()), R(this, "outboundAudioRtp", /* @__PURE__ */ new Map()), R(this, "inboundAudioRtp", /* @__PURE__ */ new Map()), R(this, "remoteInboundRtp", /* @__PURE__ */ new Map()), R(this, "producerStreamMap", /* @__PURE__ */ new Map()), R(this, "consumerStreamMap", /* @__PURE__ */ new Map()), R(this, "staleProducerStreamMap", !1), R(this, "staleConsumerStreamMap", !1);
}), kh = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "outboundProducerMap", /* @__PURE__ */ new Map()), R(this, "inboundConsumerMap", /* @__PURE__ */ new Map()), R(this, "consumerPeerIdMap", /* @__PURE__ */ new Map()), R(this, "overallProducingTransportsStatsMap", {}), R(this, "overallConsumingTransportsStatsMap", {}), R(this, "overallConsumersStatsMap", {}), R(this, "overallProducersStatsMap", {}), R(this, "consumerIdsWithFreezedVideo", /* @__PURE__ */ new Set()), R(this, "consumerIdsWithFreezedAudio", /* @__PURE__ */ new Set()), R(this, "producerIdsWithFreezedVideo", /* @__PURE__ */ new Set()), R(this, "producerIdsWithFreezedAudio", /* @__PURE__ */ new Set()), R(this, "freezedProducingTransportIds", /* @__PURE__ */ new Set()), R(this, "freezedConsumingTransportIds", /* @__PURE__ */ new Set()), R(this, "ipDetails", void 0), R(this, "callStatsInstance", void 0);
  }
  return D(o, [{ key: "registerProducer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, this.generateProducerStreamMap(e);
            case 2:
              e.observer.on("close", this.deregisterProducer.bind(this, e));
            case 3:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "processInboundConsumerVideoStats", value: function(r, t, e) {
    var a, n = (this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 || (a = a.consumerSharedMediaStatesMap) === null || a === void 0 ? void 0 : a.get(r)) || {};
    t.totalVideoPacketsReceived === e.packetsReceived ? (this.consumerIdsWithFreezedVideo.add(r), this.callStatsInstance && n.video && (this.callStatsInstance.logger.debug("callstats::measurements::consumerVideoFreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_video_status", "pause", r))) : (t.totalVideoPacketsReceived = e.packetsReceived, this.consumerIdsWithFreezedVideo.has(r) && (this.consumerIdsWithFreezedVideo.delete(r), this.callStatsInstance && n.video && (this.callStatsInstance.logger.debug("callstats::measurements::consumerVideoDefreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_video_status", "resume", r))));
  } }, { key: "processInboundConsumerAudioStats", value: function(r, t, e) {
    var a, n = (this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 || (a = a.consumerSharedMediaStatesMap) === null || a === void 0 ? void 0 : a.get(r)) || {};
    t.totalAudioPacketsReceived === e.packetsReceived ? (this.consumerIdsWithFreezedAudio.add(r), this.callStatsInstance && n.audio && (this.callStatsInstance.logger.debug("callStats::measurements::consumerAudioFreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_audio_status", "pause", r))) : (t.totalAudioPacketsReceived = e.packetsReceived, this.consumerIdsWithFreezedAudio.has(r) && (this.consumerIdsWithFreezedAudio.delete(r), this.callStatsInstance && n.audio && (this.callStatsInstance.logger.debug("callStats::measurements::consumerAudioDefreezed", { consumerId: r }), this.callStatsInstance.eventHandler.emit("consumer_audio_status", "resume", r))));
  } }, { key: "processOutboundProducerVideoStats", value: function(r, t, e) {
    var a, n = (this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 ? void 0 : a.currentUserMediaStates) || {};
    t.totalVideoPacketsSent === e.packetsSent ? (this.producerIdsWithFreezedVideo.add(r), this.callStatsInstance && n.video && (this.callStatsInstance.logger.debug("callStats::measurements::producerVideoFreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_video_status", "pause", r))) : (t.totalVideoPacketsSent = e.packetsSent, this.producerIdsWithFreezedVideo.has(r) && (this.producerIdsWithFreezedVideo.delete(r), this.callStatsInstance && n.video && (this.callStatsInstance.logger.debug("callStats::measurements::producerVideoDefreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_video_status", "resume", r))));
  } }, { key: "processOutboundProducerAudioStats", value: function(r, t, e) {
    var a, n = (this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 ? void 0 : a.currentUserMediaStates) || {};
    t.totalAudioPacketsSent === e.packetsSent ? (this.producerIdsWithFreezedAudio.add(r), this.callStatsInstance && n.audio && (this.callStatsInstance.logger.debug("callStats::measurements::producerAudioFreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_audio_status", "pause", r))) : (t.totalAudioPacketsSent = e.packetsSent, this.producerIdsWithFreezedAudio.has(r) && (this.producerIdsWithFreezedAudio.delete(r), this.callStatsInstance && n.audio && (this.callStatsInstance.logger.debug("callStats::measurements::producerAudioDefreezed", { producerId: r }), this.callStatsInstance.eventHandler.emit("producer_audio_status", "resume", r))));
  } }, { key: "processProducingTransportStats", value: function(r, t, e) {
    var a, n = (this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 ? void 0 : a.currentUserMediaStates) || {}, i = n.audio, s = n.video, u = n.screen, l = i || s || u;
    t.totalPacketsSent === e.packetsSent ? (this.freezedProducingTransportIds.add(r), this.callStatsInstance && l && (this.callStatsInstance.logger.debug("callStats::measurements::producingTransportFreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("producing_transport_status", "pause", r))) : (t.totalPacketsSent = e.packetsSent, this.freezedProducingTransportIds.has(r) && (this.freezedProducingTransportIds.delete(r), this.callStatsInstance && l && (this.callStatsInstance.logger.debug("callStats::measurements::producingTransportDefreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("producing_transport_status", "resume", r))));
  } }, { key: "processConsumingTransportStats", value: function(r, t, e) {
    var a, n = Array.from((this === null || this === void 0 || (a = this.callStatsInstance) === null || a === void 0 || (a = a.consumerSharedMediaStatesMap) === null || a === void 0 ? void 0 : a.values()) || []), i = !!n.reduce(function(s, u) {
      return s || u.audio || u.video || u.screen;
    }, !1);
    t.totalPacketsReceived === e.packetsSent ? (this.freezedConsumingTransportIds.add(r), this.callStatsInstance && i && (this.callStatsInstance.logger.debug("callStats::measurements::consumingTransportFreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("consuming_transport_status", "pause", r))) : (t.totalPacketsReceived = e.packetsSent, this.freezedConsumingTransportIds.has(r) && (this.freezedConsumingTransportIds.delete(r), this.callStatsInstance && i && (this.callStatsInstance.logger.debug("callStats::measurements::consumingTransportDefreezed", { transportId: r }), this.callStatsInstance.eventHandler.emit("consuming_transport_status", "resume", r))));
  } }, { key: "registerConsumer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, this.generateConsumerStreamMap(e);
            case 2:
              this.consumerPeerIdMap.set(e.id, { producerId: e.producerId, peerId: e.appData.peerId, appData: e.appData }), e.observer.on("close", this.deregisterConsumer.bind(this, e));
            case 4:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "generateProducerStreamMap", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return a = p.length > 1 && p[1] !== void 0 ? p[1] : !1, v.next = 3, e.getStats();
            case 3:
              n = v.sent, i = a ? this.getProducerStatsFromReport(this.parseRTCReport(n, ["outbound-rtp", "remote-inbound-rtp"], !1, e.id))[0] : void 0, s = ae(n.values()), v.prev = 6, s.s();
            case 8:
              if ((u = s.n()).done) {
                v.next = 17;
                break;
              }
              l = u.value, v.t0 = l.type, v.next = v.t0 === "outbound-rtp" ? 13 : 15;
              break;
            case 13:
              return this.outboundProducerMap.set(l.id, e.id), v.abrupt("break", 15);
            case 15:
              v.next = 8;
              break;
            case 17:
              v.next = 22;
              break;
            case 19:
              v.prev = 19, v.t1 = v.catch(6), s.e(v.t1);
            case 22:
              return v.prev = 22, s.f(), v.finish(22);
            case 25:
              return v.abrupt("return", i);
            case 26:
            case "end":
              return v.stop();
          }
      }, t, this, [[6, 19, 22, 25]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "generateConsumerStreamMap", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return a = p.length > 1 && p[1] !== void 0 ? p[1] : !1, v.next = 3, e.getStats();
            case 3:
              n = v.sent, i = a ? this.getConsumerStatsFromReport(this.parseRTCReport(n, ["inbound-rtp"], !1, e.id))[0] : void 0, s = ae(n.values()), v.prev = 6, s.s();
            case 8:
              if ((u = s.n()).done) {
                v.next = 17;
                break;
              }
              l = u.value, v.t0 = l.type, v.next = v.t0 === "inbound-rtp" ? 13 : 15;
              break;
            case 13:
              return this.inboundConsumerMap.set(l.id, e.id), v.abrupt("break", 15);
            case 15:
              v.next = 8;
              break;
            case 17:
              v.next = 22;
              break;
            case 19:
              v.prev = 19, v.t1 = v.catch(6), s.e(v.t1);
            case 22:
              return v.prev = 22, s.f(), v.finish(22);
            case 25:
              return v.abrupt("return", i);
            case 26:
            case "end":
              return v.stop();
          }
      }, t, this, [[6, 19, 22, 25]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "deregisterProducer", value: function(r) {
    var t = this;
    this.outboundProducerMap.forEach(function(e, a) {
      e === r.id && t.outboundProducerMap.delete(a);
    });
  } }, {
    key: "deregisterConsumer",
    value: function(r) {
      var t = this;
      this.inboundConsumerMap.forEach(function(e, a) {
        e === r.id && t.inboundConsumerMap.delete(a);
      }), this.consumerPeerIdMap.delete(r.id);
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getIceCandidateStats", value: function(r) {
    var t, e = { id: r.id, type: r.candidateType || r.type, address: r.address, port: r.port, url: r.url, protocol: (t = r.relayProtocol) !== null && t !== void 0 ? t : r.protocol, networkType: r.networkType, relatedAddress: r.relatedAddress, relatedPort: r.relatedPort };
    return e;
  } }, { key: "parseRTCReport", value: function(r) {
    var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, i = r, s = new yh(), u = t.length ? new Set(t) : void 0, l = [], p = [], h = [], v = ae(i.values()), m;
    try {
      for (v.s(); !(m = v.n()).done; ) {
        var g = m.value;
        if (u) {
          if (u.size === 0)
            break;
          if (u.has(g.type))
            e && u.delete(g.type);
          else
            continue;
        }
        switch (g.type) {
          case "local-candidate": {
            l.push(this.getIceCandidateStats(g));
            break;
          }
          case "remote-candidate": {
            p.push(this.getIceCandidateStats(g));
            break;
          }
          case "candidate-pair": {
            var w = g.nominated, k = g.selected, T = g, _ = { nominated: w != null ? w : k, currentRoundTripTime: T.currentRoundTripTime, totalRoundTripTime: T.totalRoundTripTime, bytesReceived: T.bytesReceived, bytesSent: T.bytesSent, availableOutgoingBitrate: T.availableOutgoingBitrate, lastPacketReceivedTimestamp: T.lastPacketReceivedTimestamp, lastPacketSentTimestamp: T.lastPacketSentTimestamp, localCandidateId: T.localCandidateId, remoteCandidateId: T.remoteCandidateId, bytesDiscardedOnSend: T.bytesDiscardedOnSend, packetsSent: T.packetsSent, packetsReceived: T.packetsReceived, packetsDiscardedOnSend: T.packetsDiscardedOnSend };
            h.push(_), (g.nominated === !0 || g.selected === !0) && (s.candidatePair = _);
            break;
          }
          case "transport": {
            var E = g;
            n && (n.producing && (this.overallProducingTransportsStatsMap[n.id] || (this.overallProducingTransportsStatsMap[n.id] = { totalPacketsSent: 0 })), n.consuming && (this.overallConsumingTransportsStatsMap[n.id] || (this.overallConsumingTransportsStatsMap[n.id] = { totalPacketsReceived: 0 })));
            var S = { bytesReceived: E.bytesReceived, bytesSent: E.bytesSent, packetsSent: E.packetsSent, packetsReceived: E.packetsReceived, dtlsCipher: E.dtlsCipher, dtlsState: E.dtlsState, iceRole: E.iceRole };
            if (s.transport = S, n) {
              if (n.producing) {
                var C = this.overallProducingTransportsStatsMap[n.id];
                this.processProducingTransportStats(n.id, C, S);
              }
              if (n.consuming) {
                var L = this.overallConsumingTransportsStatsMap[n.id];
                this.processConsumingTransportStats(n.id, L, S);
              }
            }
            break;
          }
          case "remote-inbound-rtp": {
            var G = g, j = { jitter: G.jitter, fractionLost: G.fractionLost, roundTripTime: G.roundTripTime, roundTripTimeMeasurements: G.roundTripTimeMeasurements, totalRoundTripTime: G.totalRoundTripTime, packetsLost: G.packetsLost };
            s.remoteInboundRtp.set(G.localId, j);
            break;
          }
          case "outbound-rtp": {
            var ee = g, Y = a || this.outboundProducerMap.get(g.id);
            this.overallProducersStatsMap[Y] || (this.overallProducersStatsMap[Y] = { totalVideoPacketsSent: 0, totalAudioPacketsSent: 0 });
            var Z = this.overallProducersStatsMap[Y];
            if (["video", "audio"].includes(ee.mediaType) || ["video", "audio"].includes(ee.kind)) {
              if (!this.outboundProducerMap.has(g.id)) {
                s.staleProducerStreamMap = !0;
                break;
              }
              s.producerStreamMap.has(Y) || s.producerStreamMap.set(Y, { outboundVideoRtpId: [], outboundAudioRtpId: [] });
              var F = { bytesSent: ee.bytesSent, packetsSent: ee.packetsSent, nackCount: ee.nackCount, ssrc: ee.ssrc, mid: ee.mid };
              if (ee.mediaType === "video" || ee.kind === "video") {
                if (ee.decoderImplementation === "unknown")
                  break;
                var x = ee, ie = Q({
                  frameHeight: x.frameHeight,
                  frameWidth: x.frameWidth,
                  framesEncoded: x.framesEncoded,
                  framesDropped: x.framesDropped,
                  framesPerSecond: x.framesPerSecond,
                  framesSent: x.framesSent,
                  keyFramesEncoded: x.keyFramesEncoded,
                  firCount: x.firCount,
                  encoderImplementation: x.encoderImplementation,
                  hugeFramesSent: x.hugeFramesSent,
                  pliCount: x.pliCount,
                  qpSum: x.qpSum,
                  qualityLimitationDurations: x.qualityLimitationDurations,
                  qualityLimitationReason: x.qualityLimitationReason,
                  qualityLimitationResolutionChanges: x.qualityLimitationResolutionChanges,
                  // temp sending target bitrate in total encode time
                  // to avoid the delay with making the backend changes
                  totalEncodeTime: x.targetBitrate,
                  totalPacketSendDelay: x.totalPacketSendDelay,
                  retransmittedBytesSent: x.retransmittedBytesSent,
                  retransmittedPacketsSent: x.retransmittedPacketsSent
                }, F);
                s.outboundVideoRtp.set(g.id, ie), s.producerStreamMap.get(Y).outboundVideoRtpId.push(g.id), this.processOutboundProducerVideoStats(Y, Z, ie);
              } else if (ee.mediaType === "audio" || ee.kind === "audio") {
                var B = ee, H = Q({ retransmittedBytesSent: B.retransmittedBytesSent, retransmittedPacketsSent: B.retransmittedPacketsSent }, F);
                s.outboundAudioRtp.set(g.id, H), s.producerStreamMap.get(Y).outboundAudioRtpId.push(g.id), this.processOutboundProducerAudioStats(Y, Z, H);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Outbound-rtp. mediatype: ".concat(ee.mediaType, " kind: ").concat(ee.kind));
            break;
          }
          case "inbound-rtp": {
            var U = g, J = a || this.inboundConsumerMap.get(g.id);
            if (U.ssrc === 1234)
              break;
            this.overallConsumersStatsMap[J] || (this.overallConsumersStatsMap[J] = { totalVideoPacketsReceived: 0, totalAudioPacketsReceived: 0 });
            var X = this.overallConsumersStatsMap[J];
            if (["video", "audio"].includes(U.mediaType) || ["video", "audio"].includes(U.kind)) {
              if (!this.inboundConsumerMap.has(g.id)) {
                s.staleConsumerStreamMap = !0;
                break;
              }
              s.consumerStreamMap.has(J) || s.consumerStreamMap.set(J, { inboundVideoRtpId: [], inboundAudioRtpId: [] });
              var re = { bytesReceived: U.bytesReceived, packetsReceived: U.packetsReceived, packetsLost: U.packetsLost, jitter: U.jitter, nackCount: U.nackCount, jitterBufferDelay: U.jitterBufferDelay, jitterBufferEmittedCount: U.jitterBufferEmittedCount, lastPacketReceivedTimestamp: U.lastPacketReceivedTimestamp, ssrc: U.ssrc, mid: U.mid };
              if (U.mediaType === "video" || U.kind === "video") {
                if (U.decoderImplementation === "unknown")
                  break;
                var pe = U, Ge = Q({ frameHeight: pe.frameHeight, frameWidth: pe.frameWidth, framesDecoded: pe.framesDecoded, framesDropped: pe.framesDropped, framesPerSecond: pe.framesPerSecond, framesReceived: pe.framesReceived, keyFramesDecoded: pe.keyFramesDecoded, firCount: pe.firCount, decoderImplementation: pe.decoderImplementation, pliCount: pe.pliCount, totalProcessingDelay: pe.totalProcessingDelay }, re);
                s.inboundVideoRtp.set(g.id, Ge), s.consumerStreamMap.get(J).inboundVideoRtpId.push(g.id), this.processInboundConsumerVideoStats(J, X, Ge);
              } else if (U.mediaType === "audio" || U.kind === "audio") {
                var oe = U, te = Q({ audioLevel: oe.audioLevel, concealedSampels: oe.concealedSampels, concealmentEvents: oe.concealmentEvents, totalAudioEnergy: oe.totalAudioEnergy, totalSamplesDuration: oe.totalSamplesDuration, totalSamplesReceived: oe.totalSamplesReceived }, re);
                s.inboundAudioRtp.set(g.id, te), s.consumerStreamMap.get(J).inboundAudioRtpId.push(g.id), this.processInboundConsumerAudioStats(J, X, te);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Inbound-rtp. mediatype: ".concat(U.mediaType, " kind: ").concat(U.kind));
            break;
          }
        }
      }
    } catch (Ve) {
      v.e(Ve);
    } finally {
      v.f();
    }
    if (s.outboundVideoRtp.forEach(function(Ve, nr) {
      Ve.remoteData = s.remoteInboundRtp.get(nr);
    }), s.outboundAudioRtp.forEach(function(Ve, nr) {
      Ve.remoteData = s.remoteInboundRtp.get(nr);
    }), h.forEach(function(Ve) {
      var nr = l.find(function(He) {
        return He.id === Ve.localCandidateId ? (Ve.localCandidateId = He.id, He) : null;
      }), ke = p.find(function(He) {
        return He.id === Ve.remoteCandidateId ? (Ve.remoteCandidateId = He.id, He) : null;
      });
      nr && (Ve.localCandidateType = nr.type, Ve.localCandidateAddress = nr.address, Ve.localCandidatePort = nr.port, Ve.localCandidateProtocol = nr.protocol, Ve.localCandidateUrl = nr.url, Ve.localCandidateNetworkType = nr.networkType, Ve.localCandidateRelatedAddress = nr.relatedAddress, Ve.localCandidateRelatedPort = nr.relatedPort), ke && (Ve.remoteCandidateType = ke.type, Ve.remoteCandidateAddress = ke.address, Ve.remoteCandidatePort = ke.port, Ve.remoteCandidateProtocol = ke.protocol, Ve.remoteCandidateUrl = ke.url);
    }), s.candidatePair && (s.transport ? (s.transport.totalRoundTripTime = s.candidatePair.totalRoundTripTime, s.transport.availableOutgoingBitrate = s.candidatePair.availableOutgoingBitrate, s.transport.roundTripTime = s.candidatePair.currentRoundTripTime) : s.transport = {
      // candidateStats: result.candidatePair,
      bytesReceived: s.candidatePair.bytesReceived,
      bytesSent: s.candidatePair.bytesSent,
      totalRoundTripTime: s.candidatePair.totalRoundTripTime,
      availableOutgoingBitrate: s.candidatePair.availableOutgoingBitrate,
      roundTripTime: s.candidatePair.currentRoundTripTime
    }), s.transport && (s.transport.candidatePairs = h), s.transport && !s.transport.roundTripTime) {
      var Ue = 0, xe = 0;
      s.remoteInboundRtp.forEach(function(Ve, nr) {
        Ve.roundTripTime && Ve.roundTripTime > Ue && (Ue = Ve.roundTripTime, xe = Ve.totalRoundTripTime);
      }), s.transport.roundTripTime = Ue, s.transport.totalRoundTripTime = xe;
    }
    return s;
  } }, { key: "getProducersReport", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a = this, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = e.map(function(u) {
                return a.generateProducerStreamMap(u, !0);
              }), s.abrupt("return", n.length > 0 ? Promise.all(n) : void 0);
            case 2:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getConsumersReport",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        var a = this, n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return n = e.map(function(u) {
                  return a.generateConsumerStreamMap(u, !0);
                }), s.abrupt("return", n.length > 0 ? Promise.all(n) : void 0);
              case 2:
              case "end":
                return s.stop();
            }
        }, t);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getTransportReport", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.abrupt("return", e.getStats());
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "getProcessedStats",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
        var i, s, u, l, p, h, v;
        return d().wrap(function(g) {
          for (; ; )
            switch (g.prev = g.next) {
              case 0:
                return g.next = 2, this.getTransportReport(e);
              case 2:
                if (i = g.sent, s = { producing: n, consuming: a, id: e.id }, u = i, l = this.parseRTCReport(u, ["transport", "candidate-pair", "inbound-rtp", "outbound-rtp", "remote-inbound-rtp", "local-candidate", "remote-candidate"], !1, void 0, s), l) {
                  g.next = 8;
                  break;
                }
                return g.abrupt("return", void 0);
              case 8:
                return p = { stats: l.transport, transportId: e.id, consuming: a, producing: n }, h = l.staleProducerStreamMap ? void 0 : this.getProducerStatsFromReport(l), v = l.staleConsumerStreamMap ? void 0 : this.getConsumerStatsFromReport(l), g.abrupt("return", { transportReport: p, producerReport: h, consumerReport: v });
              case 12:
              case "end":
                return g.stop();
            }
        }, t, this);
      }));
      function r(t, e, a) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getProducerStatsFromReport", value: function(r) {
    var t = this, e = [];
    try {
      r.producerStreamMap.forEach(function(a, n) {
        var i;
        e.push({ producerId: n, videoStats: a.outboundVideoRtpId.map(function(s) {
          return r.outboundVideoRtp.get(s);
        }), audioStats: a.outboundAudioRtpId.map(function(s) {
          return r.outboundAudioRtp.get(s);
        }), appData: ((i = t.callStatsInstance.producers) === null || i === void 0 || (i = i.get(n)) === null || i === void 0 ? void 0 : i.appData) || null });
      });
    } catch (a) {
      this.callStatsInstance.logger.error("callStats::measurements::getProducerStatsFromReport", { error: { reason: a.reason, message: a.message } });
    }
    return e;
  } }, {
    key: "getConsumerStatsFromReport",
    value: function(r) {
      var t = this, e = [];
      try {
        r.consumerStreamMap.forEach(function(a, n) {
          var i = t.consumerPeerIdMap.get(n), s = i.peerId, u = i.producerId, l = i.appData;
          e.push({ consumerId: n, peerId: s, producerId: u, appData: l, videoStats: a.inboundVideoRtpId.map(function(p) {
            return r.inboundVideoRtp.get(p);
          }), audioStats: a.inboundAudioRtpId.map(function(p) {
            return r.inboundAudioRtp.get(p);
          }) });
        });
      } catch (a) {
        console.error("getConsumersReport: ", a, r);
      }
      return e;
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getUserLocation",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t() {
        var e;
        return d().wrap(function(n) {
          for (; ; )
            switch (n.prev = n.next) {
              case 0:
                return e = new Promise(function(i, s) {
                  try {
                    navigator.geolocation ? navigator.geolocation.getCurrentPosition(function(u) {
                      i(u);
                    }) : s();
                  } catch (u) {
                    s(u);
                  }
                }), n.abrupt("return", e);
              case 2:
              case "end":
                return n.stop();
            }
        }, t);
      }));
      function r() {
        return c.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getConnectivity",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        var a, n, i, s, u, l, p, h, v;
        return d().wrap(function(g) {
          for (; ; )
            switch (g.prev = g.next) {
              case 0:
                return g.prev = 0, a = { iceServers: e || ud }, n = new Promise(function(w, k) {
                  try {
                    var T = new Gf(a);
                    T.addListener("done", w), T.addListener("failed", function() {
                      w({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (_) {
                    k(_);
                  }
                }), i = new Promise(function(w, k) {
                  try {
                    var T = new Bf(a);
                    T.addListener("done", w), T.addListener("failed", function() {
                      w({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (_) {
                    k(_);
                  }
                }), s = new Promise(function(w, k) {
                  try {
                    var T = new qf(a);
                    T.addListener("done", w), T.addListener("failed", function() {
                      w({ connectivity: !1 });
                    }), T.start(2e3);
                  } catch (_) {
                    k(_);
                  }
                }), g.next = 7, Promise.all([n, i, s]);
              case 7:
                return u = g.sent, l = ar(u, 3), p = l[0], h = l[1], v = l[2], g.abrupt("return", { host: p == null ? void 0 : p.connectivity, relay: h == null ? void 0 : h.connectivity, reflexive: v == null ? void 0 : v.connectivity });
              case 15:
                return g.prev = 15, g.t0 = g.catch(0), g.abrupt("return", { host: !1, relay: !1, reflexive: !1 });
              case 18:
              case "end":
                return g.stop();
            }
        }, t, null, [[0, 15]]);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getThroughput", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, a = new Promise(function(u, l) {
                try {
                  var p = { iceServers: e || ud }, h = new jf(p);
                  h.addListener("done", u), h.addListener("failed", l), h.start(1e4);
                } catch (v) {
                  l(v);
                }
              }), s.next = 4, a;
            case 4:
              return n = s.sent, s.abrupt("return", { throughput: n.throughput, fractionalLoss: 0, RTT: n.RTT, jitter: 0, backendRTT: n.backendRTT });
            case 8:
              return s.prev = 8, s.t0 = s.catch(0), s.abrupt("return", void 0);
            case 11:
            case "end":
              return s.stop();
          }
      }, t, null, [[0, 8]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getIPDetails", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (i.prev = 0, this.ipDetails) {
                i.next = 5;
                break;
              }
              return i.next = 4, sl.getIPDetails({ peerId: (e = this.callStatsInstance) === null || e === void 0 ? void 0 : e.peerId, apiHostnames: (a = this.callStatsInstance) === null || a === void 0 ? void 0 : a.apiHostnames });
            case 4:
              this.ipDetails = i.sent;
            case 5:
              return i.abrupt("return", this.ipDetails);
            case 8:
              return i.prev = 8, i.t0 = i.catch(0), i.abrupt("return", void 0);
            case 11:
            case "end":
              return i.stop();
          }
      }, t, this, [[0, 8]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getNetworkQuality", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, Promise.all([this.getConnectivity(e), this.getThroughput(e)]);
            case 2:
              return a = p.sent, n = ar(a, 2), i = n[0], s = n[1], u = { connectivity: i, throughput: s == null ? void 0 : s.throughput, fractionalLoss: s == null ? void 0 : s.fractionalLoss, RTT: s == null ? void 0 : s.RTT, jitter: s == null ? void 0 : s.jitter, backendRTT: s == null ? void 0 : s.backendRTT }, p.abrupt("return", u);
            case 8:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getNetworkInfo", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return v.next = 2, Promise.all([this.getConnectivity(e), this.getThroughput(e), this.getIPDetails()]);
            case 2:
              return n = v.sent, i = ar(n, 3), s = i[0], u = i[1], l = i[2], p = { ipDetails: l, effectiveNetworkType: (a = navigator.connection) === null || a === void 0 ? void 0 : a.effectiveType, location: l.loc ? Jf(l.loc) : void 0, turnConnectivity: s ? s.host || s.relay || s.reflexive : !1, connectivity: s, throughput: u == null ? void 0 : u.throughput, fractionalLoss: u == null ? void 0 : u.fractionalLoss, RTT: u == null ? void 0 : u.RTT, jitter: u == null ? void 0 : u.jitter, backendRTT: u == null ? void 0 : u.backendRTT }, v.abrupt("return", p);
            case 9:
            case "end":
              return v.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), Kf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r);
}(kh), wh = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    I(this, r);
    for (var e = arguments.length, a = new Array(e), n = 0; n < e; n++)
      a[n] = arguments[n];
    return t = c.call.apply(c, [this].concat(a)), R(b(t), "producerMap", /* @__PURE__ */ new Map()), R(b(t), "consumerMap", /* @__PURE__ */ new Map()), t;
  }
  return D(r, [{ key: "registerProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.producerMap.set(n.id, n), s.next = 3, this.generateProducerStreamMap(n);
            case 3:
              n.observer.on("close", this.deregisterProducer.bind(this, n));
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "registerConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return this.consumerMap.set(n.id, n), s.next = 3, this.generateConsumerStreamMap(n);
            case 3:
              this.consumerPeerIdMap.set(n.id, { producerId: n.producerId, peerId: n.appData.peerId, appData: n.appData }), n.observer.on("close", this.deregisterConsumer.bind(this, n));
            case 5:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "generateConsumerStreamMap", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g = arguments;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return i = g.length > 1 && g[1] !== void 0 ? g[1] : !1, k.next = 3, n.getStats();
            case 3:
              s = k.sent, u = this.parseRTCReport(s, ["inbound-rtp"], !1, n.id), l = sr(u.consumerStreamMap.values())[0], p = i ? this.getConsumerStatsFromParsedConsumerStats(u, l, n.id) : void 0, h = ae(s.values()), k.prev = 8, h.s();
            case 10:
              if ((v = h.n()).done) {
                k.next = 19;
                break;
              }
              m = v.value, k.t0 = m.type, k.next = k.t0 === "inbound-rtp" ? 15 : 17;
              break;
            case 15:
              return this.inboundConsumerMap.set(m.id, n.id), k.abrupt("break", 17);
            case 17:
              k.next = 10;
              break;
            case 19:
              k.next = 24;
              break;
            case 21:
              k.prev = 21, k.t1 = k.catch(8), h.e(k.t1);
            case 24:
              return k.prev = 24, h.f(), k.finish(24);
            case 27:
              return k.abrupt("return", p);
            case 28:
            case "end":
              return k.stop();
          }
      }, a, this, [[8, 21, 24, 27]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "deregisterProducer", value: function(e) {
    var a = this;
    this.producerMap.delete(e.id), this.outboundProducerMap.forEach(function(n, i) {
      n === e.id && a.outboundProducerMap.delete(i);
    });
  } }, {
    key: "deregisterConsumer",
    value: function(e) {
      var a = this;
      this.consumerMap.delete(e.id), this.inboundConsumerMap.forEach(function(n, i) {
        n === e.id && a.inboundConsumerMap.delete(i);
      }), this.consumerPeerIdMap.delete(e.id);
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getIceCandidateStats", value: function(e) {
    var a, n = { id: e.id, type: e.candidateType || e.type, address: e.address, port: e.port, url: e.url, protocol: (a = e.relayProtocol) !== null && a !== void 0 ? a : e.protocol, networkType: e.networkType, relatedAddress: e.relatedAddress, relatedPort: e.relatedPort };
    return n;
  } }, { key: "parseRTCReport", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : void 0, s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0, u = e, l = new yh(), p = a.length ? new Set(a) : void 0, h = [], v = [], m = [], g = ae(u.values()), w;
    try {
      for (g.s(); !(w = g.n()).done; ) {
        var k = w.value;
        if (p) {
          if (p.size === 0)
            break;
          if (p.has(k.type))
            n && p.delete(k.type);
          else
            continue;
        }
        switch (k.type) {
          case "local-candidate": {
            h.push(this.getIceCandidateStats(k));
            break;
          }
          case "remote-candidate": {
            v.push(this.getIceCandidateStats(k));
            break;
          }
          case "candidate-pair": {
            var T = k.nominated, _ = k.selected, E = k, S = { nominated: T != null ? T : _, currentRoundTripTime: E.currentRoundTripTime, totalRoundTripTime: E.totalRoundTripTime, bytesReceived: E.bytesReceived, bytesSent: E.bytesSent, availableOutgoingBitrate: E.availableOutgoingBitrate, lastPacketReceivedTimestamp: E.lastPacketReceivedTimestamp, lastPacketSentTimestamp: E.lastPacketSentTimestamp, localCandidateId: E.localCandidateId, remoteCandidateId: E.remoteCandidateId, bytesDiscardedOnSend: E.bytesDiscardedOnSend, packetsSent: E.packetsSent, packetsReceived: E.packetsReceived, packetsDiscardedOnSend: E.packetsDiscardedOnSend };
            m.push(S), (k.nominated === !0 || k.selected === !0) && (l.candidatePair = S);
            break;
          }
          case "transport": {
            var C = k;
            s && (s.producing && (this.overallProducingTransportsStatsMap[s.id] || (this.overallProducingTransportsStatsMap[s.id] = { totalPacketsSent: 0 })), s.consuming && (this.overallConsumingTransportsStatsMap[s.id] || (this.overallConsumingTransportsStatsMap[s.id] = { totalPacketsReceived: 0 })));
            var L = { bytesReceived: C.bytesReceived, bytesSent: C.bytesSent, packetsSent: C.packetsSent, packetsReceived: C.packetsReceived, dtlsCipher: C.dtlsCipher, dtlsState: C.dtlsState, iceRole: C.iceRole };
            if (l.transport = L, s) {
              if (s.producing) {
                var G = this.overallProducingTransportsStatsMap[s.id];
                this.processProducingTransportStats(s.id, G, L);
              }
              if (s.consuming) {
                var j = this.overallConsumingTransportsStatsMap[s.id];
                this.processConsumingTransportStats(s.id, j, L);
              }
            }
            break;
          }
          case "remote-inbound-rtp": {
            var ee = k, Y = { jitter: ee.jitter, fractionLost: ee.fractionLost, roundTripTime: ee.roundTripTime, roundTripTimeMeasurements: ee.roundTripTimeMeasurements, totalRoundTripTime: ee.totalRoundTripTime, packetsLost: ee.packetsLost };
            l.remoteInboundRtp.set(ee.localId, Y);
            break;
          }
          case "outbound-rtp": {
            var Z = k, F = i || this.outboundProducerMap.get(k.id);
            this.overallProducersStatsMap[F] || (this.overallProducersStatsMap[F] = { totalVideoPacketsSent: 0, totalAudioPacketsSent: 0 });
            var x = this.overallProducersStatsMap[F];
            if (["video", "audio"].includes(Z.mediaType) || ["video", "audio"].includes(Z.kind)) {
              if (!this.outboundProducerMap.has(k.id)) {
                l.staleProducerStreamMap = !0;
                break;
              }
              l.producerStreamMap.has(F) || l.producerStreamMap.set(F, { outboundVideoRtpId: [], outboundAudioRtpId: [] });
              var ie = { bytesSent: Z.bytesSent, packetsSent: Z.packetsSent, nackCount: Z.nackCount, ssrc: Z.ssrc, mid: Z.mid };
              if (Z.mediaType === "video" || Z.kind === "video") {
                if (Z.decoderImplementation === "unknown")
                  break;
                var B = Z, H = Q({ frameHeight: B.frameHeight, frameWidth: B.frameWidth, framesEncoded: B.framesEncoded, framesDropped: B.framesDropped ? B.framesDropped : B.droppedFrames, framesPerSecond: B.framesPerSecond ? B.framesPerSecond : B.framerateMean, framesSent: B.framesSent, keyFramesEncoded: B.keyFramesEncoded, firCount: B.firCount, encoderImplementation: B.encoderImplementation, hugeFramesSent: B.hugeFramesSent, pliCount: B.pliCount, qpSum: B.qpSum, qualityLimitationReason: B.qualityLimitationReason, qualityLimitationDurations: B.qualityLimitationDurations, qualityLimitationResolutionChanges: B.qualityLimitationResolutionChanges, totalEncodeTime: B.totalEncodeTime, totalPacketSendDelay: B.totalEncodeTime, retransmittedBytesSent: B.retransmittedBytesSent, retransmittedPacketsSent: B.retransmittedPacketsSent }, ie);
                l.outboundVideoRtp.set(k.id, H), l.producerStreamMap.get(F).outboundVideoRtpId.push(k.id), this.processOutboundProducerVideoStats(F, x, H);
              } else if (Z.mediaType === "audio" || Z.kind === "audio") {
                var U = Z, J = Q({ retransmittedBytesSent: U.retransmittedBytesSent, retransmittedPacketsSent: U.retransmittedPacketsSent }, ie);
                l.outboundAudioRtp.set(k.id, J), l.producerStreamMap.get(F).outboundAudioRtpId.push(k.id), this.processOutboundProducerAudioStats(F, x, J);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Outbound-rtp. mediatype: ".concat(Z.mediaType, " kind: ").concat(Z.kind));
            break;
          }
          case "inbound-rtp": {
            var X = k, re = i || this.inboundConsumerMap.get(k.id);
            this.overallConsumersStatsMap[re] || (this.overallConsumersStatsMap[re] = { totalVideoPacketsReceived: 0, totalAudioPacketsReceived: 0 });
            var pe = this.overallConsumersStatsMap[re];
            if (["video", "audio"].includes(X.mediaType) || ["video", "audio"].includes(X.kind)) {
              if (!this.inboundConsumerMap.has(k.id)) {
                l.staleConsumerStreamMap = !0;
                break;
              }
              l.consumerStreamMap.has(re) || l.consumerStreamMap.set(re, { inboundVideoRtpId: [], inboundAudioRtpId: [] });
              var Ge = { bytesReceived: X.bytesReceived, packetsReceived: X.packetsReceived, packetsLost: X.packetsLost, jitter: X.jitter, nackCount: X.nackCount, jitterBufferDelay: X.jitterBufferDelay, jitterBufferEmittedCount: X.jitterBufferEmittedCount, lastPacketReceivedTimestamp: X.lastPacketReceivedTimestamp, ssrc: X.ssrc, mid: X.mid };
              if (X.mediaType === "video" || X.kind === "video") {
                if (X.decoderImplementation === "unknown")
                  break;
                var oe = X, te = Q({ frameHeight: oe.frameHeight, frameWidth: oe.frameWidth, framesDecoded: oe.framesDecoded, framesDropped: oe.framesDropped ? oe.framesDropped : oe.droppedFrames, framesPerSecond: oe.framesPerSecond ? oe.framesPerSecond : oe.framerateMean, framesReceived: oe.framesReceived, keyFramesDecoded: oe.keyFramesDecoded, firCount: oe.firCount, decoderImplementation: oe.decoderImplementation, pliCount: oe.pliCount, totalProcessingDelay: oe.totalProcessingDelay }, Ge);
                l.inboundVideoRtp.set(k.id, te), l.consumerStreamMap.get(re).inboundVideoRtpId.push(k.id), this.processInboundConsumerVideoStats(re, pe, te);
              } else if (X.mediaType === "audio" || X.kind === "audio") {
                var Ue = X, xe = Q({ audioLevel: Ue.audioLevel, concealedSampels: Ue.concealedSampels, concealmentEvents: Ue.concealmentEvents, totalAudioEnergy: Ue.totalAudioEnergy, totalSamplesDuration: Ue.totalSamplesDuration, totalSamplesReceived: Ue.totalSamplesReceived }, Ge);
                l.inboundAudioRtp.set(k.id, xe), l.consumerStreamMap.get(re).inboundAudioRtpId.push(k.id), this.processInboundConsumerAudioStats(re, pe, xe);
              }
            } else
              this.callStatsInstance.logger.error("Callstats: Unknown Inbound-rtp. mediatype: ".concat(X.mediaType, " kind: ").concat(X.kind));
            break;
          }
        }
      }
    } catch (ke) {
      g.e(ke);
    } finally {
      g.f();
    }
    if (l.outboundVideoRtp.forEach(function(ke, He) {
      ke.remoteData = l.remoteInboundRtp.get(He);
    }), l.outboundAudioRtp.forEach(function(ke, He) {
      ke.remoteData = l.remoteInboundRtp.get(He);
    }), m.forEach(function(ke) {
      var He = h.find(function(it) {
        return it.id === ke.localCandidateId ? (ke.localCandidateId = it.id, it) : null;
      }), Qr = v.find(function(it) {
        return it.id === ke.remoteCandidateId ? (ke.remoteCandidateId = it.id, it) : null;
      });
      He && (ke.localCandidateType = He.type, ke.localCandidateAddress = He.address, ke.localCandidatePort = He.port, ke.localCandidateProtocol = He.protocol, ke.localCandidateUrl = He.url, ke.localCandidateNetworkType = He.networkType, ke.localCandidateRelatedAddress = He.relatedAddress, ke.localCandidateRelatedPort = He.relatedPort), Qr && (ke.remoteCandidateType = Qr.type, ke.remoteCandidateAddress = Qr.address, ke.remoteCandidatePort = Qr.port, ke.remoteCandidateProtocol = Qr.protocol, ke.remoteCandidateUrl = Qr.url);
    }), l.candidatePair && (l.transport ? (l.transport.bytesReceived = l.candidatePair.bytesReceived, l.transport.bytesSent = l.candidatePair.bytesSent, l.transport.totalRoundTripTime = l.candidatePair.totalRoundTripTime, l.transport.availableOutgoingBitrate = l.candidatePair.availableOutgoingBitrate, l.transport.roundTripTime = l.candidatePair.currentRoundTripTime) : l.transport = {
      // candidateStats: result.candidatePair,
      bytesReceived: l.candidatePair.bytesReceived,
      bytesSent: l.candidatePair.bytesSent,
      totalRoundTripTime: l.candidatePair.totalRoundTripTime,
      availableOutgoingBitrate: l.candidatePair.availableOutgoingBitrate,
      roundTripTime: l.candidatePair.currentRoundTripTime
    }), l.transport && (l.transport.candidatePairs = m), l.transport && !l.transport.roundTripTime) {
      var Ve = 0, nr = 0;
      l.remoteInboundRtp.forEach(function(ke, He) {
        ke.roundTripTime && ke.roundTripTime > Ve && (Ve = ke.roundTripTime, nr = ke.totalRoundTripTime);
      }), l.transport.roundTripTime = Ve, l.transport.totalRoundTripTime = nr;
    }
    return l;
  } }, { key: "getProducerStatsFromReport", value: function(e) {
    var a = this, n = [];
    try {
      e.producerStreamMap.forEach(function(i, s) {
        var u = a.producerMap.get(s), l = u.track.getSettings(), p = i.outboundVideoRtpId.map(function(v) {
          var m = e.outboundVideoRtp.get(v);
          return m.frameHeight || (m.frameHeight = l.height, m.frameWidth = l.width, m.framesPerSecond = l.frameRate), m;
        }), h = { producerId: s, appData: u.appData, videoStats: p, audioStats: i.outboundAudioRtpId.map(function(v) {
          return e.outboundAudioRtp.get(v);
        }) };
        n.push(h);
      });
    } catch (i) {
      console.error("getProducersReport: ", i, e);
    }
    return n;
  } }, { key: "getConsumerStatsFromParsedConsumerStats", value: function(e, a, n) {
    var i = this, s;
    try {
      var u = this.consumerPeerIdMap.get(n), l = u.peerId, p = u.producerId, h = u.appData, v = a == null ? void 0 : a.inboundVideoRtpId.map(function(m) {
        var g = i.consumerMap.get(n), w = g.track.getSettings(), k = e.inboundVideoRtp.get(m);
        return k.frameHeight || (k.frameHeight = w.height, k.frameWidth = w.width, k.framesPerSecond = w.frameRate), k;
      });
      s = { consumerId: n, peerId: l, producerId: p, appData: h, videoStats: v, audioStats: a == null ? void 0 : a.inboundAudioRtpId.map(function(m) {
        return e.inboundAudioRtp.get(m);
      }) };
    } catch (m) {
      console.error("getConsumerStatsFromParsedConsumerStats: ", m, e);
    }
    return s;
  } }, { key: "getConsumerStatsFromReport", value: function(e) {
    var a = this, n = [];
    try {
      e.consumerStreamMap.forEach(function(i, s) {
        n.push(a.getConsumerStatsFromParsedConsumerStats(e, i, s));
      });
    } catch (i) {
      console.error("getConsumerStatsFromReport: ", i, e);
    }
    return n;
  } }]), r;
}(kh), zf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r);
}(wh);
function Go(o, c, r, t) {
  if (o != null && o.logger && o.logger.error("Callstats::handleError", { error: t }), typeof r == "function" && t instanceof c)
    r.call(null, t, o);
  else
    throw t;
}
function cd(o, c, r) {
  var t = o.value;
  return o.value = function() {
    var e = this;
    try {
      for (var a = arguments.length, n = new Array(a), i = 0; i < a; i++)
        n[i] = arguments[i];
      var s = t.apply(this, n);
      return s && s instanceof Promise ? s.catch(function(u) {
        Go(e, c, r, u);
      }) : s;
    } catch (u) {
      Go(this, c, r, u);
    }
    return null;
  }, o;
}
var Me = function(c, r) {
  return function(t, e, a) {
    var n = a.value;
    return a.value = function() {
      var i = this;
      try {
        for (var s = arguments.length, u = new Array(s), l = 0; l < s; l++)
          u[l] = arguments[l];
        var p = n.apply(this, u);
        return p && p instanceof Promise ? p.catch(function(h) {
          Go(i, c, r, h);
        }) : p;
      } catch (h) {
        Go(this, c, r, h);
      }
      return null;
    }, a;
  };
}, Qf = function(c, r) {
  return function(t, e, a) {
    if (a)
      return cd(a, c, r);
    var n = ae(Reflect.ownKeys(t.prototype).filter(function(p) {
      return p !== "constructor";
    })), i;
    try {
      for (n.s(); !(i = n.n()).done; ) {
        var s = i.value, u = Object.getOwnPropertyDescriptor(t.prototype, s), l = u.value instanceof Function;
        l && Object.defineProperty(t.prototype, s, cd(u, c, r));
      }
    } catch (p) {
      n.e(p);
    } finally {
      n.f();
    }
  };
}, Ie = globalThis && globalThis.__decorate || function(o, c, r, t) {
  var e = arguments.length, a = e < 3 ? c : t === null ? t = Object.getOwnPropertyDescriptor(c, r) : t, n;
  if ((typeof Reflect == "undefined" ? "undefined" : ce(Reflect)) === "object" && typeof Reflect.decorate == "function")
    a = Reflect.decorate(o, c, r, t);
  else
    for (var i = o.length - 1; i >= 0; i--)
      (n = o[i]) && (a = (e < 3 ? n(a) : e > 3 ? n(c, r, a) : n(c, r)) || a);
  return e > 3 && a && Object.defineProperty(c, r, a), a;
}, De = console, _e = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "https://api.testingv3.dyte.in", r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "Blink", t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : Ti.PROD, e = arguments.length > 3 ? arguments[3] : void 0, a = arguments.length > 4 ? arguments[4] : void 0, n = arguments.length > 5 ? arguments[5] : void 0, i = arguments.length > 6 ? arguments[6] : void 0;
    switch (I(this, o), R(this, "eventHandler", void 0), R(this, "measurements", void 0), R(this, "producingTransport", void 0), R(this, "consumingTransport", void 0), R(this, "producers", /* @__PURE__ */ new Map()), R(this, "consumers", /* @__PURE__ */ new Map()), R(this, "iceServers", void 0), R(this, "connectionInfoPromise", void 0), R(this, "pingStatsTimeout", void 0), R(this, "logger", void 0), R(this, "env", void 0), R(this, "apiHostnames", void 0), R(this, "peerId", void 0), R(this, "consumerSharedMediaStatesMap", /* @__PURE__ */ new Map()), R(this, "currentUserMediaStates", {}), this.env = t, this.apiHostnames = i, this.logger = a, this.peerId = n, this.eventHandler = new Ff({ logger: a, peerId: n, apiHostnames: i }), this.logger.debug("callStats::engineName: ", { engineName: r }), r) {
      case "Blink":
        this.measurements = new Kf();
        break;
      case "Gecko":
        this.measurements = new wh();
        break;
      case "WebKit":
        this.measurements = new zf();
        break;
      default:
        throw Error("Unknown engineName! ".concat(r));
    }
    this.measurements.callStatsInstance = this, this.registerProducer = this.registerProducer.bind(this), this.registerConsumer = this.registerConsumer.bind(this);
  }
  return D(o, [{ key: "registerIceServers", value: function(r) {
    this.iceServers = r;
  } }, { key: "registerConsumer", value: function(r) {
    var t;
    this.consumerSharedMediaStatesMap.has(r.id) || this.consumerSharedMediaStatesMap.set(r.id, {}), this.consumers.set(r.id, r), this.measurements.registerConsumer(r), this.logger.debug("callStats::registerConsumer", { consumerId: r.id, consumerkind: r.kind, isScreenShare: !!((t = r.appData) !== null && t !== void 0 && t.screenShare) }), r.observer.on("close", this.deRegisterConsumer.bind(this, r));
  } }, { key: "registerProducer", value: function(r) {
    var t;
    this.producers.set(r.id, r), this.measurements.registerProducer(r), this.logger.debug("callStats::registerProducer", { producerId: r.id, producerKind: r.kind, isScreenShare: !!((t = r.appData) !== null && t !== void 0 && t.screenShare) }), r.observer.on("close", this.deRegisterProducer.bind(this, r));
  } }, { key: "sendConsumerSharedMediaStateEvent", value: function(r, t) {
    this.consumerSharedMediaStatesMap.has(r) || this.consumerSharedMediaStatesMap.set(r, {});
    var e = this.consumerSharedMediaStatesMap.get(r);
    this.consumerSharedMediaStatesMap.set(r, Object.assign(e, t));
  } }, { key: "registerProducingTransport", value: function(r) {
    var t, e = this;
    this.producingTransport = r, r.observer.on("close", this.disconnectProducingTransport.bind(this, r)), r.observer.on("disconnect", this.disconnectProducingTransport.bind(this, r));
    var a = Array.from(
      // eslint-disable-next-line no-underscore-dangle
      ((t = r._producers) === null || t === void 0 ? void 0 : t.values()) || []
    );
    a.forEach(function(n) {
      e.registerProducer(n);
    }), r.observer.on("newproducer", this.registerProducer);
  } }, { key: "registerConsumingTransport", value: function(r) {
    var t, e = this;
    this.consumingTransport = r, r.observer.on("close", this.disconnectConsumingTransport.bind(this, r)), r.observer.on("disconnect", this.disconnectConsumingTransport.bind(this, r));
    var a = Array.from(
      // eslint-disable-next-line no-underscore-dangle
      ((t = r._consumers) === null || t === void 0 ? void 0 : t.values()) || []
    );
    a.forEach(function(n) {
      e.registerConsumer(n);
    }), r.observer.on("newconsumer", this.registerConsumer);
  } }, { key: "deRegisterConsumer", value: function(r) {
    this.consumers.delete(r.id);
  } }, { key: "deRegisterProducer", value: function(r) {
    this.producers.delete(r.id);
  } }, { key: "disconnectConsumingTransport", value: function() {
    this.consumingTransport = void 0;
  } }, { key: "disconnectProducingTransport", value: function() {
    this.producingTransport = void 0;
  } }, { key: "callEvent", value: function(r) {
    this.eventHandler.callEvent(r);
  } }, { key: "sendPreCallTestBeginEvent", value: function() {
    var r = this;
    this.connectionInfoPromise = this.measurements.getNetworkInfo(this.iceServers), this.eventHandler.callEvent({ event: ne.PRECALL_TEST_BEGIN, timestamp: new Date() }), this.connectionInfoPromise && this.connectionInfoPromise.then(function(t) {
      r.eventHandler.callEvent({ event: ne.PRECALL_TEST_COMPLETE, metaData: { connectionInfo: t }, timestamp: new Date() });
    });
  } }, { key: "sendScreenShareToggleEvent", value: function(r, t) {
    this.currentUserMediaStates.screen = r, this.eventHandler.callEvent({ event: r ? ne.SCREENSHARE_STARTED : ne.SCREENSHARE_STOPPED, metaData: { ssrc: t }, timestamp: new Date() });
  } }, { key: "sendScreenShareRequestedEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.SCREENSHARE_START_REQUESTED, timestamp: new Date() });
  } }, { key: "sendActiveSpeakerEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.DOMINANT_SPEAKER, metaData: { peerId: r }, timestamp: new Date() });
  } }, { key: "devices", value: function(r, t) {
    this.eventHandler.callEvent({ event: r === It.AUDIO && ne.AUDIO_DEVICES_UPDATES || r === It.VIDEO && ne.VIDEO_DEVICES_UPDATES || r === It.SPEAKER && ne.SPEAKER_DEVICES_UPDATES, metaData: { deviceList: t }, timestamp: new Date() });
  } }, { key: "selectedDevice", value: function(r, t) {
    this.eventHandler.callEvent({ event: r === It.AUDIO && ne.SELECTED_MICROHPONE_UPDATE || r === It.VIDEO && ne.SELECTED_CAMERA_UPDATE || r === It.SPEAKER && ne.SELECTED_SPEAKER_UPDATE, metaData: { device: t }, timestamp: new Date() });
  } }, { key: "mediaPermission", value: function(r, t) {
    this.eventHandler.callEvent({ event: ne.MEDIA_PERMISSION, metaData: { deviceType: r, permission: t }, timestamp: new Date() });
  } }, { key: "mediaPlaybackFailed", value: function(r) {
    this.eventHandler.callEvent({ event: r === It.AUDIO && ne.AUDIO_PLAY_FAILED || r === It.VIDEO && ne.VIDEO_PLAY_FAILED, metaData: { deviceType: r }, timestamp: new Date() });
  } }, { key: "mediaTrackMuted", value: function(r) {
    this.eventHandler.callEvent({ event: r === It.AUDIO && ne.AUDIO_TRACK_MUTED || r === It.VIDEO && ne.VIDEO_TRACK_MUTED, metaData: { deviceType: r }, timestamp: new Date() });
  } }, { key: "tabChanged", value: function(r) {
    this.eventHandler.callEvent({ event: ne.TAB_CHANGE, metaData: { isMeetingsTabActive: r }, timestamp: new Date() });
  } }, { key: "browserBackgrounded", value: function() {
    this.eventHandler.callEvent({ event: ne.BROWSER_BACKGROUNDED, timestamp: new Date() });
  } }, { key: "browserForegrounded", value: function() {
    this.eventHandler.callEvent({ event: ne.BROWSER_FOREGROUNDED, timestamp: new Date() });
  } }, { key: "legacySwitch", value: function(r) {
    this.eventHandler.callEvent({ event: ne.LEGACY_SWITCH, metadata: { on: r }, timestamp: new Date() });
  } }, { key: "getPreCallTestResults", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", this.connectionInfoPromise);
            case 1:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendCallJoinBeginEvent", value: function(r) {
    r = Q(Q({}, r), {}, { meetingEnv: this.env }), r.deviceInfo = Q(Q({}, r.deviceInfo), {}, { userAgent: navigator.userAgent, cpus: navigator.hardwareConcurrency, memory: navigator.deviceMemory }), this.eventHandler.callEvent({ event: ne.CALL_JOIN_BEGIN, metaData: { peerMetaData: r }, timestamp: new Date() });
  } }, { key: "sendNetworkQualityTestBeginEvent", value: function(r) {
    var t = this;
    this.eventHandler.callEvent({ event: ne.NET_QUALITY_TEST_BEGIN, timestamp: new Date() });
    var e = new Promise(/* @__PURE__ */ function() {
      var a = y(/* @__PURE__ */ d().mark(function n(i, s) {
        var u, l, p, h, v;
        return d().wrap(function(g) {
          for (; ; )
            switch (g.prev = g.next) {
              case 0:
                u = [], g.prev = 1, l = ae(r), g.prev = 3, l.s();
              case 5:
                if ((p = l.n()).done) {
                  g.next = 20;
                  break;
                }
                if (h = p.value, g.prev = 7, !(h.iceServers && h.iceServers.length > 0)) {
                  g.next = 13;
                  break;
                }
                return g.next = 11, t.measurements.getNetworkQuality(h.iceServers);
              case 11:
                v = g.sent, u.push(Q(Q({}, h), {}, { networkResults: v }));
              case 13:
                g.next = 18;
                break;
              case 15:
                g.prev = 15, g.t0 = g.catch(7), console.warn("Error handling ", g.t0);
              case 18:
                g.next = 5;
                break;
              case 20:
                g.next = 25;
                break;
              case 22:
                g.prev = 22, g.t1 = g.catch(3), l.e(g.t1);
              case 25:
                return g.prev = 25, l.f(), g.finish(25);
              case 28:
                i({ regionData: u }), g.next = 35;
                break;
              case 31:
                g.prev = 31, g.t2 = g.catch(1), console.warn("Error in callstats, ", g.t2), s(g.t2);
              case 35:
              case "end":
                return g.stop();
            }
        }, n, null, [[1, 31], [3, 22, 25, 28], [7, 15]]);
      }));
      return function(n, i) {
        return a.apply(this, arguments);
      };
    }());
    e.then(function(a) {
      t.eventHandler.callEvent({ event: ne.NET_QUALITY_TEST_END, timestamp: new Date(), metaData: a });
    });
  } }, { key: "sendWebSocketConnectedEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.WEBSOCKET_CONNECTED, timestamp: new Date() });
  } }, { key: "sendTransportConnectedEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.TRANSPORT_CONNECTED, timestamp: new Date() });
  } }, { key: "sendAudioToggleEvent", value: function(r) {
    this.currentUserMediaStates.audio = r;
    var t;
    r ? t = ne.AUDIO_ON : t = ne.AUDIO_OFF, this.eventHandler.callEvent({ event: t, timestamp: new Date() });
  } }, { key: "sendVideoToggleEvent", value: function(r) {
    this.currentUserMediaStates.video = r;
    var t;
    r ? t = ne.VIDEO_ON : t = ne.VIDEO_OFF, this.eventHandler.callEvent({ event: t, timestamp: new Date() });
  } }, { key: "sendParticipantRoleToggleEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.PARTICIPANT_ROLE, timestamp: new Date(), metaData: r });
  } }, { key: "startPingStats", value: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 7e3;
    this.sendPingStatsEvent(!1), this.pingStatsTimeout = setInterval(this.sendPingStatsEvent.bind(this), r);
  } }, { key: "stopPingStats", value: function() {
    clearInterval(this.pingStatsTimeout);
  } }, { key: "sendPingStatsEvent", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i, s, u, l, p, h, v, m, g, w, k, T = arguments;
      return d().wrap(function(E) {
        for (; ; )
          switch (E.prev = E.next) {
            case 0:
              if (l = T.length > 0 && T[0] !== void 0 ? T[0] : !0, !this.producingTransport) {
                E.next = 18;
                break;
              }
              return E.next = 4, this.measurements.getProcessedStats(this.producingTransport, !1, !0);
            case 4:
              if (p = E.sent, !(!p || !((v = p) !== null && v !== void 0 && v.producerReport))) {
                E.next = 18;
                break;
              }
              return this.logger.debug("callStats::sendPingStatsEvent::staleProducingTransport", { disclaimer: "Stale producer? Regenerating Stream Maps!" }), E.next = 9, this.measurements.getProducersReport(sr(this.producers.values()));
            case 9:
              if (m = E.sent, !(p && m)) {
                E.next = 14;
                break;
              }
              p.producerReport = m, E.next = 18;
              break;
            case 14:
              return E.next = 16, this.measurements.getProcessedStats(this.producingTransport, !1, !0);
            case 16:
              p = E.sent, (!p || !((g = p) !== null && g !== void 0 && g.producerReport)) && this.logger.debug("callStats::sendPingStatsEvent::noProducingTransportReport", { disclaimer: "Stream maps invalid despite regenerating!" });
            case 18:
              if (!this.consumingTransport) {
                E.next = 35;
                break;
              }
              return E.next = 21, this.measurements.getProcessedStats(this.consumingTransport, !0, !1);
            case 21:
              if (h = E.sent, !(!h || !h.consumerReport)) {
                E.next = 35;
                break;
              }
              return this.logger.debug("callStats::sendPingStatsEvent::staleConsumingTransport", { disclaimer: "Stale consumer? Regenerating Stream Maps!" }), E.next = 26, this.measurements.getConsumersReport(sr(this.consumers.values()));
            case 26:
              if (w = E.sent, !(h && w)) {
                E.next = 31;
                break;
              }
              h.consumerReport = w, E.next = 35;
              break;
            case 31:
              return E.next = 33, this.measurements.getProcessedStats(this.consumingTransport, !0, !1);
            case 33:
              h = E.sent, (!h || !h.consumerReport) && this.logger.debug("callStats::sendPingStatsEvent::noConsumingTransportReport", { disclaimer: "Stream maps invalid despite regenerating!" });
            case 35:
              if (k = { producingTransportStats: p ? (e = p) === null || e === void 0 ? void 0 : e.transportReport : void 0, consumingTransportStats: h ? (a = h) === null || a === void 0 ? void 0 : a.transportReport : void 0, producerStats: [].concat(((n = p) === null || n === void 0 ? void 0 : n.producerReport) || []).concat(((i = h) === null || i === void 0 ? void 0 : i.producerReport) || []), consumerStats: [].concat(((s = h) === null || s === void 0 ? void 0 : s.consumerReport) || []).concat(((u = p) === null || u === void 0 ? void 0 : u.consumerReport) || []) }, !(l && k.producerStats.length === 0 && k.consumerStats.length === 0)) {
                E.next = 40;
                break;
              }
              return E.next = 39, this.eventHandler.flush();
            case 39:
              return E.abrupt("return");
            case 40:
              this.eventHandler.callEvent({ event: ne.PING_STAT, metaData: k, timestamp: new Date() });
            case 41:
            case "end":
              return E.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendIVSPlayerRebufferEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_REBUFFERING, timestamp: new Date() });
  } }, { key: "sendIVSPlayerAudioBlockEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_AUDIO_BLOCKED, timestamp: new Date() });
  } }, { key: "sendIVSPlayerPlaybackBlockedEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_PLAYBACK_BLOCKED, timestamp: new Date() });
  } }, { key: "sendIVSPlayerNetworkUnavailableEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_NETWORK_UNAVAILABLE, timestamp: new Date() });
  } }, { key: "sendIVSPlayerInitializedEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_INITIALIZED, timestamp: new Date() });
  } }, { key: "sendIVSPlayerWorkerErrorEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_WORKER_ERROR, timestamp: new Date() });
  } }, { key: "sendIVSPlayerErrorEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_ERROR, timestamp: new Date(), metaData: r });
  } }, { key: "sendIVSPlayerRecoverableErrorEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_RECOVERABLE_ERROR, timestamp: new Date(), metaData: r });
  } }, { key: "sendIVSPlayerAnalyticsEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_ANALYTICS_EVENT, timestamp: new Date(), metaData: r });
  } }, { key: "sendIVSPlayerPlaybackRateChangedEvent", value: function(r) {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_PLAYBACK_RATE_CHANGED, timestamp: new Date(), metaData: { updatedPlaybackRate: r } });
  } }, { key: "sendIVSPlayerQualityChanged", value: function(r) {
    this.eventHandler.callEvent({ event: ne.IVS_PLAYER_QUALITY_CHANGED, timestamp: new Date(), metaData: r });
  } }, { key: "sendPlayerLiveLatency", value: function(r) {
    this.eventHandler.callEvent({ event: ne.LIVESTREAM_LATENCY, timestamp: new Date(), metaData: { latency: r } });
  } }, { key: "sendDisconnectEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.DISCONNECT, timestamp: new Date() });
  } }, { key: "sendReconnectEvent", value: function() {
    this.eventHandler.callEvent({ event: ne.RECONNECT_ATTEMPT, timestamp: new Date() });
  } }]), o;
}();
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "registerIceServers", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "registerConsumer", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "registerProducer", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendConsumerSharedMediaStateEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "registerProducingTransport", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "registerConsumingTransport", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "deRegisterConsumer", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "deRegisterProducer", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "disconnectConsumingTransport", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "disconnectProducingTransport", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendPreCallTestBeginEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendScreenShareToggleEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendScreenShareRequestedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendActiveSpeakerEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "devices", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "selectedDevice", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "mediaPermission", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "mediaPlaybackFailed", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "mediaTrackMuted", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "tabChanged", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "browserBackgrounded", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "browserForegrounded", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "legacySwitch", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "getPreCallTestResults", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendCallJoinBeginEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendNetworkQualityTestBeginEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendWebSocketConnectedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendTransportConnectedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendAudioToggleEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendVideoToggleEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendParticipantRoleToggleEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "startPingStats", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "stopPingStats", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendPingStatsEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerRebufferEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerAudioBlockEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerPlaybackBlockedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerNetworkUnavailableEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerInitializedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerWorkerErrorEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerErrorEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerRecoverableErrorEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerAnalyticsEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerPlaybackRateChangedEvent", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendIVSPlayerQualityChanged", null);
Ie([Me(TypeError, function(o, c) {
  return De.error(c, o);
})], _e.prototype, "sendPlayerLiveLatency", null);
_e = Ie([Qf(TypeError, function(o, c) {
  return De.error(c, o);
})], _e);
var Yf = _e, Xf = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    I(this, r);
    for (var e = arguments.length, a = new Array(e), n = 0; n < e; n++)
      a[n] = arguments[n];
    return t = c.call.apply(c, [this].concat(a)), R(b(t), "stats", void 0), R(b(t), "roomURL", void 0), R(b(t), "peerId", void 0), R(b(t), "backend", void 0), R(b(t), "iceServers", void 0), R(b(t), "initialized", !1), R(b(t), "stalled", !1), R(b(t), "ipInformation", void 0), R(b(t), "logger", void 0), t;
  }
  return D(r, [{ key: "initialize", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              return i = n.peerId, s = n.engineName, u = n.env, l = u === void 0 ? Ti.PROD : u, p = n.iceServers, h = n.apiBase, v = h === void 0 ? "https://api.cluster.dyte.in" : h, m = n.flags, g = n.logger, w = g === void 0 ? console : g, k = n.apiHostnames, S.prev = 1, this.peerId = i, this.logger = w, S.next = 6, sl.getIPDetails({ peerId: i, apiHostnames: k });
            case 6:
              this.ipInformation = S.sent, this.backend = new Yf(v, s, l, m, w, i, k), this.iceServers = p, (T = this.backend) === null || T === void 0 || T.registerIceServers(this.iceServers), this.initialized = !0, (_ = this.backend) === null || _ === void 0 || (_ = _.eventHandler) === null || _ === void 0 || _.emit("initialized", this.ipInformation), this.emit("initialized", this.ipInformation), this.startPreCallTest(), S.next = 20;
              break;
            case 16:
              S.prev = 16, S.t0 = S.catch(1), this.logger.error("callStats::CallStatsIntegration: ", { error: { reason: S.t0.reason } }), this.stallCallStats();
            case 20:
            case "end":
              return S.stop();
          }
      }, a, this, [[1, 16]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRoomName", value: function(e) {
    this.roomURL = e;
  } }, { key: "configureSendTransport", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.registerProducingTransport(e);
  } }, { key: "configureRecvTransport", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.registerConsumingTransport(e);
  } }, { key: "candidateRegionalNetworkQualityTest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              try {
                (i = this.backend) === null || i === void 0 || i.sendNetworkQualityTestBeginEvent(n);
              } catch (l) {
                this.logger.error("callStats::sendNetworkQualityTestBeginEvent", { error: { reason: l.reason } });
              }
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "roomJoined", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              (i = this.backend) === null || i === void 0 || i.sendCallJoinBeginEvent(n), this.backend, (s = this.backend) === null || s === void 0 || s.startPingStats();
            case 3:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "audioOff", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.sendAudioToggleEvent(!1);
  } }, { key: "audioOn", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.sendAudioToggleEvent(!0);
  } }, { key: "videoOff", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.sendVideoToggleEvent(!1);
  } }, { key: "videoOn", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.sendVideoToggleEvent(!0);
  } }, { key: "callEnded", value: function() {
    var e, a;
    (e = this.backend) === null || e === void 0 || e.stopPingStats(), (a = this.backend) === null || a === void 0 || a.sendDisconnectEvent();
  } }, { key: "screenShareStart", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.sendScreenShareToggleEvent(!0, e);
  } }, { key: "consumerSharedMediaState", value: function(e, a) {
    var n;
    (n = this.backend) === null || n === void 0 || n.sendConsumerSharedMediaStateEvent(e, a);
  } }, { key: "screenShareStop", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.sendScreenShareToggleEvent(!1, e);
  } }, { key: "screenShareRequested", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.sendScreenShareRequestedEvent();
  } }, { key: "activeSpeaker", value: function(e) {
    var a;
    e === this.peerId && ((a = this.backend) === null || a === void 0 || a.sendActiveSpeakerEvent(e));
  } }, { key: "devices", value: function(e, a) {
    var n;
    (n = this.backend) === null || n === void 0 || n.devices(e, a);
  } }, { key: "selectedDevice", value: function(e, a) {
    var n;
    (n = this.backend) === null || n === void 0 || n.selectedDevice(e, a);
  } }, { key: "mediaPermission", value: function(e, a) {
    var n;
    (n = this.backend) === null || n === void 0 || n.mediaPermission(e, a);
  } }, { key: "mediaPlaybackFailed", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.mediaPlaybackFailed(e);
  } }, { key: "mediaTrackMuted", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.mediaTrackMuted(e);
  } }, { key: "tabChanged", value: function() {
    var e, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    (e = this.backend) === null || e === void 0 || e.tabChanged(a);
  } }, { key: "browserBackgrounded", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.browserBackgrounded();
  } }, { key: "browserForegrounded", value: function() {
    var e;
    (e = this.backend) === null || e === void 0 || e.browserForegrounded();
  } }, { key: "legacySwitch", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.legacySwitch(e);
  } }, { key: "startPreCallTest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              (n = this.backend) === null || n === void 0 || n.sendPreCallTestBeginEvent();
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onPreCallTestResults", value: function(e) {
    var a;
    return (a = this.backend) === null || a === void 0 || a.eventHandler.once("precall_end", e), e;
  } }, { key: "onReceivingConsumerAudioStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("consumer_audio_status", e);
  } }, { key: "onReceivingConsumerVideoStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("consumer_video_status", e);
  } }, { key: "onReceivingProducerAudioStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("producer_audio_status", e);
  } }, { key: "onReceivingProducerVideoStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("producer_video_status", e);
  } }, { key: "onReceivingProducingTransportStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("producing_transport_status", e);
  } }, { key: "onReceivingConsumingTransportStatus", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.eventHandler.on("consuming_transport_status", e);
  } }, { key: "onSafeInitialization", value: function(e) {
    if (this.initialized)
      e(this.ipInformation, !1);
    else if (!this.stalled) {
      var a = function(i) {
        var s = !0;
        e(i, s);
      };
      return this.once("initialized", a), a;
    }
    return function() {
    };
  } }, { key: "removeInitializationListener", value: function(e) {
    this.removeListener("initialized", e);
  } }, { key: "stallCallStats", value: function() {
    this.stalled = !0, this.removeAllListeners("initialized");
  } }, { key: "ivsPlayerEvent", value: function(e, a) {
    var n, i, s, u, l, p, h, v, m, g, w;
    switch (e) {
      case "PlayerRebuffering":
        (n = this.backend) === null || n === void 0 || n.sendIVSPlayerRebufferEvent();
        break;
      case "PlayerAudioBlocked":
        (i = this.backend) === null || i === void 0 || i.sendIVSPlayerAudioBlockEvent();
        break;
      case "PlayerPlaybackBlocked":
        (s = this.backend) === null || s === void 0 || s.sendIVSPlayerPlaybackBlockedEvent();
        break;
      case "PlayerNetworkUnavailable":
        (u = this.backend) === null || u === void 0 || u.sendIVSPlayerNetworkUnavailableEvent();
        break;
      case "PlayerInitialized":
        (l = this.backend) === null || l === void 0 || l.sendIVSPlayerInitializedEvent();
        break;
      case "PlayerWorkerError":
        (p = this.backend) === null || p === void 0 || p.sendIVSPlayerWorkerErrorEvent();
        break;
      case "PlayerError":
        (h = this.backend) === null || h === void 0 || h.sendIVSPlayerErrorEvent(a);
        break;
      case "PlayerRecoverableError":
        (v = this.backend) === null || v === void 0 || v.sendIVSPlayerRecoverableErrorEvent(a);
        break;
      case "PlayerAnalyticsEvent":
        (m = this.backend) === null || m === void 0 || m.sendIVSPlayerAnalyticsEvent(a);
        break;
      case "PlayerPlaybackRateChanged":
        (g = this.backend) === null || g === void 0 || g.sendIVSPlayerPlaybackRateChangedEvent(a);
        break;
      case "PlayerQualityChanged":
        (w = this.backend) === null || w === void 0 || w.sendIVSPlayerQualityChanged(a);
        break;
    }
  } }, { key: "livestreamLatency", value: function(e) {
    var a;
    (a = this.backend) === null || a === void 0 || a.sendPlayerLiveLatency(e);
  } }]), r;
}(at), se = new Xf();
se.setMaxListeners(30);
function Zf(o) {
  var c = this.length, r = o >= 0 ? o : c + o;
  return r < 0 || r >= c ? void 0 : this[r];
}
Array.prototype.at || Object.assign(Array.prototype, { at: Zf });
function xf(o) {
  var c = this.length, r = o >= 0 ? o : c + o;
  return r < 0 || r >= c ? void 0 : this[r];
}
String.prototype.at || Object.assign(String.prototype, { at: xf });
var Ns;
(function(o) {
  o.skip = "SKIP", o.onAccept = "ON_ACCEPT", o.skipOnPrivilegedUserEntry = "SKIP_ON_PRIVILEGED_USER_ENTRY", o.skipOnAccept = "SKIP_ON_ACCEPT";
})(Ns || (Ns = {}));
var Nn;
(function(o) {
  o.none = "NONE", o.recorder = "RECORDER", o.livestreamer = "LIVESTREAMER";
})(Nn || (Nn = {}));
var Bo;
(function(o) {
  o.groupCall = "GROUP_CALL", o.webinar = "WEBINAR", o.audioRoom = "AUDIO_ROOM", o.livestream = "LIVESTREAM", o.chat = "CHAT";
})(Bo || (Bo = {}));
var ld;
(function(o) {
  o.SKIP = "skip", o.SKIP_ON_PRIVILEGED_USER_ENTRY = "skipOnPrivilegedUserEntry", o.ON_ACCEPT = "skipOnAccept", o.SKIP_ON_ACCEPT = "skipOnAccept";
})(ld || (ld = {}));
Bo.groupCall, Ns.skipOnAccept, Nn.none;
Bo.groupCall, Nn.none, Ns.skipOnAccept;
var Th = "hXgU8Wc8pwuGNq9ms5q9Hh";
if (typeof process != "undefined") {
  var ti;
  (ti = process) !== null && ti !== void 0 && (ti = ti.env) !== null && ti !== void 0 && ti.FLAGSMITH_ENVIRONMENT_KEY && (Th = process.env.FLAGSMITH_ENVIRONMENT_KEY);
}
function em() {
  var o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], c = {};
  return o.forEach(function(r) {
    c[r.feature.name] = { enabled: r.enabled, value: r.feature_state_value };
  }), c;
}
var rm = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Th;
    I(this, o), R(this, "flags", {}), R(this, "environmentKey", null), this.environmentKey = c, this.identify = this.identify.bind(this), this.getValue = this.getValue.bind(this), this.hasFeature = this.hasFeature.bind(this), this.getAllFlags = this.getAllFlags.bind(this);
  }
  return D(o, [{ key: "identify", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p, h, v = arguments;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              return a = v.length > 1 && v[1] !== void 0 ? v[1] : {}, n = v.length > 2 && v[2] !== void 0 ? v[2] : !1, i = v.length > 3 && v[3] !== void 0 ? v[3] : 5e3, s = v.length > 4 && v[4] !== void 0 ? v[4] : "edge.api.flagsmith.com", u = JSON.parse(JSON.stringify(a)), l = Object.entries(u).map(function(w) {
                return { trait_key: w[0], trait_value: w[1] };
              }), g.prev = 6, p = "_" + (Math.random() + 1).toString(36).substring(2), g.next = 10, Ho.post("https://".concat(s, "/api/v1/identities/"), { identifier: e + (n ? p : ""), traits: l }, { headers: { "Content-Type": "application/json", "X-Environment-Key": this.environmentKey }, timeout: i });
            case 10:
              h = g.sent, this.flags = em(h.data.flags || []), g.next = 16;
              break;
            case 14:
              g.prev = 14, g.t0 = g.catch(6);
            case 16:
              return g.abrupt("return", this.flags);
            case 17:
            case "end":
              return g.stop();
          }
      }, t, this, [[6, 14]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getValue", value: function(r) {
    return this.flags && this.flags[r] && this.flags[r].value;
  } }, { key: "hasFeature", value: function(r) {
    return this.flags && this.flags[r] && this.flags[r].enabled;
  } }, { key: "getAllFlags", value: function() {
    return this.flags;
  } }]), o;
}(), ue = new rm(), bh = [-2, -1, 0, 1, 2], tm = [0, 1, 2, 3, 4];
function am(o) {
  o = o.trim();
  var c = "0", r = "0", t = "0";
  return o.length == 4 ? (c = "0x" + o[1] + o[1], r = "0x" + o[2] + o[2], t = "0x" + o[3] + o[3]) : o.length > 6 && (c = "0x" + o[1] + o[2], r = "0x" + o[3] + o[4], t = "0x" + o[5] + o[6]), [+c, +r, +t];
}
var nm = function(c, r, t) {
  var e, a, n;
  if (r == 0)
    e = a = n = t;
  else {
    var i = function(p, h, v) {
      return v < 0 && (v += 1), v > 1 && (v -= 1), v < 0.16666666666666666 ? p + (h - p) * 6 * v : v < 0.5 ? h : v < 0.6666666666666666 ? p + (h - p) * (0.6666666666666666 - v) * 6 : p;
    }, s = t < 0.5 ? t * (1 + r) : t + r - t * r, u = 2 * t - s;
    e = i(u, s, c + 1 / 3), a = i(u, s, c), n = i(u, s, c - 1 / 3);
  }
  return [Math.round(e * 255), Math.round(a * 255), Math.round(n * 255)];
}, im = function(c, r, t) {
  c /= 255, r /= 255, t /= 255;
  var e = Math.max(c, r, t), a = Math.min(c, r, t), n, i, s = (e + a) / 2;
  if (e == a)
    n = i = 0;
  else {
    var u = e - a;
    switch (i = s > 0.5 ? u / (2 - e - a) : u / (e + a), e) {
      case c:
        n = (r - t) / u + (r < t ? 6 : 0);
        break;
      case r:
        n = (t - c) / u + 2;
        break;
      case t:
        n = (c - r) / u + 4;
        break;
    }
    n /= 6;
  }
  return [n, i, s];
}, sm = function(c, r, t) {
  var e = function(n) {
    return n.toString(16).padStart(2, "0");
  };
  return "#".concat(e(c)).concat(e(r)).concat(e(t));
}, Sh = function(c) {
  var r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : bh, t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0.4, e = [], a = am(c), n = ar(a, 3), i = n[0], s = n[1], u = n[2], l = im(i, s, u), p = ar(l, 3), h = p[0], v = p[1], m = p[2], g = Math.round(m * 100);
  g > 70 ? t = 0.8 : g > 60 ? t = 0.9 : g < 10 ? t = 0.075 : g < 42 && (t = 0.3);
  var w = r.findIndex(function(x) {
    return x === 0;
  });
  if (w === -1)
    throw new Error("Invalid reducer provided, it must contain atleast one zero");
  var k = 5 - w, T = w + 1, _ = (100 - g) / k, E = g / T, S = ae(r), C;
  try {
    for (S.s(); !(C = S.n()).done; ) {
      var L = C.value, G = void 0;
      L < 0 ? G = g + L * E * t : L > 0 ? G = g + L * _ * t : G = g;
      var j = nm(h, v, G / 100), ee = ar(j, 3), Y = ee[0], Z = ee[1], F = ee[2];
      e.push(sm(Y, Z, F));
    }
  } catch (x) {
    S.e(x);
  } finally {
    S.f();
  }
  return e;
}, dd = { dark: { background: { 1e3: "#252525", 900: "#2F2F2F", 800: "#323232", 700: "#3E3E3E", 600: "#4A4A4A" }, text: "#F5F5F5", "video-bg": "#1C1C1C" }, light: { background: { 1e3: "#FFFFFF", 900: "#F5F5F5", 800: "#EBEBEB", 700: "#E0E0E0", 600: "#D6D6D6" }, text: "#111111", "text-on-brand": "#ffffff", "video-bg": "#DADADA" } }, om = function(c) {
  var r = Sh(c, bh), t = ar(r, 5), e = t[0], a = t[1], n = t[2], i = t[3], s = t[4];
  return { 300: e, 400: a, 500: n, 600: i, 700: s };
}, um = function(c) {
  if (c === "#FFFFFF")
    return dd.light.background;
  if (c === "#000000")
    return dd.dark.background;
  var r = Sh(c, tm), t = ar(r, 5), e = t[0], a = t[1], n = t[2], i = t[3], s = t[4];
  return { 1e3: e, 900: a, 800: n, 700: i, 600: s };
};
function cm() {
  this.__data__ = [], this.size = 0;
}
function ol(o, c) {
  return o === c || o !== o && c !== c;
}
function tu(o, c) {
  for (var r = o.length; r--; )
    if (ol(o[r][0], c))
      return r;
  return -1;
}
var lm = Array.prototype, dm = lm.splice;
function pm(o) {
  var c = this.__data__, r = tu(c, o);
  if (r < 0)
    return !1;
  var t = c.length - 1;
  return r == t ? c.pop() : dm.call(c, r, 1), --this.size, !0;
}
function hm(o) {
  var c = this.__data__, r = tu(c, o);
  return r < 0 ? void 0 : c[r][1];
}
function vm(o) {
  return tu(this.__data__, o) > -1;
}
function fm(o, c) {
  var r = this.__data__, t = tu(r, o);
  return t < 0 ? (++this.size, r.push([o, c])) : r[t][1] = c, this;
}
function Na(o) {
  var c = -1, r = o == null ? 0 : o.length;
  for (this.clear(); ++c < r; ) {
    var t = o[c];
    this.set(t[0], t[1]);
  }
}
Na.prototype.clear = cm;
Na.prototype.delete = pm;
Na.prototype.get = hm;
Na.prototype.has = vm;
Na.prototype.set = fm;
function mm() {
  this.__data__ = new Na(), this.size = 0;
}
function gm(o) {
  var c = this.__data__, r = c.delete(o);
  return this.size = c.size, r;
}
function ym(o) {
  return this.__data__.get(o);
}
function km(o) {
  return this.__data__.has(o);
}
var wm = (typeof global == "undefined" ? "undefined" : ce(global)) == "object" && global && global.Object === Object && global, Eh = wm, Tm = (typeof self == "undefined" ? "undefined" : ce(self)) == "object" && self && self.Object === Object && self, bm = Eh || Tm || Function("return this")(), Wt = bm, Sm = Wt.Symbol, ua = Sm, _h = Object.prototype, Em = _h.hasOwnProperty, _m = _h.toString, ps = ua ? ua.toStringTag : void 0;
function Rm(o) {
  var c = Em.call(o, ps), r = o[ps];
  try {
    o[ps] = void 0;
    var t = !0;
  } catch (a) {
  }
  var e = _m.call(o);
  return t && (c ? o[ps] = r : delete o[ps]), e;
}
var Pm = Object.prototype, Cm = Pm.toString;
function Im(o) {
  return Cm.call(o);
}
var Dm = "[object Null]", Am = "[object Undefined]", pd = ua ? ua.toStringTag : void 0;
function Ui(o) {
  return o == null ? o === void 0 ? Am : Dm : pd && pd in Object(o) ? Rm(o) : Im(o);
}
function en(o) {
  var c = ce(o);
  return o != null && (c == "object" || c == "function");
}
var Mm = "[object AsyncFunction]", Om = "[object Function]", Nm = "[object GeneratorFunction]", $m = "[object Proxy]";
function Rh(o) {
  if (!en(o))
    return !1;
  var c = Ui(o);
  return c == Om || c == Nm || c == Mm || c == $m;
}
var Lm = Wt["__core-js_shared__"], Pu = Lm, hd = function() {
  var o = /[^.]+$/.exec(Pu && Pu.keys && Pu.keys.IE_PROTO || "");
  return o ? "Symbol(src)_1." + o : "";
}();
function Um(o) {
  return !!hd && hd in o;
}
var Fm = Function.prototype, Vm = Fm.toString;
function Hn(o) {
  if (o != null) {
    try {
      return Vm.call(o);
    } catch (c) {
    }
    try {
      return o + "";
    } catch (c) {
    }
  }
  return "";
}
var Hm = /[\\^$.*+?()[\]{}|]/g, jm = /^\[object .+?Constructor\]$/, Gm = Function.prototype, Bm = Object.prototype, qm = Gm.toString, Wm = Bm.hasOwnProperty, Jm = RegExp("^" + qm.call(Wm).replace(Hm, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
function Km(o) {
  if (!en(o) || Um(o))
    return !1;
  var c = Rh(o) ? Jm : jm;
  return c.test(Hn(o));
}
function zm(o, c) {
  return o == null ? void 0 : o[c];
}
function jn(o, c) {
  var r = zm(o, c);
  return Km(r) ? r : void 0;
}
var Qm = jn(Wt, "Map"), $s = Qm, Ym = jn(Object, "create"), Ls = Ym;
function Xm() {
  this.__data__ = Ls ? Ls(null) : {}, this.size = 0;
}
function Zm(o) {
  var c = this.has(o) && delete this.__data__[o];
  return this.size -= c ? 1 : 0, c;
}
var xm = "__lodash_hash_undefined__", eg = Object.prototype, rg = eg.hasOwnProperty;
function tg(o) {
  var c = this.__data__;
  if (Ls) {
    var r = c[o];
    return r === xm ? void 0 : r;
  }
  return rg.call(c, o) ? c[o] : void 0;
}
var ag = Object.prototype, ng = ag.hasOwnProperty;
function ig(o) {
  var c = this.__data__;
  return Ls ? c[o] !== void 0 : ng.call(c, o);
}
var sg = "__lodash_hash_undefined__";
function og(o, c) {
  var r = this.__data__;
  return this.size += this.has(o) ? 0 : 1, r[o] = Ls && c === void 0 ? sg : c, this;
}
function $n(o) {
  var c = -1, r = o == null ? 0 : o.length;
  for (this.clear(); ++c < r; ) {
    var t = o[c];
    this.set(t[0], t[1]);
  }
}
$n.prototype.clear = Xm;
$n.prototype.delete = Zm;
$n.prototype.get = tg;
$n.prototype.has = ig;
$n.prototype.set = og;
function ug() {
  this.size = 0, this.__data__ = { hash: new $n(), map: new ($s || Na)(), string: new $n() };
}
function cg(o) {
  var c = ce(o);
  return c == "string" || c == "number" || c == "symbol" || c == "boolean" ? o !== "__proto__" : o === null;
}
function au(o, c) {
  var r = o.__data__;
  return cg(c) ? r[typeof c == "string" ? "string" : "hash"] : r.map;
}
function lg(o) {
  var c = au(this, o).delete(o);
  return this.size -= c ? 1 : 0, c;
}
function dg(o) {
  return au(this, o).get(o);
}
function pg(o) {
  return au(this, o).has(o);
}
function hg(o, c) {
  var r = au(this, o), t = r.size;
  return r.set(o, c), this.size += r.size == t ? 0 : 1, this;
}
function Gn(o) {
  var c = -1, r = o == null ? 0 : o.length;
  for (this.clear(); ++c < r; ) {
    var t = o[c];
    this.set(t[0], t[1]);
  }
}
Gn.prototype.clear = ug;
Gn.prototype.delete = lg;
Gn.prototype.get = dg;
Gn.prototype.has = pg;
Gn.prototype.set = hg;
var vg = 200;
function fg(o, c) {
  var r = this.__data__;
  if (r instanceof Na) {
    var t = r.__data__;
    if (!$s || t.length < vg - 1)
      return t.push([o, c]), this.size = ++r.size, this;
    r = this.__data__ = new Gn(t);
  }
  return r.set(o, c), this.size = r.size, this;
}
function Aa(o) {
  var c = this.__data__ = new Na(o);
  this.size = c.size;
}
Aa.prototype.clear = mm;
Aa.prototype.delete = gm;
Aa.prototype.get = ym;
Aa.prototype.has = km;
Aa.prototype.set = fg;
function mg(o, c) {
  for (var r = -1, t = o == null ? 0 : o.length; ++r < t && c(o[r], r, o) !== !1; )
    ;
  return o;
}
var gg = function() {
  try {
    var o = jn(Object, "defineProperty");
    return o({}, "", {}), o;
  } catch (c) {
  }
}(), qo = gg;
function Ph(o, c, r) {
  c == "__proto__" && qo ? qo(o, c, { configurable: !0, enumerable: !0, value: r, writable: !0 }) : o[c] = r;
}
var yg = Object.prototype, kg = yg.hasOwnProperty;
function Ch(o, c, r) {
  var t = o[c];
  (!(kg.call(o, c) && ol(t, r)) || r === void 0 && !(c in o)) && Ph(o, c, r);
}
function nu(o, c, r, t) {
  var e = !r;
  r || (r = {});
  for (var a = -1, n = c.length; ++a < n; ) {
    var i = c[a], s = t ? t(r[i], o[i], i, r, o) : void 0;
    s === void 0 && (s = o[i]), e ? Ph(r, i, s) : Ch(r, i, s);
  }
  return r;
}
function wg(o, c) {
  for (var r = -1, t = Array(o); ++r < o; )
    t[r] = c(r);
  return t;
}
function Ma(o) {
  return o != null && ce(o) == "object";
}
var Tg = "[object Arguments]";
function vd(o) {
  return Ma(o) && Ui(o) == Tg;
}
var Ih = Object.prototype, bg = Ih.hasOwnProperty, Sg = Ih.propertyIsEnumerable, Eg = vd(function() {
  return arguments;
}()) ? vd : function(o) {
  return Ma(o) && bg.call(o, "callee") && !Sg.call(o, "callee");
}, ul = Eg, _g = Array.isArray, Ln = _g;
function Rg() {
  return !1;
}
var Dh = (typeof exports == "undefined" ? "undefined" : ce(exports)) == "object" && exports && !exports.nodeType && exports, fd = Dh && (typeof module == "undefined" ? "undefined" : ce(module)) == "object" && module && !module.nodeType && module, Pg = fd && fd.exports === Dh, md = Pg ? Wt.Buffer : void 0, Cg = md ? md.isBuffer : void 0, Ig = Cg || Rg, Us = Ig, Dg = 9007199254740991, Ag = /^(?:0|[1-9]\d*)$/;
function Mg(o, c) {
  var r = ce(o);
  return c = c == null ? Dg : c, !!c && (r == "number" || r != "symbol" && Ag.test(o)) && o > -1 && o % 1 == 0 && o < c;
}
var Og = 9007199254740991;
function Ah(o) {
  return typeof o == "number" && o > -1 && o % 1 == 0 && o <= Og;
}
var Ng = "[object Arguments]", $g = "[object Array]", Lg = "[object Boolean]", Ug = "[object Date]", Fg = "[object Error]", Vg = "[object Function]", Hg = "[object Map]", jg = "[object Number]", Gg = "[object Object]", Bg = "[object RegExp]", qg = "[object Set]", Wg = "[object String]", Jg = "[object WeakMap]", Kg = "[object ArrayBuffer]", zg = "[object DataView]", Qg = "[object Float32Array]", Yg = "[object Float64Array]", Xg = "[object Int8Array]", Zg = "[object Int16Array]", xg = "[object Int32Array]", ey = "[object Uint8Array]", ry = "[object Uint8ClampedArray]", ty = "[object Uint16Array]", ay = "[object Uint32Array]", gr = {};
gr[Qg] = gr[Yg] = gr[Xg] = gr[Zg] = gr[xg] = gr[ey] = gr[ry] = gr[ty] = gr[ay] = !0;
gr[Ng] = gr[$g] = gr[Kg] = gr[Lg] = gr[zg] = gr[Ug] = gr[Fg] = gr[Vg] = gr[Hg] = gr[jg] = gr[Gg] = gr[Bg] = gr[qg] = gr[Wg] = gr[Jg] = !1;
function ny(o) {
  return Ma(o) && Ah(o.length) && !!gr[Ui(o)];
}
function iu(o) {
  return function(c) {
    return o(c);
  };
}
var Mh = (typeof exports == "undefined" ? "undefined" : ce(exports)) == "object" && exports && !exports.nodeType && exports, Ds = Mh && (typeof module == "undefined" ? "undefined" : ce(module)) == "object" && module && !module.nodeType && module, iy = Ds && Ds.exports === Mh, Cu = iy && Eh.process, sy = function() {
  try {
    var o = Ds && Ds.require && Ds.require("util").types;
    return o || Cu && Cu.binding && Cu.binding("util");
  } catch (c) {
  }
}(), Mi = sy, gd = Mi && Mi.isTypedArray, oy = gd ? iu(gd) : ny, cl = oy, uy = Object.prototype, cy = uy.hasOwnProperty;
function Oh(o, c) {
  var r = Ln(o), t = !r && ul(o), e = !r && !t && Us(o), a = !r && !t && !e && cl(o), n = r || t || e || a, i = n ? wg(o.length, String) : [], s = i.length;
  for (var u in o)
    (c || cy.call(o, u)) && !(n && // Safari 9 has enumerable `arguments.length` in strict mode.
    (u == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    e && (u == "offset" || u == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    a && (u == "buffer" || u == "byteLength" || u == "byteOffset") || // Skip index properties.
    Mg(u, s))) && i.push(u);
  return i;
}
var ly = Object.prototype;
function su(o) {
  var c = o && o.constructor, r = typeof c == "function" && c.prototype || ly;
  return o === r;
}
function Nh(o, c) {
  return function(r) {
    return o(c(r));
  };
}
var dy = Nh(Object.keys, Object), py = dy, hy = Object.prototype, vy = hy.hasOwnProperty;
function $h(o) {
  if (!su(o))
    return py(o);
  var c = [];
  for (var r in Object(o))
    vy.call(o, r) && r != "constructor" && c.push(r);
  return c;
}
function ou(o) {
  return o != null && Ah(o.length) && !Rh(o);
}
function ll(o) {
  return ou(o) ? Oh(o) : $h(o);
}
function fy(o, c) {
  return o && nu(c, ll(c), o);
}
function my(o) {
  var c = [];
  if (o != null)
    for (var r in Object(o))
      c.push(r);
  return c;
}
var gy = Object.prototype, yy = gy.hasOwnProperty;
function ky(o) {
  if (!en(o))
    return my(o);
  var c = su(o), r = [];
  for (var t in o)
    t == "constructor" && (c || !yy.call(o, t)) || r.push(t);
  return r;
}
function dl(o) {
  return ou(o) ? Oh(o, !0) : ky(o);
}
function wy(o, c) {
  return o && nu(c, dl(c), o);
}
var Lh = (typeof exports == "undefined" ? "undefined" : ce(exports)) == "object" && exports && !exports.nodeType && exports, yd = Lh && (typeof module == "undefined" ? "undefined" : ce(module)) == "object" && module && !module.nodeType && module, Ty = yd && yd.exports === Lh, kd = Ty ? Wt.Buffer : void 0, wd = kd ? kd.allocUnsafe : void 0;
function by(o, c) {
  if (c)
    return o.slice();
  var r = o.length, t = wd ? wd(r) : new o.constructor(r);
  return o.copy(t), t;
}
function Sy(o, c) {
  var r = -1, t = o.length;
  for (c || (c = Array(t)); ++r < t; )
    c[r] = o[r];
  return c;
}
function Uh(o, c) {
  for (var r = -1, t = o == null ? 0 : o.length, e = 0, a = []; ++r < t; ) {
    var n = o[r];
    c(n, r, o) && (a[e++] = n);
  }
  return a;
}
function Fh() {
  return [];
}
var Ey = Object.prototype, _y = Ey.propertyIsEnumerable, Td = Object.getOwnPropertySymbols, Ry = Td ? function(o) {
  return o == null ? [] : (o = Object(o), Uh(Td(o), function(c) {
    return _y.call(o, c);
  }));
} : Fh, pl = Ry;
function Py(o, c) {
  return nu(o, pl(o), c);
}
function hl(o, c) {
  for (var r = -1, t = c.length, e = o.length; ++r < t; )
    o[e + r] = c[r];
  return o;
}
var Cy = Nh(Object.getPrototypeOf, Object), Vh = Cy, Iy = Object.getOwnPropertySymbols, Dy = Iy ? function(o) {
  for (var c = []; o; )
    hl(c, pl(o)), o = Vh(o);
  return c;
} : Fh, Hh = Dy;
function Ay(o, c) {
  return nu(o, Hh(o), c);
}
function jh(o, c, r) {
  var t = c(o);
  return Ln(o) ? t : hl(t, r(o));
}
function kc(o) {
  return jh(o, ll, pl);
}
function My(o) {
  return jh(o, dl, Hh);
}
var Oy = jn(Wt, "DataView"), wc = Oy, Ny = jn(Wt, "Promise"), Tc = Ny, $y = jn(Wt, "Set"), Pi = $y, K = jn(Wt, "WeakMap"), bc = K, bd = "[object Map]", Ly = "[object Object]", Sd = "[object Promise]", Ed = "[object Set]", _d = "[object WeakMap]", Rd = "[object DataView]", Uy = Hn(wc), Fy = Hn($s), Vy = Hn(Tc), Hy = Hn(Pi), jy = Hn(bc), Sn = Ui;
(wc && Sn(new wc(new ArrayBuffer(1))) != Rd || $s && Sn(new $s()) != bd || Tc && Sn(Tc.resolve()) != Sd || Pi && Sn(new Pi()) != Ed || bc && Sn(new bc()) != _d) && (Sn = function(c) {
  var r = Ui(c), t = r == Ly ? c.constructor : void 0, e = t ? Hn(t) : "";
  if (e)
    switch (e) {
      case Uy:
        return Rd;
      case Fy:
        return bd;
      case Vy:
        return Sd;
      case Hy:
        return Ed;
      case jy:
        return _d;
    }
  return r;
});
var Oi = Sn, Gy = Object.prototype, By = Gy.hasOwnProperty;
function qy(o) {
  var c = o.length, r = new o.constructor(c);
  return c && typeof o[0] == "string" && By.call(o, "index") && (r.index = o.index, r.input = o.input), r;
}
var Wy = Wt.Uint8Array, Wo = Wy;
function vl(o) {
  var c = new o.constructor(o.byteLength);
  return new Wo(c).set(new Wo(o)), c;
}
function Jy(o, c) {
  var r = c ? vl(o.buffer) : o.buffer;
  return new o.constructor(r, o.byteOffset, o.byteLength);
}
var Ky = /\w*$/;
function zy(o) {
  var c = new o.constructor(o.source, Ky.exec(o));
  return c.lastIndex = o.lastIndex, c;
}
var Pd = ua ? ua.prototype : void 0, Cd = Pd ? Pd.valueOf : void 0;
function Qy(o) {
  return Cd ? Object(Cd.call(o)) : {};
}
function Yy(o, c) {
  var r = c ? vl(o.buffer) : o.buffer;
  return new o.constructor(r, o.byteOffset, o.length);
}
var Xy = "[object Boolean]", Zy = "[object Date]", xy = "[object Map]", ek = "[object Number]", rk = "[object RegExp]", tk = "[object Set]", ak = "[object String]", nk = "[object Symbol]", ik = "[object ArrayBuffer]", sk = "[object DataView]", ok = "[object Float32Array]", uk = "[object Float64Array]", ck = "[object Int8Array]", lk = "[object Int16Array]", dk = "[object Int32Array]", pk = "[object Uint8Array]", hk = "[object Uint8ClampedArray]", vk = "[object Uint16Array]", fk = "[object Uint32Array]";
function mk(o, c, r) {
  var t = o.constructor;
  switch (c) {
    case ik:
      return vl(o);
    case Xy:
    case Zy:
      return new t(+o);
    case sk:
      return Jy(o, r);
    case ok:
    case uk:
    case ck:
    case lk:
    case dk:
    case pk:
    case hk:
    case vk:
    case fk:
      return Yy(o, r);
    case xy:
      return new t();
    case ek:
    case ak:
      return new t(o);
    case rk:
      return zy(o);
    case tk:
      return new t();
    case nk:
      return Qy(o);
  }
}
var Id = Object.create, gk = function() {
  function o() {
  }
  return function(c) {
    if (!en(c))
      return {};
    if (Id)
      return Id(c);
    o.prototype = c;
    var r = new o();
    return o.prototype = void 0, r;
  };
}(), yk = gk;
function kk(o) {
  return typeof o.constructor == "function" && !su(o) ? yk(Vh(o)) : {};
}
var wk = "[object Map]";
function Tk(o) {
  return Ma(o) && Oi(o) == wk;
}
var Dd = Mi && Mi.isMap, bk = Dd ? iu(Dd) : Tk, Sk = bk, Ek = "[object Set]";
function _k(o) {
  return Ma(o) && Oi(o) == Ek;
}
var Ad = Mi && Mi.isSet, Rk = Ad ? iu(Ad) : _k, Pk = Rk, Ck = 1, Ik = 2, Dk = 4, Gh = "[object Arguments]", Ak = "[object Array]", Mk = "[object Boolean]", Ok = "[object Date]", Nk = "[object Error]", Bh = "[object Function]", $k = "[object GeneratorFunction]", Lk = "[object Map]", Uk = "[object Number]", qh = "[object Object]", Fk = "[object RegExp]", Vk = "[object Set]", Hk = "[object String]", jk = "[object Symbol]", Gk = "[object WeakMap]", Bk = "[object ArrayBuffer]", qk = "[object DataView]", Wk = "[object Float32Array]", Jk = "[object Float64Array]", Kk = "[object Int8Array]", zk = "[object Int16Array]", Qk = "[object Int32Array]", Yk = "[object Uint8Array]", Xk = "[object Uint8ClampedArray]", Zk = "[object Uint16Array]", xk = "[object Uint32Array]", vr = {};
vr[Gh] = vr[Ak] = vr[Bk] = vr[qk] = vr[Mk] = vr[Ok] = vr[Wk] = vr[Jk] = vr[Kk] = vr[zk] = vr[Qk] = vr[Lk] = vr[Uk] = vr[qh] = vr[Fk] = vr[Vk] = vr[Hk] = vr[jk] = vr[Yk] = vr[Xk] = vr[Zk] = vr[xk] = !0;
vr[Nk] = vr[Bh] = vr[Gk] = !1;
function Oo(o, c, r, t, e, a) {
  var n, i = c & Ck, s = c & Ik, u = c & Dk;
  if (r && (n = e ? r(o, t, e, a) : r(o)), n !== void 0)
    return n;
  if (!en(o))
    return o;
  var l = Ln(o);
  if (l) {
    if (n = qy(o), !i)
      return Sy(o, n);
  } else {
    var p = Oi(o), h = p == Bh || p == $k;
    if (Us(o))
      return by(o, i);
    if (p == qh || p == Gh || h && !e) {
      if (n = s || h ? {} : kk(o), !i)
        return s ? Ay(o, wy(n, o)) : Py(o, fy(n, o));
    } else {
      if (!vr[p])
        return e ? o : {};
      n = mk(o, p, i);
    }
  }
  a || (a = new Aa());
  var v = a.get(o);
  if (v)
    return v;
  a.set(o, n), Pk(o) ? o.forEach(function(w) {
    n.add(Oo(w, c, r, w, o, a));
  }) : Sk(o) && o.forEach(function(w, k) {
    n.set(k, Oo(w, c, r, k, o, a));
  });
  var m = u ? s ? My : kc : s ? dl : ll, g = l ? void 0 : m(o);
  return mg(g || o, function(w, k) {
    g && (k = w, w = o[k]), Ch(n, k, Oo(w, c, r, k, o, a));
  }), n;
}
var ew = 1, rw = 4;
function fl(o) {
  return Oo(o, ew | rw);
}
var tw = "[object Symbol]";
function aw(o) {
  return ce(o) == "symbol" || Ma(o) && Ui(o) == tw;
}
function nw(o, c) {
  for (var r = -1, t = o == null ? 0 : o.length, e = Array(t); ++r < t; )
    e[r] = c(o[r], r, o);
  return e;
}
var Rr;
(function(o) {
  o.GroupCall = "GROUP_CALL", o.Webinar = "WEBINAR", o.AudioRoom = "AUDIO_ROOM", o.Livestream = "LIVESTREAM", o.Chat = "CHAT";
})(Rr || (Rr = {}));
var Jo;
(function(o) {
  o.Skip = "SKIP", o.OnPrivilegedUserEntry = "ON_PRIVILEGED_USER_ENTRY", o.SkipOnAccept = "SKIP_ON_ACCEPT";
})(Jo || (Jo = {}));
var ge;
(function(o) {
  o.Allowed = "ALLOWED", o.NotAllowed = "NOT_ALLOWED", o.CanRequest = "CAN_REQUEST";
})(ge || (ge = {}));
var Ko;
(function(o) {
  o.Allowed = "ALLOWED", o.NotAllowed = "NOT_ALLOWED";
})(Ko || (Ko = {}));
var Md;
(function(o) {
  o.FULL_ACCESS = "FULL_ACCESS", o.VIEW_ONLY = "VIEW_ONLY";
})(Md || (Md = {}));
var iw = { border_radius: "rounded", border_width: "thin", spacing_base: 4, theme: "dark", colors: { brand: om("#2160FD"), background: um("#141414"), danger: "#FF2D2D", text: "#EEEEEE", text_on_brand: "#EEEEEE", success: "#62A504", video_bg: "#191919", warning: "#FFCD07" } };
function Wh() {
  return fl(iw);
}
var sw = { permissions: {
  // webinar
  can_accept_production_requests: !1,
  can_edit_display_name: !0,
  accept_waiting_requests: !1,
  disable_participant_audio: !1,
  disable_participant_screensharing: !1,
  disable_participant_video: !1,
  can_spotlight: !1,
  kick_participant: !1,
  pin_participant: !1,
  can_record: !1,
  can_livestream: !1,
  waiting_room_type: Jo.Skip,
  plugins: { can_close: !0, can_start: !0, can_edit_config: !1, config: {} },
  polls: { can_create: !0, can_vote: !0, can_view: !0 },
  media: { video: { can_produce: ge.Allowed, can_consume: Ko.Allowed }, audio: { can_produce: ge.Allowed }, screenshare: { can_produce: ge.Allowed, can_consume: Ko.Allowed } },
  chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 }, channel: {
    // Make sure these are the same in default to ensure consistency in developer portal
    can_create: "ALL",
    can_delete: "ALL",
    can_update: "ALL",
    // end same
    can_read_all: !1
  }, message: {
    // Make sure these are the same in default to ensure consistency in developer portal
    can_delete: "ALL",
    can_edit: "ALL",
    // end same
    delete_cutoff_time_seconds: 0,
    edit_cutoff_time_seconds: 0
  } },
  hidden_participant: !1,
  is_recorder: !1,
  recorder_type: Nn.none,
  show_participant_list: !0,
  can_change_participant_permissions: !1,
  connected_meetings: { can_alter_connected_meetings: !1, can_switch_connected_meetings: !1, can_switch_to_parent_meeting: !1 },
  stage_enabled: !1,
  stage_access: void 0,
  accept_stage_requests: !1
}, ui: { oldTheme: { setup_screen: { is_enabled: !1 }, alone_here: { is_enabled: !1 }, waiting_room: { is_enabled: !1, enable_preview: !0 }, control_bar: { is_enabled: !0, elements: { plugins: !0, screenshare: !0, invite: !1, participants: !0, chat: !0, reactions: !1, polls: !0, fullscreen: !0, layout: !0 } }, header: { is_enabled: !0, elements: { timer: !0, title: !0, participant_count: !0, change_layout: !0 } }, pip_mode: !0, auto_tune: !0, colors: { primary: "#2160FD", secondary: "#1A1A1A", text: "#EEEEEE", background: "#1A1A1A", textPrimary: "#EEEEEE", videoBackground: "#1A1A1A" }, dimensions: { mode: "fillParent" }, grid: { multi: { maxVideoCount: 6, videoFit: "cover" }, single: { maxVideoCount: 6, videoFit: "cover" }, defaultView: "MULTI" }, controls: { pip_toggle: !1 }, plugins: [] }, design_tokens: Wh(), config_diff: {} }, config: { view_type: Rr.GroupCall, media: { video: { quality: "vga", frame_rate: 24 }, screenshare: { quality: "hd", frame_rate: 5 } }, max_video_streams: { mobile: 6, desktop: 6 }, max_screenshare_count: 1 }, version: "hybrid" };
function ow() {
  return fl(sw);
}
Nn.none, Ns.skip;
var uw = { permissions: {
  // webinar
  can_accept_production_requests: !1,
  can_edit_display_name: !0,
  accept_waiting_requests: !1,
  disable_participant_audio: !1,
  disable_participant_screensharing: !1,
  disable_participant_video: !1,
  can_spotlight: !1,
  kick_participant: !1,
  pin_participant: !1,
  can_record: !1,
  can_livestream: !1,
  waiting_room_type: Jo.Skip,
  plugins: { can_close: !0, can_start: !0, can_edit_config: !1, config: {} },
  polls: { can_create: !0, can_vote: !0, can_view: !0 },
  media: { video: { can_produce: ge.Allowed }, audio: { can_produce: ge.Allowed }, screenshare: { can_produce: ge.Allowed } },
  chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 } },
  hidden_participant: !1,
  is_recorder: !1,
  recorder_type: Nn.none,
  show_participant_list: !0,
  can_change_participant_permissions: !1,
  connected_meetings: { can_alter_connected_meetings: !1, can_switch_connected_meetings: !1, can_switch_to_parent_meeting: !1 },
  stage_enabled: !1,
  stage_access: void 0,
  accept_stage_requests: !1
}, ui: { design_tokens: Wh(), config_diff: {} }, config: { view_type: Rr.GroupCall, media: { video: { quality: "vga", frame_rate: 24 }, screenshare: { quality: "hd", frame_rate: 5 } }, max_video_streams: { mobile: 6, desktop: 6 }, max_screenshare_count: 1 }, version: "2.0.0" };
function ml() {
  return fl(uw);
}
var Ft = {}, cw = { get exports() {
  return Ft;
}, set exports(o) {
  Ft = o;
} }, Iu, Od;
function lw() {
  if (Od)
    return Iu;
  Od = 1;
  var o = 1e3, c = o * 60, r = c * 60, t = r * 24, e = t * 7, a = t * 365.25;
  Iu = function(p, h) {
    h = h || {};
    var v = ce(p);
    if (v === "string" && p.length > 0)
      return n(p);
    if (v === "number" && isFinite(p))
      return h.long ? s(p) : i(p);
    throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(p));
  };
  function n(l) {
    if (l = String(l), !(l.length > 100)) {
      var p = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(l);
      if (p) {
        var h = parseFloat(p[1]), v = (p[2] || "ms").toLowerCase();
        switch (v) {
          case "years":
          case "year":
          case "yrs":
          case "yr":
          case "y":
            return h * a;
          case "weeks":
          case "week":
          case "w":
            return h * e;
          case "days":
          case "day":
          case "d":
            return h * t;
          case "hours":
          case "hour":
          case "hrs":
          case "hr":
          case "h":
            return h * r;
          case "minutes":
          case "minute":
          case "mins":
          case "min":
          case "m":
            return h * c;
          case "seconds":
          case "second":
          case "secs":
          case "sec":
          case "s":
            return h * o;
          case "milliseconds":
          case "millisecond":
          case "msecs":
          case "msec":
          case "ms":
            return h;
          default:
            return;
        }
      }
    }
  }
  function i(l) {
    var p = Math.abs(l);
    return p >= t ? Math.round(l / t) + "d" : p >= r ? Math.round(l / r) + "h" : p >= c ? Math.round(l / c) + "m" : p >= o ? Math.round(l / o) + "s" : l + "ms";
  }
  function s(l) {
    var p = Math.abs(l);
    return p >= t ? u(l, p, t, "day") : p >= r ? u(l, p, r, "hour") : p >= c ? u(l, p, c, "minute") : p >= o ? u(l, p, o, "second") : l + " ms";
  }
  function u(l, p, h, v) {
    var m = p >= h * 1.5;
    return Math.round(l / h) + " " + v + (m ? "s" : "");
  }
  return Iu;
}
function dw(o) {
  r.debug = r, r.default = r, r.coerce = s, r.disable = a, r.enable = e, r.enabled = n, r.humanize = lw(), r.destroy = u, Object.keys(o).forEach(function(l) {
    r[l] = o[l];
  }), r.names = [], r.skips = [], r.formatters = {};
  function c(l) {
    for (var p = 0, h = 0; h < l.length; h++)
      p = (p << 5) - p + l.charCodeAt(h), p |= 0;
    return r.colors[Math.abs(p) % r.colors.length];
  }
  r.selectColor = c;
  function r(l) {
    var p, h = null, v, m;
    function g() {
      for (var w = arguments.length, k = new Array(w), T = 0; T < w; T++)
        k[T] = arguments[T];
      if (g.enabled) {
        var _ = g, E = Number(new Date()), S = E - (p || E);
        _.diff = S, _.prev = p, _.curr = E, p = E, k[0] = r.coerce(k[0]), typeof k[0] != "string" && k.unshift("%O");
        var C = 0;
        k[0] = k[0].replace(/%([a-zA-Z%])/g, function(G, j) {
          if (G === "%%")
            return "%";
          C++;
          var ee = r.formatters[j];
          if (typeof ee == "function") {
            var Y = k[C];
            G = ee.call(_, Y), k.splice(C, 1), C--;
          }
          return G;
        }), r.formatArgs.call(_, k);
        var L = _.log || r.log;
        L.apply(_, k);
      }
    }
    return g.namespace = l, g.useColors = r.useColors(), g.color = r.selectColor(l), g.extend = t, g.destroy = r.destroy, Object.defineProperty(g, "enabled", { enumerable: !0, configurable: !1, get: function() {
      return h !== null ? h : (v !== r.namespaces && (v = r.namespaces, m = r.enabled(l)), m);
    }, set: function(k) {
      h = k;
    } }), typeof r.init == "function" && r.init(g), g;
  }
  function t(l, p) {
    var h = r(this.namespace + (typeof p == "undefined" ? ":" : p) + l);
    return h.log = this.log, h;
  }
  function e(l) {
    r.save(l), r.namespaces = l, r.names = [], r.skips = [];
    var p, h = (typeof l == "string" ? l : "").split(/[\s,]+/), v = h.length;
    for (p = 0; p < v; p++)
      h[p] && (l = h[p].replace(/\*/g, ".*?"), l[0] === "-" ? r.skips.push(new RegExp("^" + l.slice(1) + "$")) : r.names.push(new RegExp("^" + l + "$")));
  }
  function a() {
    var l = [].concat(sr(r.names.map(i)), sr(r.skips.map(i).map(function(p) {
      return "-" + p;
    }))).join(",");
    return r.enable(""), l;
  }
  function n(l) {
    if (l[l.length - 1] === "*")
      return !0;
    var p, h;
    for (p = 0, h = r.skips.length; p < h; p++)
      if (r.skips[p].test(l))
        return !1;
    for (p = 0, h = r.names.length; p < h; p++)
      if (r.names[p].test(l))
        return !0;
    return !1;
  }
  function i(l) {
    return l.toString().substring(2, l.toString().length - 2).replace(/\.\*\?$/, "*");
  }
  function s(l) {
    return l instanceof Error ? l.stack || l.message : l;
  }
  function u() {
    console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
  }
  return r.enable(r.load()), r;
}
var pw = dw;
(function(o, c) {
  c.formatArgs = t, c.save = e, c.load = a, c.useColors = r, c.storage = n(), c.destroy = function() {
    var s = !1;
    return function() {
      s || (s = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
    };
  }(), c.colors = ["#0000CC", "#0000FF", "#0033CC", "#0033FF", "#0066CC", "#0066FF", "#0099CC", "#0099FF", "#00CC00", "#00CC33", "#00CC66", "#00CC99", "#00CCCC", "#00CCFF", "#3300CC", "#3300FF", "#3333CC", "#3333FF", "#3366CC", "#3366FF", "#3399CC", "#3399FF", "#33CC00", "#33CC33", "#33CC66", "#33CC99", "#33CCCC", "#33CCFF", "#6600CC", "#6600FF", "#6633CC", "#6633FF", "#66CC00", "#66CC33", "#9900CC", "#9900FF", "#9933CC", "#9933FF", "#99CC00", "#99CC33", "#CC0000", "#CC0033", "#CC0066", "#CC0099", "#CC00CC", "#CC00FF", "#CC3300", "#CC3333", "#CC3366", "#CC3399", "#CC33CC", "#CC33FF", "#CC6600", "#CC6633", "#CC9900", "#CC9933", "#CCCC00", "#CCCC33", "#FF0000", "#FF0033", "#FF0066", "#FF0099", "#FF00CC", "#FF00FF", "#FF3300", "#FF3333", "#FF3366", "#FF3399", "#FF33CC", "#FF33FF", "#FF6600", "#FF6633", "#FF9900", "#FF9933", "#FFCC00", "#FFCC33"];
  function r() {
    return typeof window != "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs) ? !0 : typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/) ? !1 : typeof document != "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
    typeof window != "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
    typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
    typeof navigator != "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
  }
  function t(s) {
    if (s[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + s[0] + (this.useColors ? "%c " : " ") + "+" + o.exports.humanize(this.diff), !!this.useColors) {
      var u = "color: " + this.color;
      s.splice(1, 0, u, "color: inherit");
      var l = 0, p = 0;
      s[0].replace(/%[a-zA-Z%]/g, function(h) {
        h !== "%%" && (l++, h === "%c" && (p = l));
      }), s.splice(p, 0, u);
    }
  }
  c.log = console.debug || console.log || function() {
  };
  function e(s) {
    try {
      s ? c.storage.setItem("debug", s) : c.storage.removeItem("debug");
    } catch (u) {
    }
  }
  function a() {
    var s;
    try {
      s = c.storage.getItem("debug");
    } catch (u) {
    }
    return !s && typeof process != "undefined" && "env" in process && (s = process.env.DEBUG), s;
  }
  function n() {
    try {
      return localStorage;
    } catch (s) {
    }
  }
  o.exports = pw(c);
  var i = o.exports.formatters;
  i.j = function(s) {
    try {
      return JSON.stringify(s);
    } catch (u) {
      return "[UnexpectedJSONParseError]: " + u.message;
    }
  };
})(cw, Ft);
var ai = "mediasoup-client", ht = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), c ? (this._debug = Ft("".concat(ai, ":").concat(c)), this._warn = Ft("".concat(ai, ":WARN:").concat(c)), this._error = Ft("".concat(ai, ":ERROR:").concat(c))) : (this._debug = Ft(ai), this._warn = Ft("".concat(ai, ":WARN")), this._error = Ft("".concat(ai, ":ERROR"))), this._debug.log = console.info.bind(console), this._warn.log = console.warn.bind(console), this._error.log = console.error.bind(console);
  }
  return D(o, [{ key: "debug", get: function() {
    return this._debug;
  } }, { key: "warn", get: function() {
    return this._warn;
  } }, { key: "error", get: function() {
    return this._error;
  } }]), o;
}(), hw = new ht("EnhancedEventEmitter"), At = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t.setMaxListeners(1 / 0), t;
  }
  return D(r, [{
    key: "emit",
    value: function(e) {
      for (var a, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
        i[s - 1] = arguments[s];
      return (a = Oe(Pe(r.prototype), "emit", this)).call.apply(a, [this, e].concat(i));
    }
    /**
    * Special addition to the EventEmitter API.
    */
  }, { key: "safeEmit", value: function(e) {
    var a = Oe(Pe(r.prototype), "listenerCount", this).call(this, e);
    try {
      for (var n, i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++)
        s[u - 1] = arguments[u];
      return (n = Oe(Pe(r.prototype), "emit", this)).call.apply(n, [this, e].concat(s));
    } catch (l) {
      return hw.error("safeEmit() | event listener threw an error [eventName:%s]:%o", e, l), Boolean(a);
    }
  } }, { key: "on", value: function(e, a) {
    return Oe(Pe(r.prototype), "on", this).call(this, e, a), this;
  } }, { key: "off", value: function(e, a) {
    return Oe(Pe(r.prototype), "off", this).call(this, e, a), this;
  } }, { key: "addListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "on", this).call(this, e, a), this;
  } }, { key: "prependListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "prependListener", this).call(this, e, a), this;
  } }, { key: "once", value: function(e, a) {
    return Oe(Pe(r.prototype), "once", this).call(this, e, a), this;
  } }, { key: "prependOnceListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "prependOnceListener", this).call(this, e, a), this;
  } }, { key: "removeListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "off", this).call(this, e, a), this;
  } }, { key: "removeAllListeners", value: function(e) {
    return Oe(Pe(r.prototype), "removeAllListeners", this).call(this, e), this;
  } }, { key: "listenerCount", value: function(e) {
    return Oe(Pe(r.prototype), "listenerCount", this).call(this, e);
  } }, { key: "listeners", value: function(e) {
    return Oe(Pe(r.prototype), "listeners", this).call(this, e);
  } }, { key: "rawListeners", value: function(e) {
    return Oe(Pe(r.prototype), "rawListeners", this).call(this, e);
  } }]), r;
}(at.EventEmitter), lt = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.name = "UnsupportedError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(b(e), r) : e.stack = new Error(t).stack, e;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error)), yr = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.name = "InvalidStateError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(b(e), r) : e.stack = new Error(t).stack, e;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error));
function Nr(o, c) {
  return typeof o == "undefined" ? c : JSON.parse(JSON.stringify(o));
}
function Du() {
  return Math.round(Math.random() * 1e7);
}
var Sc = {};
(function(o) {
  var c = Ft("h264-profile-level-id");
  c.log = console.info.bind(console);
  var r = 1, t = 2, e = 3, a = 4, n = 5;
  o.ProfileConstrainedBaseline = r, o.ProfileBaseline = t, o.ProfileMain = e, o.ProfileConstrainedHigh = a, o.ProfileHigh = n;
  var i = 0, s = 10, u = 11, l = 12, p = 13, h = 20, v = 21, m = 22, g = 30, w = 31, k = 32, T = 40, _ = 41, E = 42, S = 50, C = 51, L = 52;
  o.Level1_b = i, o.Level1 = s, o.Level1_1 = u, o.Level1_2 = l, o.Level1_3 = p, o.Level2 = h, o.Level2_1 = v, o.Level2_2 = m, o.Level3 = g, o.Level3_1 = w, o.Level3_2 = k, o.Level4 = T, o.Level4_1 = _, o.Level4_2 = E, o.Level5 = S, o.Level5_1 = C, o.Level5_2 = L;
  var G = /* @__PURE__ */ D(function U(J, X) {
    I(this, U), this.profile = J, this.level = X;
  });
  o.ProfileLevelId = G;
  var j = new G(r, w), ee = 16, Y = /* @__PURE__ */ function() {
    function U(J) {
      I(this, U), this._mask = ~x("x", J), this._maskedValue = x("1", J);
    }
    return D(U, [{ key: "isMatch", value: function(X) {
      return this._maskedValue === (X & this._mask);
    } }]), U;
  }(), Z = /* @__PURE__ */ D(function U(J, X, re) {
    I(this, U), this.profile_idc = J, this.profile_iop = X, this.profile = re;
  }), F = [new Z(66, new Y("x1xx0000"), r), new Z(77, new Y("1xxx0000"), r), new Z(88, new Y("11xx0000"), r), new Z(66, new Y("x0xx0000"), t), new Z(88, new Y("10xx0000"), t), new Z(77, new Y("0x0x0000"), e), new Z(100, new Y("00000000"), n), new Z(100, new Y("00001100"), a)];
  o.parseProfileLevelId = function(U) {
    if (typeof U != "string" || U.length !== 6)
      return null;
    var J = parseInt(U, 16);
    if (J === 0)
      return null;
    var X = J & 255, re = J >> 8 & 255, pe = J >> 16 & 255, Ge;
    switch (X) {
      case u: {
        Ge = re & ee ? i : u;
        break;
      }
      case s:
      case l:
      case p:
      case h:
      case v:
      case m:
      case g:
      case w:
      case k:
      case T:
      case _:
      case E:
      case S:
      case C:
      case L: {
        Ge = X;
        break;
      }
      default:
        return c("parseProfileLevelId() | unrecognized level_idc:%s", X), null;
    }
    for (var oe = 0, te = F; oe < te.length; oe++) {
      var Ue = te[oe];
      if (pe === Ue.profile_idc && Ue.profile_iop.isMatch(re))
        return new G(Ue.profile, Ge);
    }
    return c("parseProfileLevelId() | unrecognized profile_idc/profile_iop combination"), null;
  }, o.profileLevelIdToString = function(U) {
    if (U.level == i)
      switch (U.profile) {
        case r:
          return "42f00b";
        case t:
          return "42100b";
        case e:
          return "4d100b";
        default:
          return c("profileLevelIdToString() | Level 1_b not is allowed for profile:%s", U.profile), null;
      }
    var J;
    switch (U.profile) {
      case r: {
        J = "42e0";
        break;
      }
      case t: {
        J = "4200";
        break;
      }
      case e: {
        J = "4d00";
        break;
      }
      case a: {
        J = "640c";
        break;
      }
      case n: {
        J = "6400";
        break;
      }
      default:
        return c("profileLevelIdToString() | unrecognized profile:%s", U.profile), null;
    }
    var X = U.level.toString(16);
    return X.length === 1 && (X = "0".concat(X)), "".concat(J).concat(X);
  }, o.parseSdpProfileLevelId = function() {
    var U = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, J = U["profile-level-id"];
    return J ? o.parseProfileLevelId(J) : j;
  }, o.isSameProfile = function() {
    var U = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, J = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, X = o.parseSdpProfileLevelId(U), re = o.parseSdpProfileLevelId(J);
    return Boolean(X && re && X.profile === re.profile);
  }, o.generateProfileLevelIdForAnswer = function() {
    var U = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, J = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!U["profile-level-id"] && !J["profile-level-id"])
      return c("generateProfileLevelIdForAnswer() | no profile-level-id in local and remote params"), null;
    var X = o.parseSdpProfileLevelId(U), re = o.parseSdpProfileLevelId(J);
    if (!X)
      throw new TypeError("invalid local_profile_level_id");
    if (!re)
      throw new TypeError("invalid remote_profile_level_id");
    if (X.profile !== re.profile)
      throw new TypeError("H264 Profile mismatch");
    var pe = H(U) && H(J), Ge = X.level, oe = re.level, te = B(Ge, oe), Ue = pe ? Ge : te;
    return c("generateProfileLevelIdForAnswer() | result: [profile:%s, level:%s]", X.profile, Ue), o.profileLevelIdToString(new G(X.profile, Ue));
  };
  function x(U, J) {
    return (J[0] === U) << 7 | (J[1] === U) << 6 | (J[2] === U) << 5 | (J[3] === U) << 4 | (J[4] === U) << 3 | (J[5] === U) << 2 | (J[6] === U) << 1 | (J[7] === U) << 0;
  }
  function ie(U, J) {
    return U === i ? J !== s && J !== i : J === i ? U !== s : U < J;
  }
  function B(U, J) {
    return ie(U, J) ? U : J;
  }
  function H() {
    var U = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, J = U["level-asymmetry-allowed"];
    return J === 1 || J === "1";
  }
})(Sc);
var vw = "probator", fw = 1234, mw = 127;
function Au(o) {
  if (ce(o) !== "object")
    throw new TypeError("caps is not an object");
  if (o.codecs && !Array.isArray(o.codecs))
    throw new TypeError("caps.codecs is not an array");
  o.codecs || (o.codecs = []);
  var c = ae(o.codecs), r;
  try {
    for (c.s(); !(r = c.n()).done; ) {
      var t = r.value;
      gw(t);
    }
  } catch (i) {
    c.e(i);
  } finally {
    c.f();
  }
  if (o.headerExtensions && !Array.isArray(o.headerExtensions))
    throw new TypeError("caps.headerExtensions is not an array");
  o.headerExtensions || (o.headerExtensions = []);
  var e = ae(o.headerExtensions), a;
  try {
    for (e.s(); !(a = e.n()).done; ) {
      var n = a.value;
      yw(n);
    }
  } catch (i) {
    e.e(i);
  } finally {
    e.f();
  }
}
function gw(o) {
  var c = new RegExp("^(audio|video)/(.+)", "i");
  if (ce(o) !== "object")
    throw new TypeError("codec is not an object");
  if (!o.mimeType || typeof o.mimeType != "string")
    throw new TypeError("missing codec.mimeType");
  var r = c.exec(o.mimeType);
  if (!r)
    throw new TypeError("invalid codec.mimeType");
  if (o.kind = r[1].toLowerCase(), o.preferredPayloadType && typeof o.preferredPayloadType != "number")
    throw new TypeError("invalid codec.preferredPayloadType");
  if (typeof o.clockRate != "number")
    throw new TypeError("missing codec.clockRate");
  o.kind === "audio" ? typeof o.channels != "number" && (o.channels = 1) : delete o.channels, (!o.parameters || ce(o.parameters) !== "object") && (o.parameters = {});
  for (var t = 0, e = Object.keys(o.parameters); t < e.length; t++) {
    var a = e[t], n = o.parameters[a];
    if (n === void 0 && (o.parameters[a] = "", n = ""), typeof n != "string" && typeof n != "number")
      throw new TypeError("invalid codec parameter [key:".concat(a, "s, value:").concat(n, "]"));
    if (a === "apt" && typeof n != "number")
      throw new TypeError("invalid codec apt parameter");
  }
  (!o.rtcpFeedback || !Array.isArray(o.rtcpFeedback)) && (o.rtcpFeedback = []);
  var i = ae(o.rtcpFeedback), s;
  try {
    for (i.s(); !(s = i.n()).done; ) {
      var u = s.value;
      Jh(u);
    }
  } catch (l) {
    i.e(l);
  } finally {
    i.f();
  }
}
function Jh(o) {
  if (ce(o) !== "object")
    throw new TypeError("fb is not an object");
  if (!o.type || typeof o.type != "string")
    throw new TypeError("missing fb.type");
  (!o.parameter || typeof o.parameter != "string") && (o.parameter = "");
}
function yw(o) {
  if (ce(o) !== "object")
    throw new TypeError("ext is not an object");
  if (o.kind !== "audio" && o.kind !== "video")
    throw new TypeError("invalid ext.kind");
  if (!o.uri || typeof o.uri != "string")
    throw new TypeError("missing ext.uri");
  if (typeof o.preferredId != "number")
    throw new TypeError("missing ext.preferredId");
  if (o.preferredEncrypt && typeof o.preferredEncrypt != "boolean")
    throw new TypeError("invalid ext.preferredEncrypt");
  if (o.preferredEncrypt || (o.preferredEncrypt = !1), o.direction && typeof o.direction != "string")
    throw new TypeError("invalid ext.direction");
  o.direction || (o.direction = "sendrecv");
}
function gl(o) {
  if (ce(o) !== "object")
    throw new TypeError("params is not an object");
  if (o.mid && typeof o.mid != "string")
    throw new TypeError("params.mid is not a string");
  if (!Array.isArray(o.codecs))
    throw new TypeError("missing params.codecs");
  var c = ae(o.codecs), r;
  try {
    for (c.s(); !(r = c.n()).done; ) {
      var t = r.value;
      kw(t);
    }
  } catch (l) {
    c.e(l);
  } finally {
    c.f();
  }
  if (o.headerExtensions && !Array.isArray(o.headerExtensions))
    throw new TypeError("params.headerExtensions is not an array");
  o.headerExtensions || (o.headerExtensions = []);
  var e = ae(o.headerExtensions), a;
  try {
    for (e.s(); !(a = e.n()).done; ) {
      var n = a.value;
      ww(n);
    }
  } catch (l) {
    e.e(l);
  } finally {
    e.f();
  }
  if (o.encodings && !Array.isArray(o.encodings))
    throw new TypeError("params.encodings is not an array");
  o.encodings || (o.encodings = []);
  var i = ae(o.encodings), s;
  try {
    for (i.s(); !(s = i.n()).done; ) {
      var u = s.value;
      Tw(u);
    }
  } catch (l) {
    i.e(l);
  } finally {
    i.f();
  }
  if (o.rtcp && ce(o.rtcp) !== "object")
    throw new TypeError("params.rtcp is not an object");
  o.rtcp || (o.rtcp = {}), bw(o.rtcp);
}
function kw(o) {
  var c = new RegExp("^(audio|video)/(.+)", "i");
  if (ce(o) !== "object")
    throw new TypeError("codec is not an object");
  if (!o.mimeType || typeof o.mimeType != "string")
    throw new TypeError("missing codec.mimeType");
  var r = c.exec(o.mimeType);
  if (!r)
    throw new TypeError("invalid codec.mimeType");
  if (typeof o.payloadType != "number")
    throw new TypeError("missing codec.payloadType");
  if (typeof o.clockRate != "number")
    throw new TypeError("missing codec.clockRate");
  var t = r[1].toLowerCase();
  t === "audio" ? typeof o.channels != "number" && (o.channels = 1) : delete o.channels, (!o.parameters || ce(o.parameters) !== "object") && (o.parameters = {});
  for (var e = 0, a = Object.keys(o.parameters); e < a.length; e++) {
    var n = a[e], i = o.parameters[n];
    if (i === void 0 && (o.parameters[n] = "", i = ""), typeof i != "string" && typeof i != "number")
      throw new TypeError("invalid codec parameter [key:".concat(n, "s, value:").concat(i, "]"));
    if (n === "apt" && typeof i != "number")
      throw new TypeError("invalid codec apt parameter");
  }
  (!o.rtcpFeedback || !Array.isArray(o.rtcpFeedback)) && (o.rtcpFeedback = []);
  var s = ae(o.rtcpFeedback), u;
  try {
    for (s.s(); !(u = s.n()).done; ) {
      var l = u.value;
      Jh(l);
    }
  } catch (p) {
    s.e(p);
  } finally {
    s.f();
  }
}
function ww(o) {
  if (ce(o) !== "object")
    throw new TypeError("ext is not an object");
  if (!o.uri || typeof o.uri != "string")
    throw new TypeError("missing ext.uri");
  if (typeof o.id != "number")
    throw new TypeError("missing ext.id");
  if (o.encrypt && typeof o.encrypt != "boolean")
    throw new TypeError("invalid ext.encrypt");
  o.encrypt || (o.encrypt = !1), (!o.parameters || ce(o.parameters) !== "object") && (o.parameters = {});
  for (var c = 0, r = Object.keys(o.parameters); c < r.length; c++) {
    var t = r[c], e = o.parameters[t];
    if (e === void 0 && (o.parameters[t] = "", e = ""), typeof e != "string" && typeof e != "number")
      throw new TypeError("invalid header extension parameter");
  }
}
function Tw(o) {
  if (ce(o) !== "object")
    throw new TypeError("encoding is not an object");
  if (o.ssrc && typeof o.ssrc != "number")
    throw new TypeError("invalid encoding.ssrc");
  if (o.rid && typeof o.rid != "string")
    throw new TypeError("invalid encoding.rid");
  if (o.rtx && ce(o.rtx) !== "object")
    throw new TypeError("invalid encoding.rtx");
  if (o.rtx && typeof o.rtx.ssrc != "number")
    throw new TypeError("missing encoding.rtx.ssrc");
  if ((!o.dtx || typeof o.dtx != "boolean") && (o.dtx = !1), o.scalabilityMode && typeof o.scalabilityMode != "string")
    throw new TypeError("invalid encoding.scalabilityMode");
}
function bw(o) {
  if (ce(o) !== "object")
    throw new TypeError("rtcp is not an object");
  if (o.cname && typeof o.cname != "string")
    throw new TypeError("invalid rtcp.cname");
  (!o.reducedSize || typeof o.reducedSize != "boolean") && (o.reducedSize = !0);
}
function Sw(o) {
  if (ce(o) !== "object")
    throw new TypeError("caps is not an object");
  if (!o.numStreams || ce(o.numStreams) !== "object")
    throw new TypeError("missing caps.numStreams");
  Ew(o.numStreams);
}
function Ew(o) {
  if (ce(o) !== "object")
    throw new TypeError("numStreams is not an object");
  if (typeof o.OS != "number")
    throw new TypeError("missing numStreams.OS");
  if (typeof o.MIS != "number")
    throw new TypeError("missing numStreams.MIS");
}
function Nd(o) {
  if (ce(o) !== "object")
    throw new TypeError("params is not an object");
  if (typeof o.streamId != "number")
    throw new TypeError("missing params.streamId");
  var c = !1;
  if (typeof o.ordered == "boolean" ? c = !0 : o.ordered = !0, o.maxPacketLifeTime && typeof o.maxPacketLifeTime != "number")
    throw new TypeError("invalid params.maxPacketLifeTime");
  if (o.maxRetransmits && typeof o.maxRetransmits != "number")
    throw new TypeError("invalid params.maxRetransmits");
  if (o.maxPacketLifeTime && o.maxRetransmits)
    throw new TypeError("cannot provide both maxPacketLifeTime and maxRetransmits");
  if (c && o.ordered && (o.maxPacketLifeTime || o.maxRetransmits))
    throw new TypeError("cannot be ordered with maxPacketLifeTime or maxRetransmits");
  if (!c && (o.maxPacketLifeTime || o.maxRetransmits) && (o.ordered = !1), o.label && typeof o.label != "string")
    throw new TypeError("invalid params.label");
  if (o.protocol && typeof o.protocol != "string")
    throw new TypeError("invalid params.protocol");
}
function _w(o, c) {
  var r = { codecs: [], headerExtensions: [] }, t = ae(c.codecs || []), e;
  try {
    var a = function() {
      var m = e.value;
      if (As(m))
        return 0;
      var g = (o.codecs || []).find(function(k) {
        return Kh(k, m, { strict: !0, modify: !0 });
      });
      if (!g)
        return 0;
      var w = { mimeType: g.mimeType, kind: g.kind, clockRate: g.clockRate, channels: g.channels, localPayloadType: g.preferredPayloadType, localRtxPayloadType: void 0, remotePayloadType: m.preferredPayloadType, remoteRtxPayloadType: void 0, localParameters: g.parameters, remoteParameters: m.parameters, rtcpFeedback: Dw(g, m) };
      r.codecs.push(w);
    }, n;
    for (t.s(); !(e = t.n()).done; )
      n = a();
  } catch (v) {
    t.e(v);
  } finally {
    t.f();
  }
  var i = ae(r.codecs), s;
  try {
    var u = function() {
      var m = s.value, g = o.codecs.find(function(k) {
        return As(k) && k.parameters.apt === m.localPayloadType;
      }), w = c.codecs.find(function(k) {
        return As(k) && k.parameters.apt === m.remotePayloadType;
      });
      g && w && (m.localRtxPayloadType = g.preferredPayloadType, m.remoteRtxPayloadType = w.preferredPayloadType);
    };
    for (i.s(); !(s = i.n()).done; )
      u();
  } catch (v) {
    i.e(v);
  } finally {
    i.f();
  }
  var l = ae(c.headerExtensions), p;
  try {
    var h = function() {
      var m = p.value, g = o.headerExtensions.find(function(k) {
        return Iw(k, m);
      });
      if (!g)
        return 1;
      var w = { kind: m.kind, uri: m.uri, sendId: g.preferredId, recvId: m.preferredId, encrypt: g.preferredEncrypt, direction: "sendrecv" };
      switch (m.direction) {
        case "sendrecv":
          w.direction = "sendrecv";
          break;
        case "recvonly":
          w.direction = "sendonly";
          break;
        case "sendonly":
          w.direction = "recvonly";
          break;
        case "inactive":
          w.direction = "inactive";
          break;
      }
      r.headerExtensions.push(w);
    };
    for (l.s(); !(p = l.n()).done; )
      h();
  } catch (v) {
    l.e(v);
  } finally {
    l.f();
  }
  return r;
}
function Rw(o) {
  var c = { codecs: [], headerExtensions: [] }, r = ae(o.codecs), t;
  try {
    for (r.s(); !(t = r.n()).done; ) {
      var e = t.value, a = { mimeType: e.mimeType, kind: e.kind, preferredPayloadType: e.remotePayloadType, clockRate: e.clockRate, channels: e.channels, parameters: e.localParameters, rtcpFeedback: e.rtcpFeedback };
      if (c.codecs.push(a), !!e.remoteRtxPayloadType) {
        var n = { mimeType: "".concat(e.kind, "/rtx"), kind: e.kind, preferredPayloadType: e.remoteRtxPayloadType, clockRate: e.clockRate, parameters: { apt: e.remotePayloadType }, rtcpFeedback: [] };
        c.codecs.push(n);
      }
    }
  } catch (p) {
    r.e(p);
  } finally {
    r.f();
  }
  var i = ae(o.headerExtensions), s;
  try {
    for (i.s(); !(s = i.n()).done; ) {
      var u = s.value;
      if (!(u.direction !== "sendrecv" && u.direction !== "recvonly")) {
        var l = { kind: u.kind, uri: u.uri, preferredId: u.recvId, preferredEncrypt: u.encrypt, direction: u.direction };
        c.headerExtensions.push(l);
      }
    }
  } catch (p) {
    i.e(p);
  } finally {
    i.f();
  }
  return c;
}
function Mt(o, c) {
  var r = { mid: void 0, codecs: [], headerExtensions: [], encodings: [], rtcp: {} }, t = ae(c.codecs), e;
  try {
    for (t.s(); !(e = t.n()).done; ) {
      var a = e.value;
      if (a.kind === o) {
        var n = { mimeType: a.mimeType, payloadType: a.localPayloadType, clockRate: a.clockRate, channels: a.channels, parameters: a.localParameters, rtcpFeedback: a.rtcpFeedback };
        if (r.codecs.push(n), a.localRtxPayloadType) {
          var i = { mimeType: "".concat(a.kind, "/rtx"), payloadType: a.localRtxPayloadType, clockRate: a.clockRate, parameters: { apt: a.localPayloadType }, rtcpFeedback: [] };
          r.codecs.push(i);
        }
      }
    }
  } catch (h) {
    t.e(h);
  } finally {
    t.f();
  }
  var s = ae(c.headerExtensions), u;
  try {
    for (s.s(); !(u = s.n()).done; ) {
      var l = u.value;
      if (!(l.kind && l.kind !== o || l.direction !== "sendrecv" && l.direction !== "sendonly")) {
        var p = { uri: l.uri, id: l.sendId, encrypt: l.encrypt, parameters: {} };
        r.headerExtensions.push(p);
      }
    }
  } catch (h) {
    s.e(h);
  } finally {
    s.f();
  }
  return r;
}
function ca(o, c) {
  var r = { mid: void 0, codecs: [], headerExtensions: [], encodings: [], rtcp: {} }, t = ae(c.codecs), e;
  try {
    for (t.s(); !(e = t.n()).done; ) {
      var a = e.value;
      if (a.kind === o) {
        var n = { mimeType: a.mimeType, payloadType: a.localPayloadType, clockRate: a.clockRate, channels: a.channels, parameters: a.remoteParameters, rtcpFeedback: a.rtcpFeedback };
        if (r.codecs.push(n), a.localRtxPayloadType) {
          var i = { mimeType: "".concat(a.kind, "/rtx"), payloadType: a.localRtxPayloadType, clockRate: a.clockRate, parameters: { apt: a.localPayloadType }, rtcpFeedback: [] };
          r.codecs.push(i);
        }
      }
    }
  } catch (S) {
    t.e(S);
  } finally {
    t.f();
  }
  var s = ae(c.headerExtensions), u;
  try {
    for (s.s(); !(u = s.n()).done; ) {
      var l = u.value;
      if (!(l.kind && l.kind !== o || l.direction !== "sendrecv" && l.direction !== "sendonly")) {
        var p = { uri: l.uri, id: l.sendId, encrypt: l.encrypt, parameters: {} };
        r.headerExtensions.push(p);
      }
    }
  } catch (S) {
    s.e(S);
  } finally {
    s.f();
  }
  if (r.headerExtensions.some(function(S) {
    return S.uri === "http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01";
  })) {
    var h = ae(r.codecs), v;
    try {
      for (h.s(); !(v = h.n()).done; ) {
        var m = v.value;
        m.rtcpFeedback = (m.rtcpFeedback || []).filter(function(S) {
          return S.type !== "goog-remb";
        });
      }
    } catch (S) {
      h.e(S);
    } finally {
      h.f();
    }
  } else if (r.headerExtensions.some(function(S) {
    return S.uri === "http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time";
  })) {
    var g = ae(r.codecs), w;
    try {
      for (g.s(); !(w = g.n()).done; ) {
        var k = w.value;
        k.rtcpFeedback = (k.rtcpFeedback || []).filter(function(S) {
          return S.type !== "transport-cc";
        });
      }
    } catch (S) {
      g.e(S);
    } finally {
      g.f();
    }
  } else {
    var T = ae(r.codecs), _;
    try {
      for (T.s(); !(_ = T.n()).done; ) {
        var E = _.value;
        E.rtcpFeedback = (E.rtcpFeedback || []).filter(function(S) {
          return S.type !== "transport-cc" && S.type !== "goog-remb";
        });
      }
    } catch (S) {
      T.e(S);
    } finally {
      T.f();
    }
  }
  return r;
}
function qt(o, c) {
  var r = [];
  if (!c)
    r.push(o[0]), As(o[1]) && r.push(o[1]);
  else {
    for (var t = 0; t < o.length; ++t)
      if (Kh(o[t], c)) {
        r.push(o[t]), As(o[t + 1]) && r.push(o[t + 1]);
        break;
      }
    if (r.length === 0)
      throw new TypeError("no matching codec found");
  }
  return r;
}
function Pw(o) {
  o = Nr(o, {}), gl(o);
  var c = { mid: vw, codecs: [], headerExtensions: [], encodings: [{ ssrc: fw }], rtcp: { cname: "probator" } };
  return c.codecs.push(o.codecs[0]), c.codecs[0].payloadType = mw, c.headerExtensions = o.headerExtensions, c;
}
function $d(o, c) {
  return c.codecs.some(function(r) {
    return r.kind === o;
  });
}
function Cw(o, c) {
  if (gl(o), o.codecs.length === 0)
    return !1;
  var r = o.codecs[0];
  return c.codecs.some(function(t) {
    return t.remotePayloadType === r.payloadType;
  });
}
function As(o) {
  return o ? /.+\/rtx$/i.test(o.mimeType) : !1;
}
function Kh(o, c) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, t = r.strict, e = t === void 0 ? !1 : t, a = r.modify, n = a === void 0 ? !1 : a, i = o.mimeType.toLowerCase(), s = c.mimeType.toLowerCase();
  if (i !== s || o.clockRate !== c.clockRate || o.channels !== c.channels)
    return !1;
  switch (i) {
    case "video/h264": {
      if (e) {
        var u = o.parameters["packetization-mode"] || 0, l = c.parameters["packetization-mode"] || 0;
        if (u !== l || !Sc.isSameProfile(o.parameters, c.parameters))
          return !1;
        var p;
        try {
          p = Sc.generateProfileLevelIdForAnswer(o.parameters, c.parameters);
        } catch (m) {
          return !1;
        }
        n && (p ? (o.parameters["profile-level-id"] = p, c.parameters["profile-level-id"] = p) : (delete o.parameters["profile-level-id"], delete c.parameters["profile-level-id"]));
      }
      break;
    }
    case "video/vp9": {
      if (e) {
        var h = o.parameters["profile-id"] || 0, v = c.parameters["profile-id"] || 0;
        if (h !== v)
          return !1;
      }
      break;
    }
  }
  return !0;
}
function Iw(o, c) {
  return !(o.kind && c.kind && o.kind !== c.kind || o.uri !== c.uri);
}
function Dw(o, c) {
  var r = [], t = ae(o.rtcpFeedback || []), e;
  try {
    var a = function() {
      var i = e.value, s = (c.rtcpFeedback || []).find(function(u) {
        return u.type === i.type && (u.parameter === i.parameter || !u.parameter && !i.parameter);
      });
      s && r.push(s);
    };
    for (t.s(); !(e = t.n()).done; )
      a();
  } catch (n) {
    t.e(n);
  } finally {
    t.f();
  }
  return r;
}
var Mn = {}, uu = {}, Aw = yc && yc.__importDefault || function(o) {
  return o && o.__esModule ? o : { default: o };
};
Object.defineProperty(uu, "__esModule", { value: !0 });
uu.Logger = void 0;
var ni = Aw(Ft), ii = "awaitqueue", Mw = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), c ? (this._debug = (0, ni.default)("".concat(ii, ":").concat(c)), this._warn = (0, ni.default)("".concat(ii, ":WARN:").concat(c)), this._error = (0, ni.default)("".concat(ii, ":ERROR:").concat(c))) : (this._debug = (0, ni.default)(ii), this._warn = (0, ni.default)("".concat(ii, ":WARN")), this._error = (0, ni.default)("".concat(ii, ":ERROR"))), this._debug.log = console.info.bind(console), this._warn.log = console.warn.bind(console), this._error.log = console.error.bind(console);
  }
  return D(o, [{ key: "debug", get: function() {
    return this._debug;
  } }, { key: "warn", get: function() {
    return this._warn;
  } }, { key: "error", get: function() {
    return this._error;
  } }]), o;
}();
uu.Logger = Mw;
Object.defineProperty(Mn, "__esModule", { value: !0 });
var Fs = Mn.AwaitQueue = Mn.AwaitQueueRemovedTaskError = Mn.AwaitQueueStoppedError = void 0, Ow = uu, qa = new Ow.Logger(), Nw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t != null ? t : "AwaitQueue stopped"), e.name = "AwaitQueueStoppedError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(b(e), r), e;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error));
Mn.AwaitQueueStoppedError = Nw;
var zh = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t != null ? t : "AwaitQueue task removed"), e.name = "AwaitQueueRemovedTaskError", typeof Error.captureStackTrace == "function" && Error.captureStackTrace(b(e), r), e;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error));
Mn.AwaitQueueRemovedTaskError = zh;
var $w = /* @__PURE__ */ function() {
  function o() {
    I(this, o), this.pendingTasks = /* @__PURE__ */ new Map(), this.nextTaskId = 0, this.stopping = !1;
  }
  return D(o, [{ key: "size", get: function() {
    return this.pendingTasks.size;
  } }, { key: "push", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n = this;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = a != null ? a : e.name, qa.debug("push() [name:".concat(a, "]")), typeof e == "function") {
                s.next = 4;
                break;
              }
              throw new TypeError("given task is not a function");
            case 4:
              if (a)
                try {
                  Object.defineProperty(e, "name", { value: a });
                } catch (u) {
                }
              return s.abrupt("return", new Promise(function(u, l) {
                var p = { id: n.nextTaskId++, task: e, name: a, enqueuedAt: Date.now(), executedAt: void 0, completed: !1, resolve: function(v) {
                  if (!p.completed) {
                    p.completed = !0, n.pendingTasks.delete(p.id), qa.debug("resolving task [name:".concat(p.name, "]")), u(v);
                    var m = n.pendingTasks.values(), g = ar(m, 1), w = g[0];
                    w && !w.executedAt && n.execute(w);
                  }
                }, reject: function(v) {
                  if (!p.completed && (p.completed = !0, n.pendingTasks.delete(p.id), qa.debug("rejecting task [name:".concat(p.name, "]: %s"), String(v)), l(v), !n.stopping)) {
                    var m = n.pendingTasks.values(), g = ar(m, 1), w = g[0];
                    w && !w.executedAt && n.execute(w);
                  }
                } };
                n.pendingTasks.set(p.id, p), n.pendingTasks.size === 1 && n.execute(p);
              }));
            case 6:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "stop", value: function() {
    qa.debug("stop()"), this.stopping = !0;
    var r = ae(this.pendingTasks.values()), t;
    try {
      for (r.s(); !(t = r.n()).done; ) {
        var e = t.value;
        qa.debug("stop() | stopping task [name:".concat(e.name, "]"));
      }
    } catch (a) {
      r.e(a);
    } finally {
      r.f();
    }
    this.stopping = !1;
  } }, { key: "remove", value: function(r) {
    qa.debug("remove() [taskIdx:".concat(r, "]"));
    var t = Array.from(this.pendingTasks.values())[r];
    if (!t) {
      qa.debug("stop() | no task with given idx [taskIdx:".concat(r, "]"));
      return;
    }
    t.reject(new zh());
  } }, { key: "dump", value: function() {
    var r = Date.now(), t = 0;
    return Array.from(this.pendingTasks.values()).map(function(e) {
      return { idx: t++, task: e.task, name: e.name, enqueuedTime: e.executedAt ? e.executedAt - e.enqueuedAt : r - e.enqueuedAt, executionTime: e.executedAt ? r - e.executedAt : 0 };
    });
  } }, { key: "execute", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (qa.debug("execute() [name:".concat(e.name, "]")), !e.executedAt) {
                i.next = 3;
                break;
              }
              throw new Error("task already being executed");
            case 3:
              return e.executedAt = Date.now(), i.prev = 4, i.next = 7, e.task();
            case 7:
              a = i.sent, e.resolve(a), i.next = 14;
              break;
            case 11:
              i.prev = 11, i.t0 = i.catch(4), e.reject(i.t0);
            case 14:
            case "end":
              return i.stop();
          }
      }, t, null, [[4, 11]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}();
Fs = Mn.AwaitQueue = $w;
/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
var Ld, Mu = typeof queueMicrotask == "function" ? queueMicrotask.bind(typeof window != "undefined" ? window : yc) : function(o) {
  return (Ld || (Ld = Promise.resolve())).then(o).catch(function(c) {
    return setTimeout(function() {
      throw c;
    }, 0);
  });
}, Xt = new ht("Producer"), Lw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.localId, i = t.rtpSender, s = t.track, u = t.rtpParameters, l = t.stopTracks, p = t.disableTrackOnPause, h = t.zeroRtpOnPause, v = t.appData;
    return I(this, r), e = c.call(this), e._closed = !1, e._observer = new At(), Xt.debug("constructor()"), e._id = a, e._localId = n, e._rtpSender = i, e._track = s, e._kind = s.kind, e._rtpParameters = u, e._paused = p ? !s.enabled : !1, e._maxSpatialLayer = void 0, e._stopTracks = l, e._disableTrackOnPause = p, e._zeroRtpOnPause = h, e._appData = v || {}, e.onTrackEnded = e.onTrackEnded.bind(b(e)), e.handleTrack(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Local id.
    */
  }, {
    key: "localId",
    get: function() {
      return this._localId;
    }
    /**
    * Whether the Producer is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * Media kind.
    */
  }, {
    key: "kind",
    get: function() {
      return this._kind;
    }
    /**
    * Associated RTCRtpSender.
    */
  }, {
    key: "rtpSender",
    get: function() {
      return this._rtpSender;
    }
    /**
    * The associated track.
    */
  }, {
    key: "track",
    get: function() {
      return this._track;
    }
    /**
    * RTP parameters.
    */
  }, {
    key: "rtpParameters",
    get: function() {
      return this._rtpParameters;
    }
    /**
    * Whether the Producer is paused.
    */
  }, {
    key: "paused",
    get: function() {
      return this._paused;
    }
    /**
    * Max spatial layer.
    *
    * @type {Number | undefined}
    */
  }, {
    key: "maxSpatialLayer",
    get: function() {
      return this._maxSpatialLayer;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: function(e) {
      throw new Error("cannot override appData object");
    }
  }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Closes the Producer.
    */
  }, {
    key: "close",
    value: function() {
      this._closed || (Xt.debug("close()"), this._closed = !0, this.destroyTrack(), this.emit("@close"), this._observer.safeEmit("close"));
    }
    /**
    * Transport was closed.
    */
  }, {
    key: "transportClosed",
    value: function() {
      this._closed || (Xt.debug("transportClosed()"), this._closed = !0, this.destroyTrack(), this.safeEmit("transportclose"), this._observer.safeEmit("close"));
    }
    /**
    * Get associated RTCRtpSender stats.
    */
  }, {
    key: "getStats",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (!this._closed) {
                  s.next = 2;
                  break;
                }
                throw new yr("closed");
              case 2:
                return s.abrupt("return", new Promise(function(u, l) {
                  n.safeEmit("@getstats", u, l);
                }));
              case 3:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Pauses sending media.
    */
  }, {
    key: "pause",
    value: function() {
      var e = this;
      if (Xt.debug("pause()"), this._closed) {
        Xt.error("pause() | Producer closed");
        return;
      }
      this._paused = !0, this._track && this._disableTrackOnPause && (this._track.enabled = !1), this._zeroRtpOnPause && new Promise(function(a, n) {
        e.safeEmit("@pause", a, n);
      }).catch(function() {
      }), this._observer.safeEmit("pause");
    }
    /**
    * Resumes sending media.
    */
  }, {
    key: "resume",
    value: function() {
      var e = this;
      if (Xt.debug("resume()"), this._closed) {
        Xt.error("resume() | Producer closed");
        return;
      }
      this._paused = !1, this._track && this._disableTrackOnPause && (this._track.enabled = !0), this._zeroRtpOnPause && new Promise(function(a, n) {
        e.safeEmit("@resume", a, n);
      }).catch(function() {
      }), this._observer.safeEmit("resume");
    }
    /**
    * Replaces the current track with a new one or null.
    */
  }, {
    key: "replaceTrack",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (s = n.track, Xt.debug("replaceTrack() [track:%o]", s), !this._closed) {
                  l.next = 7;
                  break;
                }
                if (s && this._stopTracks)
                  try {
                    s.stop();
                  } catch (p) {
                  }
                throw new yr("closed");
              case 7:
                if (!(s && s.readyState === "ended")) {
                  l.next = 9;
                  break;
                }
                throw new yr("track ended");
              case 9:
                if (s !== this._track) {
                  l.next = 12;
                  break;
                }
                return Xt.debug("replaceTrack() | same track, ignored"), l.abrupt("return");
              case 12:
                return l.next = 14, new Promise(function(p, h) {
                  i.safeEmit("@replacetrack", s, p, h);
                });
              case 14:
                this.destroyTrack(), this._track = s, this._track && this._disableTrackOnPause && (this._paused ? this._paused && (this._track.enabled = !1) : this._track.enabled = !0), this.handleTrack();
              case 18:
              case "end":
                return l.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Sets the video max spatial layer to be sent.
    */
  }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!this._closed) {
                u.next = 4;
                break;
              }
              throw new yr("closed");
            case 4:
              if (this._kind === "video") {
                u.next = 8;
                break;
              }
              throw new lt("not a video Producer");
            case 8:
              if (typeof n == "number") {
                u.next = 10;
                break;
              }
              throw new TypeError("invalid spatialLayer");
            case 10:
              if (n !== this._maxSpatialLayer) {
                u.next = 12;
                break;
              }
              return u.abrupt("return");
            case 12:
              return u.next = 14, new Promise(function(l, p) {
                i.safeEmit("@setmaxspatiallayer", n, l, p);
              }).catch(function() {
              });
            case 14:
              this._maxSpatialLayer = n;
            case 15:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!this._closed) {
                u.next = 4;
                break;
              }
              throw new yr("closed");
            case 4:
              if (ce(n) === "object") {
                u.next = 6;
                break;
              }
              throw new TypeError("invalid params");
            case 6:
              return u.next = 8, new Promise(function(l, p) {
                i.safeEmit("@setrtpencodingparameters", n, l, p);
              });
            case 8:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onTrackEnded", value: function() {
    Xt.debug('track "ended" event'), this.safeEmit("trackended"), this._observer.safeEmit("trackended");
  } }, { key: "handleTrack", value: function() {
    this._track && this._track.addEventListener("ended", this.onTrackEnded);
  } }, { key: "destroyTrack", value: function() {
    if (this._track)
      try {
        this._track.removeEventListener("ended", this.onTrackEnded), this._stopTracks && this._track.stop();
      } catch (e) {
      }
  } }]), r;
}(At), Zt = new ht("Consumer"), Uw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.localId, i = t.producerId, s = t.rtpReceiver, u = t.track, l = t.rtpParameters, p = t.appData;
    return I(this, r), e = c.call(this), e._closed = !1, e._observer = new At(), Zt.debug("constructor()"), e._id = a, e._localId = n, e._producerId = i, e._rtpReceiver = s, e._track = u, e._rtpParameters = l, e._paused = !u.enabled, e._appData = p || {}, e.onTrackEnded = e.onTrackEnded.bind(b(e)), e.handleTrack(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Local id.
    */
  }, {
    key: "localId",
    get: function() {
      return this._localId;
    }
    /**
    * Associated Producer id.
    */
  }, {
    key: "producerId",
    get: function() {
      return this._producerId;
    }
    /**
    * Whether the Consumer is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * Media kind.
    */
  }, {
    key: "kind",
    get: function() {
      return this._track.kind;
    }
    /**
    * Associated RTCRtpReceiver.
    */
  }, {
    key: "rtpReceiver",
    get: function() {
      return this._rtpReceiver;
    }
    /**
    * The associated track.
    */
  }, {
    key: "track",
    get: function() {
      return this._track;
    }
    /**
    * RTP parameters.
    */
  }, {
    key: "rtpParameters",
    get: function() {
      return this._rtpParameters;
    }
    /**
    * Whether the Consumer is paused.
    */
  }, {
    key: "paused",
    get: function() {
      return this._paused;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: function(e) {
      throw new Error("cannot override appData object");
    }
  }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Closes the Consumer.
    */
  }, {
    key: "close",
    value: function() {
      this._closed || (Zt.debug("close()"), this._closed = !0, this.destroyTrack(), this.emit("@close"), this._observer.safeEmit("close"));
    }
    /**
    * Transport was closed.
    */
  }, {
    key: "transportClosed",
    value: function() {
      this._closed || (Zt.debug("transportClosed()"), this._closed = !0, this.destroyTrack(), this.safeEmit("transportclose"), this._observer.safeEmit("close"));
    }
    /**
    * Get associated RTCRtpReceiver stats.
    */
  }, {
    key: "getStats",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (!this._closed) {
                  s.next = 2;
                  break;
                }
                throw new yr("closed");
              case 2:
                return s.abrupt("return", new Promise(function(u, l) {
                  n.safeEmit("@getstats", u, l);
                }));
              case 3:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Pauses receiving media.
    */
  }, {
    key: "pause",
    value: function() {
      if (Zt.debug("pause()"), this._closed) {
        Zt.error("pause() | Consumer closed");
        return;
      }
      if (this._paused) {
        Zt.debug("pause() | Consumer is already paused");
        return;
      }
      this._paused = !0, this._track.enabled = !1, this.emit("@pause"), this._observer.safeEmit("pause");
    }
    /**
    * Resumes receiving media.
    */
  }, { key: "resume", value: function() {
    if (Zt.debug("resume()"), this._closed) {
      Zt.error("resume() | Consumer closed");
      return;
    }
    if (!this._paused) {
      Zt.debug("resume() | Consumer is already resumed");
      return;
    }
    this._paused = !1, this._track.enabled = !0, this.emit("@resume"), this._observer.safeEmit("resume");
  } }, { key: "onTrackEnded", value: function() {
    Zt.debug('track "ended" event'), this.safeEmit("trackended"), this._observer.safeEmit("trackended");
  } }, { key: "handleTrack", value: function() {
    this._track.addEventListener("ended", this.onTrackEnded);
  } }, { key: "destroyTrack", value: function() {
    try {
      this._track.removeEventListener("ended", this.onTrackEnded), this._track.stop();
    } catch (e) {
    }
  } }]), r;
}(At), ma = new ht("DataProducer"), Fw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.dataChannel, i = t.sctpStreamParameters, s = t.appData;
    return I(this, r), e = c.call(this), e._closed = !1, e._observer = new At(), ma.debug("constructor()"), e._id = a, e._dataChannel = n, e._sctpStreamParameters = i, e._appData = s || {}, e.handleDataChannel(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Whether the DataProducer is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * SCTP stream parameters.
    */
  }, {
    key: "sctpStreamParameters",
    get: function() {
      return this._sctpStreamParameters;
    }
    /**
    * DataChannel readyState.
    */
  }, {
    key: "readyState",
    get: function() {
      return this._dataChannel.readyState;
    }
    /**
    * DataChannel label.
    */
  }, {
    key: "label",
    get: function() {
      return this._dataChannel.label;
    }
    /**
    * DataChannel protocol.
    */
  }, {
    key: "protocol",
    get: function() {
      return this._dataChannel.protocol;
    }
    /**
    * DataChannel bufferedAmount.
    */
  }, {
    key: "bufferedAmount",
    get: function() {
      return this._dataChannel.bufferedAmount;
    }
    /**
    * DataChannel bufferedAmountLowThreshold.
    */
  }, {
    key: "bufferedAmountLowThreshold",
    get: function() {
      return this._dataChannel.bufferedAmountLowThreshold;
    },
    set: function(e) {
      this._dataChannel.bufferedAmountLowThreshold = e;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: function(e) {
      throw new Error("cannot override appData object");
    }
  }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Closes the DataProducer.
    */
  }, {
    key: "close",
    value: function() {
      this._closed || (ma.debug("close()"), this._closed = !0, this._dataChannel.close(), this.emit("@close"), this._observer.safeEmit("close"));
    }
    /**
    * Transport was closed.
    */
  }, {
    key: "transportClosed",
    value: function() {
      this._closed || (ma.debug("transportClosed()"), this._closed = !0, this._dataChannel.close(), this.safeEmit("transportclose"), this._observer.safeEmit("close"));
    }
    /**
    * Send a message.
    *
    * @param {String|Blob|ArrayBuffer|ArrayBufferView} data.
    */
  }, { key: "send", value: function(e) {
    if (ma.debug("send()"), this._closed)
      throw new yr("closed");
    this._dataChannel.send(e);
  } }, { key: "handleDataChannel", value: function() {
    var e = this;
    this._dataChannel.addEventListener("open", function() {
      e._closed || (ma.debug('DataChannel "open" event'), e.safeEmit("open"));
    }), this._dataChannel.addEventListener("error", function(a) {
      if (!e._closed) {
        var n = a.error;
        n || (n = new Error("unknown DataChannel error")), n.errorDetail === "sctp-failure" ? ma.error("DataChannel SCTP error [sctpCauseCode:%s]: %s", n.sctpCauseCode, n.message) : ma.error('DataChannel "error" event: %o', n), e.safeEmit("error", n);
      }
    }), this._dataChannel.addEventListener("close", function() {
      e._closed || (ma.warn('DataChannel "close" event'), e._closed = !0, e.emit("@close"), e.safeEmit("close"), e._observer.safeEmit("close"));
    }), this._dataChannel.addEventListener("message", function() {
      e._closed || ma.warn('DataChannel "message" event in a DataProducer, message discarded');
    }), this._dataChannel.addEventListener("bufferedamountlow", function() {
      e._closed || e.safeEmit("bufferedamountlow");
    });
  } }]), r;
}(At), vn = new ht("DataConsumer"), Vw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.dataProducerId, i = t.dataChannel, s = t.sctpStreamParameters, u = t.appData;
    return I(this, r), e = c.call(this), e._closed = !1, e._observer = new At(), vn.debug("constructor()"), e._id = a, e._dataProducerId = n, e._dataChannel = i, e._sctpStreamParameters = s, e._appData = u || {}, e.handleDataChannel(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Associated DataProducer id.
    */
  }, {
    key: "dataProducerId",
    get: function() {
      return this._dataProducerId;
    }
    /**
    * Whether the DataConsumer is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * SCTP stream parameters.
    */
  }, {
    key: "sctpStreamParameters",
    get: function() {
      return this._sctpStreamParameters;
    }
    /**
    * DataChannel readyState.
    */
  }, {
    key: "readyState",
    get: function() {
      return this._dataChannel.readyState;
    }
    /**
    * DataChannel label.
    */
  }, {
    key: "label",
    get: function() {
      return this._dataChannel.label;
    }
    /**
    * DataChannel protocol.
    */
  }, {
    key: "protocol",
    get: function() {
      return this._dataChannel.protocol;
    }
    /**
    * DataChannel binaryType.
    */
  }, {
    key: "binaryType",
    get: function() {
      return this._dataChannel.binaryType;
    },
    set: function(e) {
      this._dataChannel.binaryType = e;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: function(e) {
      throw new Error("cannot override appData object");
    }
  }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Closes the DataConsumer.
    */
  }, {
    key: "close",
    value: function() {
      this._closed || (vn.debug("close()"), this._closed = !0, this._dataChannel.close(), this.emit("@close"), this._observer.safeEmit("close"));
    }
    /**
    * Transport was closed.
    */
  }, { key: "transportClosed", value: function() {
    this._closed || (vn.debug("transportClosed()"), this._closed = !0, this._dataChannel.close(), this.safeEmit("transportclose"), this._observer.safeEmit("close"));
  } }, { key: "handleDataChannel", value: function() {
    var e = this;
    this._dataChannel.addEventListener("open", function() {
      e._closed || (vn.debug('DataChannel "open" event'), e.safeEmit("open"));
    }), this._dataChannel.addEventListener("error", function(a) {
      if (!e._closed) {
        var n = a.error;
        n || (n = new Error("unknown DataChannel error")), n.errorDetail === "sctp-failure" ? vn.error("DataChannel SCTP error [sctpCauseCode:%s]: %s", n.sctpCauseCode, n.message) : vn.error('DataChannel "error" event: %o', n), e.safeEmit("error", n);
      }
    }), this._dataChannel.addEventListener("close", function() {
      e._closed || (vn.warn('DataChannel "close" event'), e._closed = !0, e.emit("@close"), e.safeEmit("close"), e._observer.safeEmit("close"));
    }), this._dataChannel.addEventListener("message", function(a) {
      e._closed || e.safeEmit("message", a.data);
    });
  } }]), r;
}(At), Ur = new ht("Transport"), Hw = /* @__PURE__ */ D(function o(c) {
  var r = this;
  I(this, o), this.consumerOptions = c, this.promise = new Promise(function(t, e) {
    r.resolve = t, r.reject = e;
  });
}), jw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.direction, n = t.id, i = t.iceParameters, s = t.iceCandidates, u = t.dtlsParameters, l = t.sctpParameters, p = t.iceServers, h = t.iceTransportPolicy, v = t.additionalSettings, m = t.proprietaryConstraints, g = t.appData, w = t.handlerFactory, k = t.extendedRtpCapabilities, T = t.canProduceByKind;
    return I(this, r), e = c.call(this), e._closed = !1, e._connectionState = "new", e._producers = /* @__PURE__ */ new Map(), e._consumers = /* @__PURE__ */ new Map(), e._dataProducers = /* @__PURE__ */ new Map(), e._dataConsumers = /* @__PURE__ */ new Map(), e._probatorConsumerCreated = !1, e._awaitQueue = new Fs(), e._pendingConsumerTasks = [], e._consumerCreationInProgress = !1, e._pendingPauseConsumers = /* @__PURE__ */ new Map(), e._consumerPauseInProgress = !1, e._pendingResumeConsumers = /* @__PURE__ */ new Map(), e._consumerResumeInProgress = !1, e._pendingCloseConsumers = /* @__PURE__ */ new Map(), e._consumerCloseInProgress = !1, e._observer = new At(), Ur.debug("constructor() [id:%s, direction:%s]", n, a), e._id = n, e._direction = a, e._extendedRtpCapabilities = k, e._canProduceByKind = T, e._maxSctpMessageSize = l ? l.maxMessageSize : null, v = Nr(v, {}), delete v.iceServers, delete v.iceTransportPolicy, delete v.bundlePolicy, delete v.rtcpMuxPolicy, delete v.sdpSemantics, e._handler = w(), e._handler.run({ direction: a, iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l, iceServers: p, iceTransportPolicy: h, additionalSettings: v, proprietaryConstraints: m, extendedRtpCapabilities: k }), e._appData = g || {}, e.handleHandler(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Whether the Transport is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * Transport direction.
    */
  }, {
    key: "direction",
    get: function() {
      return this._direction;
    }
    /**
    * RTC handler instance.
    */
  }, {
    key: "handler",
    get: function() {
      return this._handler;
    }
    /**
    * Connection state.
    */
  }, {
    key: "connectionState",
    get: function() {
      return this._connectionState;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: (
      /**
      * Invalid setter.
      */
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      function(e) {
        throw new Error("cannot override appData object");
      }
    )
  }, { key: "producers", get: function() {
    return this._producers;
  } }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Close the Transport.
    */
  }, {
    key: "close",
    value: function() {
      if (!this._closed) {
        Ur.debug("close()"), this._closed = !0, this._awaitQueue.stop(), this._handler.close();
        var e = ae(this._producers.values()), a;
        try {
          for (e.s(); !(a = e.n()).done; ) {
            var n = a.value;
            n.transportClosed();
          }
        } catch (w) {
          e.e(w);
        } finally {
          e.f();
        }
        this._producers.clear();
        var i = ae(this._consumers.values()), s;
        try {
          for (i.s(); !(s = i.n()).done; ) {
            var u = s.value;
            u.transportClosed();
          }
        } catch (w) {
          i.e(w);
        } finally {
          i.f();
        }
        this._consumers.clear();
        var l = ae(this._dataProducers.values()), p;
        try {
          for (l.s(); !(p = l.n()).done; ) {
            var h = p.value;
            h.transportClosed();
          }
        } catch (w) {
          l.e(w);
        } finally {
          l.f();
        }
        this._dataProducers.clear();
        var v = ae(this._dataConsumers.values()), m;
        try {
          for (v.s(); !(m = v.n()).done; ) {
            var g = m.value;
            g.transportClosed();
          }
        } catch (w) {
          v.e(w);
        } finally {
          v.f();
        }
        this._dataConsumers.clear(), this._observer.safeEmit("close");
      }
    }
    /**
    * Get associated Transport (RTCPeerConnection) stats.
    *
    * @returns {RTCStatsReport}
    */
  }, {
    key: "getStats",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (!this._closed) {
                  i.next = 2;
                  break;
                }
                throw new yr("closed");
              case 2:
                return i.abrupt("return", this._handler.getTransportStats());
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Restart ICE connection.
    */
  }, {
    key: "restartIce",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (s = n.iceParameters, Ur.debug("restartIce()"), !this._closed) {
                  l.next = 6;
                  break;
                }
                throw new yr("closed");
              case 6:
                if (s) {
                  l.next = 8;
                  break;
                }
                throw new TypeError("missing iceParameters");
              case 8:
                return l.abrupt("return", this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function p() {
                  return d().wrap(function(v) {
                    for (; ; )
                      switch (v.prev = v.next) {
                        case 0:
                          return v.abrupt("return", i._handler.restartIce(s));
                        case 1:
                        case "end":
                          return v.stop();
                      }
                  }, p);
                })), "transport.restartIce()"));
              case 9:
              case "end":
                return l.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Update ICE servers.
    */
  }, {
    key: "updateIceServers",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this, i, s, u = arguments;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                if (i = u.length > 0 && u[0] !== void 0 ? u[0] : {}, s = i.iceServers, Ur.debug("updateIceServers()"), !this._closed) {
                  p.next = 6;
                  break;
                }
                throw new yr("closed");
              case 6:
                if (Array.isArray(s)) {
                  p.next = 8;
                  break;
                }
                throw new TypeError("missing iceServers");
              case 8:
                return p.abrupt("return", this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function h() {
                  return d().wrap(function(m) {
                    for (; ; )
                      switch (m.prev = m.next) {
                        case 0:
                          return m.abrupt("return", n._handler.updateIceServers(s));
                        case 1:
                        case "end":
                          return m.stop();
                      }
                  }, h);
                })), "transport.updateIceServers()"));
              case 9:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Create a Producer.
    */
  }, {
    key: "produce",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this, i, s, u, l, p, h, v, m, g, w, k, T, _, E = arguments;
        return d().wrap(function(C) {
          for (; ; )
            switch (C.prev = C.next) {
              case 0:
                if (i = E.length > 0 && E[0] !== void 0 ? E[0] : {}, s = i.track, u = i.encodings, l = i.codecOptions, p = i.codec, h = i.stopTracks, v = h === void 0 ? !0 : h, m = i.disableTrackOnPause, g = m === void 0 ? !0 : m, w = i.zeroRtpOnPause, k = w === void 0 ? !1 : w, T = i.appData, _ = T === void 0 ? {} : T, Ur.debug("produce() [track:%o]", s), !this._closed) {
                  C.next = 6;
                  break;
                }
                throw new yr("closed");
              case 6:
                if (s) {
                  C.next = 10;
                  break;
                }
                throw new TypeError("missing track");
              case 10:
                if (this._direction === "send") {
                  C.next = 14;
                  break;
                }
                throw new lt("not a sending Transport");
              case 14:
                if (this._canProduceByKind[s.kind]) {
                  C.next = 18;
                  break;
                }
                throw new lt("cannot produce ".concat(s.kind));
              case 18:
                if (s.readyState !== "ended") {
                  C.next = 22;
                  break;
                }
                throw new yr("track ended");
              case 22:
                if (!(this.listenerCount("connect") === 0 && this._connectionState === "new")) {
                  C.next = 26;
                  break;
                }
                throw new TypeError('no "connect" listener set into this transport');
              case 26:
                if (this.listenerCount("produce") !== 0) {
                  C.next = 30;
                  break;
                }
                throw new TypeError('no "produce" listener set into this transport');
              case 30:
                if (!(_ && ce(_) !== "object")) {
                  C.next = 32;
                  break;
                }
                throw new TypeError("if given, appData must be an object");
              case 32:
                return C.abrupt("return", this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function L() {
                  var G, j, ee, Y, Z, F, x, ie;
                  return d().wrap(function(H) {
                    for (; ; )
                      switch (H.prev = H.next) {
                        case 0:
                          if (!(u && !Array.isArray(u))) {
                            H.next = 4;
                            break;
                          }
                          throw TypeError("encodings must be an array");
                        case 4:
                          u && u.length === 0 ? G = void 0 : u && (G = u.map(function(U) {
                            var J = { active: !0 };
                            return U.active === !1 && (J.active = !1), typeof U.dtx == "boolean" && (J.dtx = U.dtx), typeof U.scalabilityMode == "string" && (J.scalabilityMode = U.scalabilityMode), typeof U.scaleResolutionDownBy == "number" && (J.scaleResolutionDownBy = U.scaleResolutionDownBy), typeof U.maxBitrate == "number" && (J.maxBitrate = U.maxBitrate), typeof U.maxFramerate == "number" && (J.maxFramerate = U.maxFramerate), typeof U.adaptivePtime == "boolean" && (J.adaptivePtime = U.adaptivePtime), typeof U.priority == "string" && (J.priority = U.priority), typeof U.networkPriority == "string" && (J.networkPriority = U.networkPriority), J;
                          }));
                        case 5:
                          return H.next = 7, n._handler.send({ track: s, encodings: G, codecOptions: l, codec: p });
                        case 7:
                          return j = H.sent, ee = j.localId, Y = j.rtpParameters, Z = j.rtpSender, H.prev = 11, gl(Y), H.next = 15, new Promise(function(U, J) {
                            n.safeEmit("produce", { kind: s.kind, rtpParameters: Y, appData: _ }, U, J);
                          });
                        case 15:
                          return F = H.sent, x = F.id, ie = new Lw({ id: x, localId: ee, rtpSender: Z, track: s, rtpParameters: Y, stopTracks: v, disableTrackOnPause: g, zeroRtpOnPause: k, appData: _ }), n._producers.set(ie.id, ie), n.handleProducer(ie), n._observer.safeEmit("newproducer", ie), H.abrupt("return", ie);
                        case 24:
                          throw H.prev = 24, H.t0 = H.catch(11), n._handler.stopSending(ee).catch(function() {
                          }), H.t0;
                        case 28:
                        case "end":
                          return H.stop();
                      }
                  }, L, null, [[11, 24]]);
                })), "transport.produce()").catch(function(L) {
                  if (v)
                    try {
                      s.stop();
                    } catch (G) {
                    }
                  throw L;
                }));
              case 33:
              case "end":
                return C.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Create a Consumer to consume a remote Producer.
    */
  }, {
    key: "consume",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s, u, l, p, h, v, m, g, w;
        return d().wrap(function(T) {
          for (; ; )
            switch (T.prev = T.next) {
              case 0:
                if (s = n.id, u = n.producerId, l = n.kind, p = n.rtpParameters, h = n.streamId, v = n.appData, m = v === void 0 ? {} : v, Ur.debug("consume()"), p = Nr(p, void 0), !this._closed) {
                  T.next = 7;
                  break;
                }
                throw new yr("closed");
              case 7:
                if (this._direction === "recv") {
                  T.next = 11;
                  break;
                }
                throw new lt("not a receiving Transport");
              case 11:
                if (typeof s == "string") {
                  T.next = 15;
                  break;
                }
                throw new TypeError("missing id");
              case 15:
                if (typeof u == "string") {
                  T.next = 19;
                  break;
                }
                throw new TypeError("missing producerId");
              case 19:
                if (!(l !== "audio" && l !== "video")) {
                  T.next = 23;
                  break;
                }
                throw new TypeError("invalid kind '".concat(l, "'"));
              case 23:
                if (!(this.listenerCount("connect") === 0 && this._connectionState === "new")) {
                  T.next = 27;
                  break;
                }
                throw new TypeError('no "connect" listener set into this transport');
              case 27:
                if (!(m && ce(m) !== "object")) {
                  T.next = 29;
                  break;
                }
                throw new TypeError("if given, appData must be an object");
              case 29:
                if (g = Cw(p, this._extendedRtpCapabilities), g) {
                  T.next = 32;
                  break;
                }
                throw new lt("cannot consume this Producer");
              case 32:
                return w = new Hw({ id: s, producerId: u, kind: l, rtpParameters: p, streamId: h, appData: m }), this._pendingConsumerTasks.push(w), Mu(function() {
                  if (i._closed)
                    throw new yr("closed");
                  i._consumerCreationInProgress === !1 && i.createPendingConsumers();
                }), T.abrupt("return", w.promise);
              case 36:
              case "end":
                return T.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Create a DataProducer
    */
  }, {
    key: "produceData",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this, i, s, u, l, p, h, v, m, g, w, k, T = arguments;
        return d().wrap(function(E) {
          for (; ; )
            switch (E.prev = E.next) {
              case 0:
                if (i = T.length > 0 && T[0] !== void 0 ? T[0] : {}, s = i.ordered, u = s === void 0 ? !0 : s, l = i.maxPacketLifeTime, p = i.maxRetransmits, h = i.label, v = h === void 0 ? "" : h, m = i.protocol, g = m === void 0 ? "" : m, w = i.appData, k = w === void 0 ? {} : w, Ur.debug("produceData()"), !this._closed) {
                  E.next = 6;
                  break;
                }
                throw new yr("closed");
              case 6:
                if (this._direction === "send") {
                  E.next = 10;
                  break;
                }
                throw new lt("not a sending Transport");
              case 10:
                if (this._maxSctpMessageSize) {
                  E.next = 14;
                  break;
                }
                throw new lt("SCTP not enabled by remote Transport");
              case 14:
                if (!(this.listenerCount("connect") === 0 && this._connectionState === "new")) {
                  E.next = 18;
                  break;
                }
                throw new TypeError('no "connect" listener set into this transport');
              case 18:
                if (this.listenerCount("producedata") !== 0) {
                  E.next = 22;
                  break;
                }
                throw new TypeError('no "producedata" listener set into this transport');
              case 22:
                if (!(k && ce(k) !== "object")) {
                  E.next = 24;
                  break;
                }
                throw new TypeError("if given, appData must be an object");
              case 24:
                return (l || p) && (u = !1), E.abrupt("return", this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function S() {
                  var C, L, G, j, ee, Y;
                  return d().wrap(function(F) {
                    for (; ; )
                      switch (F.prev = F.next) {
                        case 0:
                          return F.next = 2, n._handler.sendDataChannel({ ordered: u, maxPacketLifeTime: l, maxRetransmits: p, label: v, protocol: g });
                        case 2:
                          return C = F.sent, L = C.dataChannel, G = C.sctpStreamParameters, Nd(G), F.next = 8, new Promise(function(x, ie) {
                            n.safeEmit("producedata", { sctpStreamParameters: G, label: v, protocol: g, appData: k }, x, ie);
                          });
                        case 8:
                          return j = F.sent, ee = j.id, Y = new Fw({ id: ee, dataChannel: L, sctpStreamParameters: G, appData: k }), n._dataProducers.set(Y.id, Y), n.handleDataProducer(Y), n._observer.safeEmit("newdataproducer", Y), F.abrupt("return", Y);
                        case 15:
                        case "end":
                          return F.stop();
                      }
                  }, S);
                })), "transport.produceData()"));
              case 26:
              case "end":
                return E.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Create a DataConsumer
    */
  }, {
    key: "consumeData",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s, u, l, p, h, v, m, g, w;
        return d().wrap(function(T) {
          for (; ; )
            switch (T.prev = T.next) {
              case 0:
                if (s = n.id, u = n.dataProducerId, l = n.sctpStreamParameters, p = n.label, h = p === void 0 ? "" : p, v = n.protocol, m = v === void 0 ? "" : v, g = n.appData, w = g === void 0 ? {} : g, Ur.debug("consumeData()"), l = Nr(l, void 0), !this._closed) {
                  T.next = 7;
                  break;
                }
                throw new yr("closed");
              case 7:
                if (this._direction === "recv") {
                  T.next = 11;
                  break;
                }
                throw new lt("not a receiving Transport");
              case 11:
                if (this._maxSctpMessageSize) {
                  T.next = 15;
                  break;
                }
                throw new lt("SCTP not enabled by remote Transport");
              case 15:
                if (typeof s == "string") {
                  T.next = 19;
                  break;
                }
                throw new TypeError("missing id");
              case 19:
                if (typeof u == "string") {
                  T.next = 23;
                  break;
                }
                throw new TypeError("missing dataProducerId");
              case 23:
                if (!(this.listenerCount("connect") === 0 && this._connectionState === "new")) {
                  T.next = 27;
                  break;
                }
                throw new TypeError('no "connect" listener set into this transport');
              case 27:
                if (!(w && ce(w) !== "object")) {
                  T.next = 29;
                  break;
                }
                throw new TypeError("if given, appData must be an object");
              case 29:
                return Nd(l), T.abrupt("return", this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function _() {
                  var E, S, C;
                  return d().wrap(function(G) {
                    for (; ; )
                      switch (G.prev = G.next) {
                        case 0:
                          return G.next = 2, i._handler.receiveDataChannel({ sctpStreamParameters: l, label: h, protocol: m });
                        case 2:
                          return E = G.sent, S = E.dataChannel, C = new Vw({ id: s, dataProducerId: u, dataChannel: S, sctpStreamParameters: l, appData: w }), i._dataConsumers.set(C.id, C), i.handleDataConsumer(C), i._observer.safeEmit("newdataconsumer", C), G.abrupt("return", C);
                        case 9:
                        case "end":
                          return G.stop();
                      }
                  }, _);
                })), "transport.consumeData()"));
              case 31:
              case "end":
                return T.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // This method is guaranteed to never throw.
  }, { key: "createPendingConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this._consumerCreationInProgress = !0, this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function u() {
                var l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y, Z, F, x, ie, B, H, U, J, X, re, pe;
                return d().wrap(function(oe) {
                  for (; ; )
                    switch (oe.prev = oe.next) {
                      case 0:
                        if (n._pendingConsumerTasks.length !== 0) {
                          oe.next = 3;
                          break;
                        }
                        return Ur.debug("createPendingConsumers() | there is no Consumer to be created"), oe.abrupt("return");
                      case 3:
                        l = sr(n._pendingConsumerTasks), n._pendingConsumerTasks = [], p = void 0, h = [], v = ae(l);
                        try {
                          for (v.s(); !(m = v.n()).done; )
                            g = m.value, w = g.consumerOptions, k = w.id, T = w.kind, _ = w.rtpParameters, E = w.streamId, h.push({ trackId: k, kind: T, rtpParameters: _, streamId: E });
                        } catch (te) {
                          v.e(te);
                        } finally {
                          v.f();
                        }
                        return oe.prev = 9, oe.next = 12, n._handler.receive(h);
                      case 12:
                        for (S = oe.sent, C = 0; C < S.length; C++)
                          L = l[C], G = S[C], j = L.consumerOptions, ee = j.id, Y = j.producerId, Z = j.kind, F = j.rtpParameters, x = j.appData, ie = G.localId, B = G.rtpReceiver, H = G.track, U = new Uw({ id: ee, localId: ie, producerId: Y, rtpReceiver: B, track: H, rtpParameters: F, appData: x }), n._consumers.set(U.id, U), n.handleConsumer(U), !n._probatorConsumerCreated && !p && Z === "video" && (p = U), n._observer.safeEmit("newconsumer", U), L.resolve(U);
                        oe.next = 20;
                        break;
                      case 16:
                        oe.prev = 16, oe.t0 = oe.catch(9), J = ae(l);
                        try {
                          for (J.s(); !(X = J.n()).done; )
                            re = X.value, re.reject(oe.t0);
                        } catch (te) {
                          J.e(te);
                        } finally {
                          J.f();
                        }
                      case 20:
                        if (!p) {
                          oe.next = 32;
                          break;
                        }
                        return oe.prev = 21, pe = Pw(p.rtpParameters), oe.next = 25, n._handler.receive([{ trackId: "probator", kind: "video", rtpParameters: pe }]);
                      case 25:
                        Ur.debug("createPendingConsumers() | Consumer for RTP probation created"), n._probatorConsumerCreated = !0, oe.next = 32;
                        break;
                      case 29:
                        oe.prev = 29, oe.t1 = oe.catch(21), Ur.error("createPendingConsumers() | failed to create Consumer for RTP probation:%o", oe.t1);
                      case 32:
                      case "end":
                        return oe.stop();
                    }
                }, u, null, [[9, 16], [21, 29]]);
              })), "transport.createPendingConsumers()").then(function() {
                n._consumerCreationInProgress = !1, n._pendingConsumerTasks.length > 0 && n.createPendingConsumers();
              }).catch(function() {
              });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pausePendingConsumers", value: function() {
    var e = this;
    this._consumerPauseInProgress = !0, this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (e._pendingPauseConsumers.size !== 0) {
                u.next = 3;
                break;
              }
              return Ur.debug("pausePendingConsumers() | there is no Consumer to be paused"), u.abrupt("return");
            case 3:
              return n = Array.from(e._pendingPauseConsumers.values()), e._pendingPauseConsumers.clear(), u.prev = 5, i = n.map(function(l) {
                return l.localId;
              }), u.next = 9, e._handler.pauseReceiving(i);
            case 9:
              u.next = 14;
              break;
            case 11:
              u.prev = 11, u.t0 = u.catch(5), Ur.error("pausePendingConsumers() | failed to pause Consumers:", u.t0);
            case 14:
            case "end":
              return u.stop();
          }
      }, a, null, [[5, 11]]);
    })), "transport.pausePendingConsumers").then(function() {
      e._consumerPauseInProgress = !1, e._pendingPauseConsumers.size > 0 && e.pausePendingConsumers();
    }).catch(function() {
    });
  } }, { key: "resumePendingConsumers", value: function() {
    var e = this;
    this._consumerResumeInProgress = !0, this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (e._pendingResumeConsumers.size !== 0) {
                u.next = 3;
                break;
              }
              return Ur.debug("resumePendingConsumers() | there is no Consumer to be resumed"), u.abrupt("return");
            case 3:
              return n = Array.from(e._pendingResumeConsumers.values()), e._pendingResumeConsumers.clear(), u.prev = 5, i = n.map(function(l) {
                return l.localId;
              }), u.next = 9, e._handler.resumeReceiving(i);
            case 9:
              u.next = 14;
              break;
            case 11:
              u.prev = 11, u.t0 = u.catch(5), Ur.error("resumePendingConsumers() | failed to resume Consumers:", u.t0);
            case 14:
            case "end":
              return u.stop();
          }
      }, a, null, [[5, 11]]);
    })), "transport.resumePendingConsumers").then(function() {
      e._consumerResumeInProgress = !1, e._pendingResumeConsumers.size > 0 && e.resumePendingConsumers();
    }).catch(function() {
    });
  } }, { key: "closePendingConsumers", value: function() {
    var e = this;
    this._consumerCloseInProgress = !0, this._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (e._pendingCloseConsumers.size !== 0) {
                s.next = 3;
                break;
              }
              return Ur.debug("closePendingConsumers() | there is no Consumer to be closed"), s.abrupt("return");
            case 3:
              return n = Array.from(e._pendingCloseConsumers.values()), e._pendingCloseConsumers.clear(), s.prev = 5, s.next = 8, e._handler.stopReceiving(n.map(function(u) {
                return u.localId;
              }));
            case 8:
              s.next = 13;
              break;
            case 10:
              s.prev = 10, s.t0 = s.catch(5), Ur.error("closePendingConsumers() | failed to close Consumers:", s.t0);
            case 13:
            case "end":
              return s.stop();
          }
      }, a, null, [[5, 10]]);
    })), "transport.closePendingConsumers").then(function() {
      e._consumerCloseInProgress = !1, e._pendingCloseConsumers.size > 0 && e.closePendingConsumers();
    }).catch(function() {
    });
  } }, { key: "handleHandler", value: function() {
    var e = this, a = this._handler;
    a.on("@connect", function(n, i, s) {
      var u = n.dtlsParameters;
      if (e._closed) {
        s(new yr("closed"));
        return;
      }
      e.safeEmit("connect", { dtlsParameters: u }, i, s);
    }), a.on("@connectionstatechange", function(n) {
      n !== e._connectionState && (Ur.debug("connection state changed to %s", n), e._connectionState = n, e._closed || e.safeEmit("connectionstatechange", n));
    });
  } }, { key: "handleProducer", value: function(e) {
    var a = this;
    e.on("@close", function() {
      a._producers.delete(e.id), !a._closed && a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function n() {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", a._handler.stopSending(e.localId));
              case 1:
              case "end":
                return s.stop();
            }
        }, n);
      })), "producer @close event").catch(function(n) {
        return Ur.warn("producer.close() failed:%o", n);
      });
    }), e.on("@pause", function(n, i) {
      a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function s() {
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                return l.abrupt("return", a._handler.pauseSending(e.localId));
              case 1:
              case "end":
                return l.stop();
            }
        }, s);
      })), "producer @pause event").then(n).catch(i);
    }), e.on("@resume", function(n, i) {
      a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function s() {
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                return l.abrupt("return", a._handler.resumeSending(e.localId));
              case 1:
              case "end":
                return l.stop();
            }
        }, s);
      })), "producer @resume event").then(n).catch(i);
    }), e.on("@replacetrack", function(n, i, s) {
      a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function u() {
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return p.abrupt("return", a._handler.replaceTrack(e.localId, n));
              case 1:
              case "end":
                return p.stop();
            }
        }, u);
      })), "producer @replacetrack event").then(i).catch(s);
    }), e.on("@setmaxspatiallayer", function(n, i, s) {
      a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function u() {
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return p.abrupt("return", a._handler.setMaxSpatialLayer(e.localId, n));
              case 1:
              case "end":
                return p.stop();
            }
        }, u);
      })), "producer @setmaxspatiallayer event").then(i).catch(s);
    }), e.on("@setrtpencodingparameters", function(n, i, s) {
      a._awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function u() {
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return p.abrupt("return", a._handler.setRtpEncodingParameters(e.localId, n));
              case 1:
              case "end":
                return p.stop();
            }
        }, u);
      })), "producer @setrtpencodingparameters event").then(i).catch(s);
    }), e.on("@getstats", function(n, i) {
      if (a._closed)
        return i(new yr("closed"));
      a._handler.getSenderStats(e.localId).then(n).catch(i);
    });
  } }, { key: "handleConsumer", value: function(e) {
    var a = this;
    e.on("@close", function() {
      a._consumers.delete(e.id), a._pendingPauseConsumers.delete(e.id), a._pendingResumeConsumers.delete(e.id), !a._closed && (a._pendingCloseConsumers.set(e.id, e), a._consumerCloseInProgress === !1 && a.closePendingConsumers());
    }), e.on("@pause", function() {
      a._pendingResumeConsumers.has(e.id) && a._pendingResumeConsumers.delete(e.id), a._pendingPauseConsumers.set(e.id, e), Mu(function() {
        a._closed || a._consumerPauseInProgress === !1 && a.pausePendingConsumers();
      });
    }), e.on("@resume", function() {
      a._pendingPauseConsumers.has(e.id) && a._pendingPauseConsumers.delete(e.id), a._pendingResumeConsumers.set(e.id, e), Mu(function() {
        a._closed || a._consumerResumeInProgress === !1 && a.resumePendingConsumers();
      });
    }), e.on("@getstats", function(n, i) {
      if (a._closed)
        return i(new yr("closed"));
      a._handler.getReceiverStats(e.localId).then(n).catch(i);
    });
  } }, { key: "handleDataProducer", value: function(e) {
    var a = this;
    e.on("@close", function() {
      a._dataProducers.delete(e.id);
    });
  } }, { key: "handleDataConsumer", value: function(e) {
    var a = this;
    e.on("@close", function() {
      a._dataConsumers.delete(e.id);
    });
  } }]), r;
}(At), zr = new ht("Device");
function Gw() {
  var o, c, r, t;
  if ((typeof navigator == "undefined" ? "undefined" : ce(navigator)) === "object" && navigator.product === "ReactNative") {
    if (typeof RTCPeerConnection == "undefined") {
      zr.warn("this._detectDevice() | unsupported react-native-webrtc without RTCPeerConnection, forgot to call registerGlobals()?");
      return;
    }
    return typeof RTCRtpTransceiver != "undefined" ? (zr.debug("this._detectDevice() | ReactNative UnifiedPlan handler chosen"), "ReactNativeUnifiedPlan") : (zr.debug("this._detectDevice() | ReactNative PlanB handler chosen"), "ReactNative");
  } else if ((typeof navigator == "undefined" ? "undefined" : ce(navigator)) === "object" && typeof navigator.userAgent == "string") {
    var e = navigator.userAgent;
    e = e == null ? void 0 : e.replace("motorola edge", "motorola x");
    var a = nl.getParser(e), n = a.getEngine();
    if (a.satisfies({ chrome: ">=111", chromium: ">=111", "microsoft edge": ">=111" }))
      return "Chrome111";
    if (a.satisfies({ chrome: ">=74", chromium: ">=74", "microsoft edge": ">=88" }))
      return "Chrome74";
    if (a.satisfies({ chrome: ">=70", chromium: ">=70" }))
      return "Chrome70";
    if (a.satisfies({ ios: { OS: ">=14.3", firefox: ">=30.0" } }))
      return "Safari12";
    if (a.satisfies({ firefox: ">=111" }))
      return "Firefox111";
    if (a.satisfies({ firefox: ">=60" }))
      return "Firefox60";
    if (a.satisfies({ safari: ">=12.0" }) && typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))
      return "Safari12";
    if (((c = (o = a.parsedResult) === null || o === void 0 ? void 0 : o.os) === null || c === void 0 ? void 0 : c.name) === "iOS" && typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))
      return "Safari12";
    if (a.satisfies({ "microsoft edge": ">=11" }) && a.satisfies({ "microsoft edge": "<=18" }))
      return "Edge11";
    if (n.name && n.name.toLowerCase() === "blink") {
      var i = e.match(/(?:(?:Chrome|Chromium))[ /](\w+)/i);
      if (i) {
        var s = Number(i[1]);
        return s >= 111 ? "Chrome111" : s >= 74 ? "Chrome74" : "Chrome70";
      } else
        return "Chrome111";
    } else {
      if (((t = (r = a.parsedResult) === null || r === void 0 ? void 0 : r.os) === null || t === void 0 ? void 0 : t.name) === "iOS" && typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))
        return "Safari12";
      if (n.name && n.name.toLowerCase() === "webkit" && n.version && parseFloat(n.version) > 605)
        return "Safari12";
      zr.warn("this._detectDevice() | browser not supported [name:%s, version:%s]", a.getBrowserName(), a.getBrowserVersion());
      return;
    }
  } else {
    zr.warn("this._detectDevice() | unknown device");
    return;
  }
}
var Bw = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = c.handlerName, t = c.handlerFactory, e = c.Handler;
    if (I(this, o), this._loaded = !1, this._observer = new At(), zr.debug("constructor()"), e)
      if (zr.warn("constructor() | Handler option is DEPRECATED, use handlerName or handlerFactory instead"), typeof e == "string")
        r = e;
      else
        throw new TypeError("non string Handler option no longer supported, use handlerFactory instead");
    if (r && t)
      throw new TypeError("just one of handlerName or handlerInterface can be given");
    if (t)
      this._handlerFactory = t;
    else {
      if (r)
        zr.debug("constructor() | handler given: %s", r);
      else if (r = Gw(), r)
        zr.debug("constructor() | detected handler: %s", r);
      else
        throw new lt("device not supported");
      this.switchDevice(r);
    }
    var a = this._handlerFactory();
    this._handlerName = a.name, a.close(), this._extendedRtpCapabilities = void 0, this._recvRtpCapabilities = void 0, this._canProduceByKind = { audio: !1, video: !1 }, this._sctpCapabilities = void 0;
  }
  return D(o, [{
    key: "handlerName",
    get: function() {
      return this._handlerName;
    }
    /**
    * Whether the Device is loaded.
    */
  }, {
    key: "loaded",
    get: function() {
      return this._loaded;
    }
    /**
    * RTP capabilities of the Device for receiving media.
    *
    * @throws {InvalidStateError} if not loaded.
    */
  }, {
    key: "rtpCapabilities",
    get: function() {
      if (!this._loaded)
        throw new yr("not loaded");
      return this._recvRtpCapabilities;
    }
    /**
    * SCTP capabilities of the Device.
    *
    * @throws {InvalidStateError} if not loaded.
    */
  }, { key: "sctpCapabilities", get: function() {
    if (!this._loaded)
      throw new yr("not loaded");
    return this._sctpCapabilities;
  } }, {
    key: "observer",
    get: function() {
      return this._observer;
    }
    /**
    * Initialize the Device.
    */
  }, {
    key: "load",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        var a, n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (a = e.routerRtpCapabilities, zr.debug("load() [routerRtpCapabilities:%o]", a), a = Nr(a, void 0), u.prev = 3, !this._loaded) {
                  u.next = 6;
                  break;
                }
                throw new yr("already loaded");
              case 6:
                return Au(a), n = this._handlerFactory(), u.next = 10, n.getNativeRtpCapabilities();
              case 10:
                return i = u.sent, zr.debug("load() | got native RTP capabilities:%o", i), Au(i), this._extendedRtpCapabilities = _w(i, a), zr.debug("load() | got extended RTP capabilities:%o", this._extendedRtpCapabilities), this._canProduceByKind.audio = $d("audio", this._extendedRtpCapabilities), this._canProduceByKind.video = $d("video", this._extendedRtpCapabilities), this._recvRtpCapabilities = Rw(this._extendedRtpCapabilities), Au(this._recvRtpCapabilities), zr.debug("load() | got receiving RTP capabilities:%o", this._recvRtpCapabilities), u.next = 22, n.getNativeSctpCapabilities();
              case 22:
                this._sctpCapabilities = u.sent, zr.debug("load() | got native SCTP capabilities:%o", this._sctpCapabilities), Sw(this._sctpCapabilities), zr.debug("load() succeeded"), this._loaded = !0, n.close(), u.next = 34;
                break;
              case 30:
                throw u.prev = 30, u.t0 = u.catch(3), n && n.close(), u.t0;
              case 34:
              case "end":
                return u.stop();
            }
        }, t, this, [[3, 30]]);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Whether we can produce audio/video.
    *
    * @throws {InvalidStateError} if not loaded.
    * @throws {TypeError} if wrong arguments.
    */
  }, {
    key: "canProduce",
    value: function(r) {
      if (this._loaded) {
        if (r !== "audio" && r !== "video")
          throw new TypeError('invalid kind "'.concat(r, '"'));
      } else
        throw new yr("not loaded");
      return this._canProduceByKind[r];
    }
    /**
    * Creates a Transport for sending media.
    *
    * @throws {InvalidStateError} if not loaded.
    * @throws {TypeError} if wrong arguments.
    */
  }, {
    key: "createSendTransport",
    value: function(r) {
      var t = r.id, e = r.iceParameters, a = r.iceCandidates, n = r.dtlsParameters, i = r.sctpParameters, s = r.iceServers, u = r.iceTransportPolicy, l = r.additionalSettings, p = r.proprietaryConstraints, h = r.appData;
      return zr.debug("createSendTransport()"), this.createTransport({ direction: "send", id: t, iceParameters: e, iceCandidates: a, dtlsParameters: n, sctpParameters: i, iceServers: s, iceTransportPolicy: u, additionalSettings: l, proprietaryConstraints: p, appData: h });
    }
    /**
    * Creates a Transport for receiving media.
    *
    * @throws {InvalidStateError} if not loaded.
    * @throws {TypeError} if wrong arguments.
    */
  }, { key: "createRecvTransport", value: function(r) {
    var t = r.id, e = r.iceParameters, a = r.iceCandidates, n = r.dtlsParameters, i = r.sctpParameters, s = r.iceServers, u = r.iceTransportPolicy, l = r.additionalSettings, p = r.proprietaryConstraints, h = r.appData;
    return zr.debug("createRecvTransport()"), this.createTransport({ direction: "recv", id: t, iceParameters: e, iceCandidates: a, dtlsParameters: n, sctpParameters: i, iceServers: s, iceTransportPolicy: u, additionalSettings: l, proprietaryConstraints: p, appData: h });
  } }, { key: "createTransport", value: function(r) {
    var t = r.direction, e = r.id, a = r.iceParameters, n = r.iceCandidates, i = r.dtlsParameters, s = r.sctpParameters, u = r.iceServers, l = r.iceTransportPolicy, p = r.additionalSettings, h = r.proprietaryConstraints, v = r.appData;
    if (this._loaded) {
      if (typeof e != "string")
        throw new TypeError("missing id");
      if (ce(a) !== "object")
        throw new TypeError("missing iceParameters");
      if (Array.isArray(n)) {
        if (ce(i) !== "object")
          throw new TypeError("missing dtlsParameters");
        if (s && ce(s) !== "object")
          throw new TypeError("wrong sctpParameters");
        if (v && ce(v) !== "object")
          throw new TypeError("if given, appData must be an object");
      } else
        throw new TypeError("missing iceCandidates");
    } else
      throw new yr("not loaded");
    var m = new jw({ direction: t, id: e, iceParameters: a, iceCandidates: n, dtlsParameters: i, sctpParameters: s, iceServers: u, iceTransportPolicy: l, additionalSettings: p, proprietaryConstraints: h, appData: v, handlerFactory: this._handlerFactory, extendedRtpCapabilities: this._extendedRtpCapabilities, canProduceByKind: this._canProduceByKind });
    return this._observer.safeEmit("newtransport", m), m;
  } }]), o;
}();
function qs(o) {
  var c = o.sdpObject, r = /* @__PURE__ */ new Map(), t = [], e = !1, a = !1, n = ae(c.media), i;
  try {
    for (n.s(); !(i = n.n()).done; ) {
      var s = i.value, u = s.type;
      switch (u) {
        case "audio": {
          if (e)
            continue;
          e = !0;
          break;
        }
        case "video": {
          if (a)
            continue;
          a = !0;
          break;
        }
        default:
          continue;
      }
      var l = ae(s.rtp), p;
      try {
        for (l.s(); !(p = l.n()).done; ) {
          var h = p.value, v = { kind: u, mimeType: "".concat(u, "/").concat(h.codec), preferredPayloadType: h.payload, clockRate: h.rate, channels: h.encoding, parameters: {}, rtcpFeedback: [] };
          r.set(v.preferredPayloadType, v);
        }
      } catch (B) {
        l.e(B);
      } finally {
        l.f();
      }
      var m = ae(s.fmtp || []), g;
      try {
        for (m.s(); !(g = m.n()).done; ) {
          var w = g.value, k = ve.parseParams(w.config), T = r.get(w.payload);
          T && (k && k.hasOwnProperty("profile-level-id") && (k["profile-level-id"] = String(k["profile-level-id"])), T.parameters = k);
        }
      } catch (B) {
        m.e(B);
      } finally {
        m.f();
      }
      var _ = ae(s.rtcpFb || []), E;
      try {
        for (_.s(); !(E = _.n()).done; ) {
          var S = E.value, C = { type: S.type, parameter: S.subtype };
          if (C.parameter || delete C.parameter, S.payload !== "*") {
            var L = r.get(S.payload);
            if (!L)
              continue;
            L.rtcpFeedback.push(C);
          } else {
            var G = ae(r.values()), j;
            try {
              for (G.s(); !(j = G.n()).done; ) {
                var ee = j.value;
                ee.kind === u && !/.+\/rtx$/i.test(ee.mimeType) && ee.rtcpFeedback.push(C);
              }
            } catch (B) {
              G.e(B);
            } finally {
              G.f();
            }
          }
        }
      } catch (B) {
        _.e(B);
      } finally {
        _.f();
      }
      var Y = ae(s.ext || []), Z;
      try {
        for (Y.s(); !(Z = Y.n()).done; ) {
          var F = Z.value;
          if (!F["encrypt-uri"]) {
            var x = { kind: u, uri: F.uri, preferredId: F.value };
            t.push(x);
          }
        }
      } catch (B) {
        Y.e(B);
      } finally {
        Y.f();
      }
    }
  } catch (B) {
    n.e(B);
  } finally {
    n.f();
  }
  var ie = { codecs: Array.from(r.values()), headerExtensions: t };
  return ie;
}
function Ws(o) {
  var c = o.sdpObject, r = (c.media || []).find(function(n) {
    return n.iceUfrag && n.port !== 0;
  });
  if (!r)
    throw new Error("no active media section found");
  var t = r.fingerprint || c.fingerprint, e;
  switch (r.setup) {
    case "active":
      e = "client";
      break;
    case "passive":
      e = "server";
      break;
    case "actpass":
      e = "auto";
      break;
  }
  var a = { role: e, fingerprints: [{ algorithm: t.type, value: t.hash }] };
  return a;
}
function Js(o) {
  var c = o.offerMediaObject, r = (c.ssrcs || []).find(function(t) {
    return t.attribute === "cname";
  });
  return r ? r.value : "";
}
function Ks(o) {
  var c = o.offerRtpParameters, r = o.answerMediaObject, t = ae(c.codecs), e;
  try {
    var a = function() {
      var s = e.value, u = s.mimeType.toLowerCase();
      if (u !== "audio/opus")
        return 0;
      var l = (r.rtp || []).find(function(k) {
        return k.payload === s.payloadType;
      });
      if (!l)
        return 0;
      r.fmtp = r.fmtp || [];
      var p = r.fmtp.find(function(k) {
        return k.payload === s.payloadType;
      });
      p || (p = { payload: s.payloadType, config: "" }, r.fmtp.push(p));
      var h = ve.parseParams(p.config);
      switch (u) {
        case "audio/opus": {
          var v = s.parameters["sprop-stereo"];
          v !== void 0 && (h.stereo = v ? 1 : 0);
          break;
        }
      }
      p.config = "";
      for (var m = 0, g = Object.keys(h); m < g.length; m++) {
        var w = g[m];
        p.config && (p.config += ";"), p.config += "".concat(w, "=").concat(h[w]);
      }
    }, n;
    for (t.s(); !(e = t.n()).done; )
      n = a();
  } catch (i) {
    t.e(i);
  } finally {
    t.f();
  }
}
function rn(o) {
  var c = o.offerMediaObject, r = /* @__PURE__ */ new Set(), t = ae(c.ssrcs || []), e;
  try {
    for (t.s(); !(e = t.n()).done; ) {
      var a = e.value, n = a.id;
      r.add(n);
    }
  } catch (j) {
    t.e(j);
  } finally {
    t.f();
  }
  if (r.size === 0)
    throw new Error("no a=ssrc lines found");
  var i = /* @__PURE__ */ new Map(), s = ae(c.ssrcGroups || []), u;
  try {
    for (s.s(); !(u = s.n()).done; ) {
      var l = u.value;
      if (l.semantics === "FID") {
        var p = l.ssrcs.split(/\s+/), h = ar(p, 2), v = h[0], m = h[1];
        v = Number(v), m = Number(m), r.has(v) && (r.delete(v), r.delete(m), i.set(v, m));
      }
    }
  } catch (j) {
    s.e(j);
  } finally {
    s.f();
  }
  var g = ae(r), w;
  try {
    for (g.s(); !(w = g.n()).done; ) {
      var k = w.value;
      i.set(k, null);
    }
  } catch (j) {
    g.e(j);
  } finally {
    g.f();
  }
  var T = [], _ = ae(i), E;
  try {
    for (_.s(); !(E = _.n()).done; ) {
      var S = ar(E.value, 2), C = S[0], L = S[1], G = { ssrc: C };
      L && (G.rtx = { ssrc: L }), T.push(G);
    }
  } catch (j) {
    _.e(j);
  } finally {
    _.f();
  }
  return T;
}
function zo(o) {
  var c = o.offerMediaObject, r = o.numStreams;
  if (r <= 1)
    throw new TypeError("numStreams must be greater than 1");
  var t = (c.ssrcs || []).find(function(E) {
    return E.attribute === "msid";
  });
  if (!t)
    throw new Error("a=ssrc line with msid information not found");
  var e = t.value.split(" "), a = ar(e, 2), n = a[0], i = a[1], s = t.id, u;
  (c.ssrcGroups || []).some(function(E) {
    if (E.semantics !== "FID")
      return !1;
    var S = E.ssrcs.split(/\s+/);
    return Number(S[0]) === s ? (u = Number(S[1]), !0) : !1;
  });
  var l = c.ssrcs.find(function(E) {
    return E.attribute === "cname";
  });
  if (!l)
    throw new Error("a=ssrc line with cname information not found");
  for (var p = l.value, h = [], v = [], m = 0; m < r; ++m)
    h.push(s + m), u && v.push(u + m);
  c.ssrcGroups = [], c.ssrcs = [], c.ssrcGroups.push({ semantics: "SIM", ssrcs: h.join(" ") });
  for (var g = 0; g < h.length; ++g) {
    var w = h[g];
    c.ssrcs.push({ id: w, attribute: "cname", value: p }), c.ssrcs.push({ id: w, attribute: "msid", value: "".concat(n, " ").concat(i) });
  }
  for (var k = 0; k < v.length; ++k) {
    var T = h[k], _ = v[k];
    c.ssrcs.push({ id: _, attribute: "cname", value: p }), c.ssrcs.push({ id: _, attribute: "msid", value: "".concat(n, " ").concat(i) }), c.ssrcGroups.push({ semantics: "FID", ssrcs: "".concat(T, " ").concat(_) });
  }
}
var Fi = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this);
  }
  return D(r);
}(At), Qh = /* @__PURE__ */ function() {
  function o(c) {
    var r = c.iceParameters, t = c.iceCandidates, e = c.dtlsParameters, a = c.planB, n = a === void 0 ? !1 : a;
    if (I(this, o), this._mediaObject = {}, this._planB = n, r && this.setIceParameters(r), t) {
      this._mediaObject.candidates = [];
      var i = ae(t), s;
      try {
        for (i.s(); !(s = i.n()).done; ) {
          var u = s.value, l = {};
          l.component = 1, l.foundation = u.foundation, l.ip = u.ip, l.port = u.port, l.priority = u.priority, l.transport = u.protocol, l.type = u.type, u.tcpType && (l.tcptype = u.tcpType), this._mediaObject.candidates.push(l);
        }
      } catch (p) {
        i.e(p);
      } finally {
        i.f();
      }
      this._mediaObject.endOfCandidates = "end-of-candidates", this._mediaObject.iceOptions = "renomination";
    }
    e && this.setDtlsRole(e.role);
  }
  return D(o, [{ key: "mid", get: function() {
    return String(this._mediaObject.mid);
  } }, { key: "closed", get: function() {
    return this._mediaObject.port === 0;
  } }, { key: "getObject", value: function() {
    return this._mediaObject;
  } }, { key: "setIceParameters", value: function(r) {
    this._mediaObject.iceUfrag = r.usernameFragment, this._mediaObject.icePwd = r.password;
  } }, { key: "pause", value: function() {
    this._mediaObject.direction = "inactive";
  } }, { key: "disable", value: function() {
    this.pause(), delete this._mediaObject.ext, delete this._mediaObject.ssrcs, delete this._mediaObject.ssrcGroups, delete this._mediaObject.simulcast, delete this._mediaObject.simulcast_03, delete this._mediaObject.rids, delete this._mediaObject.extmapAllowMixed;
  } }, { key: "close", value: function() {
    this.disable(), this._mediaObject.port = 0;
  } }, { key: "muxSimulcastStreams", value: function(r) {
    if (this._mediaObject.simulcast && this._mediaObject.simulcast.list1) {
      var t = {};
      r.forEach(function(n) {
        n.rid && (t[n.rid] = n);
      });
      var e = this._mediaObject.simulcast.list1, a = ve.parseSimulcastStreamList(e);
      a.forEach(function(n) {
        n.forEach(function(i) {
          var s;
          i.paused = !(!((s = t[i.scid]) === null || s === void 0) && s.active);
        });
      }), this._mediaObject.simulcast.list1 = a.map(function(n) {
        return n.map(function(i) {
          return "".concat(i.paused ? "~" : "").concat(i.scid);
        }).join(",");
      }).join(";");
    }
  } }]), o;
}(), Ud = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.iceParameters, n = t.iceCandidates, i = t.dtlsParameters, s = t.sctpParameters, u = t.plainRtpParameters, l = t.planB, p = l === void 0 ? !1 : l, h = t.offerMediaObject, v = t.offerRtpParameters, m = t.answerRtpParameters, g = t.codecOptions, w = t.extmapAllowMixed, k = w === void 0 ? !1 : w, T = t.forceGoogConference, _ = T === void 0 ? !1 : T;
    switch (I(this, r), e = c.call(this, { iceParameters: a, iceCandidates: n, dtlsParameters: i, planB: p }), e._mediaObject.mid = String(h.mid), e._mediaObject.type = h.type, e._mediaObject.protocol = h.protocol, u ? (e._mediaObject.connection = { ip: u.ip, version: u.ipVersion }, e._mediaObject.port = u.port) : (e._mediaObject.connection = { ip: "127.0.0.1", version: 4 }, e._mediaObject.port = 7), h.type) {
      case "audio":
      case "video": {
        e._mediaObject.direction = "recvonly", e._mediaObject.rtp = [], e._mediaObject.rtcpFb = [], e._mediaObject.fmtp = [];
        var E = ae(m.codecs), S;
        try {
          var C = function() {
            var H = S.value, U = { payload: H.payloadType, codec: Ec(H), rate: H.clockRate };
            H.channels > 1 && (U.encoding = H.channels), e._mediaObject.rtp.push(U);
            var J = Nr(H.parameters, {});
            if (g) {
              var X = g.opusStereo, re = g.opusFec, pe = g.opusDtx, Ge = g.opusMaxPlaybackRate, oe = g.opusMaxAverageBitrate, te = g.opusPtime, Ue = g.videoGoogleStartBitrate, xe = g.videoGoogleMaxBitrate, Ve = g.videoGoogleMinBitrate, nr = v.codecs.find(function(cr) {
                return cr.payloadType === H.payloadType;
              });
              switch (H.mimeType.toLowerCase()) {
                case "audio/opus": {
                  X !== void 0 && (nr.parameters["sprop-stereo"] = X ? 1 : 0, J.stereo = X ? 1 : 0), re !== void 0 && (nr.parameters.useinbandfec = re ? 1 : 0, J.useinbandfec = re ? 1 : 0), pe !== void 0 && (nr.parameters.usedtx = pe ? 1 : 0, J.usedtx = pe ? 1 : 0), Ge !== void 0 && (J.maxplaybackrate = Ge), oe !== void 0 && (J.maxaveragebitrate = oe), te !== void 0 && (nr.parameters.ptime = te, J.ptime = te);
                  break;
                }
                case "video/vp8":
                case "video/vp9":
                case "video/h264":
                case "video/h265": {
                  Ue !== void 0 && (J["x-google-start-bitrate"] = Ue), xe !== void 0 && (J["x-google-max-bitrate"] = xe), Ve !== void 0 && (J["x-google-min-bitrate"] = Ve);
                  break;
                }
              }
            }
            for (var ke = { payload: H.payloadType, config: "" }, He = 0, Qr = Object.keys(J); He < Qr.length; He++) {
              var it = Qr[He];
              ke.config && (ke.config += ";"), ke.config += "".concat(it, "=").concat(J[it]);
            }
            ke.config && e._mediaObject.fmtp.push(ke);
            var Rt = ae(H.rtcpFeedback), Bi;
            try {
              for (Rt.s(); !(Bi = Rt.n()).done; ) {
                var qi = Bi.value;
                e._mediaObject.rtcpFb.push({ payload: H.payloadType, type: qi.type, subtype: qi.parameter });
              }
            } catch (cr) {
              Rt.e(cr);
            } finally {
              Rt.f();
            }
          };
          for (E.s(); !(S = E.n()).done; )
            C();
        } catch (B) {
          E.e(B);
        } finally {
          E.f();
        }
        e._mediaObject.payloads = m.codecs.map(function(B) {
          return B.payloadType;
        }).join(" "), e._mediaObject.ext = [];
        var L = ae(m.headerExtensions), G;
        try {
          var j = function() {
            var H = G.value, U = (h.ext || []).some(function(J) {
              return J.uri === H.uri;
            });
            if (!U)
              return 1;
            e._mediaObject.ext.push({ uri: H.uri, value: H.id });
          };
          for (L.s(); !(G = L.n()).done; )
            j();
        } catch (B) {
          L.e(B);
        } finally {
          L.f();
        }
        if (k && h.extmapAllowMixed === "extmap-allow-mixed" && (e._mediaObject.extmapAllowMixed = "extmap-allow-mixed"), h.simulcast) {
          e._mediaObject.simulcast = { dir1: "recv", list1: h.simulcast.list1 }, e._mediaObject.rids = [];
          var ee = ae(h.rids || []), Y;
          try {
            for (ee.s(); !(Y = ee.n()).done; ) {
              var Z = Y.value;
              Z.direction === "send" && e._mediaObject.rids.push({ id: Z.id, direction: "recv" });
            }
          } catch (B) {
            ee.e(B);
          } finally {
            ee.f();
          }
        } else if (h.simulcast_03) {
          e._mediaObject.simulcast_03 = { value: h.simulcast_03.value.replace(/send/g, "recv") }, e._mediaObject.rids = [];
          var F = ae(h.rids || []), x;
          try {
            for (F.s(); !(x = F.n()).done; ) {
              var ie = x.value;
              ie.direction === "send" && e._mediaObject.rids.push({ id: ie.id, direction: "recv" });
            }
          } catch (B) {
            F.e(B);
          } finally {
            F.f();
          }
        }
        e._mediaObject.rtcpMux = "rtcp-mux", e._mediaObject.rtcpRsize = "rtcp-rsize", (e._planB || _) && e._mediaObject.type === "video" && (e._mediaObject.xGoogleFlag = "conference");
        break;
      }
      case "application": {
        typeof h.sctpPort == "number" ? (e._mediaObject.payloads = "webrtc-datachannel", e._mediaObject.sctpPort = s.port, e._mediaObject.maxMessageSize = s.maxMessageSize) : h.sctpmap && (e._mediaObject.payloads = s.port, e._mediaObject.sctpmap = { app: "webrtc-datachannel", sctpmapNumber: s.port, maxMessageSize: s.maxMessageSize });
        break;
      }
    }
    return e;
  }
  return D(r, [{ key: "setDtlsRole", value: function(e) {
    switch (e) {
      case "client":
        this._mediaObject.setup = "active";
        break;
      case "server":
        this._mediaObject.setup = "passive";
        break;
      case "auto":
        this._mediaObject.setup = "actpass";
        break;
    }
  } }, { key: "resume", value: function() {
    this._mediaObject.direction = "recvonly";
  } }, { key: "muxSimulcastStreams", value: function(e) {
    var a;
    if (!(!this._mediaObject.simulcast || !this._mediaObject.simulcast.list1)) {
      var n = {}, i = ae(e), s;
      try {
        for (i.s(); !(s = i.n()).done; ) {
          var u = s.value;
          u.rid && (n[u.rid] = u);
        }
      } catch (T) {
        i.e(T);
      } finally {
        i.f();
      }
      var l = this._mediaObject.simulcast.list1, p = ve.parseSimulcastStreamList(l), h = ae(p), v;
      try {
        for (h.s(); !(v = h.n()).done; ) {
          var m = v.value, g = ae(m), w;
          try {
            for (g.s(); !(w = g.n()).done; ) {
              var k = w.value;
              k.paused = !(!((a = n[k.scid]) === null || a === void 0) && a.active);
            }
          } catch (T) {
            g.e(T);
          } finally {
            g.f();
          }
        }
      } catch (T) {
        h.e(T);
      } finally {
        h.f();
      }
      this._mediaObject.simulcast.list1 = p.map(function(T) {
        return T.map(function(_) {
          return "".concat(_.paused ? "~" : "").concat(_.scid);
        }).join(",");
      }).join(";");
    }
  } }]), r;
}(Qh), Fd = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.iceParameters, n = t.iceCandidates, i = t.dtlsParameters, s = t.sctpParameters, u = t.plainRtpParameters, l = t.planB, p = l === void 0 ? !1 : l, h = t.mid, v = t.kind, m = t.offerRtpParameters, g = t.streamId, w = t.trackId, k = t.oldDataChannelSpec, T = k === void 0 ? !1 : k;
    switch (I(this, r), e = c.call(this, { iceParameters: a, iceCandidates: n, dtlsParameters: i, planB: p }), e._mediaObject.mid = String(h), e._mediaObject.type = v, u ? (e._mediaObject.connection = { ip: u.ip, version: u.ipVersion }, e._mediaObject.protocol = "RTP/AVP", e._mediaObject.port = u.port) : (e._mediaObject.connection = { ip: "127.0.0.1", version: 4 }, s ? e._mediaObject.protocol = "UDP/DTLS/SCTP" : e._mediaObject.protocol = "UDP/TLS/RTP/SAVPF", e._mediaObject.port = 7), v) {
      case "audio":
      case "video": {
        e._mediaObject.direction = "sendonly", e._mediaObject.rtp = [], e._mediaObject.rtcpFb = [], e._mediaObject.fmtp = [], e._planB || (e._mediaObject.msid = "".concat(g || "-", " ").concat(w));
        var _ = ae(m.codecs), E;
        try {
          for (_.s(); !(E = _.n()).done; ) {
            var S = E.value, C = { payload: S.payloadType, codec: Ec(S), rate: S.clockRate };
            S.channels > 1 && (C.encoding = S.channels), e._mediaObject.rtp.push(C);
            for (var L = { payload: S.payloadType, config: "" }, G = 0, j = Object.keys(S.parameters); G < j.length; G++) {
              var ee = j[G];
              L.config && (L.config += ";"), L.config += "".concat(ee, "=").concat(S.parameters[ee]);
            }
            L.config && e._mediaObject.fmtp.push(L);
            var Y = ae(S.rtcpFeedback), Z;
            try {
              for (Y.s(); !(Z = Y.n()).done; ) {
                var F = Z.value;
                e._mediaObject.rtcpFb.push({ payload: S.payloadType, type: F.type, subtype: F.parameter });
              }
            } catch (X) {
              Y.e(X);
            } finally {
              Y.f();
            }
          }
        } catch (X) {
          _.e(X);
        } finally {
          _.f();
        }
        e._mediaObject.payloads = m.codecs.map(function(X) {
          return X.payloadType;
        }).join(" "), e._mediaObject.ext = [];
        var x = ae(m.headerExtensions), ie;
        try {
          for (x.s(); !(ie = x.n()).done; ) {
            var B = ie.value;
            e._mediaObject.ext.push({ uri: B.uri, value: B.id });
          }
        } catch (X) {
          x.e(X);
        } finally {
          x.f();
        }
        e._mediaObject.rtcpMux = "rtcp-mux", e._mediaObject.rtcpRsize = "rtcp-rsize";
        var H = m.encodings[0], U = H.ssrc, J = H.rtx && H.rtx.ssrc ? H.rtx.ssrc : void 0;
        e._mediaObject.ssrcs = [], e._mediaObject.ssrcGroups = [], m.rtcp.cname && e._mediaObject.ssrcs.push({ id: U, attribute: "cname", value: m.rtcp.cname }), e._planB && e._mediaObject.ssrcs.push({ id: U, attribute: "msid", value: "".concat(g || "-", " ").concat(w) }), J && (m.rtcp.cname && e._mediaObject.ssrcs.push({ id: J, attribute: "cname", value: m.rtcp.cname }), e._planB && e._mediaObject.ssrcs.push({ id: J, attribute: "msid", value: "".concat(g || "-", " ").concat(w) }), e._mediaObject.ssrcGroups.push({ semantics: "FID", ssrcs: "".concat(U, " ").concat(J) }));
        break;
      }
      case "application": {
        T ? (e._mediaObject.payloads = s.port, e._mediaObject.sctpmap = { app: "webrtc-datachannel", sctpmapNumber: s.port, maxMessageSize: s.maxMessageSize }) : (e._mediaObject.payloads = "webrtc-datachannel", e._mediaObject.sctpPort = s.port, e._mediaObject.maxMessageSize = s.maxMessageSize);
        break;
      }
    }
    return e;
  }
  return D(r, [{ key: "setDtlsRole", value: function(e) {
    this._mediaObject.setup = "actpass";
  } }, { key: "resume", value: function() {
    this._mediaObject.direction = "sendonly";
  } }, { key: "planBReceive", value: function(e) {
    var a = this, n = e.offerRtpParameters, i = e.streamId, s = e.trackId, u = n.encodings[0], l = u.ssrc, p = u.rtx && u.rtx.ssrc ? u.rtx.ssrc : void 0, h = this._mediaObject.payloads.split(" "), v = ae(n.codecs), m;
    try {
      for (v.s(); !(m = v.n()).done; ) {
        var g = m.value;
        if (!h.includes(String(g.payloadType))) {
          var w = { payload: g.payloadType, codec: Ec(g), rate: g.clockRate };
          g.channels > 1 && (w.encoding = g.channels), this._mediaObject.rtp.push(w);
          for (var k = { payload: g.payloadType, config: "" }, T = 0, _ = Object.keys(g.parameters); T < _.length; T++) {
            var E = _[T];
            k.config && (k.config += ";"), k.config += "".concat(E, "=").concat(g.parameters[E]);
          }
          k.config && this._mediaObject.fmtp.push(k);
          var S = ae(g.rtcpFeedback), C;
          try {
            for (S.s(); !(C = S.n()).done; ) {
              var L = C.value;
              this._mediaObject.rtcpFb.push({ payload: g.payloadType, type: L.type, subtype: L.parameter });
            }
          } catch (G) {
            S.e(G);
          } finally {
            S.f();
          }
        }
      }
    } catch (G) {
      v.e(G);
    } finally {
      v.f();
    }
    this._mediaObject.payloads += " ".concat(n.codecs.filter(function(G) {
      return !a._mediaObject.payloads.includes(G.payloadType);
    }).map(function(G) {
      return G.payloadType;
    }).join(" ")), this._mediaObject.payloads = this._mediaObject.payloads.trim(), n.rtcp.cname && this._mediaObject.ssrcs.push({ id: l, attribute: "cname", value: n.rtcp.cname }), this._mediaObject.ssrcs.push({ id: l, attribute: "msid", value: "".concat(i || "-", " ").concat(s) }), p && (n.rtcp.cname && this._mediaObject.ssrcs.push({ id: p, attribute: "cname", value: n.rtcp.cname }), this._mediaObject.ssrcs.push({ id: p, attribute: "msid", value: "".concat(i || "-", " ").concat(s) }), this._mediaObject.ssrcGroups.push({ semantics: "FID", ssrcs: "".concat(l, " ").concat(p) }));
  } }, { key: "planBStopReceiving", value: function(e) {
    var a = e.offerRtpParameters, n = a.encodings[0], i = n.ssrc, s = n.rtx && n.rtx.ssrc ? n.rtx.ssrc : void 0;
    this._mediaObject.ssrcs = this._mediaObject.ssrcs.filter(function(u) {
      return u.id !== i && u.id !== s;
    }), s && (this._mediaObject.ssrcGroups = this._mediaObject.ssrcGroups.filter(function(u) {
      return u.ssrcs !== "".concat(i, " ").concat(s);
    }));
  } }]), r;
}(Qh);
function Ec(o) {
  var c = new RegExp("^(audio|video)/(.+)", "i"), r = c.exec(o.mimeType);
  if (!r)
    throw new TypeError("invalid codec.mimeType");
  return r[2];
}
var Ou = new ht("RemoteSdp"), zs = /* @__PURE__ */ function() {
  function o(c) {
    var r = c.iceParameters, t = c.iceCandidates, e = c.dtlsParameters, a = c.sctpParameters, n = c.plainRtpParameters, i = c.planB, s = i === void 0 ? !1 : i;
    if (I(this, o), this._mediaSections = [], this._midToIndex = /* @__PURE__ */ new Map(), this._iceParameters = r, this._iceCandidates = t, this._dtlsParameters = e, this._sctpParameters = a, this._plainRtpParameters = n, this._planB = s, this._sdpObject = { version: 0, origin: { address: "0.0.0.0", ipVer: 4, netType: "IN", sessionId: 1e4, sessionVersion: 0, username: "mediasoup-client" }, name: "-", timing: { start: 0, stop: 0 }, media: [] }, r && r.iceLite && (this._sdpObject.icelite = "ice-lite"), e) {
      this._sdpObject.msidSemantic = { semantic: "WMS", token: "*" };
      var u = this._dtlsParameters.fingerprints.length;
      this._sdpObject.fingerprint = { type: e.fingerprints[u - 1].algorithm, hash: e.fingerprints[u - 1].value }, this._sdpObject.groups = [{ type: "BUNDLE", mids: "" }];
    }
    n && (this._sdpObject.origin.address = n.ip, this._sdpObject.origin.ipVer = n.ipVersion);
  }
  return D(o, [{ key: "updateIceParameters", value: function(r) {
    Ou.debug("updateIceParameters() [iceParameters:%o]", r), this._iceParameters = r, this._sdpObject.icelite = r.iceLite ? "ice-lite" : void 0;
    var t = ae(this._mediaSections), e;
    try {
      for (t.s(); !(e = t.n()).done; ) {
        var a = e.value;
        a.setIceParameters(r);
      }
    } catch (n) {
      t.e(n);
    } finally {
      t.f();
    }
  } }, { key: "updateDtlsRole", value: function(r) {
    Ou.debug("updateDtlsRole() [role:%s]", r), this._dtlsParameters.role = r;
    var t = ae(this._mediaSections), e;
    try {
      for (t.s(); !(e = t.n()).done; ) {
        var a = e.value;
        a.setDtlsRole(r);
      }
    } catch (n) {
      t.e(n);
    } finally {
      t.f();
    }
  } }, { key: "getNextMediaSectionIdx", value: function() {
    for (var r = 0; r < this._mediaSections.length; ++r) {
      var t = this._mediaSections[r];
      if (t.closed)
        return { idx: r, reuseMid: t.mid };
    }
    return { idx: this._mediaSections.length };
  } }, { key: "send", value: function(r) {
    var t = r.offerMediaObject, e = r.reuseMid, a = r.offerRtpParameters, n = r.answerRtpParameters, i = r.codecOptions, s = r.extmapAllowMixed, u = s === void 0 ? !1 : s, l = r.forceGoogConference, p = l === void 0 ? !1 : l, h = new Ud({ iceParameters: this._iceParameters, iceCandidates: this._iceCandidates, dtlsParameters: this._dtlsParameters, plainRtpParameters: this._plainRtpParameters, planB: this._planB, offerMediaObject: t, offerRtpParameters: a, answerRtpParameters: n, codecOptions: i, extmapAllowMixed: u, forceGoogConference: p });
    e ? this._replaceMediaSection(h, e) : this._midToIndex.has(h.mid) ? this._replaceMediaSection(h) : this._addMediaSection(h);
  } }, { key: "receive", value: function(r) {
    var t = r.mid, e = r.kind, a = r.offerRtpParameters, n = r.streamId, i = r.trackId, s = this._midToIndex.get(t), u;
    if (s !== void 0 && (u = this._mediaSections[s]), u)
      u.planBReceive({ offerRtpParameters: a, streamId: n, trackId: i }), this._replaceMediaSection(u);
    else {
      u = new Fd({ iceParameters: this._iceParameters, iceCandidates: this._iceCandidates, dtlsParameters: this._dtlsParameters, plainRtpParameters: this._plainRtpParameters, planB: this._planB, mid: t, kind: e, offerRtpParameters: a, streamId: n, trackId: i });
      var l = this._mediaSections.find(function(p) {
        return p.closed;
      });
      l ? this._replaceMediaSection(u, l.mid) : this._addMediaSection(u);
    }
  } }, { key: "pauseMediaSection", value: function(r) {
    var t = this._findMediaSection(r);
    t.pause();
  } }, { key: "resumeSendingMediaSection", value: function(r) {
    var t = this._findMediaSection(r);
    t.resume();
  } }, { key: "resumeReceivingMediaSection", value: function(r) {
    var t = this._findMediaSection(r);
    t.resume();
  } }, {
    key: "disableMediaSection",
    value: function(r) {
      var t = this._findMediaSection(r);
      t.disable();
    }
    /**
    * Closes media section. Returns true if the given MID corresponds to a m
    * section that has been indeed closed. False otherwise.
    *
    * NOTE: Closing the first m section is a pain since it invalidates the bundled
    * transport, so instead closing it we just disable it.
    */
  }, { key: "closeMediaSection", value: function(r) {
    var t = this._findMediaSection(r);
    return r === this._firstMid ? (Ou.debug("closeMediaSection() | cannot close first media section, disabling it instead [mid:%s]", r), this.disableMediaSection(r), !1) : (t.close(), this._regenerateBundleMids(), !0);
  } }, { key: "muxMediaSectionSimulcast", value: function(r, t) {
    var e = this._midToIndex.get(r);
    if (e === void 0)
      throw new Error("no media section found with mid '".concat(r, "'"));
    var a = this._mediaSections[e];
    if (a === void 0)
      throw new Error("no media section found with idx '".concat(e, "'"));
    a.muxSimulcastStreams(t), this._replaceMediaSection(a);
  } }, { key: "planBStopReceiving", value: function(r) {
    var t = r.mid, e = r.offerRtpParameters, a = this._findMediaSection(t);
    a.planBStopReceiving({ offerRtpParameters: e }), this._replaceMediaSection(a);
  } }, { key: "sendSctpAssociation", value: function(r) {
    var t = r.offerMediaObject, e = new Ud({ iceParameters: this._iceParameters, iceCandidates: this._iceCandidates, dtlsParameters: this._dtlsParameters, sctpParameters: this._sctpParameters, plainRtpParameters: this._plainRtpParameters, offerMediaObject: t });
    this._addMediaSection(e);
  } }, { key: "receiveSctpAssociation", value: function() {
    var r = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = r.oldDataChannelSpec, e = t === void 0 ? !1 : t, a = new Fd({ iceParameters: this._iceParameters, iceCandidates: this._iceCandidates, dtlsParameters: this._dtlsParameters, sctpParameters: this._sctpParameters, plainRtpParameters: this._plainRtpParameters, mid: "datachannel", kind: "application", oldDataChannelSpec: e });
    this._addMediaSection(a);
  } }, { key: "getSdp", value: function() {
    return this._sdpObject.origin.sessionVersion++, ve.write(this._sdpObject);
  } }, { key: "_addMediaSection", value: function(r) {
    this._firstMid || (this._firstMid = r.mid), this._mediaSections.push(r), this._midToIndex.set(r.mid, this._mediaSections.length - 1), this._sdpObject.media.push(r.getObject()), this._regenerateBundleMids();
  } }, { key: "_replaceMediaSection", value: function(r, t) {
    if (typeof t == "string") {
      var e = this._midToIndex.get(t);
      if (e === void 0)
        throw new Error("no media section found for reuseMid '".concat(t, "'"));
      var a = this._mediaSections[e];
      this._mediaSections[e] = r, this._midToIndex.delete(a.mid), this._midToIndex.set(r.mid, e), this._sdpObject.media[e] = r.getObject(), this._regenerateBundleMids();
    } else {
      var n = this._midToIndex.get(r.mid);
      if (n === void 0)
        throw new Error("no media section found with mid '".concat(r.mid, "'"));
      this._mediaSections[n] = r, this._sdpObject.media[n] = r.getObject();
    }
  } }, { key: "_findMediaSection", value: function(r) {
    var t = this._midToIndex.get(r);
    if (t === void 0)
      throw new Error("no media section found with mid '".concat(r, "'"));
    return this._mediaSections[t];
  } }, { key: "_regenerateBundleMids", value: function() {
    this._dtlsParameters && (this._sdpObject.groups[0].mids = this._mediaSections.filter(function(r) {
      return !r.closed;
    }).map(function(r) {
      return r.mid;
    }).join(" "));
  } }]), o;
}(), qw = new RegExp("^[LS]([1-9]\\d{0,1})T([1-9]\\d{0,1})");
function Qs(o) {
  var c = qw.exec(o || "");
  return c ? { spatialLayers: Number(c[1]), temporalLayers: Number(c[2]) } : { spatialLayers: 1, temporalLayers: 1 };
}
var je = new ht("Chrome70"), Vd = { OS: 1024, MIS: 1024 }, Ww = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t._sendStream = new MediaStream(), t._hasDataChannelMediaSection = !1, t._nextSendSctpStreamId = 0, t._transportReady = !1, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Chrome70";
  } }, { key: "close", value: function() {
    if (je.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
      }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return je.debug("getNativeRtpCapabilities()"), n = new RTCPeerConnection({ iceServers: [], iceTransportPolicy: "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }), p.prev = 2, n.addTransceiver("audio"), n.addTransceiver("video"), p.next = 7, n.createOffer();
            case 7:
              i = p.sent;
              try {
                n.close();
              } catch (h) {
              }
              return s = ve.parse(i.sdp), u = qs({ sdpObject: s }), p.abrupt("return", u);
            case 14:
              p.prev = 14, p.t0 = p.catch(2);
              try {
                n.close();
              } catch (h) {
              }
              throw p.t0;
            case 18:
            case "end":
              return p.stop();
          }
      }, a, null, [[2, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return je.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: Vd });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "run", value: function(e) {
    var a = this, n = e.direction, i = e.iceParameters, s = e.iceCandidates, u = e.dtlsParameters, l = e.sctpParameters, p = e.iceServers, h = e.iceTransportPolicy, v = e.additionalSettings, m = e.proprietaryConstraints, g = e.extendedRtpCapabilities;
    je.debug("run()"), this._direction = n, this._remoteSdp = new zs({ iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l }), this._sendingRtpParametersByKind = { audio: Mt("audio", g), video: Mt("video", g) }, this._sendingRemoteRtpParametersByKind = { audio: ca("audio", g), video: ca("video", g) }, u.role && u.role !== "auto" && (this._forcedLocalDtlsRole = u.role === "server" ? "client" : "server"), this._pc = new RTCPeerConnection(Q({ iceServers: p || [], iceTransportPolicy: h || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }, v), m), this._pc.connectionState ? this._pc.addEventListener("connectionstatechange", function() {
      a.emit("@connectionstatechange", a._pc.connectionState);
    }) : this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (je.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"), a._pc.iceConnectionState) {
        case "checking":
          a.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          a.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          a.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          a.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          a.emit("@connectionstatechange", "closed");
          break;
      }
    });
  } }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              je.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (je.debug("restartIce()"), this._remoteSdp.updateIceParameters(n), this._transportReady) {
                h.next = 4;
                break;
              }
              return h.abrupt("return");
            case 4:
              if (this._direction !== "send") {
                h.next = 17;
                break;
              }
              return h.next = 7, this._pc.createOffer({ iceRestart: !0 });
            case 7:
              return i = h.sent, je.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), h.next = 11, this._pc.setLocalDescription(i);
            case 11:
              return s = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]", s), h.next = 15, this._pc.setRemoteDescription(s);
            case 15:
              h.next = 27;
              break;
            case 17:
              return u = { type: "offer", sdp: this._remoteSdp.getSdp() }, je.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]", u), h.next = 21, this._pc.setRemoteDescription(u);
            case 21:
              return h.next = 23, this._pc.createAnswer();
            case 23:
              return l = h.sent, je.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]", l), h.next = 27, this._pc.setLocalDescription(l);
            case 27:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y, Z, F, x;
      return d().wrap(function(B) {
        for (; ; )
          switch (B.prev = B.next) {
            case 0:
              return i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, this.assertSendDirection(), je.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), h = Nr(this._sendingRtpParametersByKind[i.kind], {}), h.codecs = qt(h.codecs, l), v = Nr(this._sendingRemoteRtpParametersByKind[i.kind], {}), v.codecs = qt(v.codecs, l), m = this._remoteSdp.getNextMediaSectionIdx(), g = this._pc.addTransceiver(i, { direction: "sendonly", streams: [this._sendStream] }), B.next = 11, this._pc.createOffer();
            case 11:
              if (w = B.sent, k = ve.parse(w.sdp), this._transportReady) {
                B.next = 16;
                break;
              }
              return B.next = 16, this.setupTransport({ localDtlsRole: (p = this._forcedLocalDtlsRole) !== null && p !== void 0 ? p : "client", localSdpObject: k });
            case 16:
              return s && s.length > 1 && (je.debug("send() | enabling legacy simulcast"), k = ve.parse(w.sdp), T = k.media[m.idx], zo({ offerMediaObject: T, numStreams: s.length }), w = { type: "offer", sdp: ve.write(k) }), _ = !1, E = Qs((s || [{}])[0].scalabilityMode), s && s.length === 1 && E.spatialLayers > 1 && h.codecs[0].mimeType.toLowerCase() === "video/vp9" && (je.debug("send() | enabling legacy simulcast for VP9 SVC"), _ = !0, k = ve.parse(w.sdp), T = k.media[m.idx], zo({ offerMediaObject: T, numStreams: E.spatialLayers }), w = { type: "offer", sdp: ve.write(k) }), je.debug("send() | calling pc.setLocalDescription() [offer:%o]", w), B.next = 23, this._pc.setLocalDescription(w);
            case 23:
              if (!s) {
                B.next = 38;
                break;
              }
              je.debug("send() | applying given encodings"), S = g.sender.getParameters(), C = 0;
            case 27:
              if (!(C < (S.encodings || []).length)) {
                B.next = 36;
                break;
              }
              if (L = S.encodings[C], G = s[C], G) {
                B.next = 32;
                break;
              }
              return B.abrupt("break", 36);
            case 32:
              S.encodings[C] = Object.assign(L, G);
            case 33:
              ++C, B.next = 27;
              break;
            case 36:
              return B.next = 38, g.sender.setParameters(S);
            case 38:
              if (j = g.mid, h.mid = j, k = ve.parse(this._pc.localDescription.sdp), T = k.media[m.idx], h.rtcp.cname = Js({ offerMediaObject: T }), h.encodings = rn({ offerMediaObject: T }), s)
                for (ee = 0; ee < h.encodings.length; ++ee)
                  s[ee] && Object.assign(h.encodings[ee], s[ee]);
              if (_ && (h.encodings = [h.encodings[0]]), h.encodings.length > 1 && (h.codecs[0].mimeType.toLowerCase() === "video/vp8" || h.codecs[0].mimeType.toLowerCase() === "video/h264")) {
                Y = ae(h.encodings);
                try {
                  for (Y.s(); !(Z = Y.n()).done; )
                    F = Z.value, F.scalabilityMode = "L1T3";
                } catch (H) {
                  Y.e(H);
                } finally {
                  Y.f();
                }
              }
              return this._remoteSdp.send({ offerMediaObject: T, reuseMid: m.reuseMid, offerRtpParameters: h, answerRtpParameters: v, codecOptions: u }), x = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("send() | calling pc.setRemoteDescription() [answer:%o]", x), B.next = 52, this._pc.setRemoteDescription(x);
            case 52:
              return this._mapMidTransceiver.set(j, g), B.abrupt("return", { localId: j, rtpParameters: h, rtpSender: g.sender });
            case 54:
            case "end":
              return B.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "stopSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (this.assertSendDirection(), je.debug("stopSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                  h.next = 5;
                  break;
                }
                throw new Error("associated RTCRtpTransceiver not found");
              case 5:
                if (i.sender.replaceTrack(null), this._pc.removeTrack(i.sender), s = this._remoteSdp.closeMediaSection(i.mid), s)
                  try {
                    i.stop();
                  } catch (v) {
                  }
                return h.next = 11, this._pc.createOffer();
              case 11:
                return u = h.sent, je.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 15, this._pc.setLocalDescription(u);
              case 15:
                return l = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", l), h.next = 19, this._pc.setRemoteDescription(l);
              case 19:
                this._mapMidTransceiver.delete(n);
              case 20:
              case "end":
                return h.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "pauseSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
              case "end":
                return s.stop();
            }
        }, a);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.assertSendDirection(), i ? je.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : je.debug("replaceTrack() [localId:%s, no track]", n), s = this._mapMidTransceiver.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), je.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                g <= i ? m.active = !0 : m.active = !1;
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, je.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), je.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                u.encodings[g] = Q(Q({}, m), i);
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, je.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertSendDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.sender.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.ordered, s = n.maxPacketLifeTime, u = n.maxRetransmits, l = n.label, p = n.protocol, this.assertSendDirection(), v = { negotiated: !0, id: this._nextSendSctpStreamId, ordered: i, maxPacketLifeTime: s, maxRetransmitTime: s, maxRetransmits: u, protocol: p }, je.debug("sendDataChannel() [options:%o]", v), m = this._pc.createDataChannel(l, v), this._nextSendSctpStreamId = ++this._nextSendSctpStreamId % Vd.MIS, this._hasDataChannelMediaSection) {
                S.next = 24;
                break;
              }
              return S.next = 9, this._pc.createOffer();
            case 9:
              if (g = S.sent, w = ve.parse(g.sdp), k = w.media.find(function(C) {
                return C.type === "application";
              }), this._transportReady) {
                S.next = 15;
                break;
              }
              return S.next = 15, this.setupTransport({ localDtlsRole: (h = this._forcedLocalDtlsRole) !== null && h !== void 0 ? h : "client", localSdpObject: w });
            case 15:
              return je.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]", g), S.next = 18, this._pc.setLocalDescription(g);
            case 18:
              return this._remoteSdp.sendSctpAssociation({ offerMediaObject: k }), T = { type: "answer", sdp: this._remoteSdp.getSdp() }, je.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 23, this._pc.setRemoteDescription(T);
            case 23:
              this._hasDataChannelMediaSection = !0;
            case 24:
              return _ = { streamId: v.id, ordered: v.ordered, maxPacketLifeTime: v.maxPacketLifeTime, maxRetransmits: v.maxRetransmits }, S.abrupt("return", { dataChannel: m, sctpStreamParameters: _ });
            case 26:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y;
      return d().wrap(function(F) {
        for (; ; )
          switch (F.prev = F.next) {
            case 0:
              this.assertRecvDirection(), u = [], l = /* @__PURE__ */ new Map(), p = ae(n);
              try {
                for (p.s(); !(h = p.n()).done; )
                  v = h.value, m = v.trackId, g = v.kind, w = v.rtpParameters, k = v.streamId, je.debug("receive() [trackId:%s, kind:%s]", m, g), T = w.mid || String(this._mapMidTransceiver.size), l.set(m, T), this._remoteSdp.receive({ mid: T, kind: g, offerRtpParameters: w, streamId: k || w.rtcp.cname, trackId: m });
              } catch (x) {
                p.e(x);
              } finally {
                p.f();
              }
              return _ = { type: "offer", sdp: this._remoteSdp.getSdp() }, je.debug("receive() | calling pc.setRemoteDescription() [offer:%o]", _), F.next = 9, this._pc.setRemoteDescription(_);
            case 9:
              return F.next = 11, this._pc.createAnswer();
            case 11:
              E = F.sent, S = ve.parse(E.sdp), C = ae(n), F.prev = 14, G = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U, J;
                return d().wrap(function(re) {
                  for (; ; )
                    switch (re.prev = re.next) {
                      case 0:
                        ie = L.value, B = ie.trackId, H = ie.rtpParameters, U = l.get(B), J = S.media.find(function(pe) {
                          return String(pe.mid) === U;
                        }), Ks({ offerRtpParameters: H, answerMediaObject: J });
                      case 5:
                      case "end":
                        return re.stop();
                    }
                }, x);
              }), C.s();
            case 17:
              if ((L = C.n()).done) {
                F.next = 21;
                break;
              }
              return F.delegateYield(G(), "t0", 19);
            case 19:
              F.next = 17;
              break;
            case 21:
              F.next = 26;
              break;
            case 23:
              F.prev = 23, F.t1 = F.catch(14), C.e(F.t1);
            case 26:
              return F.prev = 26, C.f(), F.finish(26);
            case 29:
              if (E = { type: "answer", sdp: ve.write(S) }, this._transportReady) {
                F.next = 33;
                break;
              }
              return F.next = 33, this.setupTransport({ localDtlsRole: (s = this._forcedLocalDtlsRole) !== null && s !== void 0 ? s : "client", localSdpObject: S });
            case 33:
              return je.debug("receive() | calling pc.setLocalDescription() [answer:%o]", E), F.next = 36, this._pc.setLocalDescription(E);
            case 36:
              j = ae(n), F.prev = 37, Y = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U;
                return d().wrap(function(X) {
                  for (; ; )
                    switch (X.prev = X.next) {
                      case 0:
                        if (ie = ee.value, B = ie.trackId, H = l.get(B), U = i._pc.getTransceivers().find(function(re) {
                          return re.mid === H;
                        }), U) {
                          X.next = 6;
                          break;
                        }
                        throw new Error("new RTCRtpTransceiver not found");
                      case 6:
                        i._mapMidTransceiver.set(H, U), u.push({ localId: H, track: U.receiver.track, rtpReceiver: U.receiver });
                      case 8:
                      case "end":
                        return X.stop();
                    }
                }, x);
              }), j.s();
            case 40:
              if ((ee = j.n()).done) {
                F.next = 44;
                break;
              }
              return F.delegateYield(Y(), "t2", 42);
            case 42:
              F.next = 40;
              break;
            case 44:
              F.next = 49;
              break;
            case 46:
              F.prev = 46, F.t3 = F.catch(37), j.e(F.t3);
            case 49:
              return F.prev = 49, j.f(), F.finish(49);
            case 52:
              return F.abrupt("return", u);
            case 53:
            case "end":
              return F.stop();
          }
      }, a, this, [[14, 23, 26, 29], [37, 46, 49, 52]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), k.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                k.next = 13;
                break;
              }
              if (u = s.value, je.debug("stopReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                k.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              this._remoteSdp.closeMediaSection(l.mid);
            case 11:
              k.next = 4;
              break;
            case 13:
              k.next = 18;
              break;
            case 15:
              k.prev = 15, k.t0 = k.catch(2), i.e(k.t0);
            case 18:
              return k.prev = 18, i.f(), k.finish(18);
            case 21:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, je.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), k.next = 25, this._pc.setRemoteDescription(p);
            case 25:
              return k.next = 27, this._pc.createAnswer();
            case 27:
              return h = k.sent, je.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]", h), k.next = 31, this._pc.setLocalDescription(h);
            case 31:
              v = ae(n);
              try {
                for (v.s(); !(m = v.n()).done; )
                  g = m.value, this._mapMidTransceiver.delete(g);
              } catch (T) {
                v.e(T);
              } finally {
                v.f();
              }
            case 33:
            case "end":
              return k.stop();
          }
      }, a, this, [[2, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertRecvDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.sctpStreamParameters, s = n.label, u = n.protocol, this.assertRecvDirection(), p = i.streamId, h = i.ordered, v = i.maxPacketLifeTime, m = i.maxRetransmits, g = { negotiated: !0, id: p, ordered: h, maxPacketLifeTime: v, maxRetransmitTime: v, maxRetransmits: m, protocol: u }, je.debug("receiveDataChannel() [options:%o]", g), w = this._pc.createDataChannel(s, g), this._hasDataChannelMediaSection) {
                S.next = 23;
                break;
              }
              return this._remoteSdp.receiveSctpAssociation(), k = { type: "offer", sdp: this._remoteSdp.getSdp() }, je.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]", k), S.next = 12, this._pc.setRemoteDescription(k);
            case 12:
              return S.next = 14, this._pc.createAnswer();
            case 14:
              if (T = S.sent, this._transportReady) {
                S.next = 19;
                break;
              }
              return _ = ve.parse(T.sdp), S.next = 19, this.setupTransport({ localDtlsRole: (l = this._forcedLocalDtlsRole) !== null && l !== void 0 ? l : "client", localSdpObject: _ });
            case 19:
              return je.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 22, this._pc.setLocalDescription(T);
            case 22:
              this._hasDataChannelMediaSection = !0;
            case 23:
              return S.abrupt("return", { dataChannel: w });
            case 24:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = n.localDtlsRole, u = n.localSdpObject, u || (u = ve.parse(this._pc.localDescription.sdp)), l = Ws({ sdpObject: u }), l.role = s, this._remoteSdp.updateDtlsRole(s === "client" ? "server" : "client"), h.next = 7, new Promise(function(v, m) {
                i.safeEmit("@connect", { dtlsParameters: l }, v, m);
              });
            case 7:
              this._transportReady = !0;
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Fi), we = new ht("Chrome74"), Hd = { OS: 1024, MIS: 1024 }, Jw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t._sendStream = new MediaStream(), t._hasDataChannelMediaSection = !1, t._nextSendSctpStreamId = 0, t._transportReady = !1, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Chrome74";
  } }, { key: "close", value: function() {
    if (we.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
      }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return we.debug("getNativeRtpCapabilities()"), n = new RTCPeerConnection({ iceServers: [], iceTransportPolicy: "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }), p.prev = 2, n.addTransceiver("audio"), n.addTransceiver("video"), p.next = 7, n.createOffer();
            case 7:
              i = p.sent;
              try {
                n.close();
              } catch (h) {
              }
              return s = ve.parse(i.sdp), u = qs({ sdpObject: s }), p.abrupt("return", u);
            case 14:
              p.prev = 14, p.t0 = p.catch(2);
              try {
                n.close();
              } catch (h) {
              }
              throw p.t0;
            case 18:
            case "end":
              return p.stop();
          }
      }, a, null, [[2, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return we.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: Hd });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "run", value: function(e) {
    var a = this, n = e.direction, i = e.iceParameters, s = e.iceCandidates, u = e.dtlsParameters, l = e.sctpParameters, p = e.iceServers, h = e.iceTransportPolicy, v = e.additionalSettings, m = e.proprietaryConstraints, g = e.extendedRtpCapabilities;
    we.debug("run()"), this._direction = n, this._remoteSdp = new zs({ iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l }), this._sendingRtpParametersByKind = { audio: Mt("audio", g), video: Mt("video", g) }, this._sendingRemoteRtpParametersByKind = { audio: ca("audio", g), video: ca("video", g) }, u.role && u.role !== "auto" && (this._forcedLocalDtlsRole = u.role === "server" ? "client" : "server"), this._pc = new RTCPeerConnection(Q({ iceServers: p || [], iceTransportPolicy: h || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }, v), m), this._pc.connectionState ? this._pc.addEventListener("connectionstatechange", function() {
      a.emit("@connectionstatechange", a._pc.connectionState);
    }) : (we.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"), this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (a._pc.iceConnectionState) {
        case "checking":
          a.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          a.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          a.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          a.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          a.emit("@connectionstatechange", "closed");
          break;
      }
    }));
  } }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              we.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (we.debug("restartIce()"), this._remoteSdp.updateIceParameters(n), this._transportReady) {
                h.next = 4;
                break;
              }
              return h.abrupt("return");
            case 4:
              if (this._direction !== "send") {
                h.next = 17;
                break;
              }
              return h.next = 7, this._pc.createOffer({ iceRestart: !0 });
            case 7:
              return i = h.sent, we.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), h.next = 11, this._pc.setLocalDescription(i);
            case 11:
              return s = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]", s), h.next = 15, this._pc.setRemoteDescription(s);
            case 15:
              h.next = 27;
              break;
            case 17:
              return u = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]", u), h.next = 21, this._pc.setRemoteDescription(u);
            case 21:
              return h.next = 23, this._pc.createAnswer();
            case 23:
              return l = h.sent, we.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]", l), h.next = 27, this._pc.setLocalDescription(l);
            case 27:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y;
      return d().wrap(function(F) {
        for (; ; )
          switch (F.prev = F.next) {
            case 0:
              return i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, this.assertSendDirection(), we.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), s && s.length > 1 && s.forEach(function(x, ie) {
                x.rid = "r".concat(ie);
              }), v = Nr(this._sendingRtpParametersByKind[i.kind], {}), v.codecs = qt(v.codecs, l), m = Nr(this._sendingRemoteRtpParametersByKind[i.kind], {}), m.codecs = qt(m.codecs, l), g = this._remoteSdp.getNextMediaSectionIdx(), w = this._pc.addTransceiver(i, { direction: "sendonly", streams: [this._sendStream], sendEncodings: s }), F.next = 12, this._pc.createOffer();
            case 12:
              if (k = F.sent, T = ve.parse(k.sdp), this._transportReady) {
                F.next = 17;
                break;
              }
              return F.next = 17, this.setupTransport({ localDtlsRole: (p = this._forcedLocalDtlsRole) !== null && p !== void 0 ? p : "client", localSdpObject: T });
            case 17:
              return E = !1, S = Qs((s || [{}])[0].scalabilityMode), s && s.length === 1 && S.spatialLayers > 1 && v.codecs[0].mimeType.toLowerCase() === "video/vp9" && (we.debug("send() | enabling legacy simulcast for VP9 SVC"), E = !0, T = ve.parse(k.sdp), _ = T.media[g.idx], zo({ offerMediaObject: _, numStreams: S.spatialLayers }), k = { type: "offer", sdp: ve.write(T) }), we.debug("send() | calling pc.setLocalDescription() [offer:%o]", k), F.next = 23, this._pc.setLocalDescription(k);
            case 23:
              if (C = w.mid, v.mid = C, T = ve.parse(this._pc.localDescription.sdp), _ = T.media[g.idx], v.rtcp.cname = Js({ offerMediaObject: _ }), s ? s.length === 1 ? (L = rn({ offerMediaObject: _ }), Object.assign(L[0], s[0]), E && (L = [L[0]]), v.encodings = L) : v.encodings = s : v.encodings = rn({ offerMediaObject: _ }), v.encodings.length > 1 && (v.codecs[0].mimeType.toLowerCase() === "video/vp8" || v.codecs[0].mimeType.toLowerCase() === "video/h264")) {
                G = ae(v.encodings);
                try {
                  for (G.s(); !(j = G.n()).done; )
                    ee = j.value, ee.scalabilityMode ? ee.scalabilityMode = "L1T".concat(S.temporalLayers) : ee.scalabilityMode = "L1T3";
                } catch (x) {
                  G.e(x);
                } finally {
                  G.f();
                }
              }
              return this._remoteSdp.send({ offerMediaObject: _, reuseMid: g.reuseMid, offerRtpParameters: v, answerRtpParameters: m, codecOptions: u, extmapAllowMixed: !0, forceGoogConference: (h = u == null ? void 0 : u.forceGoogConference) !== null && h !== void 0 ? h : !1 }), Y = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("send() | calling pc.setRemoteDescription() [answer:%o]", Y), F.next = 35, this._pc.setRemoteDescription(Y);
            case 35:
              return this._mapMidTransceiver.set(C, w), F.abrupt("return", { localId: C, rtpParameters: v, rtpSender: w.sender });
            case 37:
            case "end":
              return F.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this.assertSendDirection(), we.debug("stopSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              if (i.sender.replaceTrack(null), this._pc.removeTrack(i.sender), s = this._remoteSdp.closeMediaSection(i.mid), s)
                try {
                  i.stop();
                } catch (v) {
                }
              return h.next = 11, this._pc.createOffer();
            case 11:
              return u = h.sent, we.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 15, this._pc.setLocalDescription(u);
            case 15:
              return l = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", l), h.next = 19, this._pc.setRemoteDescription(l);
            case 19:
              this._mapMidTransceiver.delete(n);
            case 20:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), we.debug("pauseSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return i.direction = "inactive", this._remoteSdp.pauseMediaSection(n), p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, we.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), we.debug("resumeSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), this._remoteSdp.resumeSendingMediaSection(n), i) {
                p.next = 6;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 6:
              return i.direction = "sendonly", p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, we.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.assertSendDirection(), i ? we.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : we.debug("replaceTrack() [localId:%s, no track]", n), s = this._mapMidTransceiver.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), we.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                g <= i ? m.active = !0 : m.active = !1;
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, we.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), we.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                u.encodings[g] = Q(Q({}, m), i);
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, we.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertSendDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.sender.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.ordered, s = n.maxPacketLifeTime, u = n.maxRetransmits, l = n.label, p = n.protocol, this.assertSendDirection(), v = { negotiated: !0, id: this._nextSendSctpStreamId, ordered: i, maxPacketLifeTime: s, maxRetransmits: u, protocol: p }, we.debug("sendDataChannel() [options:%o]", v), m = this._pc.createDataChannel(l, v), this._nextSendSctpStreamId = ++this._nextSendSctpStreamId % Hd.MIS, this._hasDataChannelMediaSection) {
                S.next = 24;
                break;
              }
              return S.next = 9, this._pc.createOffer();
            case 9:
              if (g = S.sent, w = ve.parse(g.sdp), k = w.media.find(function(C) {
                return C.type === "application";
              }), this._transportReady) {
                S.next = 15;
                break;
              }
              return S.next = 15, this.setupTransport({ localDtlsRole: (h = this._forcedLocalDtlsRole) !== null && h !== void 0 ? h : "client", localSdpObject: w });
            case 15:
              return we.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]", g), S.next = 18, this._pc.setLocalDescription(g);
            case 18:
              return this._remoteSdp.sendSctpAssociation({ offerMediaObject: k }), T = { type: "answer", sdp: this._remoteSdp.getSdp() }, we.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 23, this._pc.setRemoteDescription(T);
            case 23:
              this._hasDataChannelMediaSection = !0;
            case 24:
              return _ = { streamId: v.id, ordered: v.ordered, maxPacketLifeTime: v.maxPacketLifeTime, maxRetransmits: v.maxRetransmits }, S.abrupt("return", { dataChannel: m, sctpStreamParameters: _ });
            case 26:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y;
      return d().wrap(function(F) {
        for (; ; )
          switch (F.prev = F.next) {
            case 0:
              this.assertRecvDirection(), u = [], l = /* @__PURE__ */ new Map(), p = ae(n);
              try {
                for (p.s(); !(h = p.n()).done; )
                  v = h.value, m = v.trackId, g = v.kind, w = v.rtpParameters, k = v.streamId, we.debug("receive() [trackId:%s, kind:%s]", m, g), T = w.mid || String(this._mapMidTransceiver.size), l.set(m, T), this._remoteSdp.receive({ mid: T, kind: g, offerRtpParameters: w, streamId: k || w.rtcp.cname, trackId: m });
              } catch (x) {
                p.e(x);
              } finally {
                p.f();
              }
              return _ = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("receive() | calling pc.setRemoteDescription() [offer:%o]", _), F.next = 9, this._pc.setRemoteDescription(_);
            case 9:
              return F.next = 11, this._pc.createAnswer();
            case 11:
              E = F.sent, S = ve.parse(E.sdp), C = ae(n), F.prev = 14, G = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U, J;
                return d().wrap(function(re) {
                  for (; ; )
                    switch (re.prev = re.next) {
                      case 0:
                        ie = L.value, B = ie.trackId, H = ie.rtpParameters, U = l.get(B), J = S.media.find(function(pe) {
                          return String(pe.mid) === U;
                        }), Ks({ offerRtpParameters: H, answerMediaObject: J });
                      case 5:
                      case "end":
                        return re.stop();
                    }
                }, x);
              }), C.s();
            case 17:
              if ((L = C.n()).done) {
                F.next = 21;
                break;
              }
              return F.delegateYield(G(), "t0", 19);
            case 19:
              F.next = 17;
              break;
            case 21:
              F.next = 26;
              break;
            case 23:
              F.prev = 23, F.t1 = F.catch(14), C.e(F.t1);
            case 26:
              return F.prev = 26, C.f(), F.finish(26);
            case 29:
              if (E = { type: "answer", sdp: ve.write(S) }, this._transportReady) {
                F.next = 33;
                break;
              }
              return F.next = 33, this.setupTransport({ localDtlsRole: (s = this._forcedLocalDtlsRole) !== null && s !== void 0 ? s : "client", localSdpObject: S });
            case 33:
              return we.debug("receive() | calling pc.setLocalDescription() [answer:%o]", E), F.next = 36, this._pc.setLocalDescription(E);
            case 36:
              j = ae(n), F.prev = 37, Y = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U;
                return d().wrap(function(X) {
                  for (; ; )
                    switch (X.prev = X.next) {
                      case 0:
                        if (ie = ee.value, B = ie.trackId, H = l.get(B), U = i._pc.getTransceivers().find(function(re) {
                          return re.mid === H;
                        }), U) {
                          X.next = 8;
                          break;
                        }
                        throw new Error("new RTCRtpTransceiver not found");
                      case 8:
                        i._mapMidTransceiver.set(H, U), u.push({ localId: H, track: U.receiver.track, rtpReceiver: U.receiver });
                      case 10:
                      case "end":
                        return X.stop();
                    }
                }, x);
              }), j.s();
            case 40:
              if ((ee = j.n()).done) {
                F.next = 44;
                break;
              }
              return F.delegateYield(Y(), "t2", 42);
            case 42:
              F.next = 40;
              break;
            case 44:
              F.next = 49;
              break;
            case 46:
              F.prev = 46, F.t3 = F.catch(37), j.e(F.t3);
            case 49:
              return F.prev = 49, j.f(), F.finish(49);
            case 52:
              return F.abrupt("return", u);
            case 53:
            case "end":
              return F.stop();
          }
      }, a, this, [[14, 23, 26, 29], [37, 46, 49, 52]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), k.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                k.next = 13;
                break;
              }
              if (u = s.value, we.debug("stopReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                k.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              this._remoteSdp.closeMediaSection(l.mid);
            case 11:
              k.next = 4;
              break;
            case 13:
              k.next = 18;
              break;
            case 15:
              k.prev = 15, k.t0 = k.catch(2), i.e(k.t0);
            case 18:
              return k.prev = 18, i.f(), k.finish(18);
            case 21:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), k.next = 25, this._pc.setRemoteDescription(p);
            case 25:
              return k.next = 27, this._pc.createAnswer();
            case 27:
              return h = k.sent, we.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]", h), k.next = 31, this._pc.setLocalDescription(h);
            case 31:
              v = ae(n);
              try {
                for (v.s(); !(m = v.n()).done; )
                  g = m.value, this._mapMidTransceiver.delete(g);
              } catch (T) {
                v.e(T);
              } finally {
                v.f();
              }
            case 33:
            case "end":
              return k.stop();
          }
      }, a, this, [[2, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, we.debug("pauseReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "inactive", this._remoteSdp.pauseMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, we.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, we.debug("resumeReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "recvonly", this._remoteSdp.resumeReceivingMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, we.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertRecvDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.sctpStreamParameters, s = n.label, u = n.protocol, this.assertRecvDirection(), p = i.streamId, h = i.ordered, v = i.maxPacketLifeTime, m = i.maxRetransmits, g = { negotiated: !0, id: p, ordered: h, maxPacketLifeTime: v, maxRetransmits: m, protocol: u }, we.debug("receiveDataChannel() [options:%o]", g), w = this._pc.createDataChannel(s, g), this._hasDataChannelMediaSection) {
                S.next = 23;
                break;
              }
              return this._remoteSdp.receiveSctpAssociation(), k = { type: "offer", sdp: this._remoteSdp.getSdp() }, we.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]", k), S.next = 12, this._pc.setRemoteDescription(k);
            case 12:
              return S.next = 14, this._pc.createAnswer();
            case 14:
              if (T = S.sent, this._transportReady) {
                S.next = 19;
                break;
              }
              return _ = ve.parse(T.sdp), S.next = 19, this.setupTransport({ localDtlsRole: (l = this._forcedLocalDtlsRole) !== null && l !== void 0 ? l : "client", localSdpObject: _ });
            case 19:
              return we.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 22, this._pc.setLocalDescription(T);
            case 22:
              this._hasDataChannelMediaSection = !0;
            case 23:
              return S.abrupt("return", { dataChannel: w });
            case 24:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = n.localDtlsRole, u = n.localSdpObject, u || (u = ve.parse(this._pc.localDescription.sdp)), l = Ws({ sdpObject: u }), l.role = s, this._remoteSdp.updateDtlsRole(s === "client" ? "server" : "client"), h.next = 7, new Promise(function(v, m) {
                i.safeEmit("@connect", { dtlsParameters: l }, v, m);
              });
            case 7:
              this._transportReady = !0;
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Fi), be = new ht("Chrome111"), jd = { OS: 1024, MIS: 1024 }, Kw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t._sendStream = new MediaStream(), t._hasDataChannelMediaSection = !1, t._nextSendSctpStreamId = 0, t._transportReady = !1, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Chrome111";
  } }, { key: "close", value: function() {
    if (be.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
      }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return be.debug("getNativeRtpCapabilities()"), n = new RTCPeerConnection({ iceServers: [], iceTransportPolicy: "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }), p.prev = 2, n.addTransceiver("audio"), n.addTransceiver("video"), p.next = 7, n.createOffer();
            case 7:
              i = p.sent;
              try {
                n.close();
              } catch (h) {
              }
              return s = ve.parse(i.sdp), u = qs({ sdpObject: s }), p.abrupt("return", u);
            case 14:
              p.prev = 14, p.t0 = p.catch(2);
              try {
                n.close();
              } catch (h) {
              }
              throw p.t0;
            case 18:
            case "end":
              return p.stop();
          }
      }, a, null, [[2, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return be.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: jd });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "run", value: function(e) {
    var a = this, n = e.direction, i = e.iceParameters, s = e.iceCandidates, u = e.dtlsParameters, l = e.sctpParameters, p = e.iceServers, h = e.iceTransportPolicy, v = e.additionalSettings, m = e.proprietaryConstraints, g = e.extendedRtpCapabilities;
    be.debug("run()"), this._direction = n, this._remoteSdp = new zs({ iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l }), this._sendingRtpParametersByKind = { audio: Mt("audio", g), video: Mt("video", g) }, this._sendingRemoteRtpParametersByKind = { audio: ca("audio", g), video: ca("video", g) }, u.role && u.role !== "auto" && (this._forcedLocalDtlsRole = u.role === "server" ? "client" : "server"), this._pc = new RTCPeerConnection(Q({ iceServers: p || [], iceTransportPolicy: h || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }, v), m), this._pc.connectionState ? this._pc.addEventListener("connectionstatechange", function() {
      a.emit("@connectionstatechange", a._pc.connectionState);
    }) : (be.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"), this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (a._pc.iceConnectionState) {
        case "checking":
          a.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          a.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          a.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          a.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          a.emit("@connectionstatechange", "closed");
          break;
      }
    }));
  } }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              be.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (be.debug("restartIce()"), this._remoteSdp.updateIceParameters(n), this._transportReady) {
                h.next = 4;
                break;
              }
              return h.abrupt("return");
            case 4:
              if (this._direction !== "send") {
                h.next = 17;
                break;
              }
              return h.next = 7, this._pc.createOffer({ iceRestart: !0 });
            case 7:
              return i = h.sent, be.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), h.next = 11, this._pc.setLocalDescription(i);
            case 11:
              return s = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]", s), h.next = 15, this._pc.setRemoteDescription(s);
            case 15:
              h.next = 27;
              break;
            case 17:
              return u = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]", u), h.next = 21, this._pc.setRemoteDescription(u);
            case 21:
              return h.next = 23, this._pc.createAnswer();
            case 23:
              return l = h.sent, be.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]", l), h.next = 27, this._pc.setLocalDescription(l);
            case 27:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y, Z, F, x;
      return d().wrap(function(B) {
        for (; ; )
          switch (B.prev = B.next) {
            case 0:
              if (i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, this.assertSendDirection(), be.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), s && s.length > 1) {
                s.forEach(function(H, U) {
                  H.rid = "r".concat(U);
                }), h = 1, v = 1, m = ae(s);
                try {
                  for (m.s(); !(g = m.n()).done; )
                    w = g.value, k = w.scalabilityMode ? Qs(w.scalabilityMode).temporalLayers : 3, k > v && (v = k);
                } catch (H) {
                  m.e(H);
                } finally {
                  m.f();
                }
                T = ae(s);
                try {
                  for (T.s(); !(_ = T.n()).done; )
                    E = _.value, E.rid = "r".concat(h++), E.scalabilityMode = "L1T".concat(v);
                } catch (H) {
                  T.e(H);
                } finally {
                  T.f();
                }
              }
              return S = Nr(this._sendingRtpParametersByKind[i.kind], {}), S.codecs = qt(S.codecs, l), C = Nr(this._sendingRemoteRtpParametersByKind[i.kind], {}), C.codecs = qt(C.codecs, l), L = this._remoteSdp.getNextMediaSectionIdx(), G = this._pc.addTransceiver(i, { direction: "sendonly", streams: [this._sendStream], sendEncodings: s }), B.next = 12, this._pc.createOffer();
            case 12:
              if (j = B.sent, ee = ve.parse(j.sdp), this._transportReady) {
                B.next = 17;
                break;
              }
              return B.next = 17, this.setupTransport({ localDtlsRole: (p = this._forcedLocalDtlsRole) !== null && p !== void 0 ? p : "client", localSdpObject: ee });
            case 17:
              return be.debug("send() | calling pc.setLocalDescription() [offer:%o]", j), B.next = 20, this._pc.setLocalDescription(j);
            case 20:
              return Y = G.mid, S.mid = Y, ee = ve.parse(this._pc.localDescription.sdp), Z = ee.media[L.idx], S.rtcp.cname = Js({ offerMediaObject: Z }), s ? s.length === 1 ? (F = rn({ offerMediaObject: Z }), Object.assign(F[0], s[0]), S.encodings = F) : S.encodings = s : S.encodings = rn({ offerMediaObject: Z }), this._remoteSdp.send({ offerMediaObject: Z, reuseMid: L.reuseMid, offerRtpParameters: S, answerRtpParameters: C, codecOptions: u, extmapAllowMixed: !0 }), x = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("send() | calling pc.setRemoteDescription() [answer:%o]", x), B.next = 31, this._pc.setRemoteDescription(x);
            case 31:
              return this._mapMidTransceiver.set(Y, G), B.abrupt("return", { localId: Y, rtpParameters: S, rtpSender: G.sender });
            case 33:
            case "end":
              return B.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this.assertSendDirection(), be.debug("stopSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              if (i.sender.replaceTrack(null), this._pc.removeTrack(i.sender), s = this._remoteSdp.closeMediaSection(i.mid), s)
                try {
                  i.stop();
                } catch (v) {
                }
              return h.next = 11, this._pc.createOffer();
            case 11:
              return u = h.sent, be.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 15, this._pc.setLocalDescription(u);
            case 15:
              return l = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", l), h.next = 19, this._pc.setRemoteDescription(l);
            case 19:
              this._mapMidTransceiver.delete(n);
            case 20:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), be.debug("pauseSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return i.direction = "inactive", this._remoteSdp.pauseMediaSection(n), p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, be.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), be.debug("resumeSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), this._remoteSdp.resumeSendingMediaSection(n), i) {
                p.next = 6;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 6:
              return i.direction = "sendonly", p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, be.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.assertSendDirection(), i ? be.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : be.debug("replaceTrack() [localId:%s, no track]", n), s = this._mapMidTransceiver.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), be.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                g <= i ? m.active = !0 : m.active = !1;
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, be.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), be.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                u.encodings[g] = Q(Q({}, m), i);
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, be.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertSendDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.sender.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.ordered, s = n.maxPacketLifeTime, u = n.maxRetransmits, l = n.label, p = n.protocol, this.assertSendDirection(), v = { negotiated: !0, id: this._nextSendSctpStreamId, ordered: i, maxPacketLifeTime: s, maxRetransmits: u, protocol: p }, be.debug("sendDataChannel() [options:%o]", v), m = this._pc.createDataChannel(l, v), this._nextSendSctpStreamId = ++this._nextSendSctpStreamId % jd.MIS, this._hasDataChannelMediaSection) {
                S.next = 24;
                break;
              }
              return S.next = 9, this._pc.createOffer();
            case 9:
              if (g = S.sent, w = ve.parse(g.sdp), k = w.media.find(function(C) {
                return C.type === "application";
              }), this._transportReady) {
                S.next = 15;
                break;
              }
              return S.next = 15, this.setupTransport({ localDtlsRole: (h = this._forcedLocalDtlsRole) !== null && h !== void 0 ? h : "client", localSdpObject: w });
            case 15:
              return be.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]", g), S.next = 18, this._pc.setLocalDescription(g);
            case 18:
              return this._remoteSdp.sendSctpAssociation({ offerMediaObject: k }), T = { type: "answer", sdp: this._remoteSdp.getSdp() }, be.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 23, this._pc.setRemoteDescription(T);
            case 23:
              this._hasDataChannelMediaSection = !0;
            case 24:
              return _ = { streamId: v.id, ordered: v.ordered, maxPacketLifeTime: v.maxPacketLifeTime, maxRetransmits: v.maxRetransmits }, S.abrupt("return", { dataChannel: m, sctpStreamParameters: _ });
            case 26:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y;
      return d().wrap(function(F) {
        for (; ; )
          switch (F.prev = F.next) {
            case 0:
              this.assertRecvDirection(), u = [], l = /* @__PURE__ */ new Map(), p = ae(n);
              try {
                for (p.s(); !(h = p.n()).done; )
                  v = h.value, m = v.trackId, g = v.kind, w = v.rtpParameters, k = v.streamId, be.debug("receive() [trackId:%s, kind:%s]", m, g), T = w.mid || String(this._mapMidTransceiver.size), l.set(m, T), this._remoteSdp.receive({ mid: T, kind: g, offerRtpParameters: w, streamId: k || w.rtcp.cname, trackId: m });
              } catch (x) {
                p.e(x);
              } finally {
                p.f();
              }
              return _ = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("receive() | calling pc.setRemoteDescription() [offer:%o]", _), F.next = 9, this._pc.setRemoteDescription(_);
            case 9:
              return F.next = 11, this._pc.createAnswer();
            case 11:
              E = F.sent, S = ve.parse(E.sdp), C = ae(n), F.prev = 14, G = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U, J;
                return d().wrap(function(re) {
                  for (; ; )
                    switch (re.prev = re.next) {
                      case 0:
                        ie = L.value, B = ie.trackId, H = ie.rtpParameters, U = l.get(B), J = S.media.find(function(pe) {
                          return String(pe.mid) === U;
                        }), Ks({ offerRtpParameters: H, answerMediaObject: J });
                      case 5:
                      case "end":
                        return re.stop();
                    }
                }, x);
              }), C.s();
            case 17:
              if ((L = C.n()).done) {
                F.next = 21;
                break;
              }
              return F.delegateYield(G(), "t0", 19);
            case 19:
              F.next = 17;
              break;
            case 21:
              F.next = 26;
              break;
            case 23:
              F.prev = 23, F.t1 = F.catch(14), C.e(F.t1);
            case 26:
              return F.prev = 26, C.f(), F.finish(26);
            case 29:
              if (E = { type: "answer", sdp: ve.write(S) }, this._transportReady) {
                F.next = 33;
                break;
              }
              return F.next = 33, this.setupTransport({ localDtlsRole: (s = this._forcedLocalDtlsRole) !== null && s !== void 0 ? s : "client", localSdpObject: S });
            case 33:
              return be.debug("receive() | calling pc.setLocalDescription() [answer:%o]", E), F.next = 36, this._pc.setLocalDescription(E);
            case 36:
              j = ae(n), F.prev = 37, Y = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U;
                return d().wrap(function(X) {
                  for (; ; )
                    switch (X.prev = X.next) {
                      case 0:
                        if (ie = ee.value, B = ie.trackId, H = l.get(B), U = i._pc.getTransceivers().find(function(re) {
                          return re.mid === H;
                        }), U) {
                          X.next = 8;
                          break;
                        }
                        throw new Error("new RTCRtpTransceiver not found");
                      case 8:
                        i._mapMidTransceiver.set(H, U), u.push({ localId: H, track: U.receiver.track, rtpReceiver: U.receiver });
                      case 10:
                      case "end":
                        return X.stop();
                    }
                }, x);
              }), j.s();
            case 40:
              if ((ee = j.n()).done) {
                F.next = 44;
                break;
              }
              return F.delegateYield(Y(), "t2", 42);
            case 42:
              F.next = 40;
              break;
            case 44:
              F.next = 49;
              break;
            case 46:
              F.prev = 46, F.t3 = F.catch(37), j.e(F.t3);
            case 49:
              return F.prev = 49, j.f(), F.finish(49);
            case 52:
              return F.abrupt("return", u);
            case 53:
            case "end":
              return F.stop();
          }
      }, a, this, [[14, 23, 26, 29], [37, 46, 49, 52]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), k.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                k.next = 13;
                break;
              }
              if (u = s.value, be.debug("stopReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                k.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              this._remoteSdp.closeMediaSection(l.mid);
            case 11:
              k.next = 4;
              break;
            case 13:
              k.next = 18;
              break;
            case 15:
              k.prev = 15, k.t0 = k.catch(2), i.e(k.t0);
            case 18:
              return k.prev = 18, i.f(), k.finish(18);
            case 21:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), k.next = 25, this._pc.setRemoteDescription(p);
            case 25:
              return k.next = 27, this._pc.createAnswer();
            case 27:
              return h = k.sent, be.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]", h), k.next = 31, this._pc.setLocalDescription(h);
            case 31:
              v = ae(n);
              try {
                for (v.s(); !(m = v.n()).done; )
                  g = m.value, this._mapMidTransceiver.delete(g);
              } catch (T) {
                v.e(T);
              } finally {
                v.f();
              }
            case 33:
            case "end":
              return k.stop();
          }
      }, a, this, [[2, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, be.debug("pauseReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "inactive", this._remoteSdp.pauseMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, be.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, be.debug("resumeReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "recvonly", this._remoteSdp.resumeReceivingMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, be.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertRecvDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.sctpStreamParameters, s = n.label, u = n.protocol, this.assertRecvDirection(), p = i.streamId, h = i.ordered, v = i.maxPacketLifeTime, m = i.maxRetransmits, g = { negotiated: !0, id: p, ordered: h, maxPacketLifeTime: v, maxRetransmits: m, protocol: u }, be.debug("receiveDataChannel() [options:%o]", g), w = this._pc.createDataChannel(s, g), this._hasDataChannelMediaSection) {
                S.next = 23;
                break;
              }
              return this._remoteSdp.receiveSctpAssociation(), k = { type: "offer", sdp: this._remoteSdp.getSdp() }, be.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]", k), S.next = 12, this._pc.setRemoteDescription(k);
            case 12:
              return S.next = 14, this._pc.createAnswer();
            case 14:
              if (T = S.sent, this._transportReady) {
                S.next = 19;
                break;
              }
              return _ = ve.parse(T.sdp), S.next = 19, this.setupTransport({ localDtlsRole: (l = this._forcedLocalDtlsRole) !== null && l !== void 0 ? l : "client", localSdpObject: _ });
            case 19:
              return be.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 22, this._pc.setLocalDescription(T);
            case 22:
              this._hasDataChannelMediaSection = !0;
            case 23:
              return S.abrupt("return", { dataChannel: w });
            case 24:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = n.localDtlsRole, u = n.localSdpObject, u || (u = ve.parse(this._pc.localDescription.sdp)), l = Ws({ sdpObject: u }), l.role = s, this._remoteSdp.updateDtlsRole(s === "client" ? "server" : "client"), h.next = 7, new Promise(function(v, m) {
                i.safeEmit("@connect", { dtlsParameters: l }, v, m);
              });
            case 7:
              this._transportReady = !0;
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Fi);
function zw() {
  var o = RTCRtpReceiver.getCapabilities(), c = Nr(o, {}), r = ae(c.codecs), t;
  try {
    for (r.s(); !(t = r.n()).done; ) {
      var e = t.value;
      if (e.channels = e.numChannels, delete e.numChannels, e.mimeType = e.mimeType || "".concat(e.kind, "/").concat(e.name), e.parameters) {
        var a = e.parameters;
        a.apt && (a.apt = Number(a.apt)), a["packetization-mode"] && (a["packetization-mode"] = Number(a["packetization-mode"]));
      }
      var n = ae(e.rtcpFeedback || []), i;
      try {
        for (n.s(); !(i = n.n()).done; ) {
          var s = i.value;
          s.parameter || (s.parameter = "");
        }
      } catch (u) {
        n.e(u);
      } finally {
        n.f();
      }
    }
  } catch (u) {
    r.e(u);
  } finally {
    r.f();
  }
  return c;
}
function Gd(o) {
  var c = Nr(o, {});
  c.mid && (c.muxId = c.mid, delete c.mid);
  var r = ae(c.codecs), t;
  try {
    for (r.s(); !(t = r.n()).done; ) {
      var e = t.value;
      e.channels && (e.numChannels = e.channels, delete e.channels), e.mimeType && !e.name && (e.name = e.mimeType.split("/")[1]), delete e.mimeType;
    }
  } catch (a) {
    r.e(a);
  } finally {
    r.f();
  }
  return c;
}
var rr = new ht("Edge11"), Qw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t._rtpSenders = /* @__PURE__ */ new Map(), t._rtpReceivers = /* @__PURE__ */ new Map(), t._nextSendLocalId = 0, t._transportReady = !1, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Edge11";
  } }, { key: "close", value: function() {
    rr.debug("close()");
    try {
      this._iceGatherer.close();
    } catch (l) {
    }
    try {
      this._iceTransport.stop();
    } catch (l) {
    }
    try {
      this._dtlsTransport.stop();
    } catch (l) {
    }
    var e = ae(this._rtpSenders.values()), a;
    try {
      for (e.s(); !(a = e.n()).done; ) {
        var n = a.value;
        try {
          n.stop();
        } catch (l) {
        }
      }
    } catch (l) {
      e.e(l);
    } finally {
      e.f();
    }
    var i = ae(this._rtpReceivers.values()), s;
    try {
      for (i.s(); !(s = i.n()).done; ) {
        var u = s.value;
        try {
          u.stop();
        } catch (l) {
        }
      }
    } catch (l) {
      i.e(l);
    } finally {
      i.f();
    }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return rr.debug("getNativeRtpCapabilities()"), i.abrupt("return", zw());
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return rr.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: { OS: 0, MIS: 0 } });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "run",
    value: function(e) {
      var a = e.direction, n = e.iceParameters, i = e.iceCandidates, s = e.dtlsParameters, u = e.sctpParameters, l = e.iceServers, p = e.iceTransportPolicy, h = e.additionalSettings, v = e.proprietaryConstraints, m = e.extendedRtpCapabilities;
      rr.debug("run()"), this._sendingRtpParametersByKind = { audio: Mt("audio", m), video: Mt("video", m) }, this._remoteIceParameters = n, this._remoteIceCandidates = i, this._remoteDtlsParameters = s, this._cname = "CNAME-".concat(Du()), this.setIceGatherer({ iceServers: l, iceTransportPolicy: p }), this.setIceTransport(), this.setDtlsTransport();
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw new lt("not supported");
            case 1:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (rr.debug("restartIce()"), this._remoteIceParameters = n, this._transportReady) {
                p.next = 4;
                break;
              }
              return p.abrupt("return");
            case 4:
              rr.debug("restartIce() | calling iceTransport.start()"), this._iceTransport.start(this._iceGatherer, n, "controlling"), i = ae(this._remoteIceCandidates);
              try {
                for (i.s(); !(s = i.n()).done; )
                  u = s.value, this._iceTransport.addRemoteCandidate(u);
              } catch (h) {
                i.e(h);
              } finally {
                i.f();
              }
              this._iceTransport.addRemoteCandidate({});
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._iceTransport.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T;
      return d().wrap(function(E) {
        for (; ; )
          switch (E.prev = E.next) {
            case 0:
              if (i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, rr.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), this._transportReady) {
                E.next = 5;
                break;
              }
              return E.next = 5, this.setupTransport({ localDtlsRole: "server" });
            case 5:
              rr.debug("send() | calling new RTCRtpSender()"), p = new RTCRtpSender(i, this._dtlsTransport), h = Nr(this._sendingRtpParametersByKind[i.kind], {}), h.codecs = qt(h.codecs, l), v = h.codecs.some(function(S) {
                return /.+\/rtx$/i.test(S.mimeType);
              }), s || (s = [{}]), m = ae(s);
              try {
                for (m.s(); !(g = m.n()).done; )
                  w = g.value, w.ssrc = Du(), v && (w.rtx = { ssrc: Du() });
              } catch (S) {
                m.e(S);
              } finally {
                m.f();
              }
              return h.encodings = s, h.rtcp = { cname: this._cname, reducedSize: !0, mux: !0 }, k = Gd(h), rr.debug("send() | calling rtpSender.send() [params:%o]", k), E.next = 19, p.send(k);
            case 19:
              return T = String(this._nextSendLocalId), this._nextSendLocalId++, this._rtpSenders.set(T, p), E.abrupt("return", { localId: T, rtpParameters: h, rtpSender: p });
            case 23:
            case "end":
              return E.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "stopSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (rr.debug("stopSending() [localId:%s]", n), i = this._rtpSenders.get(n), i) {
                  u.next = 4;
                  break;
                }
                throw new Error("RTCRtpSender not found");
              case 4:
                this._rtpSenders.delete(n), u.prev = 5, rr.debug("stopSending() | calling rtpSender.stop()"), i.stop(), u.next = 14;
                break;
              case 10:
                throw u.prev = 10, u.t0 = u.catch(5), rr.warn("stopSending() | rtpSender.stop() failed:%o", u.t0), u.t0;
              case 14:
              case "end":
                return u.stop();
            }
        }, a, this, [[5, 10]]);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "pauseSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
              case "end":
                return s.stop();
            }
        }, a);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (i ? rr.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : rr.debug("replaceTrack() [localId:%s, no track]", n), s = this._rtpSenders.get(n), s) {
                l.next = 4;
                break;
              }
              throw new Error("RTCRtpSender not found");
            case 4:
              s.setTrack(i);
            case 5:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (rr.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._rtpSenders.get(n), s) {
                p.next = 4;
                break;
              }
              throw new Error("RTCRtpSender not found");
            case 4:
              return u = s.getParameters(), u.encodings.forEach(function(h, v) {
                v <= i ? h.active = !0 : h.active = !1;
              }), p.next = 8, s.setParameters(u);
            case 8:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (rr.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._rtpSenders.get(n), s) {
                p.next = 4;
                break;
              }
              throw new Error("RTCRtpSender not found");
            case 4:
              return u = s.getParameters(), u.encodings.forEach(function(h, v) {
                u.encodings[v] = Q(Q({}, h), i);
              }), p.next = 8, s.setParameters(u);
            case 8:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._rtpSenders.get(n), i) {
                u.next = 3;
                break;
              }
              throw new Error("RTCRtpSender not found");
            case 3:
              return u.abrupt("return", i.getStats());
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw new lt("not implemented");
            case 1:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S;
      return d().wrap(function(L) {
        for (; ; )
          switch (L.prev = L.next) {
            case 0:
              i = [], s = ae(n);
              try {
                for (s.s(); !(u = s.n()).done; )
                  l = u.value, p = l.trackId, h = l.kind, rr.debug("receive() [trackId:%s, kind:%s]", p, h);
              } catch (G) {
                s.e(G);
              } finally {
                s.f();
              }
              if (this._transportReady) {
                L.next = 6;
                break;
              }
              return L.next = 6, this.setupTransport({ localDtlsRole: "server" });
            case 6:
              v = ae(n), L.prev = 7, v.s();
            case 9:
              if ((m = v.n()).done) {
                L.next = 24;
                break;
              }
              return g = m.value, w = g.trackId, k = g.kind, T = g.rtpParameters, rr.debug("receive() | calling new RTCRtpReceiver()"), _ = new RTCRtpReceiver(this._dtlsTransport, k), _.addEventListener("error", function(G) {
                rr.error('rtpReceiver "error" event [event:%o]', G);
              }), E = Gd(T), rr.debug("receive() | calling rtpReceiver.receive() [params:%o]", E), L.next = 19, _.receive(E);
            case 19:
              S = w, this._rtpReceivers.set(S, _), i.push({ localId: S, track: _.track, rtpReceiver: _ });
            case 22:
              L.next = 9;
              break;
            case 24:
              L.next = 29;
              break;
            case 26:
              L.prev = 26, L.t0 = L.catch(7), v.e(L.t0);
            case 29:
              return L.prev = 29, v.f(), L.finish(29);
            case 32:
              return L.abrupt("return", i);
            case 33:
            case "end":
              return L.stop();
          }
      }, a, this, [[7, 26, 29, 32]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              i = ae(n), h.prev = 1, i.s();
            case 3:
              if ((s = i.n()).done) {
                h.next = 13;
                break;
              }
              if (u = s.value, rr.debug("stopReceiving() [localId:%s]", u), l = this._rtpReceivers.get(u), l) {
                h.next = 9;
                break;
              }
              throw new Error("RTCRtpReceiver not found");
            case 9:
              this._rtpReceivers.delete(u);
              try {
                rr.debug("stopReceiving() | calling rtpReceiver.stop()"), l.stop();
              } catch (v) {
                rr.warn("stopReceiving() | rtpReceiver.stop() failed:%o", v);
              }
            case 11:
              h.next = 3;
              break;
            case 13:
              h.next = 18;
              break;
            case 15:
              h.prev = 15, h.t0 = h.catch(1), i.e(h.t0);
            case 18:
              return h.prev = 18, i.f(), h.finish(18);
            case 21:
            case "end":
              return h.stop();
          }
      }, a, this, [[1, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._rtpReceivers.get(n), i) {
                u.next = 3;
                break;
              }
              throw new Error("RTCRtpReceiver not found");
            case 3:
              return u.abrupt("return", i.getStats());
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw new lt("not implemented");
            case 1:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setIceGatherer", value: function(e) {
    var a = e.iceServers, n = e.iceTransportPolicy, i = new RTCIceGatherer({ iceServers: a || [], gatherPolicy: n || "all" });
    i.addEventListener("error", function(s) {
      rr.error('iceGatherer "error" event [event:%o]', s);
    });
    try {
      i.gather();
    } catch (s) {
      rr.debug("setIceGatherer() | iceGatherer.gather() failed: %s", s.toString());
    }
    this._iceGatherer = i;
  } }, { key: "setIceTransport", value: function() {
    var e = this, a = new RTCIceTransport(this._iceGatherer);
    a.addEventListener("statechange", function() {
      switch (a.state) {
        case "checking":
          e.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          e.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          e.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          e.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          e.emit("@connectionstatechange", "closed");
          break;
      }
    }), a.addEventListener("icestatechange", function() {
      switch (a.state) {
        case "checking":
          e.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          e.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          e.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          e.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          e.emit("@connectionstatechange", "closed");
          break;
      }
    }), a.addEventListener("candidatepairchange", function(n) {
      rr.debug('iceTransport "candidatepairchange" event [pair:%o]', n.pair);
    }), this._iceTransport = a;
  } }, { key: "setDtlsTransport", value: function() {
    var e = this, a = new RTCDtlsTransport(this._iceTransport);
    a.addEventListener("statechange", function() {
      rr.debug('dtlsTransport "statechange" event [state:%s]', a.state);
    }), a.addEventListener("dtlsstatechange", function() {
      rr.debug('dtlsTransport "dtlsstatechange" event [state:%s]', a.state), a.state === "closed" && e.emit("@connectionstatechange", "closed");
    }), a.addEventListener("error", function(n) {
      rr.error('dtlsTransport "error" event [event:%o]', n);
    }), this._dtlsTransport = a;
  } }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return s = n.localDtlsRole, rr.debug("setupTransport()"), u = this._dtlsTransport.getLocalParameters(), u.role = s, m.next = 6, new Promise(function(g, w) {
                i.safeEmit("@connect", { dtlsParameters: u }, g, w);
              });
            case 6:
              this._iceTransport.start(this._iceGatherer, this._remoteIceParameters, "controlling"), l = ae(this._remoteIceCandidates);
              try {
                for (l.s(); !(p = l.n()).done; )
                  h = p.value, this._iceTransport.addRemoteCandidate(h);
              } catch (g) {
                l.e(g);
              } finally {
                l.f();
              }
              this._iceTransport.addRemoteCandidate({}), this._remoteDtlsParameters.fingerprints = this._remoteDtlsParameters.fingerprints.filter(function(g) {
                return g.algorithm === "sha-256" || g.algorithm === "sha-384" || g.algorithm === "sha-512";
              }), this._dtlsTransport.start(this._remoteDtlsParameters), this._transportReady = !0;
            case 13:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Fi), Re = new ht("Firefox60"), Bd = { OS: 16, MIS: 2048 }, qd = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t, e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
    return I(this, r), t = c.call(this), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t._sendStream = new MediaStream(), t._hasDataChannelMediaSection = !1, t._nextSendSctpStreamId = 0, t._transportReady = !1, t.supportsSendEncoding = !1, t.supportsSendEncoding = e, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Firefox60";
  } }, { key: "close", value: function() {
    if (Re.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
      }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return Re.debug("getNativeRtpCapabilities()"), n = new RTCPeerConnection({ iceServers: [], iceTransportPolicy: "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }), i = document.createElement("canvas"), i.getContext("2d"), s = i.captureStream(), u = s.getVideoTracks()[0], k.prev = 6, n.addTransceiver("audio", { direction: "sendrecv" }), l = n.addTransceiver(u, { direction: "sendrecv" }), p = l.sender.getParameters(), h = [{ rid: "r0", maxBitrate: 1e5 }, { rid: "r1", maxBitrate: 5e5 }], p.encodings = h, k.next = 14, l.sender.setParameters(p);
            case 14:
              return k.next = 16, n.createOffer();
            case 16:
              v = k.sent;
              try {
                i.remove();
              } catch (T) {
              }
              try {
                u.stop();
              } catch (T) {
              }
              try {
                n.close();
              } catch (T) {
              }
              return m = ve.parse(v.sdp), g = qs({ sdpObject: m }), k.abrupt("return", g);
            case 25:
              k.prev = 25, k.t0 = k.catch(6);
              try {
                i.remove();
              } catch (T) {
              }
              try {
                u.stop();
              } catch (T) {
              }
              try {
                n.close();
              } catch (T) {
              }
              throw k.t0;
            case 31:
            case "end":
              return k.stop();
          }
      }, a, null, [[6, 25]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return Re.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: Bd });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "run",
    value: function(e) {
      var a = this, n = e.direction, i = e.iceParameters, s = e.iceCandidates, u = e.dtlsParameters, l = e.sctpParameters, p = e.iceServers, h = e.iceTransportPolicy, v = e.additionalSettings, m = e.proprietaryConstraints, g = e.extendedRtpCapabilities;
      Re.debug("run()"), this._direction = n, this._remoteSdp = new zs({ iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l }), this._sendingRtpParametersByKind = { audio: Mt("audio", g), video: Mt("video", g) }, this._sendingRemoteRtpParametersByKind = { audio: ca("audio", g), video: ca("video", g) }, this._pc = new RTCPeerConnection(Q({ iceServers: p || [], iceTransportPolicy: h || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }, v), m), this._pc.connectionState ? this._pc.addEventListener("connectionstatechange", function() {
        a.emit("@connectionstatechange", a._pc.connectionState);
      }) : this._pc.addEventListener("iceconnectionstatechange", function() {
        switch (Re.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"), a._pc.iceConnectionState) {
          case "checking":
            a.emit("@connectionstatechange", "connecting");
            break;
          case "connected":
          case "completed":
            a.emit("@connectionstatechange", "connected");
            break;
          case "failed":
            a.emit("@connectionstatechange", "failed");
            break;
          case "disconnected":
            a.emit("@connectionstatechange", "disconnected");
            break;
          case "closed":
            a.emit("@connectionstatechange", "closed");
            break;
        }
      });
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw new lt("not supported");
            case 1:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (Re.debug("restartIce()"), this._remoteSdp.updateIceParameters(n), this._transportReady) {
                h.next = 4;
                break;
              }
              return h.abrupt("return");
            case 4:
              if (this._direction !== "send") {
                h.next = 17;
                break;
              }
              return h.next = 7, this._pc.createOffer({ iceRestart: !0 });
            case 7:
              return i = h.sent, Re.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), h.next = 11, this._pc.setLocalDescription(i);
            case 11:
              return s = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]", s), h.next = 15, this._pc.setRemoteDescription(s);
            case 15:
              h.next = 27;
              break;
            case 17:
              return u = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]", u), h.next = 21, this._pc.setRemoteDescription(u);
            case 21:
              return h.next = 23, this._pc.createAnswer();
            case 23:
              return l = h.sent, Re.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]", l), h.next = 27, this._pc.setLocalDescription(l);
            case 27:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j;
      return d().wrap(function(Y) {
        for (; ; )
          switch (Y.prev = Y.next) {
            case 0:
              if (i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, this.assertSendDirection(), Re.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), s && (s = Nr(s, []), s.length > 1 && (s.forEach(function(Z, F) {
                Z.rid = "r".concat(F);
              }), s.reverse())), p = Nr(this._sendingRtpParametersByKind[i.kind], {}), p.codecs = qt(p.codecs, l), h = Nr(this._sendingRemoteRtpParametersByKind[i.kind], {}), h.codecs = qt(h.codecs, l), v = this.supportsSendEncoding ? { sendEncodings: s } : {}, m = this._pc.addTransceiver(i, Q({ direction: "sendonly", streams: [this._sendStream] }, v)), !(!this.supportsSendEncoding && s)) {
                Y.next = 15;
                break;
              }
              return g = m.sender.getParameters(), g.encodings = s, Y.next = 15, m.sender.setParameters(g);
            case 15:
              return Y.next = 17, this._pc.createOffer();
            case 17:
              if (w = Y.sent, k = ve.parse(w.sdp), this._transportReady) {
                Y.next = 22;
                break;
              }
              return Y.next = 22, this.setupTransport({ localDtlsRole: "client", localSdpObject: k });
            case 22:
              return T = Qs((s || [{}])[0].scalabilityMode), Re.debug("send() | calling pc.setLocalDescription() [offer:%o]", w), Y.next = 26, this._pc.setLocalDescription(w);
            case 26:
              if (_ = m.mid, p.mid = _, k = ve.parse(this._pc.localDescription.sdp), E = k.media[k.media.length - 1], p.rtcp.cname = Js({ offerMediaObject: E }), s ? s.length === 1 ? (S = rn({ offerMediaObject: E }), Object.assign(S[0], s[0]), p.encodings = S) : p.encodings = s.reverse() : p.encodings = rn({ offerMediaObject: E }), p.encodings.length > 1 && (p.codecs[0].mimeType.toLowerCase() === "video/vp8" || p.codecs[0].mimeType.toLowerCase() === "video/h264")) {
                C = ae(p.encodings);
                try {
                  for (C.s(); !(L = C.n()).done; )
                    G = L.value, G.scalabilityMode ? G.scalabilityMode = "L1T".concat(T.temporalLayers) : G.scalabilityMode = "L1T3";
                } catch (Z) {
                  C.e(Z);
                } finally {
                  C.f();
                }
              }
              return this._remoteSdp.send({ offerMediaObject: E, offerRtpParameters: p, answerRtpParameters: h, codecOptions: u, extmapAllowMixed: !0 }), j = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("send() | calling pc.setRemoteDescription() [answer:%o]", j), Y.next = 38, this._pc.setRemoteDescription(j);
            case 38:
              return this._mapMidTransceiver.set(_, m), Y.abrupt("return", { localId: _, rtpParameters: p, rtpSender: m.sender });
            case 40:
            case "end":
              return Y.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "stopSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                if (Re.debug("stopSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                  p.next = 4;
                  break;
                }
                throw new Error("associated transceiver not found");
              case 4:
                return i.sender.replaceTrack(null), this._pc.removeTrack(i.sender), this._remoteSdp.disableMediaSection(i.mid), p.next = 9, this._pc.createOffer();
              case 9:
                return s = p.sent, Re.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
              case 13:
                return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
              case 17:
                this._mapMidTransceiver.delete(n);
              case 18:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "pauseSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                if (this.assertSendDirection(), Re.debug("pauseSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                  p.next = 5;
                  break;
                }
                throw new Error("associated RTCRtpTransceiver not found");
              case 5:
                return i.direction = "inactive", this._remoteSdp.pauseMediaSection(n), p.next = 9, this._pc.createOffer();
              case 9:
                return s = p.sent, Re.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
              case 13:
                return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
              case 17:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), Re.debug("resumeSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return i.direction = "sendonly", this._remoteSdp.resumeSendingMediaSection(n), p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, Re.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.assertSendDirection(), i ? Re.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : Re.debug("replaceTrack() [localId:%s, no track]", n), s = this._mapMidTransceiver.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), Re.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated transceiver not found");
            case 5:
              return u = s.sender.getParameters(), i = u.encodings.length - 1 - i, u.encodings.forEach(function(m, g) {
                g >= i ? m.active = !0 : m.active = !1;
              }), v.next = 10, s.sender.setParameters(u);
            case 10:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 13, this._pc.createOffer();
            case 13:
              return l = v.sent, Re.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 17, this._pc.setLocalDescription(l);
            case 17:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 21, this._pc.setRemoteDescription(p);
            case 21:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), Re.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                u.encodings[g] = Q(Q({}, m), i);
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, Re.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertSendDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.sender.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T;
      return d().wrap(function(E) {
        for (; ; )
          switch (E.prev = E.next) {
            case 0:
              if (i = n.ordered, s = n.maxPacketLifeTime, u = n.maxRetransmits, l = n.label, p = n.protocol, this.assertSendDirection(), h = { negotiated: !0, id: this._nextSendSctpStreamId, ordered: i, maxPacketLifeTime: s, maxRetransmits: u, protocol: p }, Re.debug("sendDataChannel() [options:%o]", h), v = this._pc.createDataChannel(l, h), this._nextSendSctpStreamId = ++this._nextSendSctpStreamId % Bd.MIS, this._hasDataChannelMediaSection) {
                E.next = 24;
                break;
              }
              return E.next = 9, this._pc.createOffer();
            case 9:
              if (m = E.sent, g = ve.parse(m.sdp), w = g.media.find(function(S) {
                return S.type === "application";
              }), this._transportReady) {
                E.next = 15;
                break;
              }
              return E.next = 15, this.setupTransport({ localDtlsRole: "client", localSdpObject: g });
            case 15:
              return Re.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]", m), E.next = 18, this._pc.setLocalDescription(m);
            case 18:
              return this._remoteSdp.sendSctpAssociation({ offerMediaObject: w }), k = { type: "answer", sdp: this._remoteSdp.getSdp() }, Re.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]", k), E.next = 23, this._pc.setRemoteDescription(k);
            case 23:
              this._hasDataChannelMediaSection = !0;
            case 24:
              return T = { streamId: h.id, ordered: h.ordered, maxPacketLifeTime: h.maxPacketLifeTime, maxRetransmits: h.maxRetransmits }, E.abrupt("return", { dataChannel: v, sctpStreamParameters: T });
            case 26:
            case "end":
              return E.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee;
      return d().wrap(function(Z) {
        for (; ; )
          switch (Z.prev = Z.next) {
            case 0:
              this.assertRecvDirection(), s = [], u = /* @__PURE__ */ new Map(), l = ae(n);
              try {
                for (l.s(); !(p = l.n()).done; )
                  h = p.value, v = h.trackId, m = h.kind, g = h.rtpParameters, w = h.streamId, Re.debug("receive() [trackId:%s, kind:%s]", v, m), k = g.mid || String(this._mapMidTransceiver.size), u.set(v, k), this._remoteSdp.receive({ mid: k, kind: m, offerRtpParameters: g, streamId: w || g.rtcp.cname, trackId: v });
              } catch (F) {
                l.e(F);
              } finally {
                l.f();
              }
              return T = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("receive() | calling pc.setRemoteDescription() [offer:%o]", T), Z.next = 9, this._pc.setRemoteDescription(T);
            case 9:
              return Z.next = 11, this._pc.createAnswer();
            case 11:
              _ = Z.sent, E = ve.parse(_.sdp), S = ae(n), Z.prev = 14, L = /* @__PURE__ */ d().mark(function F() {
                var x, ie, B, H, U;
                return d().wrap(function(X) {
                  for (; ; )
                    switch (X.prev = X.next) {
                      case 0:
                        x = C.value, ie = x.trackId, B = x.rtpParameters, H = u.get(ie), U = E.media.find(function(re) {
                          return String(re.mid) === H;
                        }), Ks({ offerRtpParameters: B, answerMediaObject: U }), _ = { type: "answer", sdp: ve.write(E) };
                      case 6:
                      case "end":
                        return X.stop();
                    }
                }, F);
              }), S.s();
            case 17:
              if ((C = S.n()).done) {
                Z.next = 21;
                break;
              }
              return Z.delegateYield(L(), "t0", 19);
            case 19:
              Z.next = 17;
              break;
            case 21:
              Z.next = 26;
              break;
            case 23:
              Z.prev = 23, Z.t1 = Z.catch(14), S.e(Z.t1);
            case 26:
              return Z.prev = 26, S.f(), Z.finish(26);
            case 29:
              if (this._transportReady) {
                Z.next = 32;
                break;
              }
              return Z.next = 32, this.setupTransport({ localDtlsRole: "client", localSdpObject: E });
            case 32:
              return Re.debug("receive() | calling pc.setLocalDescription() [answer:%o]", _), Z.next = 35, this._pc.setLocalDescription(_);
            case 35:
              G = ae(n), Z.prev = 36, ee = /* @__PURE__ */ d().mark(function F() {
                var x, ie, B, H;
                return d().wrap(function(J) {
                  for (; ; )
                    switch (J.prev = J.next) {
                      case 0:
                        if (x = j.value, ie = x.trackId, B = u.get(ie), H = i._pc.getTransceivers().find(function(X) {
                          return X.mid === B;
                        }), H) {
                          J.next = 6;
                          break;
                        }
                        throw new Error("new RTCRtpTransceiver not found");
                      case 6:
                        i._mapMidTransceiver.set(B, H), s.push({ localId: B, track: H.receiver.track, rtpReceiver: H.receiver });
                      case 8:
                      case "end":
                        return J.stop();
                    }
                }, F);
              }), G.s();
            case 39:
              if ((j = G.n()).done) {
                Z.next = 43;
                break;
              }
              return Z.delegateYield(ee(), "t2", 41);
            case 41:
              Z.next = 39;
              break;
            case 43:
              Z.next = 48;
              break;
            case 45:
              Z.prev = 45, Z.t3 = Z.catch(36), G.e(Z.t3);
            case 48:
              return Z.prev = 48, G.f(), Z.finish(48);
            case 51:
              return Z.abrupt("return", s);
            case 52:
            case "end":
              return Z.stop();
          }
      }, a, this, [[14, 23, 26, 29], [36, 45, 48, 51]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), k.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                k.next = 13;
                break;
              }
              if (u = s.value, Re.debug("stopReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                k.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              this._remoteSdp.closeMediaSection(l.mid);
            case 11:
              k.next = 4;
              break;
            case 13:
              k.next = 18;
              break;
            case 15:
              k.prev = 15, k.t0 = k.catch(2), i.e(k.t0);
            case 18:
              return k.prev = 18, i.f(), k.finish(18);
            case 21:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), k.next = 25, this._pc.setRemoteDescription(p);
            case 25:
              return k.next = 27, this._pc.createAnswer();
            case 27:
              return h = k.sent, Re.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]", h), k.next = 31, this._pc.setLocalDescription(h);
            case 31:
              v = ae(n);
              try {
                for (v.s(); !(m = v.n()).done; )
                  g = m.value, this._mapMidTransceiver.delete(g);
              } catch (T) {
                v.e(T);
              } finally {
                v.f();
              }
            case 33:
            case "end":
              return k.stop();
          }
      }, a, this, [[2, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, Re.debug("pauseReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "inactive", this._remoteSdp.pauseMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, Re.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, Re.debug("resumeReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "recvonly", this._remoteSdp.resumeReceivingMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, Re.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertRecvDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T;
      return d().wrap(function(E) {
        for (; ; )
          switch (E.prev = E.next) {
            case 0:
              if (i = n.sctpStreamParameters, s = n.label, u = n.protocol, this.assertRecvDirection(), l = i.streamId, p = i.ordered, h = i.maxPacketLifeTime, v = i.maxRetransmits, m = { negotiated: !0, id: l, ordered: p, maxPacketLifeTime: h, maxRetransmits: v, protocol: u }, Re.debug("receiveDataChannel() [options:%o]", m), g = this._pc.createDataChannel(s, m), this._hasDataChannelMediaSection) {
                E.next = 23;
                break;
              }
              return this._remoteSdp.receiveSctpAssociation(), w = { type: "offer", sdp: this._remoteSdp.getSdp() }, Re.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]", w), E.next = 12, this._pc.setRemoteDescription(w);
            case 12:
              return E.next = 14, this._pc.createAnswer();
            case 14:
              if (k = E.sent, this._transportReady) {
                E.next = 19;
                break;
              }
              return T = ve.parse(k.sdp), E.next = 19, this.setupTransport({ localDtlsRole: "client", localSdpObject: T });
            case 19:
              return Re.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]", k), E.next = 22, this._pc.setLocalDescription(k);
            case 22:
              this._hasDataChannelMediaSection = !0;
            case 23:
              return E.abrupt("return", { dataChannel: g });
            case 24:
            case "end":
              return E.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = n.localDtlsRole, u = n.localSdpObject, u || (u = ve.parse(this._pc.localDescription.sdp)), l = Ws({ sdpObject: u }), l.role = s, this._remoteSdp.updateDtlsRole(s === "client" ? "server" : "client"), h.next = 7, new Promise(function(v, m) {
                i.safeEmit("@connect", { dtlsParameters: l }, v, m);
              });
            case 7:
              this._transportReady = !0;
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
      return function() {
        return new r(e);
      };
    }
  ) }]), r;
}(Fi), Te = new ht("Safari12"), Wd = { OS: 1024, MIS: 1024 }, Yw = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t._sendStream = new MediaStream(), t._hasDataChannelMediaSection = !1, t._nextSendSctpStreamId = 0, t._transportReady = !1, t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Safari12";
  } }, { key: "close", value: function() {
    if (Te.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
      }
    this.emit("@close");
  } }, { key: "getNativeRtpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return Te.debug("getNativeRtpCapabilities()"), n = new RTCPeerConnection({ iceServers: [], iceTransportPolicy: "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }), p.prev = 2, n.addTransceiver("audio"), n.addTransceiver("video"), p.next = 7, n.createOffer();
            case 7:
              i = p.sent;
              try {
                n.close();
              } catch (h) {
              }
              return s = ve.parse(i.sdp), u = qs({ sdpObject: s }), p.abrupt("return", u);
            case 14:
              p.prev = 14, p.t0 = p.catch(2);
              try {
                n.close();
              } catch (h) {
              }
              throw p.t0;
            case 18:
            case "end":
              return p.stop();
          }
      }, a, null, [[2, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getNativeSctpCapabilities", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return Te.debug("getNativeSctpCapabilities()"), i.abrupt("return", { numStreams: Wd });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "run", value: function(e) {
    var a = this, n = e.direction, i = e.iceParameters, s = e.iceCandidates, u = e.dtlsParameters, l = e.sctpParameters, p = e.iceServers, h = e.iceTransportPolicy, v = e.additionalSettings, m = e.proprietaryConstraints, g = e.extendedRtpCapabilities;
    Te.debug("run()"), this._direction = n, this._remoteSdp = new zs({ iceParameters: i, iceCandidates: s, dtlsParameters: u, sctpParameters: l }), this._sendingRtpParametersByKind = { audio: Mt("audio", g), video: Mt("video", g) }, this._sendingRemoteRtpParametersByKind = { audio: ca("audio", g), video: ca("video", g) }, u.role && u.role !== "auto" && (this._forcedLocalDtlsRole = u.role === "server" ? "client" : "server"), this._pc = new RTCPeerConnection(Q({ iceServers: p || [], iceTransportPolicy: h || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }, v), m), this._pc.connectionState ? this._pc.addEventListener("connectionstatechange", function() {
      a.emit("@connectionstatechange", a._pc.connectionState);
    }) : this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (Te.warn("run() | pc.connectionState not supported, using pc.iceConnectionState"), a._pc.iceConnectionState) {
        case "checking":
          a.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          a.emit("@connectionstatechange", "connected");
          break;
        case "failed":
          a.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          a.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          a.emit("@connectionstatechange", "closed");
          break;
      }
    });
  } }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              Te.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (Te.debug("restartIce()"), this._remoteSdp.updateIceParameters(n), this._transportReady) {
                h.next = 4;
                break;
              }
              return h.abrupt("return");
            case 4:
              if (this._direction !== "send") {
                h.next = 17;
                break;
              }
              return h.next = 7, this._pc.createOffer({ iceRestart: !0 });
            case 7:
              return i = h.sent, Te.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), h.next = 11, this._pc.setLocalDescription(i);
            case 11:
              return s = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("restartIce() | calling pc.setRemoteDescription() [answer:%o]", s), h.next = 15, this._pc.setRemoteDescription(s);
            case 15:
              h.next = 27;
              break;
            case 17:
              return u = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("restartIce() | calling pc.setRemoteDescription() [offer:%o]", u), h.next = 21, this._pc.setRemoteDescription(u);
            case 21:
              return h.next = 23, this._pc.createAnswer();
            case 23:
              return l = h.sent, Te.debug("restartIce() | calling pc.setLocalDescription() [answer:%o]", l), h.next = 27, this._pc.setLocalDescription(l);
            case 27:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j;
      return d().wrap(function(Y) {
        for (; ; )
          switch (Y.prev = Y.next) {
            case 0:
              return i = n.track, s = n.encodings, u = n.codecOptions, l = n.codec, this.assertSendDirection(), Te.debug("send() [kind:%s, track.id:%s]", i.kind, i.id), h = Nr(this._sendingRtpParametersByKind[i.kind], {}), h.codecs = qt(h.codecs, l), v = Nr(this._sendingRemoteRtpParametersByKind[i.kind], {}), v.codecs = qt(v.codecs, l), m = this._remoteSdp.getNextMediaSectionIdx(), g = this._pc.addTransceiver(i, { direction: "sendonly", streams: [this._sendStream] }), Y.next = 11, this._pc.createOffer();
            case 11:
              if (w = Y.sent, k = ve.parse(w.sdp), this._transportReady) {
                Y.next = 16;
                break;
              }
              return Y.next = 16, this.setupTransport({ localDtlsRole: (p = this._forcedLocalDtlsRole) !== null && p !== void 0 ? p : "client", localSdpObject: k });
            case 16:
              return _ = Qs((s || [{}])[0].scalabilityMode), s && s.length > 1 && (Te.debug("send() | enabling legacy simulcast"), k = ve.parse(w.sdp), T = k.media[m.idx], zo({ offerMediaObject: T, numStreams: s.length }), w = { type: "offer", sdp: ve.write(k) }), Te.debug("send() | calling pc.setLocalDescription() [offer:%o]", w), Y.next = 21, this._pc.setLocalDescription(w);
            case 21:
              if (E = g.mid, h.mid = E, k = ve.parse(this._pc.localDescription.sdp), T = k.media[m.idx], h.rtcp.cname = Js({ offerMediaObject: T }), h.encodings = rn({ offerMediaObject: T }), s)
                for (S = 0; S < h.encodings.length; ++S)
                  s[S] && Object.assign(h.encodings[S], s[S]);
              if (h.encodings.length > 1 && (h.codecs[0].mimeType.toLowerCase() === "video/vp8" || h.codecs[0].mimeType.toLowerCase() === "video/h264")) {
                C = ae(h.encodings);
                try {
                  for (C.s(); !(L = C.n()).done; )
                    G = L.value, G.scalabilityMode ? G.scalabilityMode = "L1T".concat(_.temporalLayers) : G.scalabilityMode = "L1T3";
                } catch (Z) {
                  C.e(Z);
                } finally {
                  C.f();
                }
              }
              return this._remoteSdp.send({ offerMediaObject: T, reuseMid: m.reuseMid, offerRtpParameters: h, answerRtpParameters: v, codecOptions: u }), j = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("send() | calling pc.setRemoteDescription() [answer:%o]", j), Y.next = 34, this._pc.setRemoteDescription(j);
            case 34:
              return this._mapMidTransceiver.set(E, g), Y.abrupt("return", { localId: E, rtpParameters: h, rtpSender: g.sender });
            case 36:
            case "end":
              return Y.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "stopSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (this.assertSendDirection(), Te.debug("stopSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                  h.next = 5;
                  break;
                }
                throw new Error("associated RTCRtpTransceiver not found");
              case 5:
                if (i.sender.replaceTrack(null), this._pc.removeTrack(i.sender), s = this._remoteSdp.closeMediaSection(i.mid), s)
                  try {
                    i.stop();
                  } catch (v) {
                  }
                return h.next = 11, this._pc.createOffer();
              case 11:
                return u = h.sent, Te.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 15, this._pc.setLocalDescription(u);
              case 15:
                return l = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", l), h.next = 19, this._pc.setRemoteDescription(l);
              case 19:
                this._mapMidTransceiver.delete(n);
              case 20:
              case "end":
                return h.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, {
    key: "pauseSending",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                if (this.assertSendDirection(), Te.debug("pauseSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                  p.next = 5;
                  break;
                }
                throw new Error("associated RTCRtpTransceiver not found");
              case 5:
                return i.direction = "inactive", this._remoteSdp.pauseMediaSection(n), p.next = 9, this._pc.createOffer();
              case 9:
                return s = p.sent, Te.debug("pauseSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
              case 13:
                return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("pauseSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
              case 17:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "resumeSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.assertSendDirection(), Te.debug("resumeSending() [localId:%s]", n), i = this._mapMidTransceiver.get(n), i) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return i.direction = "sendonly", this._remoteSdp.resumeSendingMediaSection(n), p.next = 9, this._pc.createOffer();
            case 9:
              return s = p.sent, Te.debug("resumeSending() | calling pc.setLocalDescription() [offer:%o]", s), p.next = 13, this._pc.setLocalDescription(s);
            case 13:
              return u = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("resumeSending() | calling pc.setRemoteDescription() [answer:%o]", u), p.next = 17, this._pc.setRemoteDescription(u);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.assertSendDirection(), i ? Te.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : Te.debug("replaceTrack() [localId:%s, no track]", n), s = this._mapMidTransceiver.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), Te.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                g <= i ? m.active = !0 : m.active = !1;
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, Te.debug("setMaxSpatialLayer() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("setMaxSpatialLayer() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (this.assertSendDirection(), Te.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this._mapMidTransceiver.get(n), s) {
                v.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(m, g) {
                u.encodings[g] = Q(Q({}, m), i);
              }), v.next = 9, s.sender.setParameters(u);
            case 9:
              return this._remoteSdp.muxMediaSectionSimulcast(n, u.encodings), v.next = 12, this._pc.createOffer();
            case 12:
              return l = v.sent, Te.debug("setRtpEncodingParameters() | calling pc.setLocalDescription() [offer:%o]", l), v.next = 16, this._pc.setLocalDescription(l);
            case 16:
              return p = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("setRtpEncodingParameters() | calling pc.setRemoteDescription() [answer:%o]", p), v.next = 20, this._pc.setRemoteDescription(p);
            case 20:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertSendDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.sender.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.ordered, s = n.maxPacketLifeTime, u = n.maxRetransmits, l = n.label, p = n.protocol, this.assertSendDirection(), v = { negotiated: !0, id: this._nextSendSctpStreamId, ordered: i, maxPacketLifeTime: s, maxRetransmits: u, protocol: p }, Te.debug("sendDataChannel() [options:%o]", v), m = this._pc.createDataChannel(l, v), this._nextSendSctpStreamId = ++this._nextSendSctpStreamId % Wd.MIS, this._hasDataChannelMediaSection) {
                S.next = 24;
                break;
              }
              return S.next = 9, this._pc.createOffer();
            case 9:
              if (g = S.sent, w = ve.parse(g.sdp), k = w.media.find(function(C) {
                return C.type === "application";
              }), this._transportReady) {
                S.next = 15;
                break;
              }
              return S.next = 15, this.setupTransport({ localDtlsRole: (h = this._forcedLocalDtlsRole) !== null && h !== void 0 ? h : "client", localSdpObject: w });
            case 15:
              return Te.debug("sendDataChannel() | calling pc.setLocalDescription() [offer:%o]", g), S.next = 18, this._pc.setLocalDescription(g);
            case 18:
              return this._remoteSdp.sendSctpAssociation({ offerMediaObject: k }), T = { type: "answer", sdp: this._remoteSdp.getSdp() }, Te.debug("sendDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 23, this._pc.setRemoteDescription(T);
            case 23:
              this._hasDataChannelMediaSection = !0;
            case 24:
              return _ = { streamId: v.id, ordered: v.ordered, maxPacketLifeTime: v.maxPacketLifeTime, maxRetransmits: v.maxRetransmits }, S.abrupt("return", { dataChannel: m, sctpStreamParameters: _ });
            case 26:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y;
      return d().wrap(function(F) {
        for (; ; )
          switch (F.prev = F.next) {
            case 0:
              this.assertRecvDirection(), u = [], l = /* @__PURE__ */ new Map(), p = ae(n);
              try {
                for (p.s(); !(h = p.n()).done; )
                  v = h.value, m = v.trackId, g = v.kind, w = v.rtpParameters, k = v.streamId, Te.debug("receive() [trackId:%s, kind:%s]", m, g), T = w.mid || String(this._mapMidTransceiver.size), l.set(m, T), this._remoteSdp.receive({ mid: T, kind: g, offerRtpParameters: w, streamId: k || w.rtcp.cname, trackId: m });
              } catch (x) {
                p.e(x);
              } finally {
                p.f();
              }
              return _ = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("receive() | calling pc.setRemoteDescription() [offer:%o]", _), F.next = 9, this._pc.setRemoteDescription(_);
            case 9:
              return F.next = 11, this._pc.createAnswer();
            case 11:
              E = F.sent, S = ve.parse(E.sdp), C = ae(n), F.prev = 14, G = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U, J;
                return d().wrap(function(re) {
                  for (; ; )
                    switch (re.prev = re.next) {
                      case 0:
                        ie = L.value, B = ie.trackId, H = ie.rtpParameters, U = l.get(B), J = S.media.find(function(pe) {
                          return String(pe.mid) === U;
                        }), Ks({ offerRtpParameters: H, answerMediaObject: J });
                      case 5:
                      case "end":
                        return re.stop();
                    }
                }, x);
              }), C.s();
            case 17:
              if ((L = C.n()).done) {
                F.next = 21;
                break;
              }
              return F.delegateYield(G(), "t0", 19);
            case 19:
              F.next = 17;
              break;
            case 21:
              F.next = 26;
              break;
            case 23:
              F.prev = 23, F.t1 = F.catch(14), C.e(F.t1);
            case 26:
              return F.prev = 26, C.f(), F.finish(26);
            case 29:
              if (E = { type: "answer", sdp: ve.write(S) }, this._transportReady) {
                F.next = 33;
                break;
              }
              return F.next = 33, this.setupTransport({ localDtlsRole: (s = this._forcedLocalDtlsRole) !== null && s !== void 0 ? s : "client", localSdpObject: S });
            case 33:
              return Te.debug("receive() | calling pc.setLocalDescription() [answer:%o]", E), F.next = 36, this._pc.setLocalDescription(E);
            case 36:
              j = ae(n), F.prev = 37, Y = /* @__PURE__ */ d().mark(function x() {
                var ie, B, H, U;
                return d().wrap(function(X) {
                  for (; ; )
                    switch (X.prev = X.next) {
                      case 0:
                        if (ie = ee.value, B = ie.trackId, H = l.get(B), U = i._pc.getTransceivers().find(function(re) {
                          return re.mid === H;
                        }), U) {
                          X.next = 6;
                          break;
                        }
                        throw new Error("new RTCRtpTransceiver not found");
                      case 6:
                        i._mapMidTransceiver.set(H, U), u.push({ localId: H, track: U.receiver.track, rtpReceiver: U.receiver });
                      case 8:
                      case "end":
                        return X.stop();
                    }
                }, x);
              }), j.s();
            case 40:
              if ((ee = j.n()).done) {
                F.next = 44;
                break;
              }
              return F.delegateYield(Y(), "t2", 42);
            case 42:
              F.next = 40;
              break;
            case 44:
              F.next = 49;
              break;
            case 46:
              F.prev = 46, F.t3 = F.catch(37), j.e(F.t3);
            case 49:
              return F.prev = 49, j.f(), F.finish(49);
            case 52:
              return F.abrupt("return", u);
            case 53:
            case "end":
              return F.stop();
          }
      }, a, this, [[14, 23, 26, 29], [37, 46, 49, 52]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), k.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                k.next = 13;
                break;
              }
              if (u = s.value, Te.debug("stopReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                k.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              this._remoteSdp.closeMediaSection(l.mid);
            case 11:
              k.next = 4;
              break;
            case 13:
              k.next = 18;
              break;
            case 15:
              k.prev = 15, k.t0 = k.catch(2), i.e(k.t0);
            case 18:
              return k.prev = 18, i.f(), k.finish(18);
            case 21:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("stopReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), k.next = 25, this._pc.setRemoteDescription(p);
            case 25:
              return k.next = 27, this._pc.createAnswer();
            case 27:
              return h = k.sent, Te.debug("stopReceiving() | calling pc.setLocalDescription() [answer:%o]", h), k.next = 31, this._pc.setLocalDescription(h);
            case 31:
              v = ae(n);
              try {
                for (v.s(); !(m = v.n()).done; )
                  g = m.value, this._mapMidTransceiver.delete(g);
              } catch (T) {
                v.e(T);
              } finally {
                v.f();
              }
            case 33:
            case "end":
              return k.stop();
          }
      }, a, this, [[2, 15, 18, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, Te.debug("pauseReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "inactive", this._remoteSdp.pauseMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("pauseReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, Te.debug("pauseReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              this.assertRecvDirection(), i = ae(n), m.prev = 2, i.s();
            case 4:
              if ((s = i.n()).done) {
                m.next = 14;
                break;
              }
              if (u = s.value, Te.debug("resumeReceiving() [localId:%s]", u), l = this._mapMidTransceiver.get(u), l) {
                m.next = 10;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 10:
              l.direction = "recvonly", this._remoteSdp.resumeReceivingMediaSection(u);
            case 12:
              m.next = 4;
              break;
            case 14:
              m.next = 19;
              break;
            case 16:
              m.prev = 16, m.t0 = m.catch(2), i.e(m.t0);
            case 19:
              return m.prev = 19, i.f(), m.finish(19);
            case 22:
              return p = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("resumeReceiving() | calling pc.setRemoteDescription() [offer:%o]", p), m.next = 26, this._pc.setRemoteDescription(p);
            case 26:
              return m.next = 28, this._pc.createAnswer();
            case 28:
              return h = m.sent, Te.debug("resumeReceiving() | calling pc.setLocalDescription() [answer:%o]", h), m.next = 32, this._pc.setLocalDescription(h);
            case 32:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 16, 19, 22]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.assertRecvDirection(), i = this._mapMidTransceiver.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "receiveDataChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.sctpStreamParameters, s = n.label, u = n.protocol, this.assertRecvDirection(), p = i.streamId, h = i.ordered, v = i.maxPacketLifeTime, m = i.maxRetransmits, g = { negotiated: !0, id: p, ordered: h, maxPacketLifeTime: v, maxRetransmits: m, protocol: u }, Te.debug("receiveDataChannel() [options:%o]", g), w = this._pc.createDataChannel(s, g), this._hasDataChannelMediaSection) {
                S.next = 23;
                break;
              }
              return this._remoteSdp.receiveSctpAssociation(), k = { type: "offer", sdp: this._remoteSdp.getSdp() }, Te.debug("receiveDataChannel() | calling pc.setRemoteDescription() [offer:%o]", k), S.next = 12, this._pc.setRemoteDescription(k);
            case 12:
              return S.next = 14, this._pc.createAnswer();
            case 14:
              if (T = S.sent, this._transportReady) {
                S.next = 19;
                break;
              }
              return _ = ve.parse(T.sdp), S.next = 19, this.setupTransport({ localDtlsRole: (l = this._forcedLocalDtlsRole) !== null && l !== void 0 ? l : "client", localSdpObject: _ });
            case 19:
              return Te.debug("receiveDataChannel() | calling pc.setRemoteDescription() [answer:%o]", T), S.next = 22, this._pc.setLocalDescription(T);
            case 22:
              this._hasDataChannelMediaSection = !0;
            case 23:
              return S.abrupt("return", { dataChannel: w });
            case 24:
            case "end":
              return S.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = n.localDtlsRole, u = n.localSdpObject, u || (u = ve.parse(this._pc.localDescription.sdp)), l = Ws({ sdpObject: u }), l.role = s, this._remoteSdp.updateDtlsRole(s === "client" ? "server" : "client"), h.next = 7, new Promise(function(v, m) {
                i.safeEmit("@connect", { dtlsParameters: l }, v, m);
              });
            case 7:
              this._transportReady = !0;
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Fi), Yh = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = t.handlerName, a = t.handlerFactory, n = t.Handler;
    return I(this, r), c.call(this, { handlerName: e, handlerFactory: a, Handler: n });
  }
  return D(r, [{ key: "switchDevice", value: function(e) {
    switch (e) {
      case "Chrome111":
        this._handlerFactory = Kw.createFactory();
        break;
      case "Chrome74":
        this._handlerFactory = Jw.createFactory();
        break;
      case "Chrome70":
        this._handlerFactory = Ww.createFactory();
        break;
      case "Firefox111":
        this._handlerFactory = qd.createFactory(!0);
        break;
      case "Firefox60":
        this._handlerFactory = qd.createFactory(!1);
        break;
      case "Safari12":
        this._handlerFactory = Yw.createFactory();
        break;
      case "Edge11":
        this._handlerFactory = Qw.createFactory();
        break;
      default:
        throw new TypeError('unknown handlerName "'.concat(e, '"'));
    }
  } }]), r;
}(Bw), fe = { roomName: void 0, authToken: void 0, peerId: void 0, apiBase: void 0, baseURI: void 0, defaults: { audio: !0, video: !0 }, modules: void 0, organizationId: void 0, overrides: {}, viewType: void 0, env: void 0 };
function Jd(o) {
  var c, r, t, e, a, n, i, s, u;
  (c = fe.roomName) !== null && c !== void 0 || (fe.roomName = o == null ? void 0 : o.roomName), (r = fe.authToken) !== null && r !== void 0 || (fe.authToken = o == null ? void 0 : o.authToken), (t = fe.peerId) !== null && t !== void 0 || (fe.peerId = o == null ? void 0 : o.peerId), (e = fe.apiBase) !== null && e !== void 0 || (fe.apiBase = o == null ? void 0 : o.apiBase), (a = fe.baseURI) !== null && a !== void 0 || (fe.baseURI = o == null ? void 0 : o.baseURI), (n = fe.modules) !== null && n !== void 0 || (fe.modules = o == null ? void 0 : o.modules), (i = fe.organizationId) !== null && i !== void 0 || (fe.organizationId = o == null ? void 0 : o.organizationId), fe.defaults = Q(Q({}, fe.defaults), (s = o == null ? void 0 : o.defaults) !== null && s !== void 0 ? s : {}), (u = fe.env) !== null && u !== void 0 || (fe.env = Ti.PROD), fe.apiBase && (fe.apiBase.includes("api.cluster.dyte") || fe.apiBase.includes("api.dyte") ? fe.env = Ti.PROD : fe.apiBase.includes("api.preprod.dyte") ? fe.env = Ti.PREPROD : fe.apiBase.includes("api.devel.dyte") && (fe.env = Ti.DEVEL));
}
var Ys = "VERSION_PLACEHOLDER", yl = "web-core";
function Ci(o) {
  var c = o.servicePrefix, r = o.apiBase, t = o.baseURI;
  return t ? "".concat(c, ".").concat(t) : r != null && r.includes("api.preprod.dyte") ? "".concat(c, ".preprod.dyte.io") : r != null && r.includes("api.devel.dyte") ? "".concat(c, ".devel.dyte.io") : "".concat(c, ".dyte.io");
}
var Vs = "chrome", Xh = "opera", Zh = "firefox", xh = "iexplorer", ev = "safari", rv = "nwjs", tv = "electron", av = "react-native", kl = "unknown", Qo = { Chrome: Vs, Chromium: Vs, Opera: Xh, Firefox: Zh, "Internet Explorer": xh, Safari: ev };
function Xw() {
  var o = navigator, c = o.userAgent, r = { name: kl, version: void 0 };
  if (c.match(/Chrome/) && !c.match(/Edge/))
    if (c.match(/Edg(A?)/)) {
      var t = c.match(/Chrome\/([\d.]+)/)[1];
      Number.parseInt(t, 10) > 72 && (r.name = Vs, r.version = t);
    } else
      r.name = Vs, r.version = c.match(/Chrome\/([\d.]+)/)[1];
  return r;
}
function Zw() {
  var o = navigator, c = o.userAgent;
  if (c.match(/Electron/)) {
    var r = c.match(/Electron\/([\d.]+)/)[1];
    return { name: tv, version: r };
  }
  return null;
}
function xw() {
  var o = navigator, c = o.userAgent;
  if (c.match(/JitsiMeetNW/)) {
    var r = c.match(/JitsiMeetNW\/([\d.]+)/)[1];
    return { name: rv, version: r };
  }
}
function eT() {
  var o = navigator.userAgent.match(/\b(react[ \t_-]*native)(?:\/(\S+))?/i), c;
  if (o || navigator.product === "ReactNative")
    return o && o.length > 2 && (o[1], c = o[2]), c || (c = "unknown"), { name: av, version: c };
}
function rT(o) {
  for (var c, r = [eT, Zw, xw], t = 0; t < r.length; t += 1)
    if (c = r[t](), c)
      return c;
  var e = o.getBrowserName();
  return e in Qo ? { name: Qo[e], version: o.getBrowserVersion() } : (c = Xw(), c || { name: kl, version: void 0 });
}
var tT = /* @__PURE__ */ function() {
  function o() {
    var c = this;
    I(this, o), R(this, "_bowser", void 0), R(this, "_name", void 0), R(this, "_version", void 0), R(this, "getDeviceInfo", function() {
      return { isMobile: c.isMobile(), browserName: c._bowser.getBrowserName(), osName: c._bowser.getOSName(), browserVersion: c._bowser.getBrowserVersion(), osVersionName: c._bowser.getOSVersion(), engineName: c._bowser.getEngineName() };
    });
  }
  return D(o, [{
    key: "init",
    value: (
      /**
      * Creates new BrowserDetection instance.
      *
      * @param {Object} [browserInfo] - Information about the browser.
      * @param {string} browserInfo.name - The name of the browser.
      * @param {string} browserInfo.version - The version of the browser.
      */
      function(r) {
        var t, e;
        if (this._bowser = nl.getParser(navigator.userAgent), typeof r == "undefined") {
          var a = rT(this._bowser);
          t = a.name, e = a.version;
        } else
          r.name in Qo ? (t = Qo[r.name], e = r.version) : (t = kl, e = void 0);
        this._name = t, this._version = e;
      }
    )
    /**
    * Gets current browser name.
    * @returns {string}
    */
  }, {
    key: "getName",
    value: function() {
      return this._name;
    }
    /**
    * Checks if current browser is Chrome.
    * @returns {boolean}
    */
  }, {
    key: "isChrome",
    value: function() {
      return this._name === Vs;
    }
    /**
    * Checks if current browser is Opera.
    * @returns {boolean}
    */
  }, {
    key: "isOpera",
    value: function() {
      return this._name === Xh;
    }
    /**
    * Checks if current browser is Firefox.
    * @returns {boolean}
    */
  }, {
    key: "isFirefox",
    value: function() {
      return this._name === Zh;
    }
    /**
    * Checks if current browser is Internet Explorer.
    * @returns {boolean}
    */
  }, {
    key: "isIExplorer",
    value: function() {
      return this._name === xh;
    }
    /**
    * Checks if current browser is Safari.
    * @returns {boolean}
    */
  }, {
    key: "isSafari",
    value: function() {
      return this._name === ev;
    }
    /**
    * Checks if current environment is NWJS.
    * @returns {boolean}
    */
  }, {
    key: "isNWJS",
    value: function() {
      return this._name === rv;
    }
    /**
    * Checks if current environment is Electron.
    * @returns {boolean}
    */
  }, {
    key: "isElectron",
    value: function() {
      return this._name === tv;
    }
    /**
    * Checks if current environment is React Native.
    * @returns {boolean}
    */
  }, {
    key: "isReactNative",
    value: function() {
      return this._name === av || navigator.isReactNative === !0;
    }
    /**
    * Returns the version of the current browser.
    * @returns {string}
    */
  }, { key: "getVersion", value: function() {
    return this._version;
  } }, { key: "isMobile", value: function() {
    return this._bowser.getPlatformType() === "mobile";
  } }, {
    key: "_checkCondition",
    value: (
      /**
      * Check if the parsed browser matches the passed condition.
      *
      * @param {Object} checkTree - It's one or two layered object, which can include a
      * platform or an OS on the first layer and should have browsers specs on the
      * bottom layer.
      * Eg. { chrome: '>71.1.0' }
      *		 { windows: { chrome: '<70.2' } }
      * @returns {boolean | undefined} - Returns true if the browser satisfies the set
      * conditions, false if not and undefined when the browser is not defined in the
      * checktree object or when the current browser's version is unknown.
      * @private
      */
      function(r) {
        if (this._version)
          return this._bowser.satisfies(r);
      }
    )
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * greater than the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    */
  }, {
    key: "isVersionGreaterThan",
    value: function(r) {
      return this._checkCondition(R({}, this._name, ">".concat(r)));
    }
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * lower than the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    */
  }, {
    key: "isVersionLessThan",
    value: function(r) {
      return this._checkCondition(R({}, this._name, "<".concat(r)));
    }
    /**
    * Compares the passed version with the current browser version.
    *
    * @param {*} version - The version to compare with. Anything different
    * than string will be converted to string.
    * @returns {boolean|undefined} - Returns true if the current version is
    * equal to the passed version and false otherwise. Returns undefined if
    * the current browser version is unknown.
    * A loose-equality operator is used here so that it matches the sub-versions as well.
    */
  }, { key: "isVersionEqualTo", value: function(r) {
    return this._checkCondition(R({}, this._name, "~".concat(r)));
  } }]), o;
}(), aT = 72, nT = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r, [{
    key: "doesVideoMuteByStreamRemove",
    value: (
      /**
      * Tells whether or not the <tt>MediaStream/tt> is removed from
      * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn
      * off the camera device).
      * @return {boolean} <tt>true</tt> if the current browser supports this
      * strategy or <tt>false</tt> otherwise.
      */
      function() {
        return this.isChromiumBased() || this.isWebKitBased();
      }
    )
    /**
    * Check whether or not the current browser support peer to peer connections
    * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>
    * otherwise.
    */
  }, {
    key: "supportsP2P",
    value: function() {
      return !this.usesUnifiedPlan();
    }
    /**
    * Checks if the current browser is Chromium based, that is, it's either
    * Chrome / Chromium or uses it as its engine, but doesn't identify as
    * Chrome.
    *
    * This includes the following browsers:
    * - Chrome and Chromium
    * - Other browsers which use the Chrome engine, but are detected as Chrome,
    *	 such as Brave and Vivaldi
    * - Browsers which are NOT Chrome but use it as their engine, and have
    *	 custom detection code: Opera, Electron and NW.JS
    */
  }, {
    key: "isChromiumBased",
    value: function() {
      return this.isChrome() || this.isElectron() || this.isNWJS() || this.isOpera();
    }
    /**
    * Checks if the current browser is WebKit based. It's either
    * Safari or uses WebKit as its engine.
    *
    * This includes Chrome and Firefox on iOS
    *
    * @returns {boolean}
    */
  }, {
    key: "isWebKitBased",
    value: function() {
      return this._bowser.isEngine("webkit") && typeof navigator.mediaDevices != "undefined" && typeof navigator.mediaDevices.getUserMedia != "undefined" && typeof window.RTCRtpTransceiver != "undefined" && Object.keys(RTCRtpTransceiver.prototype).indexOf("currentDirection") > -1;
    }
    /**
    * Checks if the current browser is supported.
    *
    * @returns {boolean} true if the browser is supported, false otherwise.
    */
  }, {
    key: "isSupported",
    value: function() {
      return this.isChromiumBased() && this._getChromiumBasedVersion() >= aT || this.isFirefox() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Returns whether or not the current environment needs a user interaction
    * with the page before any unmute can occur.
    *
    * @returns {boolean}
    */
  }, {
    key: "isUserInteractionRequiredForUnmute",
    value: function() {
      return this.isFirefox() && this.isVersionLessThan("68");
    }
    /**
    * Checks if the current browser triggers 'onmute'/'onunmute' events when
    * user's connection is interrupted and the video stops playback.
    * @returns {*|boolean} 'true' if the event is supported or 'false'
    * otherwise.
    */
  }, {
    key: "supportsVideoMuteOnConnInterrupted",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the current browser reports upload and download bandwidth
    * statistics.
    * @return {boolean}
    */
  }, {
    key: "supportsBandwidthStatistics",
    value: function() {
      return !this.isFirefox() && !this.isWebKitBased();
    }
    /**
    * Checks if the current browser supports setting codec preferences on the transceiver.
    * @returns {boolean}
    */
  }, {
    key: "supportsCodecPreferences",
    value: function() {
      return this.usesUnifiedPlan() && typeof window.RTCRtpTransceiver != "undefined" && Object.keys(window.RTCRtpTransceiver.prototype).indexOf("setCodecPreferences") > -1 && Object.keys(RTCRtpSender.prototype).indexOf("getCapabilities") > -1 && !this.isWebKitBased();
    }
    /**
    * Checks if the current browser support the device change event.
    * @return {boolean}
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "supportsDeviceChangeEvent",
    value: function() {
      return navigator.mediaDevices && typeof navigator.mediaDevices.ondevicechange != "undefined" && typeof navigator.mediaDevices.addEventListener != "undefined";
    }
    /**
    * Checks if the current browser supports RTT statistics for srflx local
    * candidates through the legacy getStats() API.
    */
  }, {
    key: "supportsLocalCandidateRttStatistics",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the current browser supports the Long Tasks API that lets us observe
    * performance measurement events and be notified of tasks that take longer than
    * 50ms to execute on the main thread.
    */
  }, {
    key: "supportsPerformanceObserver",
    value: function() {
      return typeof window.PerformanceObserver != "undefined" && PerformanceObserver.supportedEntryTypes.indexOf("longtask") > -1;
    }
    /**
    * Checks if the current browser supports audio level stats on the receivers.
    */
  }, {
    key: "supportsReceiverStats",
    value: function() {
      return typeof window.RTCRtpReceiver != "undefined" && Object.keys(RTCRtpReceiver.prototype).indexOf("getSynchronizationSources") > -1;
    }
    /**
    * Checks if the current browser reports round trip time statistics for
    * the ICE candidate pair.
    * @return {boolean}
    */
  }, {
    key: "supportsRTTStatistics",
    value: function() {
      return !this.isFirefox();
    }
    /**
    * Checks if the browser uses plan B.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesPlanB",
    value: function() {
      return !this.usesUnifiedPlan();
    }
    /**
    * Checks if the browser uses SDP munging for turning on simulcast.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesSdpMungingForSimulcast",
    value: function() {
      return this.isChromiumBased() || this.isReactNative() || this.isWebKitBased();
    }
    /**
    * Checks if the browser uses unified plan.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesUnifiedPlan",
    value: function() {
      return !!(this.isFirefox() || this.isWebKitBased());
    }
    /**
    * Returns whether or not the current browser should be using the new
    * getUserMedia flow, which utilizes the adapter shim. This method should
    * be temporary and used while migrating all browsers to use adapter and
    * the new getUserMedia.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesNewGumFlow",
    value: function() {
      return !!(this.isChromiumBased() || this.isFirefox() || this.isWebKitBased());
    }
    /**
    * Checks if the browser uses webrtc-adapter. All browsers using the new
    * getUserMedia flow.
    *
    * @returns {boolean}
    */
  }, {
    key: "usesAdapter",
    value: function() {
      return this.usesNewGumFlow();
    }
    /**
    * Checks if the browser uses RIDs/MIDs for siganling the simulcast streams
    * to the bridge instead of the ssrcs.
    */
  }, {
    key: "usesRidsForSimulcast",
    value: function() {
      return !1;
    }
    /**
    * Checks if the browser supports getDisplayMedia.
    * @returns {boolean} {@code true} if the browser supports getDisplayMedia.
    */
  }, {
    key: "supportsGetDisplayMedia",
    value: function() {
      return typeof navigator.getDisplayMedia != "undefined" || typeof navigator.mediaDevices != "undefined" && typeof navigator.mediaDevices.getDisplayMedia != "undefined";
    }
    /**
    * Checks if the browser supports insertable streams, needed for E2EE.
    * @returns {boolean} {@code true} if the browser supports insertable streams.
    */
  }, {
    key: "supportsInsertableStreams",
    value: function() {
      if (!(typeof window.RTCRtpSender != "undefined" && (window.RTCRtpSender.prototype.createEncodedStreams || window.RTCRtpSender.prototype.createEncodedVideoStreams)))
        return !1;
      var e = new ReadableStream();
      try {
        return window.postMessage(e, "*", [e]), !0;
      } catch (a) {
        return !1;
      }
    }
    /**
    * Whether the browser supports the RED format for audio.
    */
  }, {
    key: "supportsAudioRed",
    value: function() {
      return Boolean(window.RTCRtpSender && window.RTCRtpSender.getCapabilities && window.RTCRtpSender.getCapabilities("audio").codecs.some(function(e) {
        return e.mimeType === "audio/red";
      }) && window.RTCRtpReceiver && window.RTCRtpReceiver.getCapabilities && window.RTCRtpReceiver.getCapabilities("audio").codecs.some(function(e) {
        return e.mimeType === "audio/red";
      }));
    }
    /**
    * Checks if the browser supports the "sdpSemantics" configuration option.
    * https://webrtc.org/web-apis/chrome/unified-plan/
    *
    * @returns {boolean}
    */
  }, {
    key: "supportsSdpSemantics",
    value: function() {
      return this.isChromiumBased();
    }
    /**
    * Returns the version of a Chromium based browser.
    *
    * @returns {Number}
    */
  }, { key: "_getChromiumBasedVersion", value: function() {
    if (this.isChromiumBased()) {
      if (this.isNWJS())
        return Number.parseInt(process.versions.chromium, 10);
      var e = navigator.userAgent;
      if (e.match(/Chrome/)) {
        var a = Number.parseInt(e.match(/Chrome\/([\d.]+)/)[1], 10);
        return a;
      }
    }
    return -1;
  } }, { key: "isIOSMobile", value: function() {
    return this.isMobile && this._bowser.getOSName() === "iOS";
  } }]), r;
}(tT), ze = new nT(), Yo = { gross: { width: { ideal: 192 }, height: { ideal: 144 } }, qvga: { width: { ideal: 320 }, height: { ideal: 240 } }, vga: { width: { ideal: 640 }, height: { ideal: 480 } }, hd: { width: { ideal: 1280 }, height: { ideal: 720 } }, hd_cropped: { width: { ideal: 900 }, height: { ideal: 720 } }, fhd: { width: { ideal: 1920 }, height: { ideal: 1080 } } }, Kd = {}, iT = [{ rid: "r0", scalabilityMode: "L1T2" }, { rid: "r1", scalabilityMode: "L1T2" }], sT = [{ active: !1, adaptivePtime: !1, networkPriority: "low", priority: "low" }, { active: !1, adaptivePtime: !1, networkPriority: "low", priority: "low" }, { active: !0, adaptivePtime: !1, networkPriority: "low", priority: "low", maxBitrate: 25e5 }], oT = [{ active: !1, priority: "low" }, { active: !1, priority: "low" }, { active: !0, priority: "low" }], zd = { 320: [
  // For QVGA, we can only send the lowest layer.
  { rid: "q", maxBitrate: 25e4, maxFramerate: 30, scalabilityMode: "L1T3" }
], 640: [
  // For VGA, we can send the lowest and middle layer.
  { rid: "q", scaleResolutionDownBy: 2, maxBitrate: 25e4, maxFramerate: 30, scalabilityMode: "L1T3" },
  { rid: "h", maxBitrate: 75e4, maxFramerate: 30, scalabilityMode: "L1T3" }
], 1280: [
  // For HD, we can send all the layers but it takes too much bandwidth, so
  // we are sending only the half and quarter layers for now
  { rid: "q", scaleResolutionDownBy: 4, maxBitrate: 25e4, maxFramerate: 30, scalabilityMode: "L1T3" },
  { rid: "h", scaleResolutionDownBy: 2, maxBitrate: 75e4, maxFramerate: 30, scalabilityMode: "L1T3" },
  { rid: "f", maxBitrate: 15e5, maxFramerate: 30, scalabilityMode: "L1T3" }
] }, uT = [{ scalabilityMode: "L3T3_KEY" }], ye = /* @__PURE__ */ function(o) {
  return o.WEBCAM = "webcam", o.MIC = "mic", o.SCREENSHARE_VIDEO = "screenshare_video", o.SCREENSHARE_AUDIO = "screenshare_audio", o;
}(ye || {});
function cT(o) {
  return o.replace(/([-_]\w)/g, function(c) {
    return c[1].toUpperCase();
  });
}
function Dt(o) {
  if (!o || ce(o) !== "object")
    return o;
  if (Array.isArray(o))
    return o.map(function(r) {
      return Dt(r);
    });
  var c = {};
  return Object.keys(o).forEach(function(r) {
    var t = uh(r) ? r : cT(r);
    c[t] = Dt(o[r]);
  }), c;
}
function lT(o) {
  return o.replace(/[A-Z]/g, function(c) {
    return "_".concat(c.toLowerCase());
  });
}
function nv(o) {
  if (!o || ce(o) !== "object")
    return o;
  if (Array.isArray(o))
    return o.map(function(r) {
      return nv(r);
    });
  var c = {};
  return Object.keys(o).forEach(function(r) {
    var t = uh(r) ? r : lT(r);
    c[t] = o[r];
  }), c;
}
function _c(o) {
  var c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return o == null ? {} : (Object.getOwnPropertyNames(o).forEach(function(r) {
    if (typeof o[r] != "function") {
      if (ce(o[r]) === "object") {
        _c(o[r], c[r] = {});
        return;
      }
      c[r] = o[r];
    }
  }), c);
}
var Rc = /* @__PURE__ */ function(o) {
  return o.PARTICIPANT = "PARTICIPANT", o.PEER = "PEER", o.CLIENT = "CLIENT", o;
}(Rc || {}), de = {
  INTERNAL_CALL_STATS: "internal_call_stats",
  SIMULCAST: "simulcast",
  CHAT_SOCKET_SERVER: "chat_socket_server",
  POLL_SOCKET_SERVER: "poll_socket_server",
  PLUGIN_SOCKET_SERVER: "plugin_socket_server",
  NR_OTEL_WEB: "nr_otel_web",
  CONNECTED_MEETINGS: "connected_meetings",
  ICE_RESTART_ON_FAILED_STATE: "ice_restart_on_failed_state",
  ICE_RESTART_ON_DISCONNECTED_STATE: "ice_restart_on_disconnected_state",
  ENABLE_ICE_STATE_LOGGING: "enable_ice_state_logging",
  REMOVE_OPERATIONAL_MIC: "web_core_remove_operational_mic",
  SUPPRESS_PEER_MUTE_UNMUTE_EMITS: "web_core_suppress_peer_mute_unmute_emits",
  SKIP_OTEL_TRACES: "skip_otel_traces",
  NEW_LOCAL_MEDIA_HANDLER: "new_local_media_handler",
  CALLSTATS_INGESTION_LAYER: "callstats_ingestion_layer",
  USE_USERIDS_IN_CHAT: "use_userids_in_chat",
  CUSTOM_PING_PONG: "custom_ping_pong",
  // NOTE(itzmanish) below flags is added by me
  ENABLE_HIVE_SIMULCAST: "enable_hive_simulcast",
  ENABLE_HIVE_TRANSPORT_RECONNECTION_ON_ICE_FAILED: "enable_hive_transport_reconnection_on_ice_failed",
  ENABLE_HIVE_EXPERIMENTAL_FAIL_RECOVERY: "enable_hive_fail_recovery",
  // ==========================================
  BYPASS_LOG_EXCLUSION_LIST: "bypass_log_exclusion_list",
  LOG_LEVEL: "log_level",
  V1_PLUGINS: "v1_plugins",
  SCREENSHARE_DTX: "screenshare_dtx",
  SCREENSHARE_PRIORITY: "screenshare_priority",
  SCREENSHARE_MIN_BITRATE: "screenshare_minbitrate",
  SCREENSHARE_MAX_DIMENSIONS: "screenshare_maxdimensions",
  SCREENSHARE_SIMULCAST: "screenshare_simulcast",
  DISABLE_WEBCAM_LAYERS_ON_SCREENSHARE: "disable_webcam_layers_on_screenshare",
  SCREENSHARE_FORCE_GOOG_CONFERENCE: "screenshare_force_goog_conference",
  LIVESTREAM: "feat_livestream",
  FETCH_RETRY: "fetch_retry",
  DEVICE_REMOVE_EXP: "device_remove_exp",
  DISABLE_WEBCAM_SIMULCAST: "webcore_disable_webcam_simulcast",
  OVERRIDE_WEBCAM_SIMULCAST: "override_webcam_simulcast",
  SOCKET_POLLING: "socket_polling",
  NS_NETWORK_SCORE: "ns_network_score",
  FEAT_PAGINATED_CHAT: "feat_paginated_chat",
  VAL_MIN_FRAMERATE: "val_min_framerate",
  EXTENSION_HACK: "extension_hack",
  VAL_MAX_FRAMERATE_EXT: "val_max_framerate_ext",
  VAL_MIN_FRAMERATE_EXT: "val_min_framerate_ext",
  SCREEENSHARE_ERR_HACK: "screenshare_err_hack",
  TROUBLESHOOTING: "feat_troubleshooting",
  VIDEO_CONSTRAINTS: "video_constraints",
  SCREENSHARE_CONSTRAINTS: "screenshare_constraints",
  FEAT_CHAT_SDK: "feat_chat_sdk",
  FEAT_CHAT_SDK_SEARCH: "chat_search",
  OBS_QUALITY: "obs_quality",
  ALLOW_SAFARI_MEDIA_MIDDLEWARES: "allow_safari_media_middlewares",
  DYNAMIC_VIDEO_QUALITY: "dynamic_video_quality",
  EXP_RESHARE: "exp_reshare"
}, dT = ow(), dt = Dt(dT.config.media), Nu = /* @__PURE__ */ new K(), iv = /* @__PURE__ */ function() {
  function o(c) {
    var r = this;
    I(this, o), z(this, Nu, { writable: !0, value: void 0 }), R(this, "getScreenShareConstraints", function() {
      var t, e, a = (t = fe.defaults.screenShare) !== null && t !== void 0 ? t : {}, n = a.displaySurface, i = { width: { max: 1920 }, height: { max: 1080 }, frameRate: { ideal: parseInt((e = ue.getValue(de.VAL_MIN_FRAMERATE)) !== null && e !== void 0 ? e : "5", 10), max: 5 } };
      if (ue.hasFeature(de.SCREENSHARE_CONSTRAINTS)) {
        var s = ue.getValue(de.SCREENSHARE_CONSTRAINTS);
        i = JSON.parse(s);
      }
      return n !== void 0 && ["monitor", "browser", "window"].includes(n) && (i = Q(Q({}, i), {}, { displaySurface: n })), { audio: !0, video: i };
    }), R(this, "getAudioConstraints", function(t) {
      var e = {};
      return ze.isFirefox() || ze.isWebKitBased() ? (e.audio = { deviceId: t, autoGainControl: !0, echoCancellation: !0, noiseSuppression: !0 }, e) : (e.audio = {}, e.audio.optional = [t ? { sourceId: t } : { sourceId: "default" }, { echoCancellation: !0 }, { googEchoCancellation: !0 }, { googAutoGainControl: !0 }, { googNoiseSuppression: !0 }, { googHighpassFilter: !0 }], e);
    }), R(this, "getVideoConstraints", function(t) {
      var e = {}, a = f(r, Nu).video.quality, n = Yo[a];
      if (n.frameRate = { ideal: 24 }, ze.isChromiumBased() && (n.frameRate.max = 30), ue.hasFeature(de.VIDEO_CONSTRAINTS)) {
        var i = ue.getValue(de.VIDEO_CONSTRAINTS);
        n = JSON.parse(i);
      }
      return e.video = n, t ? e.video.deviceId = { exact: t } : e.video.facingMode = "user", e;
    }), V(this, Nu, c != null ? c : dt);
  }
  return D(o, [{ key: "getUpdatedVideoConstraints", value: (
    // eslint-disable-next-line class-methods-use-this
    function(r) {
      var t = r;
      return t;
    }
  ) }]), o;
}(), pT = /\s/;
function hT(o) {
  for (var c = o.length; c-- && pT.test(o.charAt(c)); )
    ;
  return c;
}
var vT = /^\s+/;
function fT(o) {
  return o && o.slice(0, hT(o) + 1).replace(vT, "");
}
var Qd = 0 / 0, mT = /^[-+]0x[0-9a-f]+$/i, gT = /^0b[01]+$/i, yT = /^0o[0-7]+$/i, kT = parseInt;
function Yd(o) {
  if (typeof o == "number")
    return o;
  if (aw(o))
    return Qd;
  if (en(o)) {
    var c = typeof o.valueOf == "function" ? o.valueOf() : o;
    o = en(c) ? c + "" : c;
  }
  if (typeof o != "string")
    return o === 0 ? o : +o;
  o = fT(o);
  var r = gT.test(o);
  return r || yT.test(o) ? kT(o.slice(2), r ? 2 : 8) : mT.test(o) ? Qd : +o;
}
function sv(o) {
  return o;
}
function wT(o, c, r) {
  switch (r.length) {
    case 0:
      return o.call(c);
    case 1:
      return o.call(c, r[0]);
    case 2:
      return o.call(c, r[0], r[1]);
    case 3:
      return o.call(c, r[0], r[1], r[2]);
  }
  return o.apply(c, r);
}
function TT() {
}
var bT = 800, ST = 16, ET = Date.now;
function _T(o) {
  var c = 0, r = 0;
  return function() {
    var t = ET(), e = ST - (t - r);
    if (r = t, e > 0) {
      if (++c >= bT)
        return arguments[0];
    } else
      c = 0;
    return o.apply(void 0, arguments);
  };
}
function RT(o) {
  return function() {
    return o;
  };
}
var PT = qo ? function(o, c) {
  return qo(o, "toString", { configurable: !0, enumerable: !1, value: RT(c), writable: !0 });
} : sv, CT = PT, IT = _T(CT), DT = IT;
function AT(o, c, r, t) {
  for (var e = o.length, a = r + (t ? 1 : -1); t ? a-- : ++a < e; )
    if (c(o[a], a, o))
      return a;
  return -1;
}
function MT(o) {
  return o !== o;
}
function OT(o, c, r) {
  for (var t = r - 1, e = o.length; ++t < e; )
    if (o[t] === c)
      return t;
  return -1;
}
function NT(o, c, r) {
  return c === c ? OT(o, c, r) : AT(o, MT, r);
}
function ov(o, c) {
  var r = o == null ? 0 : o.length;
  return !!r && NT(o, c, 0) > -1;
}
var Xd = Math.max;
function $T(o, c, r) {
  return c = Xd(c === void 0 ? o.length - 1 : c, 0), function() {
    for (var t = arguments, e = -1, a = Xd(t.length - c, 0), n = Array(a); ++e < a; )
      n[e] = t[c + e];
    e = -1;
    for (var i = Array(c + 1); ++e < c; )
      i[e] = t[e];
    return i[c] = r(n), wT(o, this, i);
  };
}
function LT(o, c) {
  return DT($T(o, c, sv), o + "");
}
var Zd = ua ? ua.isConcatSpreadable : void 0;
function UT(o) {
  return Ln(o) || ul(o) || !!(Zd && o && o[Zd]);
}
function uv(o, c, r, t, e) {
  var a = -1, n = o.length;
  for (r || (r = UT), e || (e = []); ++a < n; ) {
    var i = o[a];
    c > 0 && r(i) ? c > 1 ? uv(i, c - 1, r, t, e) : hl(e, i) : t || (e[e.length] = i);
  }
  return e;
}
var FT = "__lodash_hash_undefined__";
function VT(o) {
  return this.__data__.set(o, FT), this;
}
function HT(o) {
  return this.__data__.has(o);
}
function Ni(o) {
  var c = -1, r = o == null ? 0 : o.length;
  for (this.__data__ = new Gn(); ++c < r; )
    this.add(o[c]);
}
Ni.prototype.add = Ni.prototype.push = VT;
Ni.prototype.has = HT;
function jT(o, c) {
  for (var r = -1, t = o == null ? 0 : o.length; ++r < t; )
    if (c(o[r], r, o))
      return !0;
  return !1;
}
function wl(o, c) {
  return o.has(c);
}
var GT = 1, BT = 2;
function cv(o, c, r, t, e, a) {
  var n = r & GT, i = o.length, s = c.length;
  if (i != s && !(n && s > i))
    return !1;
  var u = a.get(o), l = a.get(c);
  if (u && l)
    return u == c && l == o;
  var p = -1, h = !0, v = r & BT ? new Ni() : void 0;
  for (a.set(o, c), a.set(c, o); ++p < i; ) {
    var m = o[p], g = c[p];
    if (t)
      var w = n ? t(g, m, p, c, o, a) : t(m, g, p, o, c, a);
    if (w !== void 0) {
      if (w)
        continue;
      h = !1;
      break;
    }
    if (v) {
      if (!jT(c, function(k, T) {
        if (!wl(v, T) && (m === k || e(m, k, r, t, a)))
          return v.push(T);
      })) {
        h = !1;
        break;
      }
    } else if (!(m === g || e(m, g, r, t, a))) {
      h = !1;
      break;
    }
  }
  return a.delete(o), a.delete(c), h;
}
function qT(o) {
  var c = -1, r = Array(o.size);
  return o.forEach(function(t, e) {
    r[++c] = [e, t];
  }), r;
}
function Tl(o) {
  var c = -1, r = Array(o.size);
  return o.forEach(function(t) {
    r[++c] = t;
  }), r;
}
var WT = 1, JT = 2, KT = "[object Boolean]", zT = "[object Date]", QT = "[object Error]", YT = "[object Map]", XT = "[object Number]", ZT = "[object RegExp]", xT = "[object Set]", eb = "[object String]", rb = "[object Symbol]", tb = "[object ArrayBuffer]", ab = "[object DataView]", xd = ua ? ua.prototype : void 0, $u = xd ? xd.valueOf : void 0;
function nb(o, c, r, t, e, a, n) {
  switch (r) {
    case ab:
      if (o.byteLength != c.byteLength || o.byteOffset != c.byteOffset)
        return !1;
      o = o.buffer, c = c.buffer;
    case tb:
      return !(o.byteLength != c.byteLength || !a(new Wo(o), new Wo(c)));
    case KT:
    case zT:
    case XT:
      return ol(+o, +c);
    case QT:
      return o.name == c.name && o.message == c.message;
    case ZT:
    case eb:
      return o == c + "";
    case YT:
      var i = qT;
    case xT:
      var s = t & WT;
      if (i || (i = Tl), o.size != c.size && !s)
        return !1;
      var u = n.get(o);
      if (u)
        return u == c;
      t |= JT, n.set(o, c);
      var l = cv(i(o), i(c), t, e, a, n);
      return n.delete(o), l;
    case rb:
      if ($u)
        return $u.call(o) == $u.call(c);
  }
  return !1;
}
var ib = 1, sb = Object.prototype, ob = sb.hasOwnProperty;
function ub(o, c, r, t, e, a) {
  var n = r & ib, i = kc(o), s = i.length, u = kc(c), l = u.length;
  if (s != l && !n)
    return !1;
  for (var p = s; p--; ) {
    var h = i[p];
    if (!(n ? h in c : ob.call(c, h)))
      return !1;
  }
  var v = a.get(o), m = a.get(c);
  if (v && m)
    return v == c && m == o;
  var g = !0;
  a.set(o, c), a.set(c, o);
  for (var w = n; ++p < s; ) {
    h = i[p];
    var k = o[h], T = c[h];
    if (t)
      var _ = n ? t(T, k, h, c, o, a) : t(k, T, h, o, c, a);
    if (!(_ === void 0 ? k === T || e(k, T, r, t, a) : _)) {
      g = !1;
      break;
    }
    w || (w = h == "constructor");
  }
  if (g && !w) {
    var E = o.constructor, S = c.constructor;
    E != S && "constructor" in o && "constructor" in c && !(typeof E == "function" && E instanceof E && typeof S == "function" && S instanceof S) && (g = !1);
  }
  return a.delete(o), a.delete(c), g;
}
var cb = 1, ep = "[object Arguments]", rp = "[object Array]", ho = "[object Object]", lb = Object.prototype, tp = lb.hasOwnProperty;
function db(o, c, r, t, e, a) {
  var n = Ln(o), i = Ln(c), s = n ? rp : Oi(o), u = i ? rp : Oi(c);
  s = s == ep ? ho : s, u = u == ep ? ho : u;
  var l = s == ho, p = u == ho, h = s == u;
  if (h && Us(o)) {
    if (!Us(c))
      return !1;
    n = !0, l = !1;
  }
  if (h && !l)
    return a || (a = new Aa()), n || cl(o) ? cv(o, c, r, t, e, a) : nb(o, c, s, r, t, e, a);
  if (!(r & cb)) {
    var v = l && tp.call(o, "__wrapped__"), m = p && tp.call(c, "__wrapped__");
    if (v || m) {
      var g = v ? o.value() : o, w = m ? c.value() : c;
      return a || (a = new Aa()), e(g, w, r, t, a);
    }
  }
  return h ? (a || (a = new Aa()), ub(o, c, r, t, e, a)) : !1;
}
function lv(o, c, r, t, e) {
  return o === c ? !0 : o == null || c == null || !Ma(o) && !Ma(c) ? o !== o && c !== c : db(o, c, r, t, lv, e);
}
var pb = function() {
  return Wt.Date.now();
}, Lu = pb, hb = "Expected a function", vb = Math.max, fb = Math.min;
function Xo(o, c, r) {
  var t, e, a, n, i, s, u = 0, l = !1, p = !1, h = !0;
  if (typeof o != "function")
    throw new TypeError(hb);
  c = Yd(c) || 0, en(r) && (l = !!r.leading, p = "maxWait" in r, a = p ? vb(Yd(r.maxWait) || 0, c) : a, h = "trailing" in r ? !!r.trailing : h);
  function v(C) {
    var L = t, G = e;
    return t = e = void 0, u = C, n = o.apply(G, L), n;
  }
  function m(C) {
    return u = C, i = setTimeout(k, c), l ? v(C) : n;
  }
  function g(C) {
    var L = C - s, G = C - u, j = c - L;
    return p ? fb(j, a - G) : j;
  }
  function w(C) {
    var L = C - s, G = C - u;
    return s === void 0 || L >= c || L < 0 || p && G >= a;
  }
  function k() {
    var C = Lu();
    if (w(C))
      return T(C);
    i = setTimeout(k, g(C));
  }
  function T(C) {
    return i = void 0, h && t ? v(C) : (t = e = void 0, n);
  }
  function _() {
    i !== void 0 && clearTimeout(i), u = 0, t = s = e = i = void 0;
  }
  function E() {
    return i === void 0 ? n : T(Lu());
  }
  function S() {
    var C = Lu(), L = w(C);
    if (t = arguments, e = this, s = C, L) {
      if (i === void 0)
        return m(s);
      if (p)
        return clearTimeout(i), i = setTimeout(k, c), v(s);
    }
    return i === void 0 && (i = setTimeout(k, c)), n;
  }
  return S.cancel = _, S.flush = E, S;
}
function mb(o) {
  return Ma(o) && ou(o);
}
function dv(o, c, r) {
  for (var t = -1, e = o == null ? 0 : o.length; ++t < e; )
    if (r(c, o[t]))
      return !0;
  return !1;
}
var gb = 200;
function yb(o, c, r, t) {
  var e = -1, a = ov, n = !0, i = o.length, s = [], u = c.length;
  if (!i)
    return s;
  r && (c = nw(c, iu(r))), t ? (a = dv, n = !1) : c.length >= gb && (a = wl, n = !1, c = new Ni(c));
  e:
    for (; ++e < i; ) {
      var l = o[e], p = r == null ? l : r(l);
      if (l = t || l !== 0 ? l : 0, n && p === p) {
        for (var h = u; h--; )
          if (c[h] === p)
            continue e;
        s.push(l);
      } else
        a(c, p, t) || s.push(l);
    }
  return s;
}
function kb(o) {
  var c = o == null ? 0 : o.length;
  return c ? o[c - 1] : void 0;
}
var wb = "[object Map]", Tb = "[object Set]", bb = Object.prototype, Sb = bb.hasOwnProperty;
function pv(o) {
  if (o == null)
    return !0;
  if (ou(o) && (Ln(o) || typeof o == "string" || typeof o.splice == "function" || Us(o) || cl(o) || ul(o)))
    return !o.length;
  var c = Oi(o);
  if (c == wb || c == Tb)
    return !o.size;
  if (su(o))
    return !$h(o).length;
  for (var r in o)
    if (Sb.call(o, r))
      return !1;
  return !0;
}
function Eb(o, c) {
  return lv(o, c);
}
var _b = 1 / 0, Rb = Pi && 1 / Tl(new Pi([, -0]))[1] == _b ? function(o) {
  return new Pi(o);
} : TT, Pb = Rb, Cb = 200;
function ap(o, c, r) {
  var t = -1, e = ov, a = o.length, n = !0, i = [], s = i;
  if (r)
    n = !1, e = dv;
  else if (a >= Cb) {
    var u = c ? null : Pb(o);
    if (u)
      return Tl(u);
    n = !1, e = wl, s = new Ni();
  } else
    s = c ? [] : i;
  e:
    for (; ++t < a; ) {
      var l = o[t], p = c ? c(l) : l;
      if (l = r || l !== 0 ? l : 0, n && p === p) {
        for (var h = s.length; h--; )
          if (s[h] === p)
            continue e;
        c && s.push(p), i.push(l);
      } else
        e(s, p, r) || (s !== i && s.push(p), i.push(l));
    }
  return i;
}
function Ib(o, c, r) {
  var t = o.length;
  if (t < 2)
    return t ? ap(o[0]) : [];
  for (var e = -1, a = Array(t); ++e < t; )
    for (var n = o[e], i = -1; ++i < t; )
      i != e && (a[e] = yb(a[e] || n, o[i], c, r));
  return ap(uv(a, 1), c, r);
}
var Db = LT(function(o) {
  var c = kb(o);
  return c = typeof c == "function" ? c : void 0, Ib(Uh(o, mb), void 0, c);
}), Ab = Db;
function No(o) {
  var c = {};
  return typeof (o == null ? void 0 : o.code) == "number" && (c.code = o.code), typeof (o == null ? void 0 : o.code) == "string" && (c.code = o.code.substring(0, 100)), typeof (o == null ? void 0 : o.name) == "string" && (c.name = o.name.substring(0, 500)), typeof (o == null ? void 0 : o.message) == "string" && (c.message = o.message.substring(0, 500)), typeof (o == null ? void 0 : o.reason) == "string" && (c.reason = o.reason.substring(0, 500)), typeof (o == null ? void 0 : o.stack) == "string" && (c.stack = o.stack.substring(0, 500)), c;
}
function hv() {
  var o, c, r, t = typeof navigator != "undefined" && !navigator.isReactNative && ((o = window.location.host) === null || o === void 0 ? void 0 : o.includes("devel")) && ((c = window.location.host) === null || c === void 0 ? void 0 : c.includes("dyte.io")), e = !!((r = fe.modules) !== null && r !== void 0 && (r = r.devTools) !== null && r !== void 0 && r.logs);
  return t || e;
}
function Mb(o) {
  if (ue.hasFeature(de.LOG_LEVEL)) {
    var c = ue.getValue(de.LOG_LEVEL) || "all";
    if (c = c.toLowerCase().trim(), c === "off")
      return !1;
    if (c !== "all") {
      var r = ["debug", "log", "info", "warn", "error"], t = r.indexOf(o), e = r.indexOf(c);
      if (t < e)
        return !1;
    }
  }
  return !0;
}
function vv(o, c) {
  var r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  return Object.getOwnPropertyNames(o).forEach(function(t) {
    var e;
    if (![null, void 0, NaN].includes(o[t]) && !(c && (((e = c.match(/\./g)) === null || e === void 0 ? void 0 : e.length) || 0) >= 10)) {
      var a = c ? "".concat(c, ".").concat(t) : t;
      ce(o[t]) === "object" ? vv(o[t], a, r) : ["number", "string", "boolean"].includes(ce(o[t])) && (r[a] = o[t]);
    }
  }), r;
}
function np(o) {
  var c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "", t = {};
  try {
    var e = JSON.stringify(c), a = JSON.parse(e), n = vv(a, r), i = JSON.stringify(n);
    if (i.length > 5e3) {
      var s = 'Log named: "'.concat(o, '" is trying to log an flattened object of size ').concat(i.length, " chars that is beyond permitted limit of 5000 chars. Please optimize."), u = hv();
      throw u && console.error(s, { log: c, flattened: i }), new Error(s);
    }
    return JSON.parse(i);
  } catch (p) {
    var l = No(p);
    t["".concat(r, ".error.message")] = l.message || "", t["".concat(r, ".error.stack")] = l.stack || "", t["".concat(r, ".error.reason")] = l.reason || "", t["".concat(r, ".error.source")] = "safelyFlattenObjForOpenTelemetry";
  }
  return t;
}
var A = /* @__PURE__ */ function() {
  function o() {
    I(this, o);
  }
  return D(o, null, [{ key: "logsEndpoint", get: function() {
    var r = Ci({ servicePrefix: "api-silos", apiBase: fe.apiBase, baseURI: fe.baseURI });
    return "https://".concat(r, "/otel/logs");
  } }, { key: "init", value: function(r, t) {
    navigator.isReactNative || (o.tracingEnabled = t, o.meetingMetadata.peerId = r, o.meetingMetadata.sdkVersion = Ys, o.meetingMetadata.deviceInfo = ze.getDeviceInfo(), o.meetingMetadata.visitedUrl = !navigator.isReactNative && typeof window != "undefined" && window.location.href, document.addEventListener("visibilitychange", o.processCachedLogs), o.logsProcessorTimer = setInterval(o.processCachedLogs, o.logsProcessingInterval), t && (o.initialized = !0));
  } }, { key: "trace", value: function(r) {
    return function(t, e, a) {
      var n = a.value;
      return a.value = function() {
        for (var s = arguments.length, u = new Array(s), l = 0; l < s; l++)
          u[l] = arguments[l];
        if (!o.initialized || navigator.isReactNative || !o.tracingEnabled || ue.hasFeature(de.SKIP_OTEL_TRACES))
          return n.apply(this, u);
        o.addLogInCurrentSpan("info", r);
        var p = performance.now(), h = n.apply(this, u);
        return Promise.resolve(h).then(function() {
          var v = performance.now();
          o.addLogInCurrentSpan("info", "".concat(r, "_timing"), { execTime: v - p });
        }).catch(function() {
          var v = performance.now();
          o.addLogInCurrentSpan("info", "".concat(r, "_timing"), { execTime: v - p });
        }), h;
      }, a;
    };
  } }, {
    key: "injectContext",
    value: function(r) {
      var t, e = Bs().replace(/-/g, "").substring(0, 16), a = (t = o.meetingMetadata.peerId) === null || t === void 0 ? void 0 : t.replace(/-/g, "");
      r.TRACEPARENT = "00-".concat(a, "-").concat(e, "-01");
    }
    /**
    * Adds event into the current span or the main span.
    * Event(or this method) is not a replacement for a log.
    * Tip :: Heavy objects should be logged.
    * Tip :: Light objects with `to the point` info should be added as events.
    * @param eventSeverity severity of the passed event to create better dashboards
    * @param eventName name of event in format
    *	fileName::functionName::eventName or functionName::eventName or whatever seems fit
    * @param metadata pass any information which makes sense for analytics or debugging
    * @param noCache optionally pass if log can be cached in FE or it has to be sent instantly
    * @returns nothing
    */
  }, { key: "addLogInCurrentSpan", value: function(r, t) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    e != null && e.error && Object.assign(e, { error: No(e.error) }), hv() && (pv(e) ? console[r]("DyteInternalLogs:: ", r, t) : console[r]("DyteInternalLogs:: ", r, t, e));
    var n = Mb(r);
    if (n)
      try {
        var i = np(t, e, "metadata"), s = new Date(), u = Q(Q({ message: t, level: r }, i), {}, { loggedAt: s.toISOString(), loggedAtTzOffset: s.getTimezoneOffset() });
        a ? o.sendOtelLogsToNewRelic([u]) : o.logsCache.push(u);
      } catch (l) {
        o.addLogInCurrentSpan("error", "opentelemetry::addLogInCurrentSpan_failed", { error: No(l) });
      }
  } }, { key: "sendOtelLogsToNewRelic", value: function(r) {
    Ho.post(o.logsEndpoint, { meetingMetadata: np("sendOtelLogsToNewRelic", o.meetingMetadata, "meetingMetadata"), serviceName: yl, logs: r }).catch(function(t) {
      var e;
      o.addLogInCurrentSpan("error", "opentelemetry::sendOtelLogToNewRelic_failed", { error: No(t) }), (e = o.logsCache).push.apply(e, sr(r));
    });
  } }, { key: "processCachedLogs", value: function() {
    var r = o.logsCache.splice(0, 25);
    r != null && r.length && o.sendOtelLogsToNewRelic(r);
  } }, { key: "destruct", value: function() {
    clearInterval(o.logsProcessorTimer), o.processCachedLogs(), !navigator.isReactNative && document.removeEventListener("visibilitychange", o.processCachedLogs);
  } }]), o;
}();
R(A, "logsCache", []);
R(A, "logsProcessorTimer", void 0);
R(A, "tracingEnabled", !0);
R(A, "initialized", !1);
R(A, "logsProcessingInterval", 7e3);
R(A, "logExclusionList", ["message", "websocket/message", "roomMessage", "websocket/room-message", "websocket/room-legacy-mode", "chatMessage", "websocket/new-chat-message", "websocket/no-active-speaker", "websocket/selected-peers", "websocket/active-speaker", "ping", "websocket/new-consumer", "websocket/producer-score", "websocket/consumer-score", "websocket/plugin-event", "websocket/plugin-data", "websocket/plugin-internal-data"]);
R(A, "meetingMetadata", {});
var P = /* @__PURE__ */ function() {
  function o() {
    I(this, o);
  }
  return D(o, null, [{ key: "info", value: function(r, t, e) {
    A.addLogInCurrentSpan("info", r, t, e);
  } }, { key: "error", value: function(r, t, e) {
    A.addLogInCurrentSpan("error", r, t, e);
  } }, { key: "debug", value: function(r, t, e) {
    A.addLogInCurrentSpan("debug", r, t, e);
  } }, { key: "log", value: function(r, t, e) {
    A.addLogInCurrentSpan("log", r, t, e);
  } }, { key: "warn", value: function(r, t, e) {
    A.addLogInCurrentSpan("warn", r, t, e);
  } }]), o;
}(), fr = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r, [{ key: "emit", value: function(e) {
    for (var a, n, i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), u = 1; u < i; u++)
      s[u - 1] = arguments[u];
    return (a = Oe(Pe(r.prototype), "emit", this)).call.apply(a, [this, "*", e].concat(s)), (n = Oe(Pe(r.prototype), "emit", this)).call.apply(n, [this, e].concat(s));
  } }, { key: "on", value: function(e, a) {
    try {
      var n = this.listenerCount(e);
      n > 25 && n % 25 === 0 && P.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: e.toString(), listenerCount: this.listenerCount(e) } });
    } catch (i) {
    }
    return Oe(Pe(r.prototype), "on", this).call(this, e, a);
  } }, { key: "addListener", value: function(e, a) {
    try {
      var n = this.listenerCount(e);
      n > 25 && n % 25 === 0 && P.warn("DyteEventEmitter::maxListenersExceeded", { eventListener: { eventName: e.toString(), listenerCount: this.listenerCount(e) } });
    } catch (i) {
    }
    return Oe(Pe(r.prototype), "addListener", this).call(this, e, a);
  } }, { key: "off", value: function(e, a) {
    return Oe(Pe(r.prototype), "off", this).call(this, e, a);
  } }, { key: "once", value: function(e, a) {
    return Oe(Pe(r.prototype), "once", this).call(this, e, a);
  } }, { key: "prependListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "prependListener", this).call(this, e, a);
  } }, { key: "prependOnceListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "prependOnceListener", this).call(this, e, a);
  } }, { key: "removeListener", value: function(e, a) {
    return Oe(Pe(r.prototype), "removeListener", this).call(this, e, a);
  } }, { key: "removeAllListeners", value: function(e) {
    return Oe(Pe(r.prototype), "removeAllListeners", this).call(this, e);
  } }, { key: "listeners", value: function(e) {
    return Oe(Pe(r.prototype), "listeners", this).call(this, e);
  } }, { key: "listenerCount", value: function(e) {
    return Oe(Pe(r.prototype), "listenerCount", this).call(this, e);
  } }]), r;
}(at.EventEmitter), Ob = { "00": "DyteClient", "01": "Controller", "02": "RoomNodeClient", "03": "HiveNodeClient", "04": "SocketService", "05": "Chat", "06": "Plugin", "07": "Polls", "08": "Meta", "09": "Preset", 10: "Recording", 11: "Self", 12: "Participant", 13: "Spotlight", 14: "Remote Request", 15: "Webinar", 16: "LocalMediaHandler" }, $o = { "0000": "Internal exception.", "0001": "Failed to initialize.", "0002": "Failed to join room.", "0003": "Failed to leave room.", "0100": "Internal exception", "0200": "Internal exception.", "0300": "Internal exception", "0400": "Internal exception", "0500": "Internal exception", "0501": "Permission denied.", "0502": "Invalid message body.", "0510": "Invalid channel name.", "0600": "Internal exception", "0700": "Internal exception", "0800": "Internal exception", "0900": "Internal exception", 1e3: "Internal exception", 1100: "Internal exception", 1200: "Internal exception", 1300: "Internal exception", 1400: "Internal exception", 1500: "Internal exception", 1600: "Internal exception", 1601: "Failed to get audio track", 1602: "Failed to get video track", 1603: "Incorrect device", 1604: "Failed to change device", 1700: "Internal exception" };
Object.keys($o).forEach(function(o) {
  $o[o] = "{".concat(Ob[o.slice(0, 2)], "} ").concat($o[o]);
});
var q = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    I(this, r), a = c.call(this, t), R(b(a), "code", void 0), a.code = e, a.name = "DyteError", a.message = "[ERR".concat(a.code, "]: ").concat($o[a.code], `
`).concat(a.message);
    try {
      var i = n;
      e && e.endsWith("00") && (i = !0), i && P.error("DyteError", { error: { message: a.message, name: a.name, code: e } });
    } catch (s) {
    }
    return a;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error));
function vo(o, c, r, t) {
  if (typeof r == "function" && t instanceof c)
    r.call(null, t, o);
  else
    throw t;
}
function ip(o, c, r) {
  if (!o.value) {
    var t = o.get, e = o.set;
    return t && (o.get = function() {
      try {
        return t.apply(this);
      } catch (n) {
        vo(this, c, r, n);
      }
    }), e && (o.set = function(n) {
      try {
        return e.apply(this, [n]);
      } catch (i) {
        vo(this, c, r, i);
      }
    }), o;
  }
  var a = o.value;
  return o.value = function() {
    var n = this;
    try {
      for (var i = arguments.length, s = new Array(i), u = 0; u < i; u++)
        s[u] = arguments[u];
      var l = a.apply(this, s);
      return l && l instanceof Promise ? l.catch(function(p) {
        vo(n, c, r, p);
      }) : l;
    } catch (p) {
      vo(this, c, r, p);
    }
  }, o;
}
function Nb(o, c) {
  return function(r, t, e) {
    if (e)
      return ip(e, o, c);
    var a = ae(Reflect.ownKeys(r.prototype).filter(function(l) {
      return l !== "constructor";
    })), n;
    try {
      for (a.s(); !(n = a.n()).done; ) {
        var i = n.value, s = Object.getOwnPropertyDescriptor(r.prototype, i), u = s.value instanceof Function || s.get instanceof Function || s.set instanceof Function;
        u && Object.defineProperty(r.prototype, i, ip(s, o, c));
      }
    } catch (l) {
      a.e(l);
    } finally {
      a.f();
    }
  };
}
var jr = function(c) {
  return Nb(Error, c);
}, M = /* @__PURE__ */ function(o) {
  return o.NEW_PRODUCER = "NEW_PRODUCER", o.PRODUCER_TRACK_ENDED = "PRODUCER_TRACK_ENDED", o.ROOM_NODE_CONNECTED = "ROOM_NODE_CONNECTED", o.ROOM_NODE_DISCONNECTED = "ROOM_NODE_DISCONNECTED", o.ROOM_NODE_CONNECTION_ERROR = "ROOM_NODE_CONNECTION_ERROR", o.SOCKET_SERVICE_CONNECTED = "SOCKET_SERVICE_CONNECTED", o.SOCKET_SERVICE_DISCONNECTED = "SOCKET_SERVICE_DISCONNECTED", o.SOCKET_SERVICE_RECONNECTING = "SOCKET_SERVICE_RECONNECTING", o.SOCKET_SERVICE_RECONNECTION_ATTEMPT = "SOCKET_SERVICE_RECONNECTION_ATTEMPT", o.SOCKET_SERVICE_RECONNECT_FAILURE = "SOCKET_SERVICE_RECONNECT_FAILURE", o.SOCKET_SERVICE_RECONNECTED = "SOCKET_SERVICE_RECONNECTED", o.SOCKET_SERVICE_FAILED = "SOCKET_SERVICE_FAILED", o.ROOM_JOINED = "ROOM_JOINED", o.SOCKET_SERVICE_ROOM_JOINED = "SOCKET_SERVICE_ROOM_JOINED", o.SELF_ROOM_JOINED = "SELF_ROOM_JOINED", o.PRODUCER_SCORE_UPDATE = "PRODUCER_SCORE_UPDATE", o.CONSUMER_SCORE_UPDATE = "CONSUMER_SCORE_UPDATE", o.PRODUCER_STATUS_UPDATE = "PRODUCER_STATUS_UPDATE", o.CONSUMER_STATUS_UPDATE = "CONSUMER_STATUS_UPDATE", o.LOW_PRODUCER_SCORE = "LOW_PRODUCER_SCORE", o.LOW_CONSUMER_SCORE = "LOW_CONSUMER_SCORE", o.MEDIA_PERMISSION_ERROR = "MEDIA_PERMISSION_ERROR", o.MEDIA_PERMISSION_UPDATE = "MEDIA_PERMISSION_UPDATE", o.WAITLISTED = "WAIT_LISTED", o.WAITLIST_ACCEPTED = "websocket/waitlist-accepted", o.WAITLIST_REJECTED = "websocket/waitlist-rejected", o.WAITLIST_PEER_ADDED = "websocket/waitlist-peer-added", o.WAITLIST_PEER_REMOVED = "websocket/waitlist-peer-closed", o.MESSAGE = "websocket/message", o.ROOM_MESSAGE = "websocket/room-message", o.DISABLE_AUDIO = "websocket/disable-audio", o.DISABLE_VIDEO = "websocket/disable-video", o.PEER_JOINED = "websocket/peer-joined", o.PEER_CLOSED = "websocket/peer-closed", o.PEER_MUTED = "websocket/peer-muted", o.PEER_UNMUTED = "websocket/peer-unmuted", o.PEER_PINNED = "websocket/pin-peer", o.PEER_UNPINNED = "websocker/unpin-peer", o.MUTE_ALL = "websocket/mute-all", o.MUTE_ALL_VIDEO = "websocket/mute-all-video", o.CONSUMER_CLOSED = "websocket/consumer-closed", o.CONSUMER_PAUSED = "websocket/consumer-paused", o.CONSUMER_RESUMED = "websocket/consumer-resumed", o.PRODUCER_CLOSED = "websocket/producer-closed", o.NEW_CONSUMER = "websocket/new-consumer", o.CONNECTED_MEETING_STATE = "websocket/connectedMeetingState", o.MOVE_TO_CONNECTED_MEETING = "websocket/transferMeeting", o.GET_CHAT_MESSAGES = "websocket/get-chat-messages", o.NEW_CHAT_MESSAGE = "websocket/new-chat-message", o.PIN_CHAT_MESSAGE = "websocket/pin-chat-message", o.UNPIN_CHAT_MESSAGE = "websocket/unpin-chat-message", o.GET_POLLS = "websocket/get-polls", o.UPDATE_POLL = "websocket/update-poll", o.SELECTED_PEERS = "websocket/selected-peers", o.GET_PAGE = "websocket/get-page", o.ACTIVE_SPEAKER = "websocket/active-speaker", o.NO_ACTIVE_SPEAKER = "websocket/no-active-speaker", o.PRODUCER_SCORE = "websocket/producer-score", o.CONSUMER_SCORE = "websocket/consumer-score", o.ENABLE_PLUGIN = "websocket/enable-plugin", o.DISABLE_PLUGIN = "websocket/disable-plugin", o.PLUGIN_EVENT = "websocket/plugin-event", o.PLUGIN_DATA = "websocket/plugin-data", o.PLUGIN_INTERNAL_DATA = "websocket/plugin-internal-data", o.KICKED = "websocket/kicked", o.ICE_CONNECTED = "ICE_CONNECTED", o.ICE_DISCONNECTED = "ICE_DISCONNECTED", o.ICE_FAILED = "ICE_FAILED", o.ICE_RECONNECTING = "ICE_RECONNECTING", o.AUDIO_TRACK_ANALYSIS = "AUDIO_TRACK_ANALYSIS", o.AUDIO_TRACK_CLOSED = "AUDIO_TRACK_CLOSED", o.AUDIO_TRACK_CHANGED = "AUDIO_TRACK_CHANGED", o.AUDIO_TRACK_CREATED = "AUDIO_TRACK_CREATED", o.VIDEO_TRACK_ANALYSIS = "VIDEO_TRACK_ANALYSIS", o.VIDEO_TRACK_ANALYSIS_ERROR = "VIDEO_TRACK_ANALYSIS_ERROR", o.VIDEO_TRACK_CLOSED = "VIDEO_TRACK_CLOSED", o.VIDEO_TRACK_CHANGED = "VIDEO_TRACK_CHANGED", o.VIDEO_TRACK_CREATED = "VIDEO_TRACK_CREATED", o.SCREENSHARE_AUDIO_TRACK_ANALYSIS = "SCREENSHARE_AUDIO_TRACK_ANALYSIS", o.SCREENSHARE_AUDIO_TRACK_CLOSED = "SCREENSHARE_AUDIO_TRACK_CLOSED", o.SCREENSHARE_AUDIO_TRACK_CREATED = "SCREENSHARE_AUDIO_TRACK_CREATED", o.SCREENSHARE_VIDEO_TRACK_ANALYSIS = "SCREENSHARE_VIDEO_TRACK_ANALYSIS", o.SCREENSHARE_VIDEO_TRACK_ANALYSIS_ERROR = "SCREENSHARE_VIDEO_TRACK_ANALYSIS_ERROR", o.SCREENSHARE_VIDEO_TRACK_CLOSED = "SCREENSHARE_VIDEO_TRACK_CLOSED", o.SCREENSHARE_VIDEO_TRACK_CREATED = "SCREENSHARE_VIDEO_TRACK_CREATED", o.SCREENSHARE_TRACK_CHANGED = "SCREENSHARE_TRACK_CHANGED", o.CANDIDATE_PEER_UPDATE = "CANDIDATE_PEER_UPDATE", o.INBOUND_RTP_UPDATE = "INBOUND_RTP_UPDATE", o.OUTBOUND_RTP_UPDATE = "OUTBOUND_RTP_UPDATE", o.SEND_TRANSPORT_CLOSED = "SEND_TRANSPORT_CLOSED", o.RECV_TRANSPORT_CLOSED = "RECV_TRANSPORT_CLOSED", o.SEND_TRANSPORT_CREATED = "SEND_TRANSPORT_CREATED", o.RECV_TRANSPORT_CREATED = "RECV_TRANSPORT_CREATED", o.PRODUCER_TOGGLE = "hive/producer-toggle", o.CONSUMER_TOGGLE = "hive/consumer-toggle", o.SELECTED_PEERS_DIFF = "hive/selected-peers-diff", o.REFRESH_GRID = "hive/refresh-grid", o.RESET_PRODUCER_STATE = "hive/reset-producer-state", o.HIVE_TRANSPORT_STATE_CHANGED = "hive/transport-state-changed", o.HIVE_ROOM_REJOINING = "hive/room-rejoining", o.HIVE_TRANPSORT_RECONNECTING = "hive/transport-reconnecting", o.ROOM_STATE = "sockethub/room-state", o.PEER_DISPLAY_NAME_CHANGED = "hive/display-name-changed", o.ASSERT_SPOTLIGHTER = "websocket/assert-spotlighter", o.PEER_REQUESTED_TO_JOIN_STAGE = "websocket/request-to-join-stage-peer-added", o.PEER_WITHDRAWN_REQUEST_TO_JOIN_STAGE = "websocket/request-to-join-stage-peer-withdrawn", o.PEER_REJECTED_TO_JOIN_STAGE = "websocket/peer-rejected-to-join-stage", o.PEER_ADDED_TO_STAGE = "websocket/peer-added-to-stage", o.PEER_REMOVED_FROM_STAGE = "websocket/peer-removed-from-stage", o.PEER_STARTED_PRESENTING = "websocket/peer-started-presenting", o.PEER_STOPPED_PRESENTING = "websocket/peer-stopped-presenting", o.STAGE_REQUESTS_UPDATED = "STAGE_REQUESTS_UPDATED", o.REQUEST_TO_JOIN_STAGE_ACCEPTED = "websocket/request-to-join-stage-accepted", o.REQUEST_TO_JOIN_STAGE_REJECTED = "websocket/request-to-join-stage-rejected", o.STARTED_PRESENTING = "websocket/started-presenting", o.STOPPED_PRESENTING = "websocket/stopped-presenting", o.REMOVED_FROM_STAGE = "websocket/removed-from-stage", o.JOIN_MEDIA_ROOM = "JOIN_MEDIA_ROOM", o.LEAVE_MEDIA_ROOM = "LEAVE_MEDIA_ROOM", o.UPDATE_PEER_STAGE_STATUS = "UPDATE_PEER_STAGE_STATUS", o.GET_WEBINAR_STAGE_STATUS = "GET_WEBINAR_STAGE_STATUS", o.REQUEST_TO_JOIN_STAGE = "REQUEST_TO_JOIN_STAGE", o.WITHDRAW_REQUEST_TO_JOIN_STAGE = "WITHDRAW_REQUEST_TO_JOIN_STAGE", o.LEAVE_STAGE = "LEAVE_STAGE", o.JOIN_STAGE = "JOIN_STAGE", o.SET_WEBINAR_STAGE_STATUS = "SET_WEBINAR_STAGE_STATUS", o.SET_STAGE_STATUS = "SET_STAGE_STATUS", o.ACCEPT_JOIN_STAGE_REQUEST = "ACCEPT_JOIN_STAGE_REQUEST", o.REMOVE_FROM_STAGE = "REMOVE_FROM_STAGE", o.REJECT_REQUEST_TO_JOIN_STAGE = "REJECT_REQUEST_TO_JOIN_STAGE", o.ACCEPT_ALL_REQUESTS_TO_JOIN_STAGE = "ACCEPT_ALL_REQUESTS_TO_JOIN_STAGE", o.PIP_HANGUP = "PIP_HANGUP", o;
}(M || {}), fn = /* @__PURE__ */ new K(), mn = /* @__PURE__ */ new K(), $b = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), z(b(t), fn, { writable: !0, value: void 0 }), z(b(t), mn, { writable: !0, value: void 0 }), R(b(t), "asyncPromiseTimeout", void 0), V(b(t), fn, /* @__PURE__ */ new Map()), V(b(t), mn, /* @__PURE__ */ new Map()), t.asyncPromiseTimeout = 8e3, t;
  }
  return D(r, [{ key: "emitAsync", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v = arguments;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              for (f(this, fn).set(n, []), u = f(this, mn).get(n).map(function() {
                return new Promise(function(w) {
                  f(i, fn).get(n).push(w);
                });
              }), l = v.length, p = new Array(l > 1 ? l - 1 : 0), h = 1; h < l; h++)
                p[h - 1] = v[h];
              return (s = Oe(Pe(r.prototype), "emit", this)).call.apply(s, [this, n].concat(p)), g.next = 6, Promise.race([Promise.all(u), new Promise(function(w, k) {
                return setTimeout(function() {
                  return k(new Error("emitAsync failed to resolve."));
                }, i.asyncPromiseTimeout);
              })]);
            case 6:
              f(this, fn).delete(n);
            case 7:
            case "end":
              return g.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "onAsync",
    value: function(e, a) {
      var n = f(this, fn), i = /* @__PURE__ */ function() {
        var s = y(/* @__PURE__ */ d().mark(function u() {
          var l, p, h = arguments;
          return d().wrap(function(m) {
            for (; ; )
              switch (m.prev = m.next) {
                case 0:
                  return m.prev = 0, m.next = 3, a.apply(void 0, h);
                case 3:
                  m.next = 8;
                  break;
                case 5:
                  m.prev = 5, m.t0 = m.catch(0), P.error("[onAsync]", { error: m.t0 });
                case 8:
                  p = (l = n.get(e)) === null || l === void 0 ? void 0 : l.shift(), p == null || p();
                case 10:
                case "end":
                  return m.stop();
              }
          }, u, null, [[0, 5]]);
        }));
        return function() {
          return s.apply(this, arguments);
        };
      }();
      return f(this, mn).get(e) || f(this, mn).set(e, []), f(this, mn).get(e).push(i), Oe(Pe(r.prototype), "on", this).call(this, e, i);
    }
    /**
    * removes all attached listeners
    */
  }, { key: "reset", value: function() {
    V(this, fn, /* @__PURE__ */ new Map()), V(this, mn, /* @__PURE__ */ new Map()), Oe(Pe(r.prototype), "removeAllListeners", this).call(this);
  } }]), r;
}(at.EventEmitter), $ = new $b(), En = /* @__PURE__ */ function(o) {
  return o.allowed = "ALLOWED", o.notAllowed = "NOT_ALLOWED", o.canRequest = "CAN_REQUEST", o;
}(En || {}), Lb = { view_type: Rr.GroupCall, accept_waiting_requests: !1, request_produce: !1, can_allow_participant_audio: !0, can_allow_participant_screensharing: !1, can_allow_participant_video: !0, request_kick_participant: !1, kick_participant: !0, pin_participant: !0, can_record: !1, waiting_room_type: "SKIP", plugins: { can_close: !0, can_start: !0, can_edit_acl: !1, config: {} }, polls: { can_create: !0, can_vote: !0, can_view: !0 }, produce: { video: { allow: !0, quality: dt.video.quality, frame_rate: dt.video.frameRate }, audio: !0, screenshare: { allow: !0, quality: dt.screenshare.quality, frame_rate: dt.screenshare.frameRate } }, chat: { public: { can_send: !0, text: !0, files: !0 }, private: { can_send: !1, can_receive: !1, text: !1, files: !1 } }, reactions: !1, hidden_participant: !1, show_participant_list: !0, can_change_participant_role: !0, can_change_theme: !1, can_present: !1, accept_present_requests: !1, can_edit_display_name: !1, max_screenshare_count: 1, is_recorder: !1, can_spotlight: !1 }, Ub = Dt(Lb), We = /* @__PURE__ */ new K(), Uu = /* @__PURE__ */ new K(), ot = /* @__PURE__ */ new K(), sp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    if (I(this, r), a = c.call(this), z(b(a), We, { writable: !0, value: void 0 }), z(b(a), Uu, { writable: !0, value: void 0 }), z(b(a), ot, { writable: !0, value: void 0 }), !t)
      throw P.error("DytePermissionsPresetV1::load_preset_permissions_failed"), new q("Could not load preset permissions.");
    return V(b(a), Uu, e), V(b(a), We, t), n && a.setupEvents(), a;
  }
  return D(r, [{ key: "setupEvents", value: function() {
    var e = this;
    $.onAsync(M.SET_STAGE_STATUS, /* @__PURE__ */ function() {
      var a = y(/* @__PURE__ */ d().mark(function n(i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                V(e, ot, i);
              case 1:
              case "end":
                return u.stop();
            }
        }, n);
      }));
      return function(n) {
        return a.apply(this, arguments);
      };
    }());
  } }, {
    key: "mediaRoomType",
    get: function() {
      return f(this, Uu) ? "HIVE" : "ROOM_NODE";
    }
    /**
    * @deprecated in favour of `suggestedTheme.viewType`
    * The `viewType` tells the type of the meeting
    * possible values are: GROUP_CALL| LIVESTREAM | CHAT | AUDIO_ROOM
    */
  }, {
    key: "viewType",
    get: function() {
      return f(this, We).viewType;
    }
    /**
    * The `stageEnabled` property returns a boolean value.
    * If `true`, stage management is available for the participant.
    */
  }, {
    key: "stageEnabled",
    get: function() {
      return this.viewType === Rr.Webinar || this.viewType === Rr.Livestream;
    }
    /**
    * The `stageAccess` property dictactes how a user interacts with the stage.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`;
    */
  }, {
    key: "stageAccess",
    get: function() {
      return this.canProduceVideo === "ALLOWED" || this.canProduceAudio === "ALLOWED" || this.canProduceScreenshare === "ALLOWED" ? "ALLOWED" : this.canProduceVideo === "CAN_REQUEST" || this.canProduceAudio === "CAN_REQUEST" || this.canProduceScreenshare === "CAN_REQUEST" ? "CAN_REQUEST" : "NOT_ALLOWED";
    }
    /**
    * The `acceptWaitingRequests` returns boolean value.
    * If `true`, participant can accept the request of waiting participant.
    */
  }, {
    key: "acceptWaitingRequests",
    get: function() {
      return f(this, We).acceptWaitingRequests;
    }
    /**
    * @deprecated
    * The `requestProduce` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio, video or screenshare.
    */
  }, {
    key: "requestProduce",
    get: function() {
      return f(this, We).requestProduce;
    }
    /**
    * The `requestProduceAudio` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio.
    */
  }, {
    key: "requestProduceAudio",
    get: function() {
      return this.requestProduce;
    }
    /**
    * The `requestProduceScreenshare` returns boolean value.
    * If `true`, participant can send request to participants
    * about sharing screen.
    */
  }, {
    key: "requestProduceScreenshare",
    get: function() {
      return this.requestProduce;
    }
    /**
    * The `canAllowParticipantAudio` returns boolean value.
    * If `true`, participant can enable other participants` audio.
    */
  }, {
    key: "canAllowParticipantAudio",
    get: function() {
      return f(this, We).canAllowParticipantAudio;
    }
    /**
    * The `canAllowParticipantScreensharing` returns boolean value.
    * If `true`, participant can enable other participants` screen share.
    */
  }, {
    key: "canAllowParticipantScreensharing",
    get: function() {
      return f(this, We).canAllowParticipantScreensharing;
    }
    /**
    * The `canAllowParticipantVideo` returns boolean value.
    * If `true`, participant can enable other participants` video.
    */
  }, {
    key: "canAllowParticipantVideo",
    get: function() {
      return f(this, We).canAllowParticipantVideo;
    }
    /**
    * If `true`, a participant can disable other participants` audio.
    */
  }, {
    key: "canDisableParticipantAudio",
    get: function() {
      return this.canAllowParticipantAudio;
    }
    /**
    * If `true`, a participant can disable other participants` video.
    */
  }, {
    key: "canDisableParticipantVideo",
    get: function() {
      return this.canAllowParticipantVideo;
    }
    /**
    * The `kickParticipant` returns boolean value.
    * If `true`, participant can remove other participants from the meeting.
    */
  }, {
    key: "kickParticipant",
    get: function() {
      return f(this, We).kickParticipant;
    }
    /**
    * The `pinParticipant` returns boolean value.
    * If `true`, participant can pin a participant in the meeting.
    */
  }, {
    key: "pinParticipant",
    get: function() {
      return f(this, We).pinParticipant;
    }
    /**
    * The `canRecord` returns boolean value.
    * If `true`, participant can record the meeting.
    */
  }, {
    key: "canRecord",
    get: function() {
      return f(this, We).canRecord;
    }
    /**
    * * @deprecated in favour of `waitingRoomBehaviour`.
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP_ON_ACCEPT`, `ON_ACCEPT`, `SKIP_ON_PRIVILEGED_USER_ENTRY`
    */
  }, {
    key: "waitingRoomType",
    get: function() {
      return f(this, We).waitingRoomType;
    }
    /**
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP`, `ON_PRIVILEGED_USER_ENTRY`, `SKIP_ON_ACCEPT`
    */
  }, {
    key: "waitingRoomBehaviour",
    get: function() {
      return f(this, We).waitingRoomType === "SKIP" ? "SKIP" : f(this, We).waitingRoomType === "SKIP_ON_PRIVILEGED_USER_ENTRY" ? "ON_PRIVILEGED_USER_ENTRY" : f(this, We).waitingRoomType === "ON_ACCEPT" ? "SKIP_ON_ACCEPT" : "SKIP";
    }
    /**
    * The `plugins` tells if the participant can act on plugins
    * there are 2 permissions with boolean values, `canStart` and `canClose`.
    */
  }, {
    key: "plugins",
    get: function() {
      return f(this, We).plugins;
    }
    /**
    * The `polls` tells if the participant can use polls.
    * There are 3 permissions with boolean values, `canCreate`, `canVote`, `canView`
    */
  }, {
    key: "polls",
    get: function() {
      return Q(Q({}, f(this, We).polls), {}, { canViewResults: f(this, We).polls.canView });
    }
    /**
    * @deprecated in favour of `canProduceVideo`
    * The `produceVideo` shows permissions for enabling video for the participant.
    * There are 3 permissions
    * `allow` - if video is allowed
    * `quality` - quality of the video
    * `frameRate` - frame rate of the video
    */
  }, {
    key: "produceVideo",
    get: function() {
      return Q(Q({}, f(this, We).produce.video), {}, { allow: this.canProduceVideo });
    }
    /**
    * The `canProduceVideo` shows permissions for enabling video.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceVideo",
    get: function() {
      var e = this.requestProduce ? "CAN_REQUEST" : f(this, We).produce.video ? "ALLOWED" : "NOT_ALLOWED";
      return this.stageEnabled && (f(this, ot) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ot) === "ON_STAGE") && e === "CAN_REQUEST" ? "ALLOWED" : this.stageEnabled && (f(this, ot) === "OFF_STAGE" || f(this, ot) === "REQUESTED_TO_JOIN_STAGE") && e === "ALLOWED" ? "NOT_ALLOWED" : e;
    }
    /**
    * @deprecated
    * The `produceScreenshare` shows permissions for enabling screen share for the participant.
    * There are 3 permissions
    * `allow` - if sharing screen is allowed
    * `quality` - quality of the video
    * `frameRate` - frame rate of the video
    */
  }, {
    key: "produceScreenshare",
    get: function() {
      return Q(Q({}, f(this, We).produce.screenshare), {}, { allow: this.canProduceScreenshare });
    }
    /**
    * The `canProduceScreenshare` shows permissions for sharing screen.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceScreenshare",
    get: function() {
      var e = this.requestProduce ? "CAN_REQUEST" : f(this, We).produce.screenshare ? "ALLOWED" : "NOT_ALLOWED";
      return this.stageEnabled && (f(this, ot) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ot) === "ON_STAGE") && e === "CAN_REQUEST" ? "ALLOWED" : this.stageEnabled && (f(this, ot) === "OFF_STAGE" || f(this, ot) === "REQUESTED_TO_JOIN_STAGE") && e === "ALLOWED" ? "NOT_ALLOWED" : e;
    }
    /**
    * @deprecated in favour of `canProduceAudio`
    * The `produceAudio` shows permissions for enabling audio for the participant.
    * If true, participant can enable audio.
    */
  }, {
    key: "produceAudio",
    get: function() {
      return this.canProduceAudio;
    }
    /**
    * The `canProduceAudio` shows permissions for enabling audio.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceAudio",
    get: function() {
      var e = this.requestProduce ? "CAN_REQUEST" : f(this, We).produce.audio ? "ALLOWED" : "NOT_ALLOWED";
      return this.stageEnabled && (f(this, ot) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ot) === "ON_STAGE") && e === "CAN_REQUEST" ? "ALLOWED" : this.stageEnabled && (f(this, ot) === "OFF_STAGE" || f(this, ot) === "REQUESTED_TO_JOIN_STAGE") && e === "ALLOWED" ? "NOT_ALLOWED" : e;
    }
    /**
    * The `chatPublic` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send chat
    * `text` - if true, the participant can send text
    * `files` - if true, the participant can send files
    */
  }, {
    key: "chatPublic",
    get: function() {
      return f(this, We).chat.public;
    }
    /**
    * The `chatPrivate` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send private chat
    * `text` - if true, the participant can send text as private chat
    * `files` - if true, the participant can send files as private chat
    * `canReceive` - (optional) if true, the participant can receive private chat
    */
  }, {
    key: "chatPrivate",
    get: function() {
      return f(this, We).chat.private;
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "chatChannel",
    get: function() {
      return { canCreate: "NONE", canDelete: "NONE", canUpdate: "NONE", canReadAll: !1 };
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "chatMessage",
    get: function() {
      return { canDelete: "NONE", canEdit: "NONE", deleteCutoffTimeSeconds: 0, editCutoffTimeSeconds: 0 };
    }
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "connectedMeetings",
    get: function() {
      return { canAlterConnectedMeetings: !1, canSwitchConnectedMeetings: !1, canSwitchToParentMeeting: !1 };
    }
    /**
    * @deprecated
    * The `reactions` returns boolean value.
    * If `true`, reactions are enabled for the participant
    */
  }, {
    key: "reactions",
    get: function() {
      return f(this, We).reactions;
    }
    /**
    * The `hiddenParticipant` returns boolean value.
    * If `true`, participant is hidden.
    */
  }, {
    key: "hiddenParticipant",
    get: function() {
      return f(this, We).hiddenParticipant;
    }
    /**
    * The `showParticipantList` returns boolean value.
    * If `true`, participant list can be shown to the participant.
    */
  }, {
    key: "showParticipantList",
    get: function() {
      return f(this, We).showParticipantList;
    }
    /**
    * The `canChangeParticipantRole` returns boolean value.
    * If `true`, allow changing the participants' role.
    */
  }, {
    key: "canChangeParticipantRole",
    get: function() {
      return f(this, We).canChangeParticipantRole;
    }
    /**
    * @deprecated
    * The `canChangeTheme` returns boolean value.
    * If `true`, the participant can change the meeting theme.
    */
  }, {
    key: "canChangeTheme",
    get: function() {
      return f(this, We).canChangeTheme;
    }
    /**
    * @deprecated
    * The `canPresent` returns boolean value.
    * If `true`, the participant can become a presentor.
    */
  }, { key: "canPresent", get: function() {
    return f(this, We).canPresent;
  } }, { key: "acceptPresentRequests", get: function() {
    return f(this, We).acceptPresentRequests;
  } }, { key: "acceptStageRequests", get: function() {
    return f(this, We).acceptPresentRequests;
  } }, {
    key: "canEditDisplayName",
    get: function() {
      return f(this, We).canEditDisplayName;
    }
    /**
    * @deprecated in favour of `suggestedTheme.maxScreenShareCount`
    */
  }, { key: "maxScreenShareCount", get: function() {
    return f(this, We).maxScreenshareCount;
  } }, {
    key: "isRecorder",
    get: function() {
      return f(this, We).isRecorder;
    }
    /**
    * NOTE(callmetarush): This will always return false and should onlu
    * be used to not have to convert presets.
    */
    // eslint-disable-next-line class-methods-use-this
  }, { key: "canLivestream", get: function() {
    return !1;
  } }, {
    key: "canSpotlight",
    get: function() {
      return f(this, We).canSpotlight;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "isV2", get: function() {
    return !1;
  } }], [{ key: "fromResponse", value: function(e, a) {
    return new r(e, a, !0);
  } }, { key: "default", value: function(e) {
    return new r(Ub, e);
  } }]), r;
}(fr), Ya;
(function(o) {
  o[o.PUBLISHER = 0] = "PUBLISHER", o[o.SUBSCRIBER = 1] = "SUBSCRIBER";
})(Ya || (Ya = {}));
var Vt;
(function(o) {
  o[o.AUDIO = 0] = "AUDIO", o[o.VIDEO = 1] = "VIDEO";
})(Vt || (Vt = {}));
var Fb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.Pair", [{
      no: 1,
      name: "key",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "value",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new Fb();
var Vb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.Codec", []);
  }
  return D(r);
}(W);
new Vb();
var Hb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.Fingerprint", [{
      no: 1,
      name: "algorithm",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "value",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new Hb();
var jb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.SessionDescription", [{ no: 1, name: "target", kind: "enum", T: function() {
      return ["media.Target", Ya];
    } }, {
      no: 2,
      name: "type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "sdp",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), $a = new jb(), Gb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.CreateTransportRequest", [{
      no: 1,
      name: "consuming",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "force_tcp",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 3, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), Bb = new Gb(), qb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.CreateTransportResponse", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return $a;
    } }, {
      no: 3,
      name: "transcription_enabled",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), fv = new qb(), Wb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.RenegotiateRequest", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), Jb = new Wb(), Kb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.RenegotiateResponse", [{
      no: 1,
      name: "transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W);
new Kb();
var zb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.NestedScore", [{
      no: 1,
      name: "encoding_idx",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "rid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "score",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "ssrc",
      kind: "scalar",
      T: 3,
      L: 0
      /*LongType.BIGINT*/
    }]);
  }
  return D(r);
}(W), Qb = new zb(), Yb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ProducerTrack", [{
      no: 1,
      name: "track_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "stream_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Xb = new Yb(), Zb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ProducerEntry", [{
      no: 1,
      name: "producing_transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new Zb();
var xb = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ConsumerEntry", [{
      no: 1,
      name: "consuming_transport_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new xb();
var eS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ProducerState", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "kind", kind: "enum", T: function() {
      return ["media.ProducerKind", Vt];
    } }, {
      no: 3,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), Xs = new eS(), rS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ConsumerState", [{
      no: 1,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return Xs;
    } }, { no: 3, name: "producer_track", kind: "message", T: function() {
      return Xb;
    } }]);
  }
  return D(r);
}(W), tS = new rS(), aS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.ProducerIdToConsumerMap", [{ no: 1, name: "map", kind: "map", K: 9, V: { kind: "message", T: function() {
      return tS;
    } } }]);
  }
  return D(r);
}(W), mv = new aS(), nS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerJoinRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "prejoined",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "preset",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 6,
      name: "user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "organization_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), iS = new nS(), sS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerJoinCompleteRequest", []);
  }
  return D(r);
}(W), oS = new sS(), uS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerLeaveRequest", [{
      no: 1,
      name: "close_room",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), cS = new uS(), lS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumeMultipleProducerRequest", [{
      no: 1,
      name: "producer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W);
new lS();
var dS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumePeerRequest", [{
      no: 1,
      name: "producing_peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "producer_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), pS = new dS(), hS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerCreateRequest", [{
      no: 1,
      name: "kind",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "paused",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 4, name: "description", kind: "message", T: function() {
      return $a;
    } }, {
      no: 5,
      name: "msid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), vS = new hS(), fS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.SelectedPeersRequest", []);
  }
  return D(r);
}(W);
new fS();
var mS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.GlobalPeerPinningRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), gS = new mS(), yS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerToggleRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), fo = new yS(), kS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumerToggleRequest", [{
      no: 1,
      name: "consumer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "pause",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), op = new kS(), wS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerCloseRequest", [{
      no: 1,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), TS = new wS(), bS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumerCloseRequest", [{
      no: 1,
      name: "consumer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), SS = new bS(), ES = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.KickPeerRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), _S = new ES(), RS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.KickAllPeersRequest", []);
  }
  return D(r);
}(W), PS = new RS(), CS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerDisplayNameEditRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), IS = new CS(), DS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.HostMediaControlForPeerRequest", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "scree_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), AS = new DS(), MS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.HostMediaControlForAllPeerRequest", [{
      no: 1,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "screen_share",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), OS = new MS(), NS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.GetRoomStateResponse", [{
      no: 1,
      name: "display_title",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "locked_mode",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "room_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "current_peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "is_recording",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "recorder_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "pinned_peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), $S = new NS(), LS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ErrorResponse", [{
      no: 1,
      name: "error_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "event_id",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r);
}(W), US = new LS(), FS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.EmptyResponse", []);
  }
  return D(r);
}(W);
new FS();
var VS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.RoomParticipants", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_states", kind: "message", repeat: 1, T: function() {
      return Xs;
    } }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), gv = new VS(), HS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.SelectedPeersResponse", [{
      no: 1,
      name: "audio_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "compulsory_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), yv = new HS(), jS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.SelectedPeersDiffEntry", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "priority",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r);
}(W), GS = new jS(), BS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.SelectedPeersDiffResponse", [{ no: 1, name: "entries", kind: "message", repeat: 1, T: function() {
      return GS;
    } }]);
  }
  return D(r);
}(W), qS = new BS(), WS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerJoinResponse", []);
  }
  return D(r);
}(W);
new WS();
var JS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerJoinCompleteResponse", [{ no: 1, name: "room_state", kind: "message", T: function() {
      return $S;
    } }, { no: 2, name: "participants", kind: "message", repeat: 1, T: function() {
      return gv;
    } }, { no: 3, name: "selected_peers", kind: "message", T: function() {
      return yv;
    } }, {
      no: 4,
      name: "max_preferred_streams",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r);
}(W), KS = new JS(), zS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerLeaveResponse", [{
      no: 1,
      name: "closed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), QS = new zS(), YS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumeMultipleProducerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 2, name: "consumer_ids_map", kind: "message", T: function() {
      return mv;
    } }]);
  }
  return D(r);
}(W);
new YS();
var XS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumePeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 2, name: "consumer_ids_map", kind: "message", T: function() {
      return mv;
    } }]);
  }
  return D(r);
}(W), ZS = new XS(), xS = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerCreateResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "producer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), eE = new xS(), rE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerScoreResponse", [{
      no: 1,
      name: "responseid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "score", kind: "message", T: function() {
      return Qb;
    } }]);
  }
  return D(r);
}(W);
new rE();
var tE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ActiveSpeakerResponse", [{
      no: 1,
      name: "responsepeer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "volume",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r);
}(W);
new tE();
var aE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.NoActiveSpeakerResponse", []);
  }
  return D(r);
}(W);
new aE();
var nE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerToggleResponse", []);
  }
  return D(r);
}(W);
new nE();
var iE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumerToggleResponse", []);
  }
  return D(r);
}(W);
new iE();
var sE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ProducerClosingResponse", [{ no: 1, name: "description", kind: "message", T: function() {
      return $a;
    } }]);
  }
  return D(r);
}(W), oE = new sE(), uE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.ConsumerClosingResponse", []);
  }
  return D(r);
}(W);
new uE();
var cE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.GlobalPeerPinningResponse", []);
  }
  return D(r);
}(W);
new cE();
var lE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.KickPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), dE = new lE(), pE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.KickAllPeersResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), hE = new pE(), vE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.HostMediaControlForPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), fE = new vE(), mE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.HostMediaControlForAllPeerResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), gE = new mE(), yE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerDisplayNameEditResponse", [{
      no: 1,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), kE = new yE(), wE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerJoinBroadcastResponse", [{ no: 1, name: "participant", kind: "message", T: function() {
      return gv;
    } }]);
  }
  return D(r);
}(W), TE = new wE(), bE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerProducingTransportCreateBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "transport_details", kind: "message", T: function() {
      return fv;
    } }]);
  }
  return D(r);
}(W);
new bE();
var SE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerProducerCreateBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return Xs;
    } }]);
  }
  return D(r);
}(W), EE = new SE(), _E = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerProducerToggleBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return Xs;
    } }]);
  }
  return D(r);
}(W), RE = new _E(), PE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerProducerCloseBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "producer_state", kind: "message", T: function() {
      return Xs;
    } }]);
  }
  return D(r);
}(W), CE = new PE(), IE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerLeaveBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), DE = new IE(), AE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.GlobalPeerPinningBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), ME = new AE(), OE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.GlobalPeerUnPinningBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new OE();
var NE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.RecordingStartedBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new NE();
var $E = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.RecordingStoppedBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new $E();
var LE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerDisplayNameEditBroadcastResponse", [{
      no: 1,
      name: "participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), UE = new LE(), FE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "media.edge.PeerPingRequestBroadcastResponse", [{
      no: 1,
      name: "password",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new FE();
var VE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.ai.MeetingTranscript", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "transcript",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Fu = new VE(), HE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.api.BaseSocketHubMessage", [{
      no: 1,
      name: "event",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "room_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 7,
      name: "error",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "sid",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new HE();
var jE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.api.ErrorMessage", [{
      no: 1,
      name: "code",
      kind: "scalar",
      opt: !0,
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), GE = new jE(), BE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset", [{
      no: 1,
      name: "success",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "data", kind: "message", T: function() {
      return d_;
    } }]);
  }
  return D(r);
}(W);
new BE();
var qE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Plugins", [{
      no: 1,
      name: "can_close",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_start",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), WE = new qE(), JE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Polls", [{
      no: 1,
      name: "can_create",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_vote",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "can_view",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), KE = new JE(), zE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Video", [{
      no: 1,
      name: "allow",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "quality",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "frame_rate",
      kind: "scalar",
      T: 13
      /*ScalarType.UINT32*/
    }]);
  }
  return D(r);
}(W), QE = new zE(), YE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Screenshare", [{
      no: 1,
      name: "allow",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "quality",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "frame_rate",
      kind: "scalar",
      T: 13
      /*ScalarType.UINT32*/
    }]);
  }
  return D(r);
}(W), XE = new YE(), ZE = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Produce", [{ no: 1, name: "video", kind: "message", T: function() {
      return QE;
    } }, {
      no: 2,
      name: "audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 3, name: "screenshare", kind: "message", T: function() {
      return XE;
    } }]);
  }
  return D(r);
}(W), xE = new ZE(), e_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Public", [{
      no: 1,
      name: "can_send",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "text",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "files",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), r_ = new e_(), t_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Private", [{
      no: 1,
      name: "can_send",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "can_receive",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "text",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "files",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), a_ = new t_(), n_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Chat", [{ no: 1, name: "public", kind: "message", T: function() {
      return r_;
    } }, { no: 2, name: "private", kind: "message", T: function() {
      return a_;
    } }]);
  }
  return D(r);
}(W), i_ = new n_(), s_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Permissions", [{
      no: 1,
      name: "view_type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "accept_waiting_requests",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 3,
      name: "request_produce",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "can_allow_participant_audio",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "can_allow_participant_screensharing",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "can_allow_participant_video",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "request_kick_participant",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "kick_participant",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 9,
      name: "pin_participant",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 10,
      name: "can_record",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 11,
      name: "waiting_room_type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 12, name: "plugins", kind: "message", T: function() {
      return WE;
    } }, { no: 13, name: "polls", kind: "message", T: function() {
      return KE;
    } }, { no: 14, name: "produce", kind: "message", T: function() {
      return xE;
    } }, { no: 15, name: "chat", kind: "message", T: function() {
      return i_;
    } }, {
      no: 16,
      name: "reactions",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 17,
      name: "hidden_participant",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 18,
      name: "show_participant_list",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 19,
      name: "can_change_participant_role",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 20,
      name: "can_change_theme",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 21,
      name: "can_present",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 22,
      name: "is_recorder",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), o_ = new s_(), u_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Preset", [{ no: 1, name: "permissions", kind: "message", T: function() {
      return o_;
    } }, {
      no: 3,
      name: "version",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "preset_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), c_ = new u_(), l_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.PeerPreset.Data", [{ no: 1, name: "preset", kind: "message", T: function() {
      return c_;
    } }]);
  }
  return D(r);
}(W), d_ = new l_(), p_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.ChatMessage", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "pinned",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "is_edited",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 8,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 10,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 11,
      name: "created_at",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 12,
      name: "created_at_ms",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 13,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 14,
      name: "channel_index",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Bn = new p_(), h_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetPaginatedChatMessageRoomRequest", [{
      no: 1,
      name: "time_stamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 2,
      name: "size",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "from",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "reversed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), v_ = new h_(), f_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetPaginatedChatMessageRoomResponse", [{ no: 1, name: "messages", kind: "message", repeat: 1, T: function() {
      return Bn;
    } }, {
      no: 2,
      name: "next",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), m_ = new f_(), g_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetChatMessagesResponse", [{ no: 1, name: "messages", kind: "message", repeat: 1, T: function() {
      return Bn;
    } }]);
  }
  return D(r);
}(W), kv = new g_(), y_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToRoomRequest", [{
      no: 1,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), k_ = new y_(), w_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToRoomResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return Bn;
    } }]);
  }
  return D(r);
}(W), Vu = new w_(), T_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToPeersRequest", [{
      no: 1,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), b_ = new T_(), S_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToPeersResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return Bn;
    } }]);
  }
  return D(r);
}(W), Hu = new S_(), E_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToChannelRequest", [{
      no: 1,
      name: "channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), __ = new E_(), R_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SendChatMessageToChannelResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return Bn;
    } }]);
  }
  return D(r);
}(W);
new R_();
var P_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.EditChatMessageRequest", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload_type",
      kind: "scalar",
      opt: !0,
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "payload",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "pinned",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), C_ = new P_(), I_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.EditChatMessageResponse", [{ no: 1, name: "message", kind: "message", T: function() {
      return Bn;
    } }]);
  }
  return D(r);
}(W), mo = new I_(), D_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.DeleteChatMessageRequest", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), A_ = new D_(), M_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.DeleteChatMessageResponse", [{
      no: 1,
      name: "chat_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), go = new M_(), O_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.SearchChatMessagesRequest", [{
      no: 1,
      name: "time_stamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 2,
      name: "size",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "from",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 4,
      name: "reversed",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "channel_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "search_term",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), N_ = new O_(), $_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.MarkChannelIndexAsReadRequest", [{
      no: 1,
      name: "channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "channel_index",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), L_ = new $_(), U_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.MarkChannelIndexAsReadResponse", [{
      no: 1,
      name: "channel_index",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), F_ = new U_(), V_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.CreateChatChannelRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "visibility",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "is_direct_message",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), H_ = new V_(), j_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.UpdateChatChannelRequest", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "visibility",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "is_direct_message",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), G_ = new j_(), B_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.CreateChatChannelResponse", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new B_();
var q_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetChatChannelRequest", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), W_ = new q_(), J_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.LatestMessageAndUnreadCount", [{ no: 1, name: "message", kind: "message", T: function() {
      return Bn;
    } }, {
      no: 2,
      name: "unread_count",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]);
  }
  return D(r);
}(W), K_ = new J_(), z_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.ChatChannel", [{
      no: 1,
      name: "chat_channel_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "visibility",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "is_direct_message",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, { no: 6, name: "latest_message_and_unread_count", kind: "message", T: function() {
      return K_;
    } }, {
      no: 7,
      name: "target_user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Q_ = new z_(), Y_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetChatChannelResponse", [{ no: 1, name: "chat_channels", kind: "message", repeat: 1, T: function() {
      return Q_;
    } }]);
  }
  return D(r);
}(W), ba = new Y_(), X_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.ChannelMember", [{
      no: 1,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "picture",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "custom_participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Z_ = new X_(), x_ = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.chat.GetChatChannelMembersResponse", [{ no: 1, name: "channel_members", kind: "message", repeat: 1, T: function() {
      return Z_;
    } }]);
  }
  return D(r);
}(W), eR = new x_(), Zo;
(function(o) {
  o[o.BROWSER = 0] = "BROWSER", o[o.TRACK = 1] = "TRACK", o[o.COMPOSITE = 2] = "COMPOSITE";
})(Zo || (Zo = {}));
var bt;
(function(o) {
  o[o.UNSPECIFIED = 0] = "UNSPECIFIED", o[o.ON_STAGE = 1] = "ON_STAGE", o[o.APPROVED_STAGE = 2] = "APPROVED_STAGE", o[o.REQUESTED_STAGE = 3] = "REQUESTED_STAGE", o[o.OFF_STAGE = 4] = "OFF_STAGE";
})(bt || (bt = {}));
var xo;
(function(o) {
  o[o.HIVE = 0] = "HIVE", o[o.CHAT = 1] = "CHAT", o[o.PING = 2] = "PING";
})(xo || (xo = {}));
var rR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.Peer", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "stage_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.StageType", bt, "STAGE_TYPE_"];
    } }, {
      no: 5,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "preset_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "waitlisted",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), cu = new rR(), tR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.PeerInfoResponse", [{ no: 1, name: "peer", kind: "message", T: function() {
      return cu;
    } }]);
  }
  return D(r);
}(W), hs = new tR(), aR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.PeerStatusUpdate", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "stage_type", kind: "enum", opt: !0, T: function() {
      return ["socket.room.StageType", bt, "STAGE_TYPE_"];
    } }]);
  }
  return D(r);
}(W), up = new aR(), nR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.RoomPeersInfoRequest", [{
      no: 1,
      name: "seach_query",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "limit",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }, {
      no: 3,
      name: "offset",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r);
}(W), iR = new nR(), sR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.RoomPeersInfoResponse", [{ no: 1, name: "peers", kind: "message", repeat: 1, T: function() {
      return cu;
    } }]);
  }
  return D(r);
}(W), oR = new sR(), uR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.RoomPeerCountResponse", [{
      no: 1,
      name: "count",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]);
  }
  return D(r);
}(W), cp = new uR(), cR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.Room", [{
      no: 1,
      name: "room_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "created_at",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, { no: 5, name: "active_recordings", kind: "message", repeat: 1, T: function() {
      return dR;
    } }]);
  }
  return D(r);
}(W), wv = new cR(), lR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.ActiveRecording", [{
      no: 1,
      name: "recording_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 2, name: "recording_type", kind: "enum", T: function() {
      return ["common.RecordingType", Zo];
    } }, {
      no: 3,
      name: "recording_status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), dR = new lR(), pR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.RoomInfoResponse", [{ no: 1, name: "room", kind: "message", T: function() {
      return wv;
    } }]);
  }
  return D(r);
}(W), lp = new pR(), hR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetPeerInfoRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), vR = new hR(), fR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.UpdatePeerInfoRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W);
new fR();
var mR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.JoinRoomRequest", [{ no: 1, name: "peer", kind: "message", T: function() {
      return cu;
    } }, {
      no: 3,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "organization_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "use_hive",
      kind: "scalar",
      opt: !0,
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 6,
      name: "preset",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }, { no: 7, name: "capabilities", kind: "enum", repeat: 1, T: function() {
      return ["socket.room.Capabilities", xo, "CAPABILITIES_"];
    } }, {
      no: 8,
      name: "timestamp",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]);
  }
  return D(r);
}(W), gR = new mR(), yR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.LeaveRoomRequest", [{ no: 1, name: "peer", kind: "message", T: function() {
      return cu;
    } }, {
      no: 2,
      name: "timestamp",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]);
  }
  return D(r);
}(W), kR = new yR(), wR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.UpdateRoomInfoRequest", [{ no: 1, name: "room", kind: "message", T: function() {
      return wv;
    } }]);
  }
  return D(r);
}(W);
new wR();
var TR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetConnectedRoomsDumpRequest", []);
  }
  return D(r);
}(W);
new TR();
var bR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.ServiceError", [{
      no: 1,
      name: "message",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "code",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), bl = new bR(), SR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.ConnectedMeetingPeer", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "display_name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "preset_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "display_picture_url",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), ER = new SR(), _R = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.ConnectedMeetingDump", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "participants", kind: "message", repeat: 1, T: function() {
      return ER;
    } }]);
  }
  return D(r);
}(W), dp = new _R(), RR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetConnectedRoomsDumpResponse", [{ no: 1, name: "parent_meeting", kind: "message", T: function() {
      return dp;
    } }, { no: 2, name: "meetings", kind: "message", repeat: 1, T: function() {
      return dp;
    } }]);
  }
  return D(r);
}(W), PR = new RR(), CR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.CreateRoomRequestPayload", [{
      no: 1,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), IR = new CR(), DR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.CreateConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return IR;
    } }]);
  }
  return D(r);
}(W), AR = new DR(), MR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.CreateRoomResponsePayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "error", kind: "message", T: function() {
      return bl;
    } }]);
  }
  return D(r);
}(W), OR = new MR(), NR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.CreateConnectedRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return OR;
    } }]);
  }
  return D(r);
}(W), pp = new NR(), $R = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.UpdateRoomRequestPayload", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), LR = new $R(), UR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.UpdateConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return LR;
    } }]);
  }
  return D(r);
}(W);
new UR();
var FR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.DisableRoomPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), VR = new FR(), HR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.DisableConnectedRoomsRequest", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return VR;
    } }]);
  }
  return D(r);
}(W), jR = new HR(), GR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.DisableConnectedRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return WR;
    } }]);
  }
  return D(r);
}(W), BR = new GR(), qR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.DisableConnectedRoomPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "status",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "title",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 4, name: "error", kind: "message", T: function() {
      return bl;
    } }]);
  }
  return D(r);
}(W), WR = new qR(), JR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.MovePeerPayload", [{
      no: 1,
      name: "id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), KR = new JR(), zR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.MovePeersBetweenRoomsRequest", [{
      no: 1,
      name: "source_meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "destination_meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "participants", kind: "message", repeat: 1, T: function() {
      return KR;
    } }]);
  }
  return D(r);
}(W), QR = new zR(), YR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.MovedPeer", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "custom_participant_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "error", kind: "message", T: function() {
      return bl;
    } }]);
  }
  return D(r);
}(W), Tv = new YR(), XR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.MovePeersBetweenRoomsResponse", [{ no: 1, name: "payloads", kind: "message", repeat: 1, T: function() {
      return Tv;
    } }]);
  }
  return D(r);
}(W);
new XR();
var ZR = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.TransferPeer", [{
      no: 1,
      name: "meeting_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "auth_token",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), xR = new ZR(), e0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetAllAddedParticipantsResponse", [{ no: 1, name: "participants", kind: "message", repeat: 1, T: function() {
      return a0;
    } }]);
  }
  return D(r);
}(W), r0 = new e0(), t0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.AddedParticipant", [{
      no: 1,
      name: "id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "picture",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "custom_participant_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), a0 = new t0(), n0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.RemoveParticipantsRequest", [{
      no: 1,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), i0 = new n0(), s0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.BroadcastMessage", [{
      no: 1,
      name: "type",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, {
      no: 3,
      name: "timestamp",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, {
      no: 4,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), hp = new s0(), o0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.AcceptWaitingRoomRequests", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), u0 = new o0(), c0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.DenyWaitingRoomRequests", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), l0 = new c0(), d0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.WaitingRoomRequest", [{
      no: 1,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), p0 = new d0(), h0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetWaitingRoomRequests", [{ no: 1, name: "requests", kind: "message", repeat: 1, T: function() {
      return p0;
    } }]);
  }
  return D(r);
}(W), vp = new h0(), v0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.room.GetRoomStageStateResponse", [{
      no: 1,
      name: "on_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "approved_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "requested_stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), fp = new v0(), f0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.AddPluginRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "staggered",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), m0 = new f0(), g0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.RemovePluginRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "staggered",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }]);
  }
  return D(r);
}(W), y0 = new g0(), k0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.EnablePluginForRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), w0 = new k0(), T0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.DisablePluginForRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), b0 = new T0(), S0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.EnablePluginForPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), E0 = new S0(), _0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.DisablePluginForPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), R0 = new _0(), P0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginEventToRoomRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]);
  }
  return D(r);
}(W), C0 = new P0(), I0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginEventToPeersRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]);
  }
  return D(r);
}(W), D0 = new I0(), A0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.StoreKeys", [{
      no: 1,
      name: "store_key",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "payload",
      kind: "scalar",
      opt: !0,
      T: 12
      /*ScalarType.BYTES*/
    }]);
  }
  return D(r);
}(W), Sl = new A0(), M0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreInsertKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "insert_keys", kind: "message", repeat: 1, T: function() {
      return Sl;
    } }]);
  }
  return D(r);
}(W), mp = new M0(), O0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreGetKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "get_keys", kind: "message", repeat: 1, T: function() {
      return Sl;
    } }]);
  }
  return D(r);
}(W), N0 = new O0(), $0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreDeleteKeysRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "delete_keys", kind: "message", repeat: 1, T: function() {
      return Sl;
    } }]);
  }
  return D(r);
}(W), L0 = new $0(), U0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreDeleteRequest", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), F0 = new U0(), V0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.EnablePluginResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "enabled_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Pc = new V0(), H0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.EnablePluginsResponse", [{ no: 1, name: "plugins", kind: "message", repeat: 1, T: function() {
      return Pc;
    } }]);
  }
  return D(r);
}(W), j0 = new H0(), G0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.DisablePluginResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "disabled_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), gp = new G0(), B0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreItem", [{
      no: 1,
      name: "timestamp",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "store_key",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "payload",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]);
  }
  return D(r);
}(W), q0 = new B0(), W0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginStoreResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "store_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "store_items", kind: "message", repeat: 1, T: function() {
      return q0;
    } }]);
  }
  return D(r);
}(W), yp = new W0(), J0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.plugin.PluginEventResponse", [{
      no: 1,
      name: "plugin_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "plugin_data",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }]);
  }
  return D(r);
}(W), kp = new J0(), K0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.LiveStreamingEvent", [{
      no: 1,
      name: "livestream_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "err_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "meeting_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 5,
      name: "playback_url",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "org_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 7,
      name: "room_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 8,
      name: "room_uuid",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 9,
      name: "status",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), wp = new K0(), z0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.GetStagePeersResponse", [{
      no: 1,
      name: "stage_peers",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Tp = new z0(), Q0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.StageRequest", [{
      no: 1,
      name: "display_name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "peer_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), Y0 = new Q0(), X0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.GetStageRequestsResponse", [{ no: 1, name: "stage_requests", kind: "message", repeat: 1, T: function() {
      return Y0;
    } }]);
  }
  return D(r);
}(W), ju = new X0(), Z0 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.GrantStageAccessRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), x0 = new Z0(), eP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.DenyStageAccessRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), rP = new eP(), tP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.livestreaming.LeaveStageRequest", [{
      no: 1,
      name: "user_ids",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), bp = new tP(), aP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.Poll", [{
      no: 1,
      name: "poll_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "created_by",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "created_by_user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 4,
      name: "question",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 5, name: "options", kind: "message", repeat: 1, T: function() {
      return iP;
    } }, {
      no: 6,
      name: "hide_votes",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 7,
      name: "anonymous",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 8,
      name: "votes",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), bv = new aP(), nP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.PollOption", [{
      no: 1,
      name: "text",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "count",
      kind: "scalar",
      opt: !0,
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }, { no: 3, name: "votes", kind: "message", repeat: 1, T: function() {
      return oP;
    } }]);
  }
  return D(r);
}(W), iP = new nP(), sP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.PollVote", [{
      no: 1,
      name: "user_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "name",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), oP = new sP(), uP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.NewPollRequest", [{
      no: 1,
      name: "question",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "options",
      kind: "scalar",
      repeat: 2,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 3,
      name: "anonymous",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 4,
      name: "hide_votes",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 5,
      name: "created_by",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 6,
      name: "created_by_user_id",
      kind: "scalar",
      opt: !0,
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), cP = new uP(), lP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.VotePollRequest", [{
      no: 1,
      name: "poll_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "index",
      kind: "scalar",
      T: 4,
      L: 2
      /*LongType.NUMBER*/
    }]);
  }
  return D(r);
}(W), dP = new lP(), pP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.UpdatePollResponse", [{ no: 1, name: "poll", kind: "message", T: function() {
      return bv;
    } }]);
  }
  return D(r);
}(W), Gu = new pP(), hP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.polls.GetPollsResponse", [{ no: 1, name: "polls", kind: "message", repeat: 1, T: function() {
      return bv;
    } }]);
  }
  return D(r);
}(W), vP = new hP(), fP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "socket.recording.RecordingEvent", [{
      no: 1,
      name: "recording_id",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "err_message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, { no: 3, name: "recording_type", kind: "enum", T: function() {
      return ["common.RecordingType", Zo];
    } }]);
  }
  return D(r);
}(W), Sp = new fP(), Cc;
(function(o) {
  o[o.ACTION = 0] = "ACTION", o[o.RESPONSE = 1] = "RESPONSE", o[o.EVENT = 2] = "EVENT";
})(Cc || (Cc = {}));
var Ic;
(function(o) {
  o[o.SERVICE_NOT_FOUND = 0] = "SERVICE_NOT_FOUND", o[o.PARAMETER_VALIDATION_ERROR = 1] = "PARAMETER_VALIDATION_ERROR", o[o.TIMEOUT_ERROR = 2] = "TIMEOUT_ERROR", o[o.APPLICATION_ERROR = 3] = "APPLICATION_ERROR";
})(Ic || (Ic = {}));
var mP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "bridge.BridgeMessage", [{ no: 1, name: "type", kind: "enum", T: function() {
      return ["bridge.BridgeMessageType", Cc];
    } }, { no: 2, name: "action", kind: "message", oneof: "data", T: function() {
      return yP;
    } }, { no: 3, name: "response", kind: "message", oneof: "data", T: function() {
      return wP;
    } }, { no: 4, name: "event", kind: "message", oneof: "data", T: function() {
      return EP;
    } }]);
  }
  return D(r);
}(W);
new mP();
var gP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "bridge.BridgeAction", [{
      no: 1,
      name: "action",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "params",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), yP = new gP(), kP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "bridge.BridgeResponse", [{
      no: 1,
      name: "success",
      kind: "scalar",
      T: 8
      /*ScalarType.BOOL*/
    }, {
      no: 2,
      name: "response",
      kind: "scalar",
      T: 12
      /*ScalarType.BYTES*/
    }, { no: 3, name: "error", kind: "message", T: function() {
      return bP;
    } }]);
  }
  return D(r);
}(W), wP = new kP(), TP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "bridge.BridgeError", [{ no: 1, name: "type", kind: "enum", T: function() {
      return ["bridge.ErrorType", Ic];
    } }, {
      no: 2,
      name: "message",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), bP = new TP(), SP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "bridge.BridgeEvent", [{
      no: 1,
      name: "event",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }, {
      no: 2,
      name: "params",
      kind: "scalar",
      T: 9
      /*ScalarType.STRING*/
    }]);
  }
  return D(r);
}(W), EP = new SP(), _P = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "google.protobuf.Timestamp", [{
      no: 1,
      name: "seconds",
      kind: "scalar",
      T: 3,
      L: 0
      /*LongType.BIGINT*/
    }, {
      no: 2,
      name: "nanos",
      kind: "scalar",
      T: 5
      /*ScalarType.INT32*/
    }]);
  }
  return D(r, [{
    key: "now",
    value: function() {
      var e = this.create(), a = Date.now();
      return e.seconds = ds.from(Math.floor(a / 1e3)).toBigInt(), e.nanos = a % 1e3 * 1e6, e;
    }
    /**
    * Converts a `Timestamp` to a JavaScript Date.
    */
  }, {
    key: "toDate",
    value: function(e) {
      return new Date(ds.from(e.seconds).toNumber() * 1e3 + Math.ceil(e.nanos / 1e6));
    }
    /**
    * Converts a JavaScript Date to a `Timestamp`.
    */
  }, {
    key: "fromDate",
    value: function(e) {
      var a = this.create(), n = e.getTime();
      return a.seconds = ds.from(Math.floor(n / 1e3)).toBigInt(), a.nanos = n % 1e3 * 1e6, a;
    }
    /**
    * In JSON format, the `Timestamp` type is encoded as a string
    * in the RFC 3339 format.
    */
  }, {
    key: "internalJsonWrite",
    value: function(e, a) {
      var n = ds.from(e.seconds).toNumber() * 1e3;
      if (n < Date.parse("0001-01-01T00:00:00Z") || n > Date.parse("9999-12-31T23:59:59Z"))
        throw new Error("Unable to encode Timestamp to JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
      if (e.nanos < 0)
        throw new Error("Unable to encode invalid Timestamp to JSON. Nanos must not be negative.");
      var i = "Z";
      if (e.nanos > 0) {
        var s = (e.nanos + 1e9).toString().substring(1);
        s.substring(3) === "000000" ? i = "." + s.substring(0, 3) + "Z" : s.substring(6) === "000" ? i = "." + s.substring(0, 6) + "Z" : i = "." + s + "Z";
      }
      return new Date(n).toISOString().replace(".000Z", i);
    }
    /**
    * In JSON format, the `Timestamp` type is encoded as a string
    * in the RFC 3339 format.
    */
  }, { key: "internalJsonRead", value: function(e, a, n) {
    if (typeof e != "string")
      throw new Error("Unable to parse Timestamp from JSON " + Pf(e) + ".");
    var i = e.match(/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:Z|\.([0-9]{3,9})Z|([+-][0-9][0-9]:[0-9][0-9]))$/);
    if (!i)
      throw new Error("Unable to parse Timestamp from JSON. Invalid format.");
    var s = Date.parse(i[1] + "-" + i[2] + "-" + i[3] + "T" + i[4] + ":" + i[5] + ":" + i[6] + (i[8] ? i[8] : "Z"));
    if (Number.isNaN(s))
      throw new Error("Unable to parse Timestamp from JSON. Invalid value.");
    if (s < Date.parse("0001-01-01T00:00:00Z") || s > Date.parse("9999-12-31T23:59:59Z"))
      throw new globalThis.Error("Unable to parse Timestamp from JSON. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.");
    return n || (n = this.create()), n.seconds = ds.from(s / 1e3).toBigInt(), n.nanos = 0, i[7] && (n.nanos = parseInt("1" + i[7] + "0".repeat(9 - i[7].length)) - 1e9), n;
  } }]), r;
}(W);
new _P();
var Le = { isV2AuthToken: !1, meetingId: null, overrides: {}, roomNodeOptions: void 0 }, vs = { baseURL: "http://localhost:5000", createdAt: "2021-08-05T10:49:56.602Z", description: "Develop plugins locally", id: "09259e3b-7be8-46f6-9801-106bf1866e1c", name: "Localhost Dev", organizationId: "4ad15a19-80e2-4105-bf43-48039fd2963e", picture: "https://dyte-uploads.s3.ap-south-1.amazonaws.com/dyte.png", private: !1, published: !0, staggered: !1, tags: ["#localhost", "#dev"], type: "self_hosted", updatedAt: "2021-08-05T10:50:07.681Z" };
function RP(o, c) {
  if (c) {
    Le.isV2AuthToken = !1;
    return;
  }
  try {
    var r = JSON.parse(atob(o.split(".")[1])), t = r.meetingId;
    if (!t)
      throw Error("Received V1 auth token ".concat(o));
    Le.isV2AuthToken = !0, Le.meetingId = t;
  } catch (e) {
    throw P.error("constants::setIsV2AuthToken", { error: e, debuggingHint: "Unable to decode auth token: ".concat(o) }, !0), new q("Invalid auth token");
  }
}
function PP(o) {
  Le.overrides = o;
}
function Dc(o) {
  return Le.overrides && Le.overrides[o] ? Le.overrides[o] : !1;
}
function Sv(o) {
  Le.roomNodeOptions = o;
}
function Ev(o, c) {
  return !!(Le.isV2AuthToken && (ue.hasFeature(de.CONNECTED_MEETINGS) || o === Rr.Livestream || o === Rr.Chat) || c.includes("HIVE"));
}
function El(o, c) {
  if (Ev(o, c))
    return !0;
  var r = ue.getValue(de.CHAT_SOCKET_SERVER) || Dc(de.CHAT_SOCKET_SERVER) || "socket-service";
  return r === "socket-service";
}
function _v(o, c) {
  if (Ev(o, c))
    return !0;
  var r = ue.getValue(de.POLL_SOCKET_SERVER) || "socket-service";
  return r === "socket-service";
}
function _l(o, c) {
  if (c.includes("HIVE"))
    return !0;
  var r = ue.getValue(de.PLUGIN_SOCKET_SERVER) || "socket-service";
  return r === "socket-service";
}
function Rv(o, c) {
  return El(o, c) || _v(o, c) || _l(o, c);
}
var CP = 3, IP = 30, DP = 8e3, AP = /* @__PURE__ */ function() {
  function o(c) {
    var r = this;
    I(this, o), R(this, "ipInfo", void 0), R(this, "axios", void 0), R(this, "requests", void 0), R(this, "roomName", void 0), R(this, "roomUUID", void 0), R(this, "peerId", void 0), R(this, "authToken", void 0), R(this, "organizationId", void 0);
    var t = c || {}, e = t.timeout, a = e === void 0 ? DP : e, n = t.retry, i = n === void 0 ? CP : n, s = t.retryDelay, u = s === void 0 ? IP : s, l = t.baseURL, p = l === void 0 ? "https://api.cluster.dyte.in" : l, h = t.authToken;
    this.requests = Ho.create({ baseURL: p, responseType: "json", timeout: a, retry: i, retryDelay: u }), this.axios = Ho, this.setAuthToken(h, { bearer: !0 }), this.requests.interceptors.request.use(function(v) {
      return A.injectContext(r.requests.defaults.headers.common), v;
    }, /* @__PURE__ */ function() {
      var v = y(/* @__PURE__ */ d().mark(function m(g) {
        return d().wrap(function(k) {
          for (; ; )
            switch (k.prev = k.next) {
              case 0:
                P.error("xhr::axios", { debuggingHint: "otelRequestInterceptor failed.", error: g });
              case 1:
              case "end":
                return k.stop();
            }
        }, m);
      }));
      return function(m) {
        return v.apply(this, arguments);
      };
    }()), this.requests.interceptors.response.use(function(v) {
      try {
        v.config.url !== A.logsEndpoint && P.debug("xhr::axios", {
          // Note(ravindra-dyte): Do not Log entire data, log what is needed
          networkCall: { status: v.status, statusText: v.statusText, baseURL: v.config.baseURL, url: v.config.url, method: v.config.method }
        });
      } catch (m) {
        console.error("xhr::dyte", { error: "responseInterceptorFailed", err: m, response: v });
      }
      return v;
    }, /* @__PURE__ */ function() {
      var v = y(/* @__PURE__ */ d().mark(function m(g) {
        var w, k, T;
        return d().wrap(function(E) {
          for (; ; )
            switch (E.prev = E.next) {
              case 0:
                if (E.prev = 0, g) {
                  E.next = 3;
                  break;
                }
                return E.abrupt("return", Promise.reject(new Error("Unknown error occurred")));
              case 3:
                if (g && g.config && ((w = g.config) === null || w === void 0 ? void 0 : w.url) !== A.logsEndpoint && P.error("xhr::axios", { error: g, networkCall: { status: g.status, statusText: g.statusText, baseURL: g.config.baseURL, url: g.config.url, retries: g.config.retry, method: g.config.method, isOnline: navigator.onLine ? "online" : "offline" } }), k = g.config, T = g.message, !(k && T && k.retry !== void 0 && k.retry > 0 && (T.includes("timeout") || T.includes("Network Error")))) {
                  E.next = 8;
                  break;
                }
                return k.retry -= 1, E.abrupt("return", r.requests(k));
              case 8:
                return E.abrupt("return", Promise.reject(g));
              case 11:
                return E.prev = 11, E.t0 = E.catch(0), console.error("xhr::dyte", { error: "responseInterceptorFailed", err: E.t0, responseError: g }), E.abrupt("return", Promise.reject(E.t0));
              case 15:
              case "end":
                return E.stop();
            }
        }, m, null, [[0, 11]]);
      }));
      return function(m) {
        return v.apply(this, arguments);
      };
    }());
  }
  return D(o, [{ key: "setAuthToken", value: function(r, t) {
    var e = t || {}, a = e.bearer;
    this.authToken = r, this.requests.defaults.headers.common.Authorization = a ? "Bearer ".concat(r) : r;
  } }, { key: "setHeader", value: function(r, t) {
    this.requests.defaults.headers.common[r] = t;
  } }, { key: "setRoomName", value: function(r) {
    this.roomName = r;
  } }, { key: "setRoomUUID", value: function(r) {
    this.roomUUID = r;
  } }, { key: "setPeerId", value: function(r) {
    this.peerId = r;
  } }, { key: "setOrganizationId", value: function(r) {
    this.organizationId = r;
  } }]), o;
}();
function Pv() {
  return { location: Ci({ servicePrefix: "location", apiBase: fe.apiBase, baseURI: fe.baseURI }), locationLegacy: Ci({ servicePrefix: "location-legacy", apiBase: fe.apiBase, baseURI: fe.baseURI }), daCollector: Ci({ servicePrefix: "da-collector", apiBase: fe.apiBase, baseURI: fe.baseURI }) };
}
var MP = Object.defineProperty, OP = Object.getOwnPropertyDescriptor, Cv = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? OP(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && MP(r, t, a), a;
}, lu = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.setHeader("x-dyte-web-core-version", Ys), e;
  }
  return D(r, [{ key: "getIPDetails", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return i = n.peerId, p.prev = 1, p.next = 4, sl.getIPDetails({ peerId: i, apiHostnames: Pv() });
            case 4:
              if (u = p.sent, P.log("ipInfo", { ipInfo: u }), !(((s = u.loc) === null || s === void 0 ? void 0 : s.length) > 5)) {
                p.next = 8;
                break;
              }
              return p.abrupt("return", u);
            case 8:
              throw Error("Insufficient data");
            case 11:
              return p.prev = 11, p.t0 = p.catch(1), P.warn("ApiClient.getRoomNodeLinkAndTitleV1 Failed to get ip details", { error: { name: p.t0.name, message: p.t0.message } }), p.abrupt("return", void 0);
            case 15:
            case "end":
              return p.stop();
          }
      }, a, null, [[1, 11]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getICEServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.next = 2, this.requests.get("/iceservers");
            case 2:
              if (n = l.sent.data, i = n.success, s = n.iceServers, !i) {
                l.next = 7;
                break;
              }
              return l.abrupt("return", s);
            case 7:
              return l.abrupt("return", void 0);
            case 8:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPlugins", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u = this, l, p, h, v;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              return g.next = 2, this.requests.get("/v2/plugins/user");
            case 2:
              return l = g.sent.data.data.plugins, p = ((i = ue.getValue(de.V1_PLUGINS)) === null || i === void 0 || (i = i.toString()) === null || i === void 0 ? void 0 : i.split(",")) || [], h = l.reduce(function(w, k) {
                return w[p.includes(k.id) ? "v1" : "v2"].push(k), w;
              }, { v1: [], v2: [] }), n ? l = h.v2 : l = h.v1, (s = fe.modules) !== null && s !== void 0 && (s = s.devTools) !== null && s !== void 0 && (s = s.plugins) !== null && s !== void 0 && s.length && ((v = fe.modules) === null || v === void 0 || (v = v.devTools) === null || v === void 0 || v.plugins.forEach(function(w) {
                var k, T, _, E = Q(Q({}, vs), {}, { tags: sr(vs.tags) });
                E.baseURL = "http://localhost:".concat(w.port), E.name = w.name, E.picture = (k = w.picture) !== null && k !== void 0 ? k : vs.picture, E.description = (T = w.description) !== null && T !== void 0 ? T : vs.description, E.staggered = (_ = w.staggered) !== null && _ !== void 0 ? _ : vs.staggered, E.createdAt = new Date().toISOString(), E.updatedAt = new Date().toISOString(), E.id = w.id, E.organizationId = u.organizationId, l.push(E);
              })), g.abrupt("return", l);
            case 8:
            case "end":
              return g.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPluginDetails", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.requests.get("/v2/plugins/view/".concat(n));
            case 2:
              return i = u.sent.data.data.plugin, u.abrupt("return", i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPluginConfig", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.axios.get("".concat(n, "/dyte-config.json"));
            case 2:
              return i = u.sent.data, u.abrupt("return", i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "authorizePlugin", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return i = { peerId: this.peerId }, Le.isV2AuthToken || (i.roomName = this.roomName), l.next = 4, this.requests.post("/v2/plugins/authorize/".concat(n), i);
            case 4:
              return s = l.sent.data.data.token, l.abrupt("return", s);
            case 6:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPresignedUrls", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return s = { roomUUID: this.roomUUID, filename: n }, ue.hasFeature(de.FEAT_CHAT_SDK) && (s.viewType = i), v.next = 4, this.requests.post("/v1/meetings/genPreSignedUploadUrl", s);
            case 4:
              return u = v.sent.data.data, l = u.getLocation, p = u.putLocation, v.abrupt("return", { getLocation: l, putLocation: p });
            case 8:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "uploadFile", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(navigator.isReactNative && "uri" in n)) {
                u.next = 11;
                break;
              }
              return u.prev = 1, u.next = 4, fetch(i, { method: "PUT", headers: { "Content-Type": "application/octet-stream" }, body: { uri: n.uri, name: n.name } });
            case 4:
              u.next = 9;
              break;
            case 6:
              u.prev = 6, u.t0 = u.catch(1), P.error("sendFileMessage::".concat(u.t0));
            case 9:
              u.next = 13;
              break;
            case 11:
              return u.next = 13, this.axios.put(i, n, { headers: { "Content-Type": n.type } });
            case 13:
            case "end":
              return u.stop();
          }
      }, a, this, [[1, 6]]);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(AP);
Cv([A.trace("APIClient.getIPDetails")], lu.prototype, "getIPDetails", 1);
Cv([A.trace("APIClient.getICEServers")], lu.prototype, "getICEServers", 1);
var NP = Object.defineProperty, $P = Object.getOwnPropertyDescriptor, la = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? $P(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && NP(r, t, a), a;
}, Jt = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r, [{
    key: "startLivestreaming",
    value: (
      // eslint-disable-next-line class-methods-use-this
      function() {
        var t = y(/* @__PURE__ */ d().mark(function a() {
          var n, i;
          return d().wrap(function(u) {
            for (; ; )
              switch (u.prev = u.next) {
                case 0:
                  return u.next = 2, this.requests.post("/v2/meetings/".concat(Le.meetingId, "/livestreams"));
                case 2:
                  return i = u.sent, u.abrupt("return", (n = i.data) === null || n === void 0 || (n = n.data) === null || n === void 0 ? void 0 : n.playback_url);
                case 4:
                case "end":
                  return u.stop();
              }
          }, a, this);
        }));
        function e() {
          return t.apply(this, arguments);
        }
        return e;
      }()
    )
    // eslint-disable-next-line class-methods-use-this
  }, { key: "stopLivestreaming", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.requests.post("/v2/meetings/".concat(Le.meetingId, "/active-livestream/stop")));
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getActiveLivestream", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.t0 = Dt, l.next = 3, this.requests.get("/v2/meetings/".concat(Le.meetingId, "/active-livestream"));
            case 3:
              return l.t1 = l.sent.data.data, n = (0, l.t0)(l.t1), i = n.playbackUrl, s = n.status, l.abrupt("return", { status: s, playbackUrl: i });
            case 8:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getUserDetails", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.requests.get("v2/internals/participant-details");
            case 2:
              return n = s.sent.data.data, s.abrupt("return", Dt(n));
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getUserPreset", value: function() {
    throw new Error("getUserPreset does not exist for v2");
  } }, { key: "startRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.next = 2, this.requests.post("/v2/recordings", Q(Q({}, nv(n)), {}, { meeting_id: Le.meetingId, allow_multiple_recordings: !!i }));
            case 2:
              return s = l.sent, l.abrupt("return", s.data.data.id);
            case 4:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.requests.put("v2/recordings/".concat(n), { action: i }));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getActiveRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.next = 2, this.requests.get("v2/recordings/active-recording/".concat(Le.meetingId));
            case 2:
              return n = l.sent.data.data, i = n.status, s = n.id, l.abrupt("return", { status: i, id: s });
            case 6:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getActiveTranscript", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.requests.get("v2/meetings/".concat(Le.meetingId, "/active-transcript"));
            case 2:
              return n = s.sent.data.data.transcript, s.abrupt("return", { transcript: n });
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomNodeData", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return i = n.peerId, m.next = 3, this.getIPDetails({ peerId: i });
            case 3:
              return s = m.sent, this.ipInfo = s, m.t0 = Dt, m.next = 8, this.requests.post("v2/internals/rooms", { ip_information: s });
            case 8:
              return m.t1 = m.sent.data.data, u = (0, m.t0)(m.t1), l = u.roomNodeLink, p = u.title, h = u.useHiveMedia, m.abrupt("return", { roomNodeUrl: l, meetingTitle: p, useHiveMedia: h != null ? h : !1 });
            case 14:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(lu);
la([A.trace("APIClient.startLivestreaming")], Jt.prototype, "startLivestreaming", 1);
la([A.trace("APIClient.stopLivestreaming")], Jt.prototype, "stopLivestreaming", 1);
la([A.trace("APIClient.getActiveLivestream")], Jt.prototype, "getActiveLivestream", 1);
la([A.trace("APIClient.getUserDetails")], Jt.prototype, "getUserDetails", 1);
la([A.trace("APIClient.getUserPreset")], Jt.prototype, "getUserPreset", 1);
la([A.trace("APIClient.startRecording")], Jt.prototype, "startRecording", 1);
la([A.trace("APIClient.stopRecording")], Jt.prototype, "updateRecording", 1);
la([A.trace("APIClient.getActiveRecording")], Jt.prototype, "getActiveRecording", 1);
la([A.trace("APIClient.getActiveTranscript")], Jt.prototype, "getActiveTranscript", 1);
la([A.trace("APIClient.getRoomNodeData")], Jt.prototype, "getRoomNodeData", 1);
var LP = Object.defineProperty, UP = Object.getOwnPropertyDescriptor, qn = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? UP(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && LP(r, t, a), a;
}, tn = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r, [{ key: "startLivestreaming", value: function() {
    throw new Error("Method not implemented.");
  } }, { key: "stopLivestreaming", value: function() {
    throw new Error("Method not implemented.");
  } }, { key: "getActiveLivestream", value: function() {
    throw new Error("Method not implemented.");
  } }, { key: "getUserDetails", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.requests.get("/auth/basicUserDetails");
            case 2:
              return n = s.sent.data.user, s.abrupt("return", n);
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getUserPreset", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.requests.post("/v1/userpreset", {
                roomName: n,
                authToken: this.authToken,
                // TODO: remove the hardcoded version and clientType params
                clientType: "CLIENT_APP",
                version: "0.5.0"
              });
            case 2:
              return i = u.sent.data.data.preset, u.abrupt("return", Dt(i));
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "startRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.requests.post("/v1/organizations/".concat(this.organizationId, "/rooms/").concat(this.roomName, "/recording"), n);
            case 2:
              if (i = u.sent, i.status === 201) {
                u.next = 5;
                break;
              }
              throw new Error("Recording failed to start");
            case 5:
              return u.abrupt("return", i.data.data.recording.id);
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (i === "stop") {
                l.next = 2;
                break;
              }
              return l.abrupt("return");
            case 2:
              return l.next = 4, this.requests.put("/v1/organizations/".concat(this.organizationId, "/rooms/").concat(this.roomName, "/recordings/").concat(n), { recordingAction: "stop" });
            case 4:
              if (s = l.sent, s.status === 201) {
                l.next = 7;
                break;
              }
              throw new Error("Recording failed to stop");
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getActiveRecording", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.organizationId) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", {});
            case 2:
              return s.next = 4, this.requests.get("/v1/organizations/".concat(this.organizationId, "/rooms/").concat(this.roomName, "/active-recording?limit=50"));
            case 4:
              return n = s.sent, s.abrupt("return", n.data.data.recording);
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getActiveTranscript", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return P.error("getActiveTranscript does not work in v1 meeting"), i.abrupt("return", { transcript: "" });
            case 2:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomNodeData", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              return i = n.roomName, s = n.peerId, u = `
				query Session($roomName: String!, $password: String, $ipInformation: String) {
						session(roomName: $roomName, password: $password) {
							title,
							roomNodeLink(ipInformation: $ipInformation),
							useHiveMedia,
							roomName,
							password
						}
					}
				`, w.next = 4, this.getIPDetails({ peerId: s });
            case 4:
              return l = w.sent, this.ipInfo = l, w.next = 8, this.requests.post("/graphql", { query: u, variables: { roomName: i, ipInformation: JSON.stringify(l) } });
            case 8:
              return p = w.sent.data.data.session, h = p.roomNodeLink, v = p.title, m = p.useHiveMedia, w.abrupt("return", { roomNodeUrl: h, meetingTitle: v, useHiveMedia: m != null ? m : !1 });
            case 13:
            case "end":
              return w.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(lu);
qn([A.trace("APIClientV1.getUserDetails")], tn.prototype, "getUserDetails", 1);
qn([A.trace("APIClientV1.getUserPreset")], tn.prototype, "getUserPreset", 1);
qn([A.trace("APIClientV1.startRecording")], tn.prototype, "startRecording", 1);
qn([A.trace("APIClientV1.updateRecording")], tn.prototype, "updateRecording", 1);
qn([A.trace("APIClientV1.getActiveRecording")], tn.prototype, "getActiveRecording", 1);
qn([A.trace("APIClient.getActiveTranscript")], tn.prototype, "getActiveTranscript", 1);
qn([A.trace("APIClientV1.getRoomNodeData")], tn.prototype, "getRoomNodeData", 1);
var Ac;
function FP(o) {
  return Ac = Le.isV2AuthToken ? new Jt(o) : new tn(o), Ac;
}
function Hr() {
  return Ac;
}
var VP = 0, HP = 1, jP = 2, GP = 3, BP = 4, qP = {
  getPeerInfo: 0,
  updatePeerInfo: 1,
  getRoomPeersInfo: 2,
  joinRoom: 3,
  leaveRoom: 4,
  getRoomInfo: 5,
  updateRoomInfo: 6,
  closeRoom: 7,
  startedLivestream: 8,
  stoppedLivestream: 9,
  erroredLivestream: 10,
  getStagePeers: 11,
  getStageRequests: 12,
  requestStageAccess: 13,
  cancelStageRequest: 14,
  grantStageAccess: 15,
  denyStageAccess: 16,
  roomPeerCount: 17,
  joinStage: 18,
  leaveStage: 19,
  // getConnectedRoomsDump returns entire dump for a breakout rooms meeting
  // This details which peer is in which meeting currently, and which is the parent meeting
  getConnectedRoomsDump: 20,
  // createConnectedRooms to create breakout rooms
  createConnectedRooms: 21,
  // deleteConnectedRooms to delete breakout rooms
  deleteConnectedRooms: 22,
  // move peers between breakout rooms
  movePeers: 23,
  // transfer peer to new room
  transferPeer: 24,
  // message sent by socket service to inform client of a participant joining a breakout room
  movedPeer: 25,
  // message sent by socket service to inform client of updates in connected rooms
  connectedRoomsUpdated: 26,
  // message sent by socket service to inform client of deletion in connected rooms
  connectedRoomsDeleted: 27,
  // get all participants that have been added to the meeting irrespective of their live status
  getAllAddedParticipants: 28,
  // broadcast api
  broadcastMessage: 29,
  kick: 30,
  kickAll: 31,
  transcript: 32,
  // waitlist events
  getWaitingRoomRequests: 33,
  acceptWaitingRoomRequests: 34,
  waitingRoomRequestAccepted: 35,
  denyWaitingRoomRequests: 36,
  waitingRoomRequestDenied: 37,
  peerStageStatusUpdate: 38,
  broadcastToPeers: 39,
  recordingStarted: 40,
  recordingStopped: 41,
  recordingPaused: 42,
  getRoomStageState: 43
}, WP = { getMessages: 0, sendMessageToRoom: 1, sendMessageToPeers: 2, editMessage: 3, deleteMessage: 4, getPaginatedMessages: 5, sendMessageToChannel: 6, searchChannelMessages: 7, getAllChatChannels: 8, markChannelIndexAsRead: 9 }, JP = { getPlugins: 0, addPlugin: 1, enablePluginForRoom: 2, disablePluginForPeers: 3, enablePluginForPeers: 4, disablePluginForRoom: 5, removePlugin: 6, customPluginEventToRoom: 7, customPluginEventToPeers: 8, storeInsertKeys: 9, storeGetKeys: 10, storeDeleteKeys: 11, storeDelete: 12 }, KP = { createPoll: 0, getPolls: 1, votePoll: 2, updatePoll: 3 }, zP = {
  unknown: 0,
  createWebRTCTransport: 1,
  produce: 2,
  consume: 3,
  toggleProducer: 4,
  toggleConsumer: 5,
  closeProducer: 6,
  closeConsumer: 7,
  // adding some buffers for new media events.
  joinRoom: 16,
  leaveRoom: 17,
  selectedPeer: 18,
  globalPinPeer: 19,
  selfJoinComplete: 20,
  // some additional buffer for broadcast events.
  peerJoinedBroadcast: 25,
  peerLeaveBroadcast: 26,
  peerProducerCreateBroadcast: 27,
  peerProducerToggleBroadcast: 28,
  peerProducerCloseBroadcast: 29,
  globalPeerPinBroadcast: 30,
  recordingStartedBroadcast: 31,
  recordingStoppedBroadcast: 32,
  peerDisplayNameEditBroadcast: 33,
  selectedPeerDiff: 40,
  renegotiateSessionDescription: 50,
  errorResponse: 60,
  kickPeer: 90,
  kickAll: 91,
  changeDisplayName: 92,
  hostControlPeer: 93,
  hostControlAllPeers: 94
}, QP = { createChatChannel: 0, getChatChannel: 1, deprecatedGetAllChatChannels: 2, getChannelMembers: 3, updateChatChannel: 4 };
function Zs(o, c) {
  return Object.keys(c).reduce(function(r, t) {
    return r[t] = (o << 16) + c[t], r;
  }, {});
}
function YP(o) {
  return Object.keys(o).reduce(function(c, r) {
    return c[r] = 16777216 | o[r], c;
  }, {});
}
var le = Zs(VP, qP), Ar = Zs(HP, WP), Ee = Zs(jP, JP), Sa = Zs(GP, KP), _n = Zs(BP, QP), Xe = YP(zP), Ep = /* @__PURE__ */ new K(), Iv = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "meetingTitle", void 0), R(this, "roomName", void 0), R(this, "roomUUID", void 0), R(this, "isDisconnected", void 0), R(this, "roomJoined", void 0), z(this, Ep, { writable: !0, value: void 0 }), R(this, "peerId", void 0), R(this, "authToken", void 0), R(this, "maxPreferredStreams", void 0), R(this, "mediaConnected", void 0);
  }
  return D(o, [{ key: "sfuHandler", get: function() {
    return f(this, Ep);
  } }, { key: "reconnect", value: function() {
    throw new q("Method not implemented.");
  } }, { key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i) {
      var s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              throw s = u.length > 4 && u[4] !== void 0 ? u[4] : {}, new q("Method not implemented.");
            case 2:
            case "end":
              return p.stop();
          }
      }, t);
    }));
    function r(t, e, a, n) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "handleSocketCallbacks", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "handleSockets", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return i.stop();
          }
      }, t);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "shareMic", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "shareWebcam", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "shareScreen", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "unmuteSelf", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "muteSelf", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "pauseWebcam", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableScreenShare", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "acceptWaitingRequest", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "rejectWaitingRequest", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "muteAll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "muteAllVideo", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableAudio", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableVideo", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickAll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kick", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "pinPeer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getChatMessages", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "requestRemoteControl", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "acceptRemoteControl", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "terminateRemoteControl", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return i.stop();
          }
      }, t);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendEventRemoteControl", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t, e, a) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPolls", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "newPoll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "votePoll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getConsumers", value: function() {
    throw new q("Method not implemented.");
  } }, { key: "sendMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getRoomState", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "addRoomPlugin", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeRoomPlugin", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "unpinChatMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "pinChatMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendChatMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "broadcastMessage",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                throw new q("Method not implemented.");
              case 1:
              case "end":
                return i.stop();
            }
        }, t);
      }));
      function r(t, e) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    /** @deprecated in favour of `grantStageAccess` */
  }, { key: "acceptAllRequestToJoinStage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "grantStageAccess", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopPresenting", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "startPresenting", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
            case "end":
              return a.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "requestToJoinStage",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        return d().wrap(function(n) {
          for (; ; )
            switch (n.prev = n.next) {
              case 0:
                throw new q("Method not implemented.");
              case 1:
              case "end":
                return n.stop();
            }
        }, t);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    /** @deprecated in favour of `denyStageAccess` */
  }, { key: "rejectRequestToJoinStage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "denyStageAccess", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "withdrawRequestToJoinStage",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t() {
        return d().wrap(function(a) {
          for (; ; )
            switch (a.prev = a.next) {
              case 0:
                throw new q("Method not implemented.");
              case 1:
              case "end":
                return a.stop();
            }
        }, t);
      }));
      function r() {
        return c.apply(this, arguments);
      }
      return r;
    }()
    /** @deprecated in favour of `kickPeerFromStage` */
  }, { key: "removePeerFromStage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return i.stop();
          }
      }, t);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickPeerFromStage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              throw new q("Method not implemented.");
            case 1:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopAllProducers", value: function() {
    throw new q("Method not implemented.");
  } }]), o;
}(), XP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r);
}(at.EventEmitter), xt = /* @__PURE__ */ new K(), da = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, xt, { writable: !0, value: void 0 }), V(this, xt, c);
  }
  return D(o, [{ key: "info", value: function(r) {
    for (var t = arguments.length, e = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
      e[a - 1] = arguments[a];
    var n = o.format.apply(o, [r].concat(e));
    f(this, xt) && (n = "".concat(f(this, xt), "::").concat(n)), P.info(n);
  } }, { key: "debug", value: function(r) {
    for (var t = arguments.length, e = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
      e[a - 1] = arguments[a];
    var n = o.format.apply(o, [r].concat(e));
    f(this, xt) && (n = "".concat(f(this, xt), "::").concat(n)), P.info(n);
  } }, { key: "warn", value: function(r) {
    for (var t = arguments.length, e = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
      e[a - 1] = arguments[a];
    var n = o.format.apply(o, [r].concat(e));
    f(this, xt) && (n = "".concat(f(this, xt), "::").concat(n)), P.info(n);
  } }, { key: "error", value: function(r) {
    for (var t = arguments.length, e = new Array(t > 1 ? t - 1 : 0), a = 1; a < t; a++)
      e[a - 1] = arguments[a];
    var n = o.format.apply(o, [r].concat(e));
    f(this, xt) && (n = "".concat(f(this, xt), "::").concat(n)), P.error(n);
  } }], [{
    key: "getLogger",
    value: (
      /**
      * GetLogger is for creating an instance of Logger with name
      * appended in the log
      * @param name takes string value to append before the log
      * @returns Logger
      */
      function(r) {
        return new o(r);
      }
    )
    /**
    * Format takes a format string where we can have format specifiers
    * and list of arguments to replace the format specifiers with.
    * format specifiers can be %s for string, %d for number, %o for object.
    * @param s is the format string with or without format specifiers
    * @param args heterogeneous list of values to be replaced or appended
    * on the format string
    * @returns formatted string
    */
  }, { key: "format", value: function(r) {
    var t = r.split("%"), e = r;
    if (t.length) {
      var a = ar(t, 1);
      e = a[0];
    }
    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    i.reverse();
    for (var u = 1; u < t.length && i.length; u += 1) {
      var l = i.pop(), p = t[u];
      switch (p.at(0)) {
        case "s":
          p = p.replace("s", l);
          break;
        case "d":
          p = p.replace("d", l.toString());
          break;
        case "o":
          p = p.replace("o", JSON.stringify(l));
          break;
      }
      e = "".concat(e).concat(p);
    }
    return i.length && i.reverse().forEach(function(h) {
      e = "".concat(e, " ").concat(JSON.stringify(h));
    }), e;
  } }]), o;
}(), _p = da.getLogger("EnhancedEventEmitter"), Un = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), t.setMaxListeners(1 / 0), t;
  }
  return D(r, [{ key: "safeEmit", value: function(e) {
    var a = this.listenerCount(e);
    try {
      for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
        i[s - 1] = arguments[s];
      return this.emit.apply(this, [e].concat(i));
    } catch (u) {
      return _p.error("safeEmit() | event listener threw an error [event:%s]:%o", e, u), Boolean(a);
    }
  } }, { key: "safeEmitAsPromise", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              for (i = {}.EVENT_PROMISE_TIMEOUT ? parseInt({}.EVENT_PROMISE_TIMEOUT, 10) : 1e4, s = p.length, u = new Array(s > 1 ? s - 1 : 0), l = 1; l < s; l++)
                u[l - 1] = p[l];
              return v.abrupt("return", this.safeEmitAsPromiseWithTimeout.apply(this, [n, i].concat(u)));
            case 3:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "safeEmitAsPromiseWithTimeout", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s = this, u, l, p, h = arguments;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              for (u = h.length, l = new Array(u > 2 ? u - 2 : 0), p = 2; p < u; p++)
                l[p - 2] = h[p];
              return m.abrupt("return", new Promise(function(g, w) {
                setTimeout(w, i, "event request timeout");
                try {
                  s.emit.apply(s, [n].concat(l, [g, w]));
                } catch (k) {
                  _p.error("safeEmitAsPromise() | event listener threw an error [event:%s]:%o", n, k), w(k);
                }
              }));
            case 2:
            case "end":
              return m.stop();
          }
      }, a);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(at.EventEmitter), Rl = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), R(b(t), "_mapMidTransceiver", /* @__PURE__ */ new Map()), t._mapMidTransceiver = /* @__PURE__ */ new Map(), t;
  }
  return D(r, [{ key: "midTransceiverMap", get: function() {
    return this._mapMidTransceiver;
  } }]), r;
}(Un), Je = da.getLogger("Chrome74"), ZP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), R(b(t), "_direction", void 0), R(b(t), "_pc", void 0), R(b(t), "_sendWebStream", new MediaStream()), R(b(t), "_sendScreenShareStream", new MediaStream()), R(b(t), "_transportReady", !1), t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Chrome74";
  } }, { key: "pc", get: function() {
    return this._pc;
  } }, { key: "close", value: function() {
    if (Je.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
        Je.error("pc.close()", e);
      }
  } }, { key: "init", value: function(e) {
    var a = e.direction, n = e.iceServers, i = e.iceTransportPolicy, s = e.additionalSettings, u = e.proprietaryConstraints, l = e.onTrackHandler;
    this._direction = a, this._pc = new RTCPeerConnection(Q({ iceServers: n || [], iceTransportPolicy: i || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require", sdpSemantics: "unified-plan" }, s), u), l && this._pc.addEventListener("track", function(p) {
      l(p);
    }), this._addEventListeners();
  } }, { key: "connect", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return i = this._pc.createDataChannel("dyte"), p.next = 3, this._pc.createOffer();
            case 3:
              return s = p.sent, Je.info("connect offer", s), p.next = 7, this._pc.setLocalDescription(s);
            case 7:
              return u = /* @__PURE__ */ function() {
                var h = y(/* @__PURE__ */ d().mark(function v(m) {
                  return d().wrap(function(w) {
                    for (; ; )
                      switch (w.prev = w.next) {
                        case 0:
                          return Je.debug("connect() | calling pc.setRemoteDescription() [answer:%o]", m), w.next = 3, n._pc.setRemoteDescription(m);
                        case 3:
                          i.close();
                        case 4:
                        case "end":
                          return w.stop();
                      }
                  }, v);
                }));
                return function(m) {
                  return h.apply(this, arguments);
                };
              }(), p.abrupt("return", { offerSdp: s, callback: u });
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              Je.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return Je.debug("restartIce()"), l.next = 3, this.pc.createOffer({ iceRestart: !0 });
            case 3:
              return i = l.sent, Je.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), s = /* @__PURE__ */ function() {
                var p = y(/* @__PURE__ */ d().mark(function h(v) {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return Je.info("restartIce() | calling pc.setRemoteDescription() [answer:%o]", v), g.next = 3, n._pc.setRemoteDescription(v);
                        case 3:
                        case "end":
                          return g.stop();
                      }
                  }, h);
                }));
                return function(v) {
                  return p.apply(this, arguments);
                };
              }(), l.abrupt("return", { offerSdp: i, callback: s });
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E;
      return d().wrap(function(C) {
        for (; ; )
          switch (C.prev = C.next) {
            case 0:
              return s = n.track, u = n.encodings, l = n.codecOption, p = n.screenShare, this._assertSendDirection(), Je.debug("send() [kind:%s, track.id:%s]", s.kind, s.id), h = this._pc.addTransceiver(s, { direction: "sendonly", streams: [p ? this._sendScreenShareStream : this._sendWebStream], sendEncodings: u }), navigator.isReactNative || (Je.debug("creating new transceiver"), v = RTCRtpSender.getCapabilities(s.kind), Je.info("senders available params:", v), m = [], l && (g = v.codecs.find(function(L) {
                return L.mimeType.includes(l.name);
              }), l.parameters && (Je.info("codecOption.parameters:", l.parameters), k = ((w = g.sdpFmtpLine) === null || w === void 0 ? void 0 : w.split(";")) || [], k.push.apply(k, sr(l.parameters)), T = Array.from(new Set(k).values()), g.sdpFmtpLine = T.join(";")), m.push(g)), Je.info("selected codecs:", m), h.setCodecPreferences(m)), C.next = 7, this._pc.createOffer();
            case 7:
              if (_ = C.sent, this._transportReady) {
                C.next = 10;
                break;
              }
              throw new Error("webrtc transport not connected");
            case 10:
              return C.next = 12, this._pc.setLocalDescription(_);
            case 12:
              return l && l.name === "opus" && (_.sdp = _.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;usedtx=1"), _.sdp += `a=rtcp-fb:111 nack\r
`), E = /* @__PURE__ */ function() {
                var L = y(/* @__PURE__ */ d().mark(function G(j) {
                  return d().wrap(function(Y) {
                    for (; ; )
                      switch (Y.prev = Y.next) {
                        case 0:
                          return Je.debug("send() | calling pc.setRemoteDescription() [answer:%o]", j), Y.next = 3, i._pc.setRemoteDescription(j);
                        case 3:
                          return i.midTransceiverMap.set(h.mid, h), Y.abrupt("return", h.mid);
                        case 5:
                        case "end":
                          return Y.stop();
                      }
                  }, G);
                }));
                return function(j) {
                  return L.apply(this, arguments);
                };
              }(), C.abrupt("return", { offerSdp: _, callback: E });
            case 15:
            case "end":
              return C.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), Je.debug("stopSending() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.sender.replaceTrack(null), this._pc.removeTrack(s.sender), s.direction = "inactive", h.next = 10, this._pc.createOffer();
            case 10:
              return u = h.sent, Je.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 14, this._pc.setLocalDescription(u);
            case 14:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Je.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(n);
                        case 4:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 16:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this._assertSendDirection(), i ? Je.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : Je.debug("replaceTrack() [localId:%s, no track]", n), s = this.midTransceiverMap.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this._assertSendDirection(), Je.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this.midTransceiverMap.get(n), s) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                v <= i ? h.active = !0 : h.active = !1;
              }), p.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this._assertSendDirection(), Je.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this.midTransceiverMap.get(n), s) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                u.encodings[v] = Q(Q({}, h), i);
              }), p.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function(e) {
    this._assertSendDirection();
    var a = this.midTransceiverMap.get(e);
    if (!a)
      throw new Error("associated RTCRtpTransceiver not found");
    return a.sender.getStats();
  } }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw this._assertRecvDirection(), Je.debug("stopReceiving() [localId:%s]", n), Error("method not implemented");
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw this._assertRecvDirection(), Je.debug("pauseReceiving() [localId:%s]", n), Error("method not implemented");
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw this._assertRecvDirection(), Je.debug("resumeReceiving() [localId:%s]", n), Error("method not implemented");
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._assertRecvDirection(), i = this.midTransceiverMap.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "_assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }, { key: "_generateOffer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this._pc.createOffer();
            case 2:
              return n = s.sent, s.next = 5, this._pc.setLocalDescription(n);
            case 5:
              return s.abrupt("return", n);
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_setAnswer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return Je.debug("_setAnswer() | calling pc.setRemoteDescription() [answer:%o]", n), s.next = 3, this._pc.setRemoteDescription(n);
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_addEventListeners", value: function() {
    var e = this;
    this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (e._pc.iceConnectionState) {
        case "checking":
          e.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          e.emit("@connectionstatechange", "connected"), e._transportReady = !0;
          break;
        case "failed":
          e.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          e.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          e.emit("@connectionstatechange", "closed");
          break;
        default:
          Je.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidate", function(a) {
      a.candidate && e.emit("@icecandidate", { candidate: a.candidate });
    }), this._pc.addEventListener("negotiationneeded", function() {
      e.emit("@negotiationneeded", {}), Je.debug("negotiationneeded");
    }), this._pc.addEventListener("icegatheringstatechange", function() {
      switch (e._pc.iceGatheringState) {
        case "gathering":
          Je.debug("icegatheringstatechange | gathering"), e.emit("@icegatheringstatechange", "gathering");
          break;
        case "complete":
          Je.debug("icegatheringstatechange | complete"), e.emit("@icegatheringstatechange", "complete");
          break;
        default:
          Je.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidateerror", function(a) {
      Je.info("icecandidateerror", a);
    }), this._pc.addEventListener("datachannel", function(a) {
      Je.info("data channel created: ", a.channel.label);
      var n = a.channel;
      n.onopen = function() {
        Je.info("data channel open: ", a.channel.label), e.safeEmit("dc_open", a.channel.label);
      }, n.onclose = function() {
        Je.warn("data channel closed: ", a.channel.label);
      }, n.onerror = function(i) {
        Je.error("data channel error: ", a.channel.label, i);
      }, n.onmessage = function(i) {
        Je.info("data channel message: ", a.channel.label, i), e.safeEmit("datachannel", a.channel, String.fromCharCode.apply(String, sr(new Uint8Array(i.data))));
      };
    });
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Rl), Fe = da.getLogger("Firefox60"), Rp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), R(b(e), "_direction", void 0), R(b(e), "_pc", void 0), R(b(e), "_sendWebStream", new MediaStream()), R(b(e), "_sendScreenShareStream", new MediaStream()), R(b(e), "_transportReady", !1), R(b(e), "supportsSendEncodings", !1), e.supportsSendEncodings = t.supportsSendEncodings, e;
  }
  return D(r, [{ key: "name", get: function() {
    return "Firefox60";
  } }, { key: "pc", get: function() {
    return this._pc;
  } }, { key: "close", value: function() {
    if (Fe.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
        Fe.error("pc.close()", e);
      }
  } }, { key: "init", value: function(e) {
    var a = e.direction, n = e.iceServers, i = e.iceTransportPolicy, s = e.additionalSettings, u = e.proprietaryConstraints, l = e.onTrackHandler;
    Fe.debug("init()"), this._direction = a, this._pc = new RTCPeerConnection(Q({ iceServers: n || [], iceTransportPolicy: i || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }, s), u), l && this._pc.addEventListener("track", function(p) {
      l(p);
    }), this._addEventListeners();
  } }, {
    key: "connect",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this, i, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return i = this._pc.createDataChannel("dyte"), p.next = 3, this._pc.createOffer();
              case 3:
                return s = p.sent, Fe.info("connect offer", s), p.next = 7, this._pc.setLocalDescription(s);
              case 7:
                return u = /* @__PURE__ */ function() {
                  var h = y(/* @__PURE__ */ d().mark(function v(m) {
                    return d().wrap(function(w) {
                      for (; ; )
                        switch (w.prev = w.next) {
                          case 0:
                            return Fe.debug("connect() | calling pc.setRemoteDescription() [answer:%o]", m), w.next = 3, n._pc.setRemoteDescription(m);
                          case 3:
                            i.close();
                          case 4:
                          case "end":
                            return w.stop();
                        }
                    }, v);
                  }));
                  return function(m) {
                    return h.apply(this, arguments);
                  };
                }(), p.abrupt("return", { offerSdp: s, callback: u });
              case 9:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars
  }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              throw Fe.debug("updateIceServers()"), new Error("not supported");
            case 2:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return Fe.debug("restartIce()"), l.next = 3, this.pc.createOffer({ iceRestart: !0 });
            case 3:
              return i = l.sent, Fe.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), s = /* @__PURE__ */ function() {
                var p = y(/* @__PURE__ */ d().mark(function h(v) {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return Fe.info("restartIce() | calling pc.setRemoteDescription() [answer:%o]", v), g.next = 3, n._pc.setRemoteDescription(v);
                        case 3:
                        case "end":
                          return g.stop();
                      }
                  }, h);
                }));
                return function(v) {
                  return p.apply(this, arguments);
                };
              }(), l.abrupt("return", { offerSdp: i, callback: s });
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (s = n.track, u = n.encodings, l = n.screenShare, this._assertSendDirection(), Fe.debug("send() [kind:%s, track.id:%s]", s.kind, s.id), Fe.debug("creating new transceiver"), p = this.supportsSendEncodings ? { sendEncodings: u } : {}, h = this._pc.addTransceiver(s, Q({ direction: "sendonly", streams: [l ? this._sendScreenShareStream : this._sendWebStream] }, p)), !(!this.supportsSendEncodings && u)) {
                k.next = 12;
                break;
              }
              return u.reverse(), v = h.sender.getParameters(), v.encodings = u, k.next = 12, h.sender.setParameters(v);
            case 12:
              return k.next = 14, this._pc.createOffer();
            case 14:
              if (m = k.sent, this._transportReady) {
                k.next = 17;
                break;
              }
              throw new Error("webrtc transport not connected");
            case 17:
              return k.next = 19, this._pc.setLocalDescription(m);
            case 19:
              return m.sdp = m.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;usedtx=1".concat(this.supportsSendEncodings ? "" : ";maxaveragebitrate=16000")), g = /* @__PURE__ */ function() {
                var T = y(/* @__PURE__ */ d().mark(function _(E) {
                  return d().wrap(function(C) {
                    for (; ; )
                      switch (C.prev = C.next) {
                        case 0:
                          return Fe.debug("send() | calling pc.setRemoteDescription() [answer:%o]", E), C.next = 3, i._pc.setRemoteDescription(E);
                        case 3:
                          return i.midTransceiverMap.set(h.mid, h), C.abrupt("return", h.mid);
                        case 5:
                        case "end":
                          return C.stop();
                      }
                  }, _);
                }));
                return function(E) {
                  return T.apply(this, arguments);
                };
              }(), k.abrupt("return", { offerSdp: m, callback: g });
            case 22:
            case "end":
              return k.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), Fe.debug("stopSending() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated transceiver not found");
            case 5:
              return s.sender.replaceTrack(null), this._pc.removeTrack(s.sender), s.direction = "inactive", h.next = 10, this._pc.createOffer();
            case 10:
              return u = h.sent, Fe.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 14, this._pc.setLocalDescription(u);
            case 14:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Fe.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(n);
                        case 4:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 16:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this._assertSendDirection(), i ? Fe.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : Fe.debug("replaceTrack() [localId:%s, no track]", n), s = this.midTransceiverMap.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), Fe.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), l = u.encodings.length - 1 - i, u.encodings.forEach(function(v, m) {
                m >= l ? v.active = !0 : v.active = !1;
              }), h.next = 10, s.sender.setParameters(u);
            case 10:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this._assertSendDirection(), Fe.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this.midTransceiverMap.get(n), s) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                u.encodings[v] = Q(Q({}, h), i);
              }), p.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function(e) {
    this._assertSendDirection();
    var a = this.midTransceiverMap.get(e);
    if (!a)
      throw new Error("associated RTCRtpTransceiver not found");
    return a.sender.getStats();
  } }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Fe.debug("stopReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "inactive", Fe.info("active transcievers: %o", this._pc.getTransceivers()), h.next = 9, this._pc.createOffer();
            case 9:
              return u = h.sent, Fe.debug("stopRecieving() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 13, this._pc.setLocalDescription(u);
            case 13:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Fe.debug("stopRecieving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(n);
                        case 4:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 15:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Fe.debug("pauseReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "inactive", h.next = 8, this._pc.createOffer();
            case 8:
              return u = h.sent, Fe.debug("pauseReceiving() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 12, this._pc.setLocalDescription(u);
            case 12:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Fe.debug("pauseReceiving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 14:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Fe.debug("resumeReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "recvonly", h.next = 8, this._generateOffer();
            case 8:
              return u = h.sent, Fe.debug("resumeReceiving() | calling pc.setLocalDescription() [offer:%o]", u), l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Fe.debug("resumeReceiving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 12:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._assertRecvDirection(), i = this.midTransceiverMap.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "_assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }, { key: "_generateOffer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this._pc.createOffer();
            case 2:
              return n = s.sent, s.next = 5, this._pc.setLocalDescription(n);
            case 5:
              return s.abrupt("return", n);
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_setAnswer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return Fe.debug("_setAnswer() | calling pc.setRemoteDescription() [answer:%o]", n), s.next = 3, this._pc.setRemoteDescription(n);
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_addEventListeners", value: function() {
    var e = this;
    this._pc.addEventListener("datachannel", function(a) {
      Fe.info("data channel created: ", a.channel.label);
      var n = a.channel;
      n.onopen = function() {
        Fe.info("data channel open: ", a.channel.label), e.safeEmit("dc_open", a.channel.label);
      }, n.onclose = function() {
        Fe.warn("data channel closed: ", a.channel.label);
      }, n.onerror = function(i) {
        Fe.error("data channel error: ", a.channel.label, i);
      }, n.onmessage = /* @__PURE__ */ function() {
        var i = y(/* @__PURE__ */ d().mark(function s(u) {
          var l;
          return d().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  return Fe.debug("data channel message: ", a.channel.label, u), h.next = 3, u.data.arrayBuffer();
                case 3:
                  l = h.sent, e.safeEmit("datachannel", a.channel, String.fromCharCode.apply(String, sr(new Uint8Array(l))));
                case 5:
                case "end":
                  return h.stop();
              }
          }, s);
        }));
        return function(s) {
          return i.apply(this, arguments);
        };
      }();
    }), this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (e._pc.iceConnectionState) {
        case "checking":
          e.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          e.emit("@connectionstatechange", "connected"), e._transportReady = !0;
          break;
        case "failed":
          e.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          e.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          e.emit("@connectionstatechange", "closed");
          break;
        default:
          Fe.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidate", function(a) {
      a.candidate && e.emit("@icecandidate", { candidate: a.candidate });
    }), this._pc.addEventListener("negotiationneeded", function() {
      e.emit("@negotiationneeded", {}), Fe.debug("negotiationneeded");
    }), this._pc.addEventListener("icegatheringstatechange", function() {
      switch (e._pc.iceGatheringState) {
        case "gathering":
          Fe.debug("icegatheringstatechange | gathering"), e.emit("@icegatheringstatechange", "gathering");
          break;
        case "complete":
          Fe.debug("icegatheringstatechange | complete"), e.emit("@icegatheringstatechange", "complete");
          break;
        default:
          Fe.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidateerror", function(a) {
      Fe.info("chrome74::icecandidateerror", a);
    });
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function(e) {
      return function() {
        return new r(e);
      };
    }
  ) }]), r;
}(Rl), Ae = da.getLogger("Safari12"), xP = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), R(b(t), "_direction", void 0), R(b(t), "_pc", void 0), R(b(t), "_sendWebStream", new MediaStream()), R(b(t), "_sendScreenShareStream", new MediaStream()), R(b(t), "_transportReady", !1), t;
  }
  return D(r, [{ key: "name", get: function() {
    return "Chrome74";
  } }, { key: "pc", get: function() {
    return this._pc;
  } }, { key: "close", value: function() {
    if (Ae.debug("close()"), this._pc)
      try {
        this._pc.close();
      } catch (e) {
        Ae.error("pc.close()", e);
      }
  } }, { key: "init", value: function(e) {
    var a = e.direction, n = e.iceServers, i = e.iceTransportPolicy, s = e.additionalSettings, u = e.proprietaryConstraints, l = e.onTrackHandler;
    Ae.debug("init()"), this._direction = a, this._pc = new RTCPeerConnection(Q({ iceServers: n || [], iceTransportPolicy: i || "all", bundlePolicy: "max-bundle", rtcpMuxPolicy: "require" }, s), u), l && this._pc.addEventListener("track", function(p) {
      l(p);
    }), this._addEventListeners();
  } }, { key: "connect", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return i = this._pc.createDataChannel("dyte"), p.next = 3, this._pc.createOffer();
            case 3:
              return s = p.sent, Ae.info("connect offer", s), p.next = 7, this._pc.setLocalDescription(s);
            case 7:
              return u = /* @__PURE__ */ function() {
                var h = y(/* @__PURE__ */ d().mark(function v(m) {
                  return d().wrap(function(w) {
                    for (; ; )
                      switch (w.prev = w.next) {
                        case 0:
                          return Ae.debug("connect() | calling pc.setRemoteDescription() [answer:%o]", m), w.next = 3, n._pc.setRemoteDescription(m);
                        case 3:
                          i.close();
                        case 4:
                        case "end":
                          return w.stop();
                      }
                  }, v);
                }));
                return function(m) {
                  return h.apply(this, arguments);
                };
              }(), p.abrupt("return", { offerSdp: s, callback: u });
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateIceServers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              Ae.debug("updateIceServers()"), i = this._pc.getConfiguration(), i.iceServers = n, this._pc.setConfiguration(i);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return Ae.debug("restartIce()"), l.next = 3, this.pc.createOffer({ iceRestart: !0 });
            case 3:
              return i = l.sent, Ae.debug("restartIce() | calling pc.setLocalDescription() [offer:%o]", i), s = /* @__PURE__ */ function() {
                var p = y(/* @__PURE__ */ d().mark(function h(v) {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return Ae.info("restartIce() | calling pc.setRemoteDescription() [answer:%o]", v), g.next = 3, n._pc.setRemoteDescription(v);
                        case 3:
                        case "end":
                          return g.stop();
                      }
                  }, h);
                }));
                return function(v) {
                  return p.apply(this, arguments);
                };
              }(), l.abrupt("return", { offerSdp: i, callback: s });
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getTransportStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this._pc.getStats());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "send", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E;
      return d().wrap(function(C) {
        for (; ; )
          switch (C.prev = C.next) {
            case 0:
              return s = n.track, u = n.encodings, l = n.codecOption, p = n.screenShare, this._assertSendDirection(), Ae.debug("send() [kind:%s, track.id:%s]", s.kind, s.id), Ae.debug("creating new transceiver"), h = this._pc.addTransceiver(s, { direction: "sendonly", streams: [p ? this._sendScreenShareStream : this._sendWebStream], sendEncodings: u }), v = RTCRtpSender.getCapabilities(s.kind), Ae.info("senders available params:", v), m = [], l && (g = v.codecs.find(function(L) {
                return L.mimeType.includes(l.name);
              }), l.parameters && (Ae.info("codecOption.parameters:", l.parameters), k = ((w = g.sdpFmtpLine) === null || w === void 0 ? void 0 : w.split(";")) || [], k.push.apply(k, sr(l.parameters)), T = sr(new Set(k).values()), g.sdpFmtpLine = T.join(";")), m.push(g)), Ae.info("selected codecs:", m), h.setCodecPreferences(m), C.next = 13, this._pc.createOffer();
            case 13:
              if (_ = C.sent, this._transportReady) {
                C.next = 16;
                break;
              }
              throw new Error("webrtc transport not connected");
            case 16:
              return C.next = 18, this._pc.setLocalDescription(_);
            case 18:
              return _.sdp = _.sdp.replace("minptime=10;useinbandfec=1", "minptime=10;useinbandfec=1;usedtx=1;maxaveragebitrate=16000"), E = /* @__PURE__ */ function() {
                var L = y(/* @__PURE__ */ d().mark(function G(j) {
                  return d().wrap(function(Y) {
                    for (; ; )
                      switch (Y.prev = Y.next) {
                        case 0:
                          return Ae.debug("send() | calling pc.setRemoteDescription() [answer:%o]", j), Y.next = 3, i._pc.setRemoteDescription(j);
                        case 3:
                          return i.midTransceiverMap.set(h.mid, h), Y.abrupt("return", h.mid);
                        case 5:
                        case "end":
                          return Y.stop();
                      }
                  }, G);
                }));
                return function(j) {
                  return L.apply(this, arguments);
                };
              }(), C.abrupt("return", { offerSdp: _, callback: E });
            case 21:
            case "end":
              return C.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopSending", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertSendDirection(), Ae.debug("stopSending() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.sender.replaceTrack(null), this._pc.removeTrack(s.sender), s.direction = "inactive", h.next = 10, this._pc.createOffer();
            case 10:
              return u = h.sent, Ae.debug("stopSending() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 14, this._pc.setLocalDescription(u);
            case 14:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Ae.debug("stopSending() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(n);
                        case 4:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 16:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this._assertSendDirection(), i ? Ae.debug("replaceTrack() [localId:%s, track.id:%s]", n, i.id) : Ae.debug("replaceTrack() [localId:%s, no track]", n), s = this.midTransceiverMap.get(n), s) {
                l.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return l.next = 7, s.sender.replaceTrack(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setMaxSpatialLayer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this._assertSendDirection(), Ae.debug("setMaxSpatialLayer() [localId:%s, spatialLayer:%s]", n, i), s = this.midTransceiverMap.get(n), s) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                v <= i ? h.active = !0 : h.active = !1;
              }), p.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this._assertSendDirection(), Ae.debug("setRtpEncodingParameters() [localId:%s, params:%o]", n, i), s = this.midTransceiverMap.get(n), s) {
                p.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return u = s.sender.getParameters(), u.encodings.forEach(function(h, v) {
                u.encodings[v] = Q(Q({}, h), i);
              }), p.next = 9, s.sender.setParameters(u);
            case 9:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getSenderStats", value: function(e) {
    this._assertSendDirection();
    var a = this.midTransceiverMap.get(e);
    if (!a)
      throw new Error("associated RTCRtpTransceiver not found");
    return a.sender.getStats();
  } }, { key: "receive", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return this._assertRecvDirection(), Ae.debug("recieve() | calling pc.setLocalDescription() [answer:%o]", n), i = this._pc.getTransceivers().at(-1), Ae.info("Transceiver is now receiving", i, this._pc.getTransceivers()), this.midTransceiverMap.set(i.mid, i), u.abrupt("return", { track: i.receiver.track, localId: i.mid });
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Ae.debug("stopReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "inactive", Ae.info("active transcievers: %o", this._pc.getTransceivers()), h.next = 9, this._pc.createOffer();
            case 9:
              return u = h.sent, Ae.debug("stopRecieving() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 13, this._pc.setLocalDescription(u);
            case 13:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Ae.debug("stopRecieving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                          i.midTransceiverMap.delete(n);
                        case 4:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 15:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Ae.debug("pauseReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "inactive", h.next = 8, this._pc.createOffer();
            case 8:
              return u = h.sent, Ae.debug("pauseReceiving() | calling pc.setLocalDescription() [offer:%o]", u), h.next = 12, this._pc.setLocalDescription(u);
            case 12:
              return l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Ae.debug("pauseReceiving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 14:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeReceiving", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this._assertRecvDirection(), Ae.debug("resumeReceiving() [localId:%s]", n), s = this.midTransceiverMap.get(n), s) {
                h.next = 5;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 5:
              return s.direction = "recvonly", h.next = 8, this._generateOffer();
            case 8:
              return u = h.sent, Ae.debug("resumeReceiving() | calling pc.setLocalDescription() [offer:%o]", u), l = /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          return Ae.debug("resumeReceiving() | calling pc.setRemoteDescription() [answer:%o]", g), k.next = 3, i._pc.setRemoteDescription(g);
                        case 3:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(g) {
                  return v.apply(this, arguments);
                };
              }(), h.abrupt("return", { offerSdp: u, callback: l });
            case 12:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getReceiverStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._assertRecvDirection(), i = this.midTransceiverMap.get(n), i) {
                u.next = 4;
                break;
              }
              throw new Error("associated RTCRtpTransceiver not found");
            case 4:
              return u.abrupt("return", i.receiver.getStats());
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_assertSendDirection", value: function() {
    if (this._direction !== "send")
      throw new Error('method can just be called for handlers with "send" direction');
  } }, { key: "_assertRecvDirection", value: function() {
    if (this._direction !== "recv")
      throw new Error('method can just be called for handlers with "recv" direction');
  } }, { key: "_generateOffer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this._pc.createOffer();
            case 2:
              return n = s.sent, s.next = 5, this._pc.setLocalDescription(n);
            case 5:
              return s.abrupt("return", n);
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_setAnswer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return Ae.debug("_setAnswer() | calling pc.setRemoteDescription() [answer:%o]", n), s.next = 3, this._pc.setRemoteDescription(n);
            case 3:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_addEventListeners", value: function() {
    var e = this;
    this._pc.addEventListener("iceconnectionstatechange", function() {
      switch (e._pc.iceConnectionState) {
        case "checking":
          e.emit("@connectionstatechange", "connecting");
          break;
        case "connected":
        case "completed":
          e.emit("@connectionstatechange", "connected"), e._transportReady = !0;
          break;
        case "failed":
          e.emit("@connectionstatechange", "failed");
          break;
        case "disconnected":
          e.emit("@connectionstatechange", "disconnected");
          break;
        case "closed":
          e.emit("@connectionstatechange", "closed");
          break;
        default:
          Ae.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidate", function(a) {
      a.candidate && e.emit("@icecandidate", { candidate: a.candidate });
    }), this._pc.addEventListener("negotiationneeded", function() {
      e.emit("@negotiationneeded", {}), Ae.debug("negotiationneeded");
    }), this._pc.addEventListener("icegatheringstatechange", function() {
      switch (e._pc.iceGatheringState) {
        case "gathering":
          Ae.debug("icegatheringstatechange | gathering"), e.emit("@icegatheringstatechange", "gathering");
          break;
        case "complete":
          Ae.debug("icegatheringstatechange | complete"), e.emit("@icegatheringstatechange", "complete");
          break;
        default:
          Ae.warn("unknown state");
          break;
      }
    }), this._pc.addEventListener("icecandidateerror", function(a) {
      Ae.info("chrome74::icecandidateerror", a);
    }), this._pc.ondatachannel = function(a) {
      Ae.info("data channel created: ", a.channel.label);
      var n = a.channel;
      n.onopen = function() {
        Ae.info("data channel open: ", a.channel.label), e.safeEmit("dc_open", a.channel.label);
      }, n.onclose = function() {
        Ae.warn("data channel closed: ", a.channel.label);
      }, n.onerror = function(i) {
        Ae.error("data channel error: ", a.channel.label, i);
      }, n.onmessage = /* @__PURE__ */ function() {
        var i = y(/* @__PURE__ */ d().mark(function s(u) {
          var l;
          return d().wrap(function(h) {
            for (; ; )
              switch (h.prev = h.next) {
                case 0:
                  Ae.debug("data channel message: ", a.channel.label, u), l = String.fromCharCode.apply(String, sr(new Uint8Array(u.data))), e.safeEmit("datachannel", a.channel, l);
                case 3:
                case "end":
                  return h.stop();
              }
          }, s);
        }));
        return function(s) {
          return i.apply(this, arguments);
        };
      }();
    };
  } }], [{ key: "createFactory", value: (
    /**
    * Creates a factory function.
    */
    function() {
      return function() {
        return new r();
      };
    }
  ) }]), r;
}(Rl), Lo = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.name = "UnsupportedError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(b(e), r) : e.stack = new Error(t).stack, e;
  }
  return D(r);
}(q), Tt = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.name = "InvalidStateError", Error.hasOwnProperty("captureStackTrace") ? Error.captureStackTrace(b(e), r) : e.stack = new Error(t).stack, e;
  }
  return D(r);
}(q), ea = da.getLogger("Producer"), eC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.localId, i = t.track, s = t.stopTracks, u = t.disableTrackOnPause, l = t.zeroRtpOnPause, p = t.handler, h = t.appData;
    return I(this, r), e = c.call(this), R(b(e), "_id", void 0), R(b(e), "_localId", void 0), R(b(e), "_closed", !1), R(b(e), "_handler", void 0), R(b(e), "_track", void 0), R(b(e), "_kind", void 0), R(b(e), "_paused", void 0), R(b(e), "_maxSpatialLayer", void 0), R(b(e), "_stopTracks", void 0), R(b(e), "_disableTrackOnPause", void 0), R(b(e), "_zeroRtpOnPause", void 0), R(b(e), "_appData", void 0), R(b(e), "observer", void 0), e._id = a, e._localId = n, e._track = i, e._kind = i.kind, e._paused = u ? !i.enabled : !1, e._maxSpatialLayer = void 0, e._stopTracks = s, e._disableTrackOnPause = u, e._zeroRtpOnPause = l, e._appData = h || {}, e._onTrackEnded = e._onTrackEnded.bind(b(e)), e._handler = p, e.observer = new Un(), e._handleTrack(), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return this._id;
    }
    /**
    * Local id.
    */
  }, {
    key: "localId",
    get: function() {
      return this._localId;
    }
    /**
    * Whether the Producer is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return this._closed;
    }
    /**
    * Media kind.
    */
  }, {
    key: "kind",
    get: function() {
      return this._kind;
    }
    /**
    * The associated track.
    */
  }, {
    key: "track",
    get: function() {
      return this._track;
    }
    /**
    * Whether the Producer is paused.
    */
  }, {
    key: "paused",
    get: function() {
      return this._paused;
    }
    /**
    * Max spatial layer.
    *
    * @type {Number | undefined}
    */
  }, {
    key: "maxSpatialLayer",
    get: function() {
      return this._maxSpatialLayer;
    }
    /**
    * App custom data.
    */
  }, {
    key: "appData",
    get: function() {
      return this._appData;
    },
    set: function(e) {
      throw new Error("cannot override appData object");
    }
    /**
    * Closes the Producer.
    */
  }, {
    key: "close",
    value: function(e) {
      var a = this;
      if (!this._closed) {
        if (ea.debug("close() with reason:", e), this._closed = !0, this._destroyTrack(), e === Oc) {
          this.observer.emit("close");
          return;
        }
        this._handler.stopSending(this.localId).then(function(n) {
          var i = n.offerSdp, s = n.callback;
          a.safeEmit("close", i, s, e);
        }).finally(function() {
          a.observer.emit("close");
        });
      }
    }
    /**
    * Get associated RTCRtpSender stats.
    */
  }, {
    key: "getStats",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (!this._closed) {
                  i.next = 2;
                  break;
                }
                throw new Tt("closed");
              case 2:
                return i.abrupt("return", this._handler.getSenderStats(this.localId));
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Pauses sending media.
    */
  }, {
    key: "pause",
    value: function() {
      ea.debug("producer(".concat(this.id, "):pause()")), this._closed && ea.error("pause() | Producer closed"), this._paused = !0, this._track && this._disableTrackOnPause && (this._track.enabled = !1), this._zeroRtpOnPause && this._handler.replaceTrack(this.localId, null), this.observer.emit("pause");
    }
    /**
    * Resumes sending media.
    */
  }, {
    key: "resume",
    value: function() {
      if (ea.debug("producer(".concat(this.id, "):resume()")), this._closed) {
        ea.error("resume() | Producer closed");
        return;
      }
      this._paused = !1, this._track && this._disableTrackOnPause && (this._track.enabled = !0), this._zeroRtpOnPause && this._handler.replaceTrack(this.localId, this._track), this.observer.emit("resume");
    }
    /**
    * Replaces the current track with a new one or null.
    */
  }, {
    key: "replaceTrack",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (i = n.track, ea.debug("replaceTrack() [track:%o]", i), !this._closed) {
                  u.next = 7;
                  break;
                }
                if (i && this._stopTracks)
                  try {
                    i.stop();
                  } catch (l) {
                    ea.error(l);
                  }
                throw new Tt("closed");
              case 7:
                if (!(i && i.readyState === "ended")) {
                  u.next = 9;
                  break;
                }
                throw new Tt("track ended");
              case 9:
                if (i !== this._track) {
                  u.next = 12;
                  break;
                }
                return ea.debug("replaceTrack() | same track, ignored"), u.abrupt("return");
              case 12:
                if (!(!this._zeroRtpOnPause || !this._paused)) {
                  u.next = 15;
                  break;
                }
                return u.next = 15, this._handler.replaceTrack(this.localId, i);
              case 15:
                this._destroyTrack(), this._track = i, this._track && this._disableTrackOnPause && (this._paused ? this._paused && (this._track.enabled = !1) : this._track.enabled = !0), this._handleTrack();
              case 19:
              case "end":
                return u.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Sets the video max spatial layer to be sent.
    */
  }, {
    key: "setMaxSpatialLayer",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (!this._closed) {
                  s.next = 4;
                  break;
                }
                throw new Tt("closed");
              case 4:
                if (this._kind === "video") {
                  s.next = 8;
                  break;
                }
                throw new Lo("not a video Producer");
              case 8:
                if (typeof n == "number") {
                  s.next = 10;
                  break;
                }
                throw new TypeError("invalid spatialLayer");
              case 10:
                return s.next = 12, this._handler.setMaxSpatialLayer(this.localId, n);
              case 12:
                this._maxSpatialLayer = n;
              case 13:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Sets the DSCP value.
    */
  }, { key: "setRtpEncodingParameters", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this._closed) {
                s.next = 4;
                break;
              }
              throw new Tt("closed");
            case 4:
              if (ce(n) === "object") {
                s.next = 6;
                break;
              }
              throw new TypeError("invalid params");
            case 6:
              return s.next = 8, this._handler.setRtpEncodingParameters(this.localId, n);
            case 8:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_onTrackEnded", value: function() {
    ea.debug('track "ended" event'), this.observer.emit("trackended"), this.safeEmit("trackended", this.track.id);
  } }, { key: "_handleTrack", value: function() {
    this._track && this._track.addEventListener("ended", this._onTrackEnded);
  } }, { key: "_destroyTrack", value: function() {
    if (this._track)
      try {
        this._track.removeEventListener("ended", this._onTrackEnded), this._stopTracks && this._track.stop();
      } catch (e) {
        ea.error(e);
      }
  } }]), r;
}(Un), Rn = da.getLogger("Consumer"), Bu = /* @__PURE__ */ new K(), qu = /* @__PURE__ */ new K(), Wu = /* @__PURE__ */ new K(), Wa = /* @__PURE__ */ new K(), Ju = /* @__PURE__ */ new K(), Ku = /* @__PURE__ */ new K(), Ea = /* @__PURE__ */ new K(), fs = /* @__PURE__ */ new K(), zu = /* @__PURE__ */ new K(), Qu = /* @__PURE__ */ new K(), Pl = /* @__PURE__ */ new WeakSet(), Pp = /* @__PURE__ */ new WeakSet(), Cp = /* @__PURE__ */ new WeakSet(), rC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.localId, i = t.producerId, s = t.producingPeerId, u = t.handler, l = t.track, p = t.appData, h = t.paused, v = t.reuseTrack;
    return I(this, r), e = c.call(this), Or(b(e), Cp), Or(b(e), Pp), Or(b(e), Pl), R(b(e), "observer", void 0), z(b(e), Bu, { writable: !0, value: void 0 }), z(b(e), qu, { writable: !0, value: void 0 }), z(b(e), Wu, { writable: !0, value: void 0 }), z(b(e), Wa, { writable: !0, value: void 0 }), z(b(e), Ju, { writable: !0, value: void 0 }), z(b(e), Ku, { writable: !0, value: void 0 }), z(b(e), Ea, { writable: !0, value: void 0 }), z(b(e), fs, { writable: !0, value: void 0 }), z(b(e), zu, { writable: !0, value: void 0 }), z(b(e), Qu, { writable: !0, value: void 0 }), V(b(e), Bu, a), V(b(e), qu, n), V(b(e), Ku, u), V(b(e), Qu, p), V(b(e), zu, s), V(b(e), Wa, !1), V(b(e), Wu, i), V(b(e), Ea, l), V(b(e), fs, h != null ? h : !1), V(b(e), Ju, v), e.observer = new Un(), Ne(b(e), Pp, tC).call(b(e)), e;
  }
  return D(r, [{
    key: "id",
    get: function() {
      return f(this, Bu);
    }
    /**
    * Producing peer id corresponding to this consumer
    */
  }, {
    key: "peerId",
    get: function() {
      return f(this, zu);
    }
    /**
    * Local ID for the consumer
    */
  }, {
    key: "localId",
    get: function() {
      return f(this, qu);
    }
    /**
    * Producer ID associated with this consumer
    */
  }, {
    key: "producerId",
    get: function() {
      return f(this, Wu);
    }
    /**
    * Indicates whether this consumer is closed
    */
  }, {
    key: "closed",
    get: function() {
      return f(this, Wa);
    }
    /**
    * Kind of media corresponding to this consumer
    */
  }, {
    key: "kind",
    get: function() {
      return f(this, Ea).kind;
    }
    /**
    * The track associated with this consumer
    */
  }, {
    key: "track",
    get: function() {
      return f(this, Ea);
    }
    /**
    * Indicates whether the consumer is paused
    */
  }, { key: "paused", get: function() {
    return f(this, fs);
  } }, {
    key: "remotelyPaused",
    get: function() {
      return this.paused;
    }
    /**
    *	Custom data corresponding to this consumer
    */
  }, {
    key: "appData",
    get: function() {
      return f(this, Qu);
    }
    /**
    * Closes the Consumer.
    */
  }, {
    key: "close",
    value: function(e) {
      f(this, Wa) || (Rn.debug("close() with reason:", e), V(this, Wa, !0), f(this, Ju) || Ne(this, Cp, aC).call(this), this.emit("close", e), this.observer.safeEmit("close", e));
    }
    /**
    * Get associated RTCRtpReceiver stats.
    */
  }, {
    key: "getStats",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (!f(this, Wa)) {
                  i.next = 2;
                  break;
                }
                throw new Tt("closed");
              case 2:
                return i.abrupt("return", f(this, Ku).getReceiverStats(this.localId));
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Pauses receiving media.
    */
  }, {
    key: "pause",
    value: function() {
      if (Rn.debug("consumer(".concat(this.id, "):pause()")), f(this, Wa)) {
        Rn.error("pause() | Consumer closed");
        return;
      }
      V(this, fs, !0), f(this, Ea).enabled = !1, this.observer.safeEmit("pause");
    }
    /**
    * Resumes receiving media.
    */
  }, { key: "resume", value: function() {
    if (Rn.debug("consumer(".concat(this.id, "):resume()")), f(this, Wa)) {
      Rn.error("resume() | Consumer closed");
      return;
    }
    V(this, fs, !1), f(this, Ea).enabled = !0, this.observer.safeEmit("resume");
  } }]), r;
}(Un);
function Dv() {
  Rn.debug('track "ended" event'), this.safeEmit("trackended"), this.observer.safeEmit("trackended");
}
function tC() {
  f(this, Ea).addEventListener("ended", Ne(this, Pl, Dv).bind(this));
}
function aC() {
  try {
    f(this, Ea).removeEventListener("ended", Ne(this, Pl, Dv)), f(this, Ea).stop();
  } catch (o) {
    Rn.error(o.toString());
  }
}
var Ip = function(c) {
  return new Promise(function(r) {
    return setTimeout(r, c);
  });
};
function In(o, c) {
  return Mc.apply(this, arguments);
}
function Mc() {
  return Mc = y(/* @__PURE__ */ d().mark(function o(c, r) {
    return d().wrap(function(e) {
      for (; ; )
        switch (e.prev = e.next) {
          case 0:
            return e.abrupt("return", new Promise(/* @__PURE__ */ function() {
              var a = y(/* @__PURE__ */ d().mark(function n(i, s) {
                var u, l, p, h, v, m, g, w, k;
                return d().wrap(function(_) {
                  for (; ; )
                    switch (_.prev = _.next) {
                      case 0:
                        u = Q({ strategy: "linear", maxRetryCount: 3, delayTime: 10 }, r), l = u.strategy, p = u.maxRetryCount, h = u.delayTime, v = 0, g = !1, w = function(S) {
                          g = !0, s(S);
                        };
                      case 4:
                        if (!(v < p)) {
                          _.next = 32;
                          break;
                        }
                        return _.prev = 5, _.next = 8, c(v, w);
                      case 8:
                        return k = _.sent, _.abrupt("return", i(k));
                      case 12:
                        if (_.prev = 12, _.t0 = _.catch(5), m = _.t0, !g) {
                          _.next = 17;
                          break;
                        }
                        return _.abrupt("break", 32);
                      case 17:
                        if (!(v < p)) {
                          _.next = 28;
                          break;
                        }
                        if (l !== "linear") {
                          _.next = 23;
                          break;
                        }
                        return _.next = 21, Ip(h * (v + 1));
                      case 21:
                        _.next = 26;
                        break;
                      case 23:
                        if (l !== "exponential") {
                          _.next = 26;
                          break;
                        }
                        return _.next = 26, Ip(h * (v + Math.max(0, v - 1)));
                      case 26:
                        _.next = 29;
                        break;
                      case 28:
                        return _.abrupt("break", 32);
                      case 29:
                        v += 1, _.next = 4;
                        break;
                      case 32:
                        return _.abrupt("return", s(m));
                      case 33:
                      case "end":
                        return _.stop();
                    }
                }, n, null, [[5, 12]]);
              }));
              return function(n, i) {
                return a.apply(this, arguments);
              };
            }()));
          case 1:
          case "end":
            return e.stop();
        }
    }, o);
  })), Mc.apply(this, arguments);
}
function nC(o, c) {
  return typeof o == "undefined" ? c : typeof window != "undefined" && Object.getOwnPropertyDescriptor(window, "structuredClone") ? structuredClone(o) : JSON.parse(JSON.stringify(o));
}
function Dp(o) {
  if (Promise.allSettled)
    return Promise.allSettled(o);
  var c = o.map(function(r) {
    return r.then(function(t) {
      return { status: "fulfilled", value: t };
    }).catch(function(t) {
      return { status: "rejected", reason: t };
    });
  });
  return Promise.all(c);
}
var Oc = "transport closed", Ir = da.getLogger("Transport"), Yu = /* @__PURE__ */ new K(), Uo = /* @__PURE__ */ new K(), Lt = /* @__PURE__ */ new K(), si = /* @__PURE__ */ new K(), iC = /* @__PURE__ */ new K(), Br = /* @__PURE__ */ new K(), gn = /* @__PURE__ */ new K(), oi = /* @__PURE__ */ new K(), bi = /* @__PURE__ */ new K(), ui = /* @__PURE__ */ new K(), ci = /* @__PURE__ */ new K(), ms = /* @__PURE__ */ new K(), Xu = /* @__PURE__ */ new K(), Pn = /* @__PURE__ */ new K(), Si = /* @__PURE__ */ new K(), wi = /* @__PURE__ */ new K(), Zu = /* @__PURE__ */ new K(), yn = /* @__PURE__ */ new K(), yo = /* @__PURE__ */ new WeakSet(), Ap = /* @__PURE__ */ new WeakSet(), Mp = /* @__PURE__ */ new WeakSet(), sC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = t.id, n = t.direction, i = t.handlerFactory, s = t.iceServers, u = t.iceTransportPolicy, l = t.proprietaryConstraints, p = t.additionalSettings, h = t.appData;
    I(this, r), e = c.call(this), Or(b(e), Mp), Or(b(e), Ap), Or(b(e), yo), R(b(e), "awaitQueue", void 0), R(b(e), "observer", void 0), z(b(e), Yu, { writable: !0, value: void 0 }), z(b(e), Uo, { writable: !0, value: void 0 }), z(b(e), Lt, { writable: !0, value: !1 }), z(b(e), si, { writable: !0, value: void 0 }), z(b(e), iC, { writable: !0, value: void 0 }), z(b(e), Br, { writable: !0, value: void 0 }), z(b(e), gn, { writable: !0, value: "new" }), z(b(e), oi, { writable: !0, value: void 0 }), z(b(e), bi, { writable: !0, value: void 0 }), z(b(e), ui, { writable: !0, value: void 0 }), z(b(e), ci, { writable: !0, value: !1 }), z(b(e), ms, { writable: !0, value: null }), z(b(e), Xu, { writable: !0, value: void 0 }), z(b(e), Pn, { writable: !0, value: void 0 }), z(b(e), Si, { writable: !0, value: void 0 }), z(b(e), wi, { writable: !0, value: void 0 }), z(b(e), Zu, { writable: !0, value: void 0 }), z(b(e), yn, { writable: !0, value: /* @__PURE__ */ new Map() }), Ir.debug("constructor() [id: %s, direction: %s]", a, n), V(b(e), Yu, a), V(b(e), si, n);
    var v = nC(p, {});
    return delete v.iceServers, delete v.iceTransportPolicy, delete v.bundlePolicy, delete v.rtcpMuxPolicy, delete v.sdpSemantics, V(b(e), oi, /* @__PURE__ */ new Map()), V(b(e), bi, /* @__PURE__ */ new Map()), V(b(e), ui, /* @__PURE__ */ new Map()), V(b(e), Pn, /* @__PURE__ */ new Map()), V(b(e), wi, /* @__PURE__ */ new Map()), V(b(e), Si, /* @__PURE__ */ new Map()), e.awaitQueue = new Fs(), e.observer = new Un(), V(b(e), Br, i()), f(b(e), Br).init({ onTrackHandler: e._ontrack.bind(b(e)), direction: n, iceServers: s, iceTransportPolicy: u, additionalSettings: p, proprietaryConstraints: l }), V(b(e), Zu, h || {}), V(b(e), Xu, new Promise(function(m) {
      e.observer.once("connected", function() {
        m(!0);
      }), e.observer.once("disconnect", function() {
        m(!1);
      }), e.observer.once("close", function() {
        m(!1);
      });
    })), f(b(e), Br).on("@connectionstatechange", function(m) {
      m !== f(b(e), gn) && (Ir.debug("connection state changed to %s", m), V(b(e), gn, m), m === "connected" && (V(b(e), ci, !0), e.observer.emit("connected")), m === "disconnected" && (V(b(e), ci, !1), e.observer.emit("disconnect")), (m === "failed" || m === "closed") && (V(b(e), ci, !1), e.observer.emit("close")), f(b(e), Lt) || e.safeEmit("connectionstatechange", m));
    }), f(b(e), Br).on("@icecandidate", function(m) {
      var g = m.candidate;
      f(b(e), Lt) || e.safeEmit("icecandidate", g);
    }), f(b(e), Br).on("dc_open", function(m) {
      V(b(e), ms, !1), setTimeout(function() {
        m === "events" && !f(b(e), ms) && e.safeEmit("dc_error", m);
      }, 5e3);
    }), f(b(e), Br).on("datachannel", function(m, g) {
      var w, k;
      m.label === "events" && V(b(e), ms, !0), f(b(e), ui).has(m.label) || f(b(e), ui).set(m.label, m);
      var T = JSON.parse(g);
      if (f(b(e), yn).has(T.id) || f(b(e), yn).set(T.id, []), (w = f(b(e), yn).get(T.id)) === null || w === void 0 || w.push(T), ((k = f(b(e), yn).get(T.id)) === null || k === void 0 ? void 0 : k.length) === T.count) {
        var _ = f(b(e), yn).get(T.id), E = _ == null ? void 0 : _.reduce(function(C, L) {
          return C + L.chunk;
        }, "");
        f(b(e), yn).delete(T.id);
        try {
          var S = JSON.parse(E);
          e.safeEmit("datachannel:".concat(m.label), m, S);
        } catch (C) {
          Ir.error("error parsing message", C);
        }
      }
    }), e;
  }
  return D(r, [{ key: "id", get: function() {
    return f(this, Yu);
  } }, { key: "serverId", get: function() {
    return f(this, Uo);
  } }, { key: "connected", get: function() {
    return f(this, ci);
  } }, { key: "isConnected", get: function() {
    return f(this, Xu);
  } }, { key: "datachannels", get: function() {
    return f(this, ui);
  } }, {
    key: "eventsDCReady",
    get: function() {
      return f(this, ms);
    }
    /**
    * Whether the Transport is closed.
    */
  }, {
    key: "closed",
    get: function() {
      return f(this, Lt);
    }
    /**
    * Transport direction.
    */
  }, {
    key: "direction",
    get: function() {
      return f(this, si);
    }
    /**
    * RTC handler instance.
    */
  }, {
    key: "handler",
    get: function() {
      return f(this, Br);
    }
    /**
    * Connection state.
    */
  }, {
    key: "connectionState",
    get: function() {
      return f(this, gn);
    }
    /**
    * Custom data.
    */
  }, { key: "appData", get: function() {
    return f(this, Zu);
  } }, { key: "setServerId", value: function(e) {
    V(this, Uo, e);
  } }, {
    key: "getDatachannel",
    value: function(e) {
      return f(this, ui).get(e);
    }
    /**
    * Close the Transport.
    */
  }, {
    key: "close",
    value: function() {
      f(this, Lt) || (Ir.debug("close()"), V(this, ci, !1), V(this, Lt, !0), f(this, Br).close(), Array.from(f(this, oi).values()).forEach(function(e) {
        e.close(Oc);
      }), f(this, oi).clear(), Array.from(f(this, bi).values()).forEach(function(e) {
        e.close(Oc);
      }), f(this, bi).clear(), f(this, wi).clear(), f(this, Pn).clear(), this.emit("close"), this.observer.emit("close"));
    }
    /**
    * Get associated Transport (RTCPeerConnection) stats.
    *
    * @returns {RTCStatsReport}
    */
  }, { key: "getStats", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!f(this, Lt)) {
                i.next = 2;
                break;
              }
              throw new Tt("closed");
            case 2:
              return i.abrupt("return", f(this, Br).getTransportStats());
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "connect",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n, i, s, u, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                return h.prev = 0, h.next = 3, f(this, Br).connect();
              case 3:
                return n = h.sent, i = n.offerSdp, s = n.callback, h.next = 8, this.safeEmitAsPromise("connect", { offer: i });
              case 8:
                return u = h.sent, l = u.answer, h.next = 12, s(l);
              case 12:
                return h.next = 14, this.isConnected;
              case 14:
                if (h.sent) {
                  h.next = 16;
                  break;
                }
                throw new Error("ice connection failed");
              case 16:
                h.next = 22;
                break;
              case 18:
                throw h.prev = 18, h.t0 = h.catch(0), Ir.error("transport failed to connect:", h.t0), h.t0;
              case 22:
              case "end":
                return h.stop();
            }
        }, a, this, [[0, 18]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Restart ICE connection.
    */
  }, {
    key: "restartIce",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (Ir.debug("restartIce()"), !f(this, Lt)) {
                  i.next = 3;
                  break;
                }
                throw new Tt("closed");
              case 3:
                return i.abrupt("return", f(this, Br).restartIce());
              case 4:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Update ICE servers.
    */
  }, {
    key: "updateIceServers",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n, i, s = arguments;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (n = s.length > 0 && s[0] !== void 0 ? s[0] : {}, i = n.iceServers, Ir.debug("updateIceServers()"), !f(this, Lt)) {
                  l.next = 4;
                  break;
                }
                throw new Tt("closed");
              case 4:
                return l.abrupt("return", f(this, Br).updateIceServers(i));
              case 5:
              case "end":
                return l.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Create a Producer.
    */
  }, { key: "produce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L = arguments;
      return d().wrap(function(j) {
        for (; ; )
          switch (j.prev = j.next) {
            case 0:
              if (i = L.length > 0 && L[0] !== void 0 ? L[0] : {}, s = i.track, u = i.encodings, l = i.codecOptions, p = i.stopTracks, h = p === void 0 ? !0 : p, v = i.disableTrackOnPause, m = v === void 0 ? !0 : v, g = i.zeroRtpOnPause, w = g === void 0 ? !1 : g, k = i.appData, T = k === void 0 ? {} : k, Ir.debug("produce() [track:".concat(s.id, "]")), s) {
                j.next = 6;
                break;
              }
              throw new TypeError("missing track");
            case 6:
              if (f(this, si) === "send") {
                j.next = 10;
                break;
              }
              throw new Lo("not a sending Transport");
            case 10:
              if (s.readyState !== "ended") {
                j.next = 14;
                break;
              }
              throw new Tt("track ended");
            case 14:
              if (!(this.listenerCount("connect") === 0 && f(this, gn) === "new")) {
                j.next = 18;
                break;
              }
              throw new TypeError('no "connect" listener set into this transport');
            case 18:
              if (this.listenerCount("produce") !== 0) {
                j.next = 22;
                break;
              }
              throw new TypeError('no "produce" listener set into this transport');
            case 22:
              if (!(T && ce(T) !== "object")) {
                j.next = 24;
                break;
              }
              throw new TypeError("if given, appData must be an object");
            case 24:
              return j.next = 26, this.isConnected;
            case 26:
              if (j.sent) {
                j.next = 28;
                break;
              }
              return j.abrupt("return", Promise.reject(new Error("Transport not connected")));
            case 28:
              return j.next = 30, this.awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function ee() {
                var Y, Z, F, x, ie, B, H;
                return d().wrap(function(J) {
                  for (; ; )
                    switch (J.prev = J.next) {
                      case 0:
                        return J.next = 2, f(n, Br).send({ track: s, encodings: u, codecOption: l, screenShare: T == null ? void 0 : T.screenShare });
                      case 2:
                        return Y = J.sent, Z = Y.offerSdp, F = Y.callback, J.next = 7, n.safeEmitAsPromise("produce", { offer: Z, kind: s.kind, paused: m ? !s.enabled : !1, appData: T });
                      case 7:
                        return x = J.sent, ie = x.answer, B = x.producerId, J.next = 12, F(ie);
                      case 12:
                        return H = J.sent, J.abrupt("return", { producerId: B, localId: H });
                      case 14:
                      case "end":
                        return J.stop();
                    }
                }, ee);
              })), "produce");
            case 30:
              return _ = j.sent, E = _.producerId, S = _.localId, C = new eC({ id: E, localId: S, track: s, stopTracks: h, disableTrackOnPause: m, zeroRtpOnPause: w, appData: T, handler: this.handler }), f(this, oi).set(E, C), C.observer.on("close", function() {
                f(n, oi).delete(C.id);
              }), this.emit("newproducer", C), this.observer.emit("newproducer", C), j.abrupt("return", C);
            case 39:
            case "end":
              return j.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "consumePeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h = arguments;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              if (s = h.length > 1 && h[1] !== void 0 ? h[1] : {}, Ir.debug("consumePeer() producingPeerId:", n), !f(this, Lt)) {
                m.next = 6;
                break;
              }
              throw new Tt("closed");
            case 6:
              if (f(this, si) === "recv") {
                m.next = 10;
                break;
              }
              throw new Lo("not a receiving Transport");
            case 10:
              if (typeof n == "string") {
                m.next = 14;
                break;
              }
              throw new TypeError("missing producingPeerId");
            case 14:
              if (!(this.listenerCount("connect") === 0 && f(this, gn) === "new")) {
                m.next = 18;
                break;
              }
              throw new TypeError('no "connect" listener set into this transport');
            case 18:
              if (!(s && ce(s) !== "object")) {
                m.next = 20;
                break;
              }
              throw new TypeError("if given, appData must be an object");
            case 20:
              return m.next = 22, this.isConnected;
            case 22:
              if (m.sent) {
                m.next = 24;
                break;
              }
              return m.abrupt("return", Promise.reject(new Error("Transport not connected")));
            case 24:
              return u = [], m.next = 27, this.safeEmitAsPromise("consumePeer", { producingPeerId: n });
            case 27:
              return l = m.sent, p = l.consumersMap, p.forEach(function(g, w) {
                var k = g.consumerId, T = g.trackId, _ = g.screenShare, E = g.paused, S = g.streamId, C = g.kind;
                u.push(In(/* @__PURE__ */ function() {
                  var L = y(/* @__PURE__ */ d().mark(function G(j) {
                    return d().wrap(function(Y) {
                      for (; ; )
                        switch (Y.prev = Y.next) {
                          case 0:
                            return j > 0 && Ir.warn("retrying consumer creation task:", k), Y.abrupt("return", Ne(i, yo, xu).call(i, { consumerId: k, trackId: T, streamId: S, kind: C, producerId: w, producingPeerId: n, paused: E, screenShare: _, appData: s }));
                          case 2:
                          case "end":
                            return Y.stop();
                        }
                    }, G);
                  }));
                  return function(G) {
                    return L.apply(this, arguments);
                  };
                }()));
              }), m.abrupt("return", Dp(u));
            case 31:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "consume", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g, w, k, T;
      return d().wrap(function(E) {
        for (; ; )
          switch (E.prev = E.next) {
            case 0:
              if (s = n.producerId, u = n.producingPeerId, l = n.appData, p = l === void 0 ? {} : l, Ir.debug("consume()"), !f(this, Lt)) {
                E.next = 6;
                break;
              }
              throw new Tt("closed");
            case 6:
              if (f(this, si) === "recv") {
                E.next = 10;
                break;
              }
              throw new Lo("not a receiving Transport");
            case 10:
              if (typeof s == "string") {
                E.next = 14;
                break;
              }
              throw new TypeError("missing producerId");
            case 14:
              if (!(this.listenerCount("connect") === 0 && f(this, gn) === "new")) {
                E.next = 18;
                break;
              }
              throw new TypeError('no "connect" listener set into this transport');
            case 18:
              if (!(p && ce(p) !== "object")) {
                E.next = 20;
                break;
              }
              throw new TypeError("if given, appData must be an object");
            case 20:
              return E.next = 22, this.isConnected;
            case 22:
              if (E.sent) {
                E.next = 24;
                break;
              }
              return E.abrupt("return", Promise.reject(new Error("Transport not connected")));
            case 24:
              return E.prev = 24, E.next = 27, this.safeEmitAsPromise("consume", { producerId: s, producingPeerId: u });
            case 27:
              return h = E.sent, v = h.consumerId, m = h.screenShare, g = h.trackId, w = h.paused, k = h.streamId, T = h.kind, E.next = 36, In(/* @__PURE__ */ function() {
                var S = y(/* @__PURE__ */ d().mark(function C(L) {
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return L > 0 && Ir.warn("retrying consumer creation task:", v), j.abrupt("return", Ne(i, yo, xu).call(i, { consumerId: v, screenShare: m, trackId: g, streamId: k, kind: T, paused: w, producerId: s, producingPeerId: u, appData: p }));
                        case 2:
                        case "end":
                          return j.stop();
                      }
                  }, C);
                }));
                return function(C) {
                  return S.apply(this, arguments);
                };
              }());
            case 36:
              return E.abrupt("return", E.sent);
            case 39:
              throw E.prev = 39, E.t0 = E.catch(24), Ir.error("consume failed:", E.t0), E.t0;
            case 43:
            case "end":
              return E.stop();
          }
      }, a, this, [[24, 39]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setRemoteOffer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.next = 2, Ne(this, Ap, oC).call(this, n);
            case 2:
              return l.next = 4, f(this, Br).pc.createAnswer();
            case 4:
              return i = l.sent, s = ve.parse(i.sdp), s.media = s.media.map(function(p) {
                if (p.type === "audio") {
                  var h = Q({}, p);
                  h.rtcpFb || (h.rtcpFb = []);
                  var v = h.rtcpFb.some(function(m) {
                    return m.type === "nack";
                  });
                  return v || h.rtcpFb.push({ payload: parseInt(h.payloads, 10), type: "nack" }), h;
                }
                return p;
              }), i.sdp = ve.write(s), l.next = 10, Ne(this, Mp, uC).call(this, i);
            case 10:
              return l.abrupt("return", i);
            case 11:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "retryFailedConsumerCreationTasks", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", Dp(n.map(/* @__PURE__ */ function() {
                var l = y(/* @__PURE__ */ d().mark(function p(h) {
                  return d().wrap(function(m) {
                    for (; ; )
                      switch (m.prev = m.next) {
                        case 0:
                          return m.abrupt("return", In(/* @__PURE__ */ function() {
                            var g = y(/* @__PURE__ */ d().mark(function w(k) {
                              return d().wrap(function(_) {
                                for (; ; )
                                  switch (_.prev = _.next) {
                                    case 0:
                                      return k > 0 && Ir.warn("retrying failed consumer creation task", h), _.abrupt("return", Ne(i, yo, xu).call(i, Q({}, h)));
                                    case 2:
                                    case "end":
                                      return _.stop();
                                  }
                              }, w);
                            }));
                            return function(w) {
                              return g.apply(this, arguments);
                            };
                          }()));
                        case 1:
                        case "end":
                          return m.stop();
                      }
                  }, p);
                }));
                return function(p) {
                  return l.apply(this, arguments);
                };
              }())));
            case 1:
            case "end":
              return u.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_ontrack", value: function(e) {
    var a = this, n = e.track, i = e.transceiver, s = e.streams;
    Ir.info("track event received", { trackId: n.id, tId: i.receiver.track.id });
    var u = "".concat(s[0].id, ":").concat(n.kind);
    n.addEventListener("ended", function() {
      Ir.info("rtc consumer track ended", n.id), f(a, wi).delete(n.id), f(a, Si).delete(u);
    }), f(this, wi).set(n.id, [n, i]);
    var l = f(this, Pn).get(u);
    l ? (l(n, i), f(this, Pn).delete(u)) : (Ir.warn("track event handler not found ".concat(u)), f(this, Si).set(u, e));
  } }]), r;
}(Un);
function xu(o) {
  return Nc.apply(this, arguments);
}
function Nc() {
  return Nc = y(/* @__PURE__ */ d().mark(function o(c) {
    var r = this, t, e, a, n, i, s, u, l, p, h, v, m;
    return d().wrap(function(w) {
      for (; ; )
        switch (w.prev = w.next) {
          case 0:
            return t = c.consumerId, e = c.producerId, a = c.producingPeerId, n = c.streamId, i = c.trackId, s = c.paused, u = c.screenShare, l = c.appData, p = c.kind, h = "".concat(n, ":").concat(p), v = { consumerId: t, producerId: e, producingPeerId: a, streamId: n, trackId: i, appData: l, kind: p, paused: s, screenShare: u, name: "consumer creation task error", message: "consumer creation failed" }, m = new Promise(function(k, T) {
              var _ = setTimeout(function() {
                f(r, Pn).delete(h), v.isTimedout = !0, T(v);
              }, 5e3), E = function(G, j) {
                try {
                  if (G.readyState === "ended")
                    clearTimeout(_), T(v);
                  else {
                    var ee = G;
                    ee.enabled = !0, r.handler.midTransceiverMap.set(j.mid, j);
                    var Y = new rC({ id: t, localId: j.mid, track: ee, paused: s, producerId: e, producingPeerId: a, handler: f(r, Br), appData: Q(Q({}, l), {}, { screenShare: u }), reuseTrack: !0 });
                    f(r, bi).set(t, Y), Y.once("close", function() {
                      f(r, bi).delete(Y.id), r.handler.midTransceiverMap.delete(j.mid);
                    }), Ir.info("consumer created for ", { producerId: e, trackId: i, producingPeerId: a }), r.observer.emit("newconsumer", Y), clearTimeout(_), k(Y);
                  }
                } catch (Z) {
                  Ir.warn("error while creating consumer:", Z), clearTimeout(_), T(v);
                }
              }, S = f(r, wi).get(t);
              if ((S == null ? void 0 : S.length) === 2) {
                E(S[0], S[1]);
                return;
              }
              var C = f(r, Si).get(h);
              C ? (f(r, Si).delete(h), E(C.track, C.transceiver)) : f(r, Pn).set(h, E);
            }), w.abrupt("return", m);
          case 5:
          case "end":
            return w.stop();
        }
    }, o);
  })), Nc.apply(this, arguments);
}
function oC(o) {
  return $c.apply(this, arguments);
}
function $c() {
  return $c = y(/* @__PURE__ */ d().mark(function o(c) {
    return d().wrap(function(t) {
      for (; ; )
        switch (t.prev = t.next) {
          case 0:
            return t.next = 2, f(this, Br).pc.setRemoteDescription(c);
          case 2:
          case "end":
            return t.stop();
        }
    }, o, this);
  })), $c.apply(this, arguments);
}
function uC(o) {
  return Lc.apply(this, arguments);
}
function Lc() {
  return Lc = y(/* @__PURE__ */ d().mark(function o(c) {
    return d().wrap(function(t) {
      for (; ; )
        switch (t.prev = t.next) {
          case 0:
            return Ir.debug("".concat(this.direction, "() {transportId: ").concat(f(this, Uo), "} | calling pc.setLocalDescription() [offer:%o]"), c), t.next = 3, f(this, Br).pc.setLocalDescription(c);
          case 3:
          case "end":
            return t.stop();
        }
    }, o, this);
  })), Lc.apply(this, arguments);
}
var sa = da.getLogger("Device");
function cC() {
  if ((typeof navigator == "undefined" ? "undefined" : ce(navigator)) === "object" && navigator.product === "ReactNative") {
    if (typeof RTCPeerConnection == "undefined") {
      sa.warn("this._detectDevice() | unsupported ReactNative without RTCPeerConnection");
      return;
    }
    return sa.debug("this._detectDevice() | ReactNative handler chosen"), "Chrome74";
  }
  if ((typeof navigator == "undefined" ? "undefined" : ce(navigator)) === "object" && typeof navigator.userAgent == "string") {
    var o = navigator.userAgent, c = nl.getParser(o), r = c.getEngine();
    if (sa.debug("current browser info", c.getBrowser()), c.satisfies({ chrome: ">=74", chromium: ">=74", "microsoft edge": ">=88" }))
      return "Chrome74";
    if (c.satisfies({ chrome: ">=70", chromium: ">=70" }))
      return "Chrome70";
    if (c.satisfies({ chrome: ">=67", chromium: ">=67" }))
      return "Chrome67";
    if (c.satisfies({ chrome: ">=55", chromium: ">=55" }))
      return "Chrome55";
    if (c.satisfies({ firefox: ">=110" }))
      return "Firefox110";
    if (c.satisfies({ firefox: ">=60" }))
      return "Firefox60";
    if (c.satisfies({ ios: { OS: ">=14.3", firefox: ">=30.0" } }) || c.satisfies({ safari: ">=12.0" }) && typeof RTCRtpTransceiver != "undefined" && RTCRtpTransceiver.prototype.hasOwnProperty("currentDirection"))
      return "Safari12";
    if (c.satisfies({ safari: ">=11" }))
      return "Safari11";
    if (c.satisfies({ "microsoft edge": ">=11" }) && c.satisfies({ "microsoft edge": "<=18" }))
      return "Edge11";
    if (r.name && r.name.toLowerCase() === "blink") {
      var t = o.match(/(?:(?:Chrome|Chromium))[ /](\w+)/i);
      if (t) {
        var e = Number(t[1]);
        return e >= 74 ? "Chrome74" : e >= 70 ? "Chrome70" : e >= 67 ? "Chrome67" : "Chrome55";
      }
      return "Chrome74";
    }
    sa.warn("this._detectDevice() | browser not supported [name:%s, version:%s]", c.getBrowserName(), c.getBrowserVersion());
    return;
  }
  sa.warn("this._detectDevice() | unknown device");
}
var lC = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = c.handlerName, t = c.handlerFactory;
    if (I(this, o), R(this, "_handlerFactory", void 0), R(this, "_handlerName", void 0), R(this, "_observer", void 0), sa.debug("constructor()"), r && t)
      throw new TypeError("just one of handlerName or handlerInterface can be given");
    if (t)
      this._handlerFactory = t;
    else {
      if (r)
        sa.debug("constructor() | handler given: %s", r);
      else if (r = cC(), r)
        sa.debug("constructor() | detected handler: %s", r);
      else
        throw new Error("device not supported");
      switch (r) {
        case "Chrome74":
          this._handlerFactory = ZP.createFactory();
          break;
        case "Safari12":
          this._handlerFactory = xP.createFactory();
          break;
        case "Firefox60":
          this._handlerFactory = Rp.createFactory({ supportsSendEncodings: !1 });
          break;
        case "Firefox110":
          this._handlerFactory = Rp.createFactory({ supportsSendEncodings: !0 });
          break;
        default:
          throw new TypeError('unknown handlerName "'.concat(r, '"'));
      }
    }
    var e = this._handlerFactory();
    this._handlerName = e.name, e.close(), this._observer = new at();
  }
  return D(o, [{
    key: "handlerName",
    get: function() {
      return this._handlerName;
    }
    /**
    * Creates a Transport for sending media.
    *
    * @throws {InvalidStateError} if not loaded.
    * @throws {TypeError} if wrong arguments.
    */
  }, {
    key: "createSendTransport",
    value: function(r) {
      var t = r.iceServers, e = r.iceTransportPolicy, a = r.additionalSettings, n = r.proprietaryConstraints, i = r.appData;
      return sa.debug("createSendTransport()"), this._createTransport({ direction: "send", iceServers: t, iceTransportPolicy: e, additionalSettings: a, proprietaryConstraints: n, appData: i });
    }
    /**
    * Creates a Transport for receiving media.
    *
    * @throws {InvalidStateError} if not loaded.
    * @throws {TypeError} if wrong arguments.
    */
  }, { key: "createRecvTransport", value: function(r) {
    var t = r.iceServers, e = r.iceTransportPolicy, a = r.additionalSettings, n = r.proprietaryConstraints, i = r.appData;
    return sa.debug("createRecvTransport()"), this._createTransport({ direction: "recv", iceServers: t, iceTransportPolicy: e, additionalSettings: a, proprietaryConstraints: n, appData: i });
  } }, { key: "_createTransport", value: function(r) {
    var t = r.direction, e = r.iceServers, a = r.iceTransportPolicy, n = r.additionalSettings, i = r.proprietaryConstraints, s = r.appData, u = Bs(), l = new sC({ id: u, direction: t, iceServers: e, iceTransportPolicy: a, additionalSettings: n, proprietaryConstraints: i, appData: s, handlerFactory: this._handlerFactory });
    return this._observer.emit("newtransport", l), l;
  } }]), o;
}(), ut = /* @__PURE__ */ new K(), dC = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, ut, { writable: !0, value: void 0 }), V(this, ut, c);
  }
  return D(o, [{ key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = { roomUuid: e, displayName: a, prejoined: !1 }, s.next = 3, f(this, ut).sendMessagePromise(Xe.joinRoom, iS.toBinary(n));
            case 3:
              return s.abrupt("return", s.sent.payload);
            case 4:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "connectTransport", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, f(this, ut).sendMessagePromise(Xe.createWebRTCTransport, Bb.toBinary(e));
            case 2:
              return a = p.sent.payload, n = fv.fromBinary(a), i = n.transportId, s = n.description, u = { sdp: s == null ? void 0 : s.sdp, type: s.type }, p.abrupt("return", { transportId: i, answer: u });
            case 6:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "produce", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, f(this, ut).sendMessagePromise(Xe.produce, vS.toBinary(e));
            case 2:
              return i = p.sent.payload, s = eE.fromBinary(i), u = { sdp: s == null || (a = s.description) === null || a === void 0 ? void 0 : a.sdp, type: s == null || (n = s.description) === null || n === void 0 ? void 0 : n.type }, p.abrupt("return", { answer: u, producerId: s.producerId });
            case 6:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "consume", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, ut).sendMessagePromise(Xe.consume, pS.toBinary(e));
            case 2:
              return a = u.sent.payload, n = ZS.fromBinary(a), i = n.consumerIdsMap.map, u.abrupt("return", i);
            case 5:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeProducer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, ut).sendMessagePromise(Xe.closeProducer, TS.toBinary(e));
            case 2:
              return a = u.sent.payload, n = oE.fromBinary(a), i = n.description, u.abrupt("return", i);
            case 5:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "closeConsumer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, f(this, ut).sendMessagePromise(Xe.closeConsumer, SS.toBinary(e));
            case 2:
              return n.abrupt("return", n.sent.payload);
            case 3:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "hostControlForPeer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return n = { audio: a === "audio", screeShare: !1, video: a === "video", participantId: e }, p.next = 3, f(this, ut).sendMessagePromise(Xe.hostControlPeer, AS.toBinary(n));
            case 3:
              if (i = p.sent.payload, i) {
                p.next = 6;
                break;
              }
              return p.abrupt("return", !1);
            case 6:
              return s = fE.fromBinary(i), u = s.status, p.abrupt("return", u === "success");
            case 8:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "hostControlForAll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return a = { audio: e === "audio", screenShare: !1, video: e === "video" }, l.next = 3, f(this, ut).sendMessagePromise(Xe.hostControlAllPeers, OS.toBinary(a));
            case 3:
              if (n = l.sent.payload, n) {
                l.next = 6;
                break;
              }
              return l.abrupt("return", !1);
            case 6:
              return i = gE.fromBinary(n), s = i.status, l.abrupt("return", s === "success");
            case 8:
            case "end":
              return l.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickAll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return e = {}, u.next = 3, f(this, ut).sendMessagePromise(Xe.kickAll, PS.toBinary(e));
            case 3:
              if (a = u.sent.payload, a) {
                u.next = 6;
                break;
              }
              return u.abrupt("return", !1);
            case 6:
              return n = hE.fromBinary(a), i = n.status, u.abrupt("return", i === "success");
            case 8:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickPeer", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, ut).sendMessagePromise(Xe.kickPeer, _S.toBinary(e));
            case 2:
              if (a = u.sent.payload, a) {
                u.next = 5;
                break;
              }
              return u.abrupt("return", !1);
            case 5:
              return n = dE.fromBinary(a), i = n.status, u.abrupt("return", i === "success");
            case 7:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "changeDisplayName", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, ut).sendMessagePromise(Xe.changeDisplayName, IS.toBinary(e));
            case 2:
              if (a = u.sent.payload, a) {
                u.next = 5;
                break;
              }
              return u.abrupt("return", !1);
            case 5:
              return n = kE.fromBinary(a), i = n.status, u.abrupt("return", i === "success");
            case 7:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "notifySelfJoinComplete", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return e = {}, i.next = 3, f(this, ut).sendMessagePromise(Xe.selfJoinComplete, oS.toBinary(e));
            case 3:
              return a = i.sent.payload, i.abrupt("return", KS.fromBinary(a));
            case 5:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), pC = 2e3, hC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), R(b(e), "_device", void 0), R(b(e), "_sendTransport", void 0), R(b(e), "_recvTransport", void 0), R(b(e), "_consumers", void 0), R(b(e), "_producers", void 0), R(b(e), "_producerIdToConsumerIdMap", void 0), R(b(e), "_logger", void 0), R(b(e), "_socket", void 0), R(b(e), "_socketHandler", void 0), R(b(e), "_totalTransportReconnectionCount", void 0), R(b(e), "_transportReconnectFailureCount", void 0), R(b(e), "_consumerCreationFailureCount", void 0), R(b(e), "_producerNotReadyFailureCount", void 0), R(b(e), "_consumerNotBoundFailureCount", void 0), R(b(e), "_transportDisconnectedTimer", void 0), R(b(e), "transportConnectionStatus", void 0), e._device = new lC(), e._logger = da.getLogger("HiveSFUHandler"), e._socket = t, e._socketHandler = new dC(t), e.reset(), e;
  }
  return D(r, [{ key: "socket", get: function() {
    return this._socket;
  } }, { key: "producers", get: function() {
    return this._producers;
  } }, { key: "consumers", get: function() {
    return this._consumers;
  } }, { key: "producerIdToConsumerIdMap", get: function() {
    return this._producerIdToConsumerIdMap;
  } }, { key: "hiveSocketHandler", get: function() {
    return this._socketHandler;
  } }, { key: "sendTransport", get: function() {
    return this._sendTransport;
  } }, { key: "recvTransport", get: function() {
    return this._recvTransport;
  } }, { key: "reset", value: function() {
    this._producers = /* @__PURE__ */ new Map(), this._consumers = /* @__PURE__ */ new Map(), this._producerIdToConsumerIdMap = /* @__PURE__ */ new Map(), this.transportConnectionStatus = /* @__PURE__ */ new Map(), this._transportReconnectFailureCount = 0, this._consumerCreationFailureCount = 0, this._totalTransportReconnectionCount = 0, this._producerNotReadyFailureCount = 0, this._consumerNotBoundFailureCount = 0, this._transportDisconnectedTimer = { consuming: void 0, producing: void 0 };
  } }, { key: "setupTransports", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s = this, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return u = Hr(), v.next = 3, u.getICEServers();
            case 3:
              return l = v.sent, p = n.map(function(m) {
                var g = s.transportConnectionStatus.get(m);
                if (g && !i)
                  return g;
                switch (m) {
                  case "send": {
                    var w = s.createSendTransport({ iceServers: l });
                    return s.transportConnectionStatus.set(m, w), w;
                  }
                  case "recv": {
                    var k = s.createRecvTransport({ iceServers: l });
                    return s.transportConnectionStatus.set(m, k), k;
                  }
                  default:
                    return s._logger.warn("what are you thinking when passing this ".concat(m, "?")), Promise.reject(Error("TYPE_OF_TRANSPORT_UNKNOWN"));
                }
              }), v.abrupt("return", Promise.all(p).finally(function() {
                n.forEach(function(m) {
                  s.transportConnectionStatus.delete(m);
                });
              }));
            case 6:
            case "end":
              return v.stop();
          }
      }, a);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopAllTransports", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              this._logger.info("closing all the transports"), (n = this._sendTransport) === null || n === void 0 || n.close(), (i = this._sendTransport) === null || i === void 0 || i.removeAllListeners(), (s = this._recvTransport) === null || s === void 0 || s.close(), (u = this._recvTransport) === null || u === void 0 || u.removeAllListeners(), this._sendTransport = void 0, this._recvTransport = void 0, this.reset();
            case 8:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createSendTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (!(this._sendTransport && this._sendTransport.connected)) {
                l.next = 3;
                break;
              }
              return this._logger.info("sendTransport::already_exists_in_connected_state"), l.abrupt("return");
            case 3:
              return this._logger.info("sendTransport::initializing_transport"), s = this._device.createSendTransport(n), se.onSafeInitialization(function() {
                se.configureSendTransport(s);
              }), this._transportDisconnectedTimer.producing = void 0, this._logger.info("sendTransport::initialized_transport"), this.handleTransport(s, !1), this._logger.info("sendTransport::connecting_transport"), l.prev = 10, l.next = 13, In(/* @__PURE__ */ function() {
                var p = y(/* @__PURE__ */ d().mark(function h(v) {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return v > 0 && i._logger.debug("retrying transport connect, count:", v), g.prev = 1, g.next = 4, s.connect();
                        case 4:
                          g.next = 10;
                          break;
                        case 6:
                          throw g.prev = 6, g.t0 = g.catch(1), i._logger.error("fail to connect send transport:", s.id, "[Error]:", g.t0), g.t0;
                        case 10:
                        case "end":
                          return g.stop();
                      }
                  }, h, null, [[1, 6]]);
                }));
                return function(h) {
                  return p.apply(this, arguments);
                };
              }(), { delayTime: 100 });
            case 13:
              this._logger.info("sendTransport::connected_transport"), this._transportReconnectFailureCount = Math.max(0, this._transportReconnectFailureCount - 1), this._producerNotReadyFailureCount = 0, this._sendTransport = s, se.onSafeInitialization(function() {
                se.configureSendTransport(s);
              }), l.next = 27;
              break;
            case 20:
              l.prev = 20, l.t0 = l.catch(10), this._logger.error("failed to connect send transport after retry:", s.id, "[Error]:", l.t0), s.close(), s.removeAllListeners(), this._transportReconnectFailureCount += 1, this.handleFailure();
            case 27:
            case "end":
              return l.stop();
          }
      }, a, this, [[10, 20]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createRecvTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (!(this._recvTransport && this._recvTransport.connected)) {
                l.next = 3;
                break;
              }
              return this._logger.info("recvTransport::already_exists_in_connected_state"), l.abrupt("return");
            case 3:
              return this._logger.info("recvTransport::initializing_transport"), s = this._device.createRecvTransport(Q(Q({}, n), {}, { additionalSettings: { rtcAudioJitterBufferMaxPackets: 25, rtcAudioJitterBufferFastAccelerate: !0, rtcAudioJitterBufferMinDelayMs: 20 } })), se.onSafeInitialization(function() {
                se.configureRecvTransport(s);
              }), this._transportDisconnectedTimer.consuming = void 0, this._logger.info("recvTransport::initialized_transport"), this.handleTransport(s, !0), this._logger.info("recvTransport::connecting_transport"), l.prev = 10, l.next = 13, In(/* @__PURE__ */ function() {
                var p = y(/* @__PURE__ */ d().mark(function h(v) {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          return v > 0 && i._logger.debug("retrying transport connect, count:", v), g.prev = 1, g.next = 4, s.connect();
                        case 4:
                          g.next = 10;
                          break;
                        case 6:
                          throw g.prev = 6, g.t0 = g.catch(1), i._logger.error("fail to connect recv transport:", s.id, "[Error]:", g.t0), g.t0;
                        case 10:
                        case "end":
                          return g.stop();
                      }
                  }, h, null, [[1, 6]]);
                }));
                return function(h) {
                  return p.apply(this, arguments);
                };
              }(), { delayTime: 100 });
            case 13:
              this._logger.info("recvTransport::connected_transport"), this._transportReconnectFailureCount = Math.max(0, this._transportReconnectFailureCount - 1), this._consumerCreationFailureCount = 0, this._consumerNotBoundFailureCount = 0, this._recvTransport = s, this.producerIdToConsumerIdMap.clear(), l.next = 28;
              break;
            case 21:
              l.prev = 21, l.t0 = l.catch(10), this._logger.error("failed to connect recv transport after retry:", s.id, "[Error]:", l.t0), s.close(), s.removeAllListeners(), this._transportReconnectFailureCount += 1, this.handleFailure();
            case 28:
            case "end":
              return l.stop();
          }
      }, a, this, [[10, 21]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleTransport", value: function(e, a) {
    var n = this;
    if (e.on("connect", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l, p) {
        var h, v, m, g, w;
        return d().wrap(function(T) {
          for (; ; )
            switch (T.prev = T.next) {
              case 0:
                return h = u.offer, T.prev = 1, v = { consuming: a, description: { sdp: h.sdp, type: h.type, target: a ? Ya.SUBSCRIBER : Ya.PUBLISHER } }, T.next = 5, n._socketHandler.connectTransport(v);
              case 5:
                m = T.sent, g = m.transportId, w = m.answer, e.setServerId(g), l({ answer: w }), T.next = 16;
                break;
              case 12:
                T.prev = 12, T.t0 = T.catch(1), n._logger.error("".concat(a ? "consumer" : "producer", " transport connection error:"), T.t0), p(T.t0);
              case 16:
              case "end":
                return T.stop();
            }
        }, s, null, [[1, 12]]);
      }));
      return function(s, u, l) {
        return i.apply(this, arguments);
      };
    }()), e.on("connectionstatechange", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u) {
        var l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                n._logger.info("".concat(a ? "consumer" : "producer", " transport connectionState:"), u), l = function() {
                  n._transportDisconnectedTimer[a ? "consuming" : "producing"] !== void 0 && (clearTimeout(n._transportDisconnectedTimer[a ? "consuming" : "producing"]), n._transportDisconnectedTimer[a ? "consuming" : "producing"] = void 0);
                }, h.t0 = u, h.next = h.t0 === "connected" ? 5 : h.t0 === "disconnected" ? 7 : h.t0 === "failed" ? 9 : h.t0 === "new" || h.t0 === "closed" ? 14 : 15;
                break;
              case 5:
                return l(), h.abrupt("break", 17);
              case 7:
                return n._transportDisconnectedTimer[a ? "consuming" : "producing"] = setTimeout(function() {
                  n.triggerTransportReconnection(e, a) && $.emit(M.HIVE_TRANSPORT_STATE_CHANGED, { state: u, transportDirection: a ? "recv" : "send" });
                }, pC), h.abrupt("break", 17);
              case 9:
                if (!e.closed) {
                  h.next = 11;
                  break;
                }
                return h.abrupt("return");
              case 11:
                return l(), n.triggerTransportReconnection(e, a) || $.emit(M.HIVE_TRANSPORT_STATE_CHANGED, { state: u, transportDirection: a ? "recv" : "send" }), h.abrupt("break", 17);
              case 14:
                return h.abrupt("break", 17);
              case 15:
                return $.emit(M.HIVE_TRANSPORT_STATE_CHANGED, { state: u, transportDirection: a ? "recv" : "send" }), h.abrupt("break", 17);
              case 17:
              case "end":
                return h.stop();
            }
        }, s);
      }));
      return function(s) {
        return i.apply(this, arguments);
      };
    }()), e.on("icecandidate", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u) {
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                n._logger.debug("sending icecandidate:", u.toJSON());
              case 1:
              case "end":
                return p.stop();
            }
        }, s);
      }));
      return function(s) {
        return i.apply(this, arguments);
      };
    }()), e.on("datachannel:events", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l) {
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                n._logger.debug("got data channel message on event:", l), h.prev = 1, h.t0 = l.type, h.next = h.t0 === "offer" ? 5 : h.t0 === "handshake" ? 7 : h.t0 === "consumer_toggle" ? 9 : h.t0 === "error" ? 11 : 13;
                break;
              case 5:
                return n.negotiateOverDC(l.payload, u, e), h.abrupt("break", 15);
              case 7:
                return u.send(JSON.stringify({ type: "handshake", payload: { message: "pong" } })), h.abrupt("break", 15);
              case 9:
                return n.handleConsumerToggle(l.payload), h.abrupt("break", 15);
              case 11:
                return n.handleErrorOverDC(l.payload), h.abrupt("break", 15);
              case 13:
                return n._logger.warn("unknown event received from hive node, event:", l.type), h.abrupt("break", 15);
              case 15:
                h.next = 20;
                break;
              case 17:
                h.prev = 17, h.t1 = h.catch(1), n._logger.error("Unable to handle the incoming datachannel message on", u.label);
              case 20:
              case "end":
                return h.stop();
            }
        }, s, null, [[1, 17]]);
      }));
      return function(s, u) {
        return i.apply(this, arguments);
      };
    }()), e.on("dc_error", function() {
      e.direction === "recv" && (n._logger.warn("events datachannel did not open in 5s"), n.handleFailure());
    }), e.on("negotiate", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l, p) {
        var h, v, m;
        return d().wrap(function(w) {
          for (; ; )
            switch (w.prev = w.next) {
              case 0:
                return h = u.description, w.prev = 1, v = { sdp: h == null ? void 0 : h.sdp, type: h == null ? void 0 : h.type }, w.next = 5, n.negotiate(e, v);
              case 5:
                m = w.sent, l({ answer: m }), w.next = 13;
                break;
              case 9:
                w.prev = 9, w.t0 = w.catch(1), n._logger.error("negotiate error:", w.t0), p(w.t0);
              case 13:
              case "end":
                return w.stop();
            }
        }, s, null, [[1, 9]]);
      }));
      return function(s, u, l) {
        return i.apply(this, arguments);
      };
    }()), !a) {
      e.on("produce", /* @__PURE__ */ function() {
        var i = y(/* @__PURE__ */ d().mark(function s(u, l, p) {
          var h, v, m, g, w, k, T, _, E, S, C;
          return d().wrap(function(G) {
            for (; ; )
              switch (G.prev = G.next) {
                case 0:
                  return v = u.offer, m = u.kind, g = u.paused, w = u.appData, k = ve.parse(v.sdp), T = k.media.filter(function(j) {
                    return m === "video" ? j.type === "video" : j.type === "audio";
                  }).at(-1).msid, _ = { description: { sdp: v.sdp, type: v.type, target: Ya.PUBLISHER }, paused: g, kind: m, msid: T, screenShare: (h = w.screenShare) !== null && h !== void 0 ? h : !1 }, G.prev = 4, G.next = 7, n._socketHandler.produce(_);
                case 7:
                  E = G.sent, S = E.answer, C = E.producerId, l({ answer: S, producerId: C }), G.next = 17;
                  break;
                case 13:
                  G.prev = 13, G.t0 = G.catch(4), n._logger.error("create producer error:", G.t0), p(G.t0);
                case 17:
                case "end":
                  return G.stop();
              }
          }, s, null, [[4, 13]]);
        }));
        return function(s, u, l) {
          return i.apply(this, arguments);
        };
      }());
      return;
    }
    e.on("datachannel:negotiation", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l) {
        var p, h;
        return d().wrap(function(m) {
          for (; ; )
            switch (m.prev = m.next) {
              case 0:
                return m.prev = 0, n._logger.info("datachannel message recieved:", u.label, l), p = { sdp: l, type: "offer" }, m.next = 5, e.setRemoteOffer(p);
              case 5:
                h = m.sent, n._logger.info("datachannel answer:", h), u.send(h.sdp), m.next = 13;
                break;
              case 10:
                m.prev = 10, m.t0 = m.catch(0), n._logger.error("datachannel:negotiation::Error:", m.t0);
              case 13:
              case "end":
                return m.stop();
            }
        }, s, null, [[0, 10]]);
      }));
      return function(s, u) {
        return i.apply(this, arguments);
      };
    }()), e.on("consumePeer", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l, p) {
        var h, v, m, g;
        return d().wrap(function(k) {
          for (; ; )
            switch (k.prev = k.next) {
              case 0:
                return h = u.producingPeerId, n._logger.info("consumePeer:", h), v = { producingPeerId: h }, k.prev = 3, k.next = 6, n._socketHandler.consume(v);
              case 6:
                m = k.sent, n._logger.debug("consumePeer response for ".concat(h, ":"), { consumerStateMap: m }), g = /* @__PURE__ */ new Map(), Object.entries(m).forEach(function(T) {
                  var _, E, S, C = ar(T, 2), L = C[0], G = C[1];
                  g.set(L, { consumerId: G.consumerId, trackId: (_ = G.producerTrack) === null || _ === void 0 ? void 0 : _.trackId, streamId: G.producerTrack.streamId, kind: G.producerState.kind === Vt.VIDEO ? "video" : "audio", screenShare: (E = G.producerState) === null || E === void 0 ? void 0 : E.screenShare, paused: (S = G.producerState) === null || S === void 0 ? void 0 : S.pause });
                }), l({ consumersMap: g }), k.next = 17;
                break;
              case 13:
                k.prev = 13, k.t0 = k.catch(3), n._logger.error("consumePeer error:", k.t0), p(k.t0);
              case 17:
              case "end":
                return k.stop();
            }
        }, s, null, [[3, 13]]);
      }));
      return function(s, u, l) {
        return i.apply(this, arguments);
      };
    }()), e.on("consume", /* @__PURE__ */ function() {
      var i = y(/* @__PURE__ */ d().mark(function s(u, l, p) {
        var h, v, m, g, w, k, T, _, E;
        return d().wrap(function(C) {
          for (; ; )
            switch (C.prev = C.next) {
              case 0:
                return h = u.producerId, v = u.producingPeerId, m = { producingPeerId: v, producerId: h }, C.prev = 2, C.next = 5, n._socketHandler.consume(m);
              case 5:
                _ = C.sent, E = _[h], n._logger.info("consumer create response:", { consumerState: E, paused: (g = E.producerState) === null || g === void 0 ? void 0 : g.pause }), l({ consumerId: E.consumerId, screenShare: (w = E.producerState) === null || w === void 0 ? void 0 : w.screenShare, trackId: (k = E.producerTrack) === null || k === void 0 ? void 0 : k.trackId, streamId: E.producerTrack.streamId, kind: E.producerState.kind === Vt.VIDEO ? "video" : "audio", paused: (T = E.producerState) === null || T === void 0 ? void 0 : T.pause }), C.next = 15;
                break;
              case 11:
                C.prev = 11, C.t0 = C.catch(2), n._logger.error("error during consuming on server:", C.t0), p(C.t0);
              case 15:
              case "end":
                return C.stop();
            }
        }, s, null, [[2, 11]]);
      }));
      return function(s, u, l) {
        return i.apply(this, arguments);
      };
    }());
  } }, {
    key: "createProducer",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
        var u = this, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (!(this._sendTransport === void 0 || this._sendTransport.closed)) {
                  h.next = 2;
                  break;
                }
                return h.abrupt("return", null);
              case 2:
                return h.next = 4, this._sendTransport.produce(i);
              case 4:
                return l = h.sent, l.on("close", /* @__PURE__ */ function() {
                  var v = y(/* @__PURE__ */ d().mark(function m(g, w, k) {
                    var T, _, E;
                    return d().wrap(function(C) {
                      for (; ; )
                        switch (C.prev = C.next) {
                          case 0:
                            return u._logger.info("producer id:", l.id, "closed with reason:", k), T = { producerId: l.id, description: { sdp: g.sdp, type: g.type, target: Ya.PUBLISHER } }, C.prev = 2, C.next = 5, u._socketHandler.closeProducer(T);
                          case 5:
                            _ = C.sent, u._logger.info("response", _), E = { sdp: _ == null ? void 0 : _.sdp, type: _ == null ? void 0 : _.type }, w(E), C.next = 14;
                            break;
                          case 11:
                            C.prev = 11, C.t0 = C.catch(2), u._logger.error("producer close error:", C.t0);
                          case 14:
                            u._producers.delete(n), s(), n === ye.SCREENSHARE_VIDEO && u._switchWebcamLayers(3);
                          case 17:
                          case "end":
                            return C.stop();
                        }
                    }, m, null, [[2, 11]]);
                  }));
                  return function(m, g, w) {
                    return v.apply(this, arguments);
                  };
                }()), l.on("trackended", function() {
                  P.info("producer::trackended", { producer: { id: l == null ? void 0 : l.id, kind: n, status: "UNKNOWN", appData: l == null ? void 0 : l.appData } }), [ye.MIC, ye.WEBCAM].includes(n) || s();
                }), this._producers.set(n, l), this._producers.has(ye.SCREENSHARE_VIDEO) && this._switchWebcamLayers(0), h.abrupt("return", l.track);
              case 10:
              case "end":
                return h.stop();
            }
        }, a, this);
      }));
      function e(a, n, i) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * switches spatial layers of webcam
    * @layer can be number from 0-3. It will set the max spatial
    * layer to that number.
    * If you pass layer value 0 then there will be only 1 active encoding
    * higher values means more active encodings.
    */
  }, { key: "_switchWebcamLayers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._producers.get(ye.WEBCAM), i) {
                u.next = 3;
                break;
              }
              return u.abrupt("return");
            case 3:
              return u.prev = 3, this._logger.debug("switching layer of webcam producer to:", n), u.next = 7, i.setMaxSpatialLayer(n);
            case 7:
              u.next = 12;
              break;
            case 9:
              u.prev = 9, u.t0 = u.catch(3), this._logger.error("failed to switch spatial layer", u.t0);
            case 12:
            case "end":
              return u.stop();
          }
      }, a, this, [[3, 9]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_initConsumer", value: function(e) {
    var a = this;
    e && (e.observer.on("close", /* @__PURE__ */ function() {
      var n = y(/* @__PURE__ */ d().mark(function i(s) {
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                a._logger.debug("consumer closed", s), a._consumers.delete(e.id), $.emit(M.CONSUMER_CLOSED, { id: e.id });
              case 3:
              case "end":
                return l.stop();
            }
        }, i);
      }));
      return function(i) {
        return n.apply(this, arguments);
      };
    }()), this._consumers.set(e.id, e), this.producerIdToConsumerIdMap.set(e.producerId, e.id), $.emit(M.NEW_CONSUMER, { id: e.id }));
  } }, { key: "consumePeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(this._recvTransport === void 0 || this._recvTransport.closed || !this._recvTransport.connected)) {
                u.next = 2;
                break;
              }
              throw Error("Receiving transport not connected");
            case 2:
              return u.next = 4, In(/* @__PURE__ */ function() {
                var l = y(/* @__PURE__ */ d().mark(function p(h) {
                  var v, m;
                  return d().wrap(function(w) {
                    for (; ; )
                      switch (w.prev = w.next) {
                        case 0:
                          return h > 0 && i._logger.debug("retrying consumePeer call, retryCount:", h), w.prev = 1, w.next = 4, i._recvTransport.consumePeer(n);
                        case 4:
                          v = w.sent, m = [], v.forEach(function(k) {
                            k.status === "rejected" ? m.push(k.reason) : i._initConsumer(k.value);
                          }), i._recvTransport.retryFailedConsumerCreationTasks(m).then(function(k) {
                            k.forEach(function(T) {
                              T.status === "rejected" ? (i._logger.error("consumer creation task is failing", T.reason), i._consumerCreationFailureCount += 1, setTimeout(i.handleFailure.bind(i), 0)) : i._initConsumer(T.value);
                            });
                          }), w.next = 14;
                          break;
                        case 10:
                          throw w.prev = 10, w.t0 = w.catch(1), i._logger.error("got error in consumePeer", w.t0), w.t0;
                        case 14:
                        case "end":
                          return w.stop();
                      }
                  }, p, null, [[1, 10]]);
                }));
                return function(p) {
                  return l.apply(this, arguments);
                };
              }()).catch(function(l) {
                i._logger.error("consumePeer failed after retries", l), i._consumerCreationFailureCount += 1, i.handleFailure();
              });
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (!(this._recvTransport === void 0 || this._recvTransport.closed || !this._recvTransport.connected)) {
                v.next = 2;
                break;
              }
              return v.abrupt("return");
            case 2:
              if (s = n.producerId, u = n.producingPeerId, l = n.appData, p = this.getProducer(s), !p) {
                v.next = 7;
                break;
              }
              return this._logger.warn("why are you creating a consumer for local producer?"), v.abrupt("return");
            case 7:
              return v.next = 9, In(/* @__PURE__ */ function() {
                var m = y(/* @__PURE__ */ d().mark(function g(w) {
                  var k;
                  return d().wrap(function(_) {
                    for (; ; )
                      switch (_.prev = _.next) {
                        case 0:
                          return w > 0 && i._logger.debug("retrying createConsumer call, retryCount:", w), _.next = 3, i._recvTransport.consume({ producerId: s, producingPeerId: u, appData: Q(Q({}, l), {}, { peerId: u }) });
                        case 3:
                          k = _.sent, i._initConsumer(k);
                        case 5:
                        case "end":
                          return _.stop();
                      }
                  }, g);
                }));
                return function(g) {
                  return m.apply(this, arguments);
                };
              }()).catch(function(m) {
                i._logger.error("createConsumer failed after retries", m), i._consumerCreationFailureCount += 1, i.handleFailure();
              });
            case 9:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._producers.get(n), i) {
                u.next = 4;
                break;
              }
              return this._logger.warn("producer type:", n, "not found"), u.abrupt("return");
            case 4:
              i.pause(), this._logger.info(n, "producer id:", i.id, "paused");
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._producers.get(n), i) {
                u.next = 4;
                break;
              }
              return this._logger.warn("producer type:", n, "not found"), u.abrupt("return");
            case 4:
              i.resume(), this._logger.info(n, "producer id:", i.id, "resumed");
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "replaceTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (s = this._producers.get(n), s) {
                l.next = 4;
                break;
              }
              return this._logger.warn("producer type:", n, "not found"), l.abrupt("return");
            case 4:
              return l.next = 6, s.replaceTrack({ track: i });
            case 6:
              this._logger.info("track replaced with id:", i.id, "on producer:", n);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (s = this._producers.get(n), s) {
                l.next = 4;
                break;
              }
              return this._logger.warn("producer type:", n, "not found"), l.abrupt("return");
            case 4:
              i && s.track.stop(), s.close();
            case 6:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this._consumers.get(n), i) {
                u.next = 4;
                break;
              }
              return this._logger.warn("consumer id:", n, "not found"), u.abrupt("return");
            case 4:
              this.toggleConsumerOverDC(n, !0);
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "pauseConsumerOverSocket",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return u.prev = 0, i = { consumerId: n.id, pause: !0 }, u.next = 4, this.socket.sendMessagePromise(Xe.toggleConsumer, op.toBinary(i));
              case 4:
                n.pause(), $.emit(M.CONSUMER_PAUSED, { id: n.id }), this._logger.info("consumer:", n.id, "paused"), u.next = 12;
                break;
              case 9:
                u.prev = 9, u.t0 = u.catch(0), this._logger.error("error on pausing consumer", u.t0);
              case 12:
              case "end":
                return u.stop();
            }
        }, a, this, [[0, 9]]);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // Experimental
  }, { key: "toggleConsumerOverDC", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (s = { type: "consumer_toggle", payload: { consumerId: n, mute: i } }, u = this._recvTransport.getDatachannel("events"), u) {
                p.next = 5;
                break;
              }
              return this._logger.warn("events datachannel not found"), p.abrupt("return");
            case 5:
              u.send(JSON.stringify(s));
            case 6:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "resumeConsumer",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (i = this._consumers.get(n), i) {
                  l.next = 4;
                  break;
                }
                return this._logger.warn("consumer id:", n, "not found"), l.abrupt("return");
              case 4:
                if (i.paused) {
                  l.next = 7;
                  break;
                }
                return this._logger.warn("consumer is not paused so not resuming", n), l.abrupt("return");
              case 7:
                return l.prev = 7, s = { consumerId: n, pause: !1 }, l.next = 11, this.socket.sendMessagePromise(Xe.toggleConsumer, op.toBinary(s));
              case 11:
                i.resume(), $.emit(M.CONSUMER_RESUMED, { id: i.id }), this._logger.info("consumer:", n, "resumed"), l.next = 19;
                break;
              case 16:
                l.prev = 16, l.t0 = l.catch(7), this._logger.error("error on resuming consumer", l.t0);
              case 19:
              case "end":
                return l.stop();
            }
        }, a, this, [[7, 16]]);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // if force is true it will close the consumer irrespective of failure in
    // close consumer request
  }, {
    key: "closeConsumer",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return u.abrupt("return", this.closeConsumers([n], i));
              case 1:
              case "end":
                return u.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // if force is true it will close the consumer irrespective of failure in
    // close consumer request
  }, { key: "closeConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v = arguments;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (s = v.length > 1 && v[1] !== void 0 ? v[1] : !1, this._logger.info("Closing consumers:", n, "with force:", s), u = !0, l = n.filter(function(w) {
                var k = i._consumers.get(w);
                return k ? !0 : (i._logger.warn("consumer id:", w, "not found"), !1);
              }), p = { consumerIds: l }, h = /* @__PURE__ */ function() {
                var w = y(/* @__PURE__ */ d().mark(function k() {
                  var T;
                  return d().wrap(function(E) {
                    for (; ; )
                      switch (E.prev = E.next) {
                        case 0:
                          return E.abrupt("return", (T = i._recvTransport) === null || T === void 0 ? void 0 : T.awaitQueue.push(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function S() {
                            return d().wrap(function(L) {
                              for (; ; )
                                switch (L.prev = L.next) {
                                  case 0:
                                    return L.next = 2, i._socketHandler.closeConsumer(p);
                                  case 2:
                                  case "end":
                                    return L.stop();
                                }
                            }, S);
                          })), "close_consumer").catch(function(S) {
                            i._logger.warn("error on closing consumer:", S), u = s;
                          }));
                        case 1:
                        case "end":
                          return E.stop();
                      }
                  }, k);
                }));
                return function() {
                  return w.apply(this, arguments);
                };
              }(), s) {
                g.next = 11;
                break;
              }
              return g.next = 9, h();
            case 9:
              g.next = 12;
              break;
            case 11:
              h();
            case 12:
              u && l.forEach(function(w) {
                var k = i.consumers.get(w);
                i.producerIdToConsumerIdMap.delete(k.producerId), k.close(s ? "force closed" : void 0);
              });
            case 13:
            case "end":
              return g.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "cleanupConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              this._logger.debug("cleaning up all consumers"), i = [], this._consumers.forEach(function(l) {
                n ? l.peerId === n && i.push(l.id) : i.push(l.id);
              }), this.closeConsumers(i, !0);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopAllProducers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this._logger.info("stopping all available producers"), this._producers.forEach(function(u, l) {
                n._logger.debug("closing producer type", l), u.close();
              });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getProducer", value: function(e) {
    return Array.from(this.producers.values()).filter(function(a) {
      return a.id === e;
    }).at(0);
  } }, { key: "hasProducer", value: function(e) {
    return this.getProducer(e) !== void 0;
  } }, { key: "negotiate", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return this._logger.info("setting remote offer :", i, "on transport", n.serverId), p.next = 3, n.setRemoteOffer(i);
            case 3:
              return s = p.sent, u = { transportId: n.serverId, description: { sdp: s.sdp, type: s.type, target: Ya.SUBSCRIBER } }, this._logger.info("sending renegotiate request", u), p.next = 8, this.socket.sendMessagePromise(Xe.renegotiateSessionDescription, Jb.toBinary(u));
            case 8:
              return this._logger.info("renegotiation done", n.serverId), p.abrupt("return", s);
            case 10:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "negotiateOverDC", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return u = { sdp: n.sdp, type: "offer" }, v.prev = 1, v.next = 4, s.setRemoteOffer(u);
            case 4:
              p = v.sent, l = { type: "answer", payload: { type: p.type, sdp: p.sdp } }, v.next = 12;
              break;
            case 8:
              v.prev = 8, v.t0 = v.catch(1), this._logger.error("datachannel:events::Error:", v.t0), l = { type: "error", payload: { error: v.t0.message } };
            case 12:
              this._logger.debug("datachannel answer:", l), i.send(JSON.stringify(l));
            case 14:
            case "end":
              return v.stop();
          }
      }, a, this, [[1, 8]]);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleConsumerToggle", value: function(e) {
    var a = e.mute, n = e.trackId;
    this._logger.info("consumer toggled for", n, "muted:", a);
    var i = this.consumers.get(n);
    if (!i) {
      this._logger.warn("consumer with id", n, " not found");
      return;
    }
    i.paused !== a && (this._logger.debug("consumer state is not same", { consumerPaused: i.paused, mute: a }), a ? (i.pause(), $.emit(M.CONSUMER_PAUSED, { id: i.id })) : (i.resume(), $.emit(M.CONSUMER_RESUMED, { id: i.id })));
  } }, { key: "handleErrorOverDC", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (this._logger.error("got error over dc:", n), s = n.type, u = n.error, l = n.id, s !== "consumer") {
                w.next = 23;
                break;
              }
              if (u !== "bind-fail") {
                w.next = 21;
                break;
              }
              if (!(this._consumerNotBoundFailureCount >= 2)) {
                w.next = 7;
                break;
              }
              return this.handleFailure(), w.abrupt("return");
            case 7:
              if (this._consumerNotBoundFailureCount += 1, p = this.consumers.get(l), p) {
                w.next = 11;
                break;
              }
              return w.abrupt("return");
            case 11:
              return w.prev = 11, w.next = 14, this.closeConsumer(p.id);
            case 14:
              return w.next = 16, this.createConsumer({ producerId: p.producerId, producingPeerId: p.peerId, appData: p.appData });
            case 16:
              w.next = 21;
              break;
            case 18:
              w.prev = 18, w.t0 = w.catch(11), this._logger.error("failed to recreate consumer on downtrack bound failure, consumerID:", p.id, "producerId:", p.producerId, "error:", w.t0);
            case 21:
              w.next = 34;
              break;
            case 23:
              if (s !== "producer") {
                w.next = 34;
                break;
              }
              if (u !== "ready-fail") {
                w.next = 34;
                break;
              }
              if (!(this._producerNotReadyFailureCount >= 2)) {
                w.next = 28;
                break;
              }
              return this.handleFailure(), w.abrupt("return");
            case 28:
              if (this._producerNotReadyFailureCount += 1, h = Array.from(this.producers.entries()).find(function(k) {
                return k[1].id === l;
              }), v = ar(h, 1), m = v[0], m) {
                w.next = 32;
                break;
              }
              return w.abrupt("return");
            case 32:
              return w.next = 34, this.removeProducer(m).catch(function(k) {
                i._logger.error("failed to remove ready-fail producer:", l, "error:", k);
              });
            case 34:
            case "end":
              return w.stop();
          }
      }, a, this, [[11, 18]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleFailure", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!(this._transportReconnectFailureCount > 0 || ((n = this._recvTransport) === null || n === void 0 ? void 0 : n.eventsDCReady) === !1 || this._totalTransportReconnectionCount > 3)) {
                s.next = 4;
                break;
              }
              return this._logger.warn("transport failure detected"), ue.hasFeature(de.ENABLE_HIVE_EXPERIMENTAL_FAIL_RECOVERY) && (this._logger.debug("rejoining room"), this.emit("rejoin")), s.abrupt("return");
            case 4:
              (this._consumerCreationFailureCount > 0 || this._consumerNotBoundFailureCount >= 2) && (this._logger.warn("consumer creation failure detected or consumer not bound failure increased"), ue.hasFeature(de.ENABLE_HIVE_EXPERIMENTAL_FAIL_RECOVERY) && (this._logger.debug("reconnecting recv transport"), this._totalTransportReconnectionCount += 1, this.emit("reconnect_transport", this._recvTransport))), this._producerNotReadyFailureCount >= 2 && (this._logger.warn("producer receiver not getting added needs to reconnect send transport"), this._totalTransportReconnectionCount += 1, this.emit("reconnect_transport", this._sendTransport));
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "triggerTransportReconnection", value: function(e, a) {
    return this._logger.info("".concat(a ? "consumer" : "producer", " transport, reconnecting..."), "transport id:", e.id, "serverid:", e.serverId), ue.hasFeature(de.ENABLE_HIVE_TRANSPORT_RECONNECTION_ON_ICE_FAILED) ? ($.emit(M.HIVE_TRANSPORT_STATE_CHANGED, { state: "reconnecting", transportDirection: a ? "recv" : "send" }), this.emit("reconnect_transport", e), !0) : !1;
  } }]), r;
}(XP), vC = Object.defineProperty, fC = Object.getOwnPropertyDescriptor, Qe = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? fC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && vC(r, t, a), a;
}, mC = (Lr = /* @__PURE__ */ new K(), Ze = /* @__PURE__ */ new K(), Wi = /* @__PURE__ */ new K(), Ua = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    I(this, r), e = c.call(this), z(b(e), Lr, { writable: !0, value: void 0 }), z(b(e), Ze, { writable: !0, value: void 0 }), z(b(e), Wi, { writable: !0, value: void 0 }), z(b(e), Ua, { writable: !0, value: void 0 }), R(b(e), "legacyMode", void 0), R(b(e), "roomNodeUrl", void 0), R(b(e), "peerDisplayName", void 0), R(b(e), "screenshareConsumerProducer", void 0), R(b(e), "activatedProducingPeerIds", void 0), R(b(e), "logger", void 0), R(b(e), "_totalRejoinCount", void 0), R(b(e), "_transportQueue", void 0);
    var a = t.roomName, n = t.peerId, i = t.authToken, s = t.legacyMode, u = t.socketClient, l = t.meetingTitle;
    return e.roomName = a, e.peerId = n, e.authToken = i, e.legacyMode = s, e.roomJoined = !1, e.mediaConnected = !!u.isConnected, e.meetingTitle = l, V(b(e), Ua, !1), V(b(e), Lr, u), V(b(e), Ze, new hC(u)), e.maxPreferredStreams = 6, e.activatedProducingPeerIds = /* @__PURE__ */ new Set(), e.screenshareConsumerProducer = /* @__PURE__ */ new Set(), e.logger = da.getLogger("HiveNodeClient()"), e._totalRejoinCount = 0, e._transportQueue = new Fs(), se.legacySwitch(s), e.handleSocketEvents(), e.handleSFUEvents(), V(b(e), Wi, function() {
      e.logger.info("noop reconnection handler");
    }), e;
  }
  return D(r, [{ key: "sfuHandler", get: function() {
    return f(this, Ze);
  } }, { key: "onSocketReconnection", set: function(e) {
    V(this, Wi, e);
  } }, { key: "reset", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return this.activatedProducingPeerIds.clear(), this._transportQueue.stop(), i.next = 4, this.sfuHandler.stopAllTransports();
            case 4:
              this.sfuHandler.reset(), this._transportQueue = new Fs();
            case 6:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "reconnectTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.logger.info("Room joining state", f(this, Ua)), !(!n || f(this, Ua))) {
                s.next = 3;
                break;
              }
              return s.abrupt("return");
            case 3:
              if (n.close(), n.removeAllListeners(), n.direction !== "send") {
                s.next = 11;
                break;
              }
              return s.next = 8, this.sfuHandler.setupTransports(["send"]);
            case 8:
              return this.logger.info("send transport reconected!"), $.emit(M.RESET_PRODUCER_STATE), s.abrupt("return");
            case 11:
              return s.next = 13, this.sfuHandler.setupTransports(["recv"]);
            case 13:
              this.logger.info("recv transport reconnected!"), this.activatedProducingPeerIds = /* @__PURE__ */ new Set(), $.emit(M.REFRESH_GRID, !0);
            case 16:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupTransports", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i = arguments;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return n = i.length > 0 && i[0] !== void 0 ? i[0] : !1, u.next = 3, f(this, Ze).setupTransports(["recv", "send"], n);
            case 3:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "joinRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s, u) {
      var l = this, p, h = arguments;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return p = h.length > 4 && h[4] !== void 0 ? h[4] : {}, V(this, Ua, !0), this.reset(), m.abrupt("return", this._transportQueue.push(function() {
                return l._joinRoom(n, s, p);
              }, "joinRoom"));
            case 4:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a, n, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "_joinRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s = this, u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return u = p.length > 2 && p[2] !== void 0 ? p[2] : {}, this.peerDisplayName = n, v.prev = 2, v.next = 5, this.sfuHandler.hiveSocketHandler.joinRoom(i, n);
            case 5:
              return v.next = 7, this.setupTransports(!0);
            case 7:
              return ue.hasFeature(de.INTERNAL_CALL_STATS) && navigator.product !== "ReactNative" && setTimeout(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function m() {
                var g, w, k, T, _;
                return d().wrap(function(S) {
                  for (; ; )
                    switch (S.prev = S.next) {
                      case 0:
                        return w = Hr(), S.next = 3, w.getUserDetails();
                      case 3:
                        k = S.sent, T = Le.isV2AuthToken ? k.participant : k, _ = { userId: (g = T.id) !== null && g !== void 0 ? g : T.participant.id, peerId: s.peerId, displayName: n, roomUUID: s.roomUUID, roomViewType: "groupCall", roomName: s.roomName, deviceInfo: Q(Q({}, ze.getDeviceInfo()), {}, { userAgent: navigator.userAgent, memory: navigator.deviceMemory, cpus: navigator.hardwareConcurrency }), sdkName: yl, sdkVersion: Ys, metaData: {}, permissions: {} }, se.roomJoined(_), u != null && u.audio ? se.audioOn() : se.audioOff(), u != null && u.video ? se.videoOn() : se.videoOff();
                      case 9:
                      case "end":
                        return S.stop();
                    }
                }, m);
              }))), v.next = 10, this.completeJoinRoom();
            case 10:
              return l = v.sent, v.abrupt("return", { roomJoined: l });
            case 14:
              return v.prev = 14, v.t0 = v.catch(2), this.logger.error("error on sending join room request", v.t0), v.abrupt("return", { roomJoined: !1 });
            case 18:
            case "end":
              return v.stop();
          }
      }, a, this, [[2, 14]]);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "completeJoinRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u, l, p, h, v, m, g, w;
      return d().wrap(function(T) {
        for (; ; )
          switch (T.prev = T.next) {
            case 0:
              return T.prev = 0, T.next = 3, this.sfuHandler.hiveSocketHandler.notifySelfJoinComplete();
            case 3:
              return i = T.sent, s = i.maxPreferredStreams, u = i.participants, l = i.roomState, p = i.selectedPeers, this.logger.debug("peerJoinCompleteResponse", { participants: u, roomState: l, selectedPeers: p }), this.roomUUID = l.roomUuid, this.maxPreferredStreams = s != null ? s : 6, h = u.map(function(_) {
                var E = _.producerStates, S = { id: _.peerId, isHost: !1, displayName: _.displayName, flags: {}, userId: _.userId, audioMuted: !0, videoEnabled: !1, audioTrack: null, videoTrack: null, producers: [] };
                return E.forEach(function(C) {
                  C.kind === Vt.AUDIO ? S.audioMuted = C.pause : S.videoEnabled = !C.pause, S.producers.push({ producerId: C.producerId, kind: C.kind === Vt.AUDIO ? "audio" : "video", pause: C.pause, screenShare: C.screenShare });
                }), S;
              }), v = p != null ? p : {}, m = v.audioPeers, g = v.compulsoryPeers, w = h.filter(function(_) {
                return _.id !== n.peerId;
              }), V(this, Ua, !1), this.roomJoined = !0, this.mediaConnected = f(this, Lr).isConnected, P.info("HiveNodeClient::joinRoom::pre_emitasync_room_joined"), T.next = 20, $.emitAsync(M.ROOM_JOINED, { peers: w });
            case 20:
              return l.pinnedPeerIds.length !== 0 && $.emit(M.PEER_PINNED, { peerId: l.pinnedPeerIds[0] }), P.info("HiveNodeClient::joinRoom::post_emitasync_room_joined"), $.emit(M.SELF_ROOM_JOINED), $.emit(M.SELECTED_PEERS, { peerIds: m != null ? m : [], compulsoryPeers: g }), $.emit(M.REFRESH_GRID, !0), T.abrupt("return", !0);
            case 28:
              return T.prev = 28, T.t0 = T.catch(0), this.logger.error("error on completing join room:", T.t0), T.abrupt("return", !1);
            case 32:
            case "end":
              return T.stop();
          }
      }, a, this, [[0, 28]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, Ze).stopAllTransports();
            case 2:
              i = { closeRoom: !1 }, f(this, Lr).sendMessagePromise(Xe.leaveRoom, cS.toBinary(i)).then(function(l) {
                var p, h = (p = QS.fromBinary(l.payload)) === null || p === void 0 ? void 0 : p.closed;
                h || n.logger.warn("weird state on peer closed and should not happen");
              }).catch(function(l) {
                n.logger.error("error on sending leave room request", l);
              }), se.callEnded(), A.destruct();
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getConsumers", value: function() {
    return f(this, Ze).consumers;
  } }, { key: "activatePeers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return s = n.map(function(p) {
                var h = p.peerId, v = p.producers, m = p.force;
                if (v.length === 0)
                  return Promise.resolve();
                if (m)
                  return i.consumePeer(h, m);
                var g = [], w = v.every(function(k) {
                  var T = i.sfuHandler.producerIdToConsumerIdMap.get(k.producerId);
                  if (!T)
                    return !1;
                  var _ = i.sfuHandler.consumers.get(T);
                  return _ && !k.pause && _.paused && g.push(T), !0;
                });
                return w ? g.length > 0 ? i.resumeConsumers(g) : Promise.resolve() : i.consumePeer(h);
              }), l.next = 3, Promise.all(s);
            case 3:
            case "end":
              return l.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "deactivatePeers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.logger.info("deactivating producers", n), s = n.producers.some(function(p) {
                return p.screenShare && p.kind === "video";
              }), !s) {
                l.next = 5;
                break;
              }
              return this.logger.debug("peer is screensharing can't deactivate"), l.abrupt("return");
            case 5:
              n.producers.forEach(function(p) {
                var h = p.producerId, v = p.kind;
                if (v === "audio") {
                  i.logger.debug("we don't want to deactive audio consumers");
                  return;
                }
                var m = i.sfuHandler.producerIdToConsumerIdMap.get(h);
                if (!m) {
                  i.logger.warn("consumer not found in deactivate producers:", h);
                  return;
                }
                i.sfuHandler.closeConsumer(m);
              }), this.activatedProducingPeerIds.delete(n.peerId);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return i = n.producerId, s = n.producingPeerId, u = n.screenShare, p.abrupt("return", this.sfuHandler.createConsumer({ producerId: i, producingPeerId: s, appData: { screenShare: u } }));
            case 2:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              n.forEach(function(l) {
                i.sfuHandler.pauseConsumer(l);
              });
            case 1:
            case "end":
              return u.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              n.forEach(function(l) {
                i.sfuHandler.resumeConsumer(l);
              });
            case 1:
            case "end":
              return u.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "closeConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return s = Array.from(this.getConsumers().values()).filter(function(p) {
                return n.includes(p.peerId);
              }).map(function(p) {
                return p.id;
              }), n.forEach(function(p) {
                i.activatedProducingPeerIds.delete(p);
              }), l.abrupt("return", this.sfuHandler.closeConsumers(s));
            case 3:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "consumePeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.logger.info("current activated Peer ids", Array.from(this.activatedProducingPeerIds.values()), "forced?:", i), !(!this.activatedProducingPeerIds.has(n) || i)) {
                u.next = 13;
                break;
              }
              return u.prev = 2, u.next = 5, f(this, Ze).consumePeer(n);
            case 5:
              this.activatedProducingPeerIds.add(n), u.next = 11;
              break;
            case 8:
              u.prev = 8, u.t0 = u.catch(2), this.logger.error("consumePeer failed in HiveNodeClient.ts", u.t0);
            case 11:
              u.next = 14;
              break;
            case 13:
              this.logger.info("not creating consumer for this peerId", n);
            case 14:
            case "end":
              return u.stop();
          }
      }, a, this, [[2, 8]]);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (n !== void 0) {
                v.next = 2;
                break;
              }
              return v.abrupt("return", null);
            case 2:
              if (!f(this, Ze).producers.has(ye.WEBCAM)) {
                v.next = 12;
                break;
              }
              if (s = f(this, Ze).producers.get(ye.WEBCAM), !(!s.closed && !navigator.isReactNative)) {
                v.next = 10;
                break;
              }
              return v.next = 7, s.replaceTrack({ track: n });
            case 7:
              return v.next = 9, this.resumeWebcam();
            case 9:
              return v.abrupt("return", null);
            case 10:
              return v.next = 12, f(this, Ze).removeProducer(s.id);
            case 12:
              return u = { track: n, codecOptions: { name: "VP8" }, appData: { screenShare: !1 }, stopTracks: !1 }, ue.hasFeature(de.ENABLE_HIVE_SIMULCAST) && (l = n.getConstraints().width, l in zd || (l = 320), u.encodings = zd[l]), p = function() {
                i.disableWebcam();
              }, v.abrupt("return", f(this, Ze).createProducer(ye.WEBCAM, u, p));
            case 16:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareScreen", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              if (s = n.video, u = n.audio, s !== void 0) {
                m.next = 3;
                break;
              }
              return m.abrupt("return");
            case 3:
              return l = { track: s, codecOptions: { name: "VP8" }, appData: { screenShare: !0, supportsRemoteControl: ze.isElectron() }, stopTracks: !1 }, p = function() {
                i.disableScreenShare();
              }, se.screenShareRequested(), m.next = 8, f(this, Ze).createProducer(ye.SCREENSHARE_VIDEO, l, p);
            case 8:
              if (!u) {
                m.next = 13;
                break;
              }
              return h = { track: u, codecOptions: { name: "opus" }, appData: { screenShare: !0, supportsRemoteControl: ze.isElectron() }, stopTracks: !1, zeroRtpOnPause: !0 }, p = function() {
              }, m.next = 13, f(this, Ze).createProducer(ye.SCREENSHARE_AUDIO, h, p);
            case 13:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (h.prev = 0, n !== void 0) {
                h.next = 3;
                break;
              }
              throw new Tt("track undefined");
            case 3:
              if (!f(this, Ze).producers.has(ye.MIC)) {
                h.next = 13;
                break;
              }
              if (s = f(this, Ze).producers.get(ye.MIC), !(!s.closed && !navigator.isReactNative)) {
                h.next = 11;
                break;
              }
              return h.next = 8, s.replaceTrack({ track: n });
            case 8:
              return h.next = 10, this.resumeMic();
            case 10:
              return h.abrupt("return");
            case 11:
              return h.next = 13, f(this, Ze).removeProducer(ye.MIC, !1);
            case 13:
              return u = { track: n, encodings: [{ priority: "high" }], codecOptions: { name: "opus" }, stopTracks: !1, zeroRtpOnPause: !0 }, l = function() {
                i.disableMic();
              }, h.next = 17, f(this, Ze).createProducer(ye.MIC, u, l);
            case 17:
              h.next = 22;
              break;
            case 19:
              throw h.prev = 19, h.t0 = h.catch(0), new q(h.t0);
            case 22:
            case "end":
              return h.stop();
          }
      }, a, this, [[0, 19]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseMic", value: function() {
    var e = f(this, Ze).producers.get(ye.MIC);
    if (!e) {
      P.error("pauseMic::could_not_find_mic_producer");
      return;
    }
    if (e.paused) {
      P.info("pauseMic::mic_producer_already_paused");
      return;
    }
    e.pause();
    var a = { producerId: e.id, pause: !0 };
    f(this, Lr).sendMessage(Xe.toggleProducer, fo.toBinary(a));
  } }, { key: "pauseWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n = f(this, Ze).producers.get(ye.WEBCAM), n) {
                u.next = 4;
                break;
              }
              return P.error("pauseWebcam::could_not_find_webcam_producer"), u.abrupt("return");
            case 4:
              n.pause(), i = { producerId: n.id, pause: !0 }, f(this, Lr).sendMessage(Xe.toggleProducer, fo.toBinary(i));
            case 7:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n = f(this, Ze).producers.get(ye.MIC), n) {
                u.next = 4;
                break;
              }
              return P.error("resumeMic::could_not_find_mic_producer"), u.abrupt("return");
            case 4:
              if (n.pause) {
                u.next = 7;
                break;
              }
              return P.info("resumeMic::mic_producer_already_resumed"), u.abrupt("return");
            case 7:
              n.resume(), i = { producerId: n.id, pause: !1 }, f(this, Lr).sendMessage(Xe.toggleProducer, fo.toBinary(i));
            case 10:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n = f(this, Ze).producers.get(ye.WEBCAM), n) {
                u.next = 4;
                break;
              }
              return P.error("resumeWebcam::could_not_find_webcam_producer"), u.abrupt("return");
            case 4:
              n.resume(), i = { producerId: n.id, pause: !1 }, f(this, Lr).sendMessage(Xe.toggleProducer, fo.toBinary(i));
            case 7:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Ze).removeProducer(ye.WEBCAM);
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Ze).removeProducer(ye.MIC);
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return P.info("screen_sharing_stopped"), i.next = 3, f(this, Ze).removeProducer(ye.SCREENSHARE_VIDEO);
            case 3:
              return i.next = 5, f(this, Ze).removeProducer(ye.SCREENSHARE_AUDIO);
            case 5:
              this.screenshareConsumerProducer.clear();
            case 6:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteSelf", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              this.pauseMic();
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "unmuteSelf", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "resetVideoProducers",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (!n) {
                  u.next = 4;
                  break;
                }
                return u.next = 3, f(this, Ze).removeProducer(ye.WEBCAM, !1);
              case 3:
                this.shareWebcam(n);
              case 4:
                if (!i) {
                  u.next = 8;
                  break;
                }
                return u.next = 7, f(this, Ze).removeProducer(ye.SCREENSHARE_VIDEO, !1);
              case 7:
                this.shareScreen({ video: i });
              case 8:
              case "end":
                return u.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, { key: "getPolls", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", { payload: { polls: {} } });
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "changeDisplayName", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = { displayName: n, participantId: i != null ? i : this.peerId }, p.next = 3, this.sfuHandler.hiveSocketHandler.changeDisplayName(s);
            case 3:
              if (u = p.sent, u) {
                p.next = 6;
                break;
              }
              throw new Error("failed to change display name!");
            case 6:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return i = { participantId: n }, l.next = 3, this.sfuHandler.hiveSocketHandler.kickPeer(i);
            case 3:
              if (s = l.sent, s) {
                l.next = 6;
                break;
              }
              throw new Error("failed to kickout the participant!");
            case 6:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kickAll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sfuHandler.hiveSocketHandler.kickAll();
            case 2:
              if (n = s.sent, n) {
                s.next = 5;
                break;
              }
              throw new Error("failed to kickout all participant!");
            case 5:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteAll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.sfuHandler.hiveSocketHandler.hostControlForAll("audio");
            case 2:
              if (i = u.sent, i) {
                u.next = 5;
                break;
              }
              throw new Error("failed to mute all participant");
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteAllVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sfuHandler.hiveSocketHandler.hostControlForAll("video");
            case 2:
              if (n = s.sent, n) {
                s.next = 5;
                break;
              }
              throw new Error("failed to mute all video participant");
            case 5:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.sfuHandler.hiveSocketHandler.hostControlForPeer(n, "audio");
            case 2:
              if (i = u.sent, i) {
                u.next = 5;
                break;
              }
              throw new Error("failed to mute given participant");
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.sfuHandler.hiveSocketHandler.hostControlForPeer(n, "video");
            case 2:
              if (i = u.sent, i) {
                u.next = 5;
                break;
              }
              throw new Error("failed to mute video of given participant");
            case 5:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pinPeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return i = { participantId: n != null ? n : "" }, u.prev = 1, u.next = 4, f(this, Lr).sendMessagePromise(Xe.globalPinPeer, gS.toBinary(i));
            case 4:
              u.next = 9;
              break;
            case 6:
              u.prev = 6, u.t0 = u.catch(1), this.logger.error("Error in pinning peer: ".concat(u.t0));
            case 9:
            case "end":
              return u.stop();
          }
      }, a, this, [[1, 6]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "validateScreenShare", value: function(e) {
    return this.peerId === e.peerId && this.sfuHandler.hasProducer(e.producerId) && this.screenshareConsumerProducer.add(e.consumerPeerId), this.screenshareConsumerProducer.size;
  } }, { key: "handleSocketEvents", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              f(this, Lr).on(Xe.peerJoinedBroadcast, function(u) {
                var l = u.id, p = u.payload;
                if (n.roomJoined) {
                  n.logger.debug("got peer joined with id", l);
                  try {
                    var h = TE.fromBinary(p), v = h.participant, m = v.peerId, g = v.displayName, w = v.producerStates, k = v.userId;
                    if (m === n.peerId)
                      return;
                    n.logger.info("peer-joined", { peerId: m, displayName: g, producerStates: w });
                    var T = { id: m, isHost: !1, displayName: g, flags: {}, userId: k, audioMuted: !0, videoEnabled: !1, audioTrack: null, videoTrack: null, producers: [] };
                    w.forEach(function(_) {
                      _.kind === Vt.AUDIO ? T.audioMuted = _.pause : T.videoEnabled = !_.pause, T.producers.push({ producerId: _.producerId, kind: _.kind === Vt.AUDIO ? "audio" : "video", pause: _.pause, screenShare: _.screenShare });
                    }), $.emit(M.PEER_JOINED, T), $.emit(M.REFRESH_GRID);
                  } catch (_) {
                    n.logger.error("error in peer-joined-broadcast", _);
                  }
                }
              }), f(this, Lr).on(Xe.peerProducerCreateBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = EE.fromBinary(l), h = p.participantId, v = p.producerState;
                    if (h === n.peerId)
                      return;
                    n.logger.info("producer created broadcast:", h, "producer state", v), $.emit(M.NEW_PRODUCER, { peerId: h, producer: { producerId: v.producerId, kind: v.kind === Vt.AUDIO ? "audio" : "video", pause: v.pause, screenShare: v.screenShare } });
                  } catch (m) {
                    n.logger.error("error in peer-producer-create-broadcast", m);
                  }
              }), f(this, Lr).on(Xe.peerProducerToggleBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = RE.fromBinary(l), h = p.participantId, v = p.producerState, m = v.kind, g = v.pause, w = v.producerId, k = m === Vt.AUDIO ? "audio" : "video";
                    if (n.logger.info("producer toggle broadcast:", h, "producerId", w, "kind", k, "paused", g), h === n.peerId && g) {
                      $.emit(k === "audio" ? M.MUTE_ALL : M.MUTE_ALL_VIDEO);
                      return;
                    }
                    $.emit(M.PRODUCER_TOGGLE, { peerId: h, producerId: w, paused: g, kind: k });
                    var T = sr(n.getConsumers().values()).filter(function(_) {
                      return _.producerId === w;
                    });
                    T.forEach(function(_) {
                      _.paused !== g && (n.logger.debug("consumer state mismatched for", _.id, ". updating consumer pause state", _.paused, "to", g), g ? (_.pause(), $.emit(M.CONSUMER_PAUSED, { id: _.id })) : (_.resume(), $.emit(M.CONSUMER_RESUMED, { id: _.id })));
                    });
                  } catch (_) {
                    n.logger.error("error in producer toggle broadcast handler", _);
                  }
              }), f(this, Lr).on(Xe.selectedPeer, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = yv.fromBinary(l), h = p.audioPeers, v = p.compulsoryPeers;
                    n.logger.info("selected peers:", h, v), $.emit(M.SELECTED_PEERS, { peerIds: v.concat(h) });
                  } catch (m) {
                    n.logger.error("error in selected-peer", m);
                  }
              }), f(this, Lr).on(Xe.selectedPeerDiff, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = qS.fromBinary(l), h = p.entries;
                    n.logger.debug("selected peers diff:", h);
                    var v = h.map(function(m) {
                      return { peerId: m.peerId, priority: m.priority };
                    });
                    $.emit(M.SELECTED_PEERS_DIFF, { entries: v });
                  } catch (m) {
                    n.logger.error("error in selected-peer-diff", m);
                  }
              }), f(this, Lr).on(Xe.peerLeaveBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = DE.fromBinary(l), h = p.participantId;
                    if (h === n.peerId) {
                      n.logger.warn("peer got kicked out of the room"), $.emit(M.KICKED);
                      return;
                    }
                    n.logger.info("peer left broadcast:", h), n.screenshareConsumerProducer.delete(h), n.sfuHandler.cleanupConsumers(h), $.emit(M.PEER_CLOSED, { id: h });
                  } catch (v) {
                    n.logger.error("error in peer left broadcast", v);
                  }
              }), f(this, Lr).on(Xe.peerProducerCloseBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = CE.fromBinary(l), h = p.participantId, v = p.producerState.producerId;
                    if (h === n.peerId)
                      return;
                    n.logger.info("producer closed broadcast:", h), $.emit(M.PRODUCER_CLOSED, { peerId: h, producerId: v });
                    var m = n.sfuHandler.producerIdToConsumerIdMap.get(v);
                    if (!m) {
                      n.logger.warn("no consumer found for producer", v);
                      return;
                    }
                    n.logger.info("closing consumer", m, "producer id ", v), n.sfuHandler.closeConsumer(m).then(function() {
                      n.logger.info("closed consumer", m), n.sfuHandler.producerIdToConsumerIdMap.delete(v), $.emit(M.CONSUMER_CLOSED, { id: m });
                    }).catch(function(g) {
                      n.logger.error("error closing consumer", g);
                    });
                  } catch (g) {
                    n.logger.error("error on producer close broadcast", g);
                  }
              }), f(this, Lr).on(Xe.globalPeerPinBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p;
                    if (l) {
                      var h = ME.fromBinary(l);
                      n.logger.info("pinning peerId: ", h), p = h.participantId;
                    }
                    $.emit(M.PEER_PINNED, { peerId: p });
                  } catch (v) {
                    n.logger.error("error on global peer pin broadcast", v);
                  }
              }), f(this, Lr).on(Xe.peerDisplayNameEditBroadcast, function(u) {
                var l = u.payload;
                if (n.roomJoined)
                  try {
                    var p = UE.fromBinary(l);
                    n.logger.debug("peer display name changed to:", p.displayName), $.emit(M.PEER_DISPLAY_NAME_CHANGED, p.participantId);
                  } catch (h) {
                    n.logger.error("failed to handle peerDisplayNameEditBroadcast:", h);
                  }
              });
            case 9:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleSFUEvents", value: function() {
    var e = this;
    f(this, Ze).on("reconnect_transport", /* @__PURE__ */ function() {
      var a = y(/* @__PURE__ */ d().mark(function n(i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return u.prev = 0, $.emit(M.HIVE_TRANPSORT_RECONNECTING), u.next = 4, e._transportQueue.push(e.reconnectTransport.bind(e, i), "reconnect_transport");
              case 4:
                e.logger.info("transport reconnected [id:%s]", i.id), u.next = 10;
                break;
              case 7:
                u.prev = 7, u.t0 = u.catch(0), e.logger.error("error on reconnection transports", u.t0);
              case 10:
              case "end":
                return u.stop();
            }
        }, n, null, [[0, 7]]);
      }));
      return function(n) {
        return a.apply(this, arguments);
      };
    }()), f(this, Ze).on("rejoin", function() {
      if (e._totalRejoinCount > 1) {
        e.logger.warn("cannot rejoin more already rejoined 3 times");
        return;
      }
      if (f(e, Ua)) {
        e.logger.warn("room joining in progress, cannot start rejoining");
        return;
      }
      e._totalRejoinCount += 1, e.logger.warn("rejoining the room because transports are failing", { rejoinCount: e._totalRejoinCount }), $.emit(M.HIVE_ROOM_REJOINING), f(e, Wi).call(e);
    });
  } }], [{ key: "init", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return i = n.legacyMode, s = i === void 0 ? !0 : i, u = n.roomName, l = n.peerId, p = n.authToken, h = n.meetingTitle, v = n.socket, m = new r({ legacyMode: s, authToken: p, socketClient: v, peerId: l, roomName: u, meetingTitle: h }), v.onStateEvent("disconnected", function(T) {
                var _;
                m.isDisconnected = !0, (_ = f(m, Ze)) === null || _ === void 0 || _.cleanupConsumers(), m.mediaConnected = v.isConnected, $.emit(M.ROOM_NODE_DISCONNECTED, T), m.roomJoined = !1, m.activatedProducingPeerIds = /* @__PURE__ */ new Set(), P.info("HiveNodeClient::HIVE_NODE_DISCONNECTED");
              }), v.onStateEvent("reconnected", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function T() {
                return d().wrap(function(E) {
                  for (; ; )
                    switch (E.prev = E.next) {
                      case 0:
                        m.mediaConnected = v.isConnected;
                      case 1:
                      case "end":
                        return E.stop();
                    }
                }, T);
              }))), g = function(_) {
                m.mediaConnected = v.isConnected, $.emit(M.ROOM_NODE_CONNECTED, Q(Q({}, _), {}, { wasDisconnected: m.isDisconnected })), m.isDisconnected = !1, P.info("HiveNodeClient::HIVE_NODE_CONNECTED");
              }, v.onStateEvent("connected", /* @__PURE__ */ function() {
                var T = y(/* @__PURE__ */ d().mark(function _(E) {
                  return d().wrap(function(C) {
                    for (; ; )
                      switch (C.prev = C.next) {
                        case 0:
                          g(E);
                        case 1:
                        case "end":
                          return C.stop();
                      }
                  }, _);
                }));
                return function(_) {
                  return T.apply(this, arguments);
                };
              }()), v.isConnected && g({}), k.abrupt("return", m);
            case 8:
            case "end":
              return k.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(Iv)), Ce = mC;
Qe([A.trace("HiveNodeClient.reset")], Ce.prototype, "reset", 1);
Qe([A.trace("HiveNodeClient.reconnect")], Ce.prototype, "reconnectTransport", 1);
Qe([A.trace("HiveNodeClient.setupTransport")], Ce.prototype, "setupTransports", 1);
Qe([A.trace("HiveNodeClient.joinRoom")], Ce.prototype, "joinRoom", 1);
Qe([A.trace("HiveNodeClient.completeJoinRoom")], Ce.prototype, "completeJoinRoom", 1);
Qe([A.trace("HiveNodeClient.leaveRoom")], Ce.prototype, "leaveRoom", 1);
Qe([A.trace("HiveNodeClient.activatePeers")], Ce.prototype, "activatePeers", 1);
Qe([A.trace("HiveNodeClient.deactivatePeers")], Ce.prototype, "deactivatePeers", 1);
Qe([A.trace("HiveNodeClient.createConsumer")], Ce.prototype, "createConsumer", 1);
Qe([A.trace("HiveNodeClient.pauseConsumers")], Ce.prototype, "pauseConsumers", 1);
Qe([A.trace("HiveNodeClient.resumeConsumers")], Ce.prototype, "resumeConsumers", 1);
Qe([A.trace("HiveNodeClient.closeConsumers")], Ce.prototype, "closeConsumers", 1);
Qe([A.trace("HiveNodeClient.consumePeer")], Ce.prototype, "consumePeer", 1);
Qe([A.trace("HiveNodeClient.shareWebcam")], Ce.prototype, "shareWebcam", 1);
Qe([A.trace("HiveNodeClient.shareScreen")], Ce.prototype, "shareScreen", 1);
Qe([A.trace("HiveNodeClient.shareMic")], Ce.prototype, "shareMic", 1);
Qe([A.trace("HiveNodeClient.pauseMic")], Ce.prototype, "pauseMic", 1);
Qe([A.trace("HiveNodeClient.pauseWebcam")], Ce.prototype, "pauseWebcam", 1);
Qe([A.trace("HiveNodeClient.resumeMic")], Ce.prototype, "resumeMic", 1);
Qe([A.trace("HiveNodeClient.resumeWebcam")], Ce.prototype, "resumeWebcam", 1);
Qe([A.trace("HiveNodeClient.disableWebcam")], Ce.prototype, "disableWebcam", 1);
Qe([A.trace("HiveClient.disableMic")], Ce.prototype, "disableMic", 1);
Qe([A.trace("HiveClient.disableScreenShare")], Ce.prototype, "disableScreenShare", 1);
Qe([A.trace("HiveNodeClient.muteSelf")], Ce.prototype, "muteSelf", 1);
Qe([A.trace("HiveNodeClient.resetVideoProducers")], Ce.prototype, "resetVideoProducers", 1);
Qe([A.trace("HiveNodeClient.getPolls")], Ce.prototype, "getPolls", 1);
Qe([A.trace("HiveNodeClient.changeDisplayName")], Ce.prototype, "changeDisplayName", 1);
Qe([A.trace("HiveNodeClient.kickPeer")], Ce.prototype, "kick", 1);
Qe([A.trace("HiveNodeClient.kickAllPeers")], Ce.prototype, "kickAll", 1);
Qe([A.trace("HiveNodeClient.muteAll")], Ce.prototype, "muteAll", 1);
Qe([A.trace("HiveNodeClient.muteAllVideo")], Ce.prototype, "muteAllVideo", 1);
Qe([A.trace("HiveNodeClient.disableAudio")], Ce.prototype, "disableAudio", 1);
Qe([A.trace("HiveNodeClient.disableVideo")], Ce.prototype, "disableVideo", 1);
Qe([A.trace("HiveNodeClient.pinPeer")], Ce.prototype, "pinPeer", 1);
Qe([A.trace("HiveNodeClient.validateScreenShare")], Ce.prototype, "validateScreenShare", 1);
Qe([A.trace("HiveNodeClient.init")], Ce, "init", 1);
var oa = /* @__PURE__ */ function(o) {
  return o.SOCKET_CONNECTED = "SOCKET_CONNECTED", o.SOCKET_DISCONNECTED = "SOCKET_DISCONNECTED", o.SOCKET_CONNECTION_ERROR = "SOCKET_CONNECTION_ERROR", o.SOCKET_MESSAGE = "SOCKET_MESSAGE", o;
}(oa || {}), Cs = /* @__PURE__ */ function(o) {
  return o[o.NOT_STARTED = 0] = "NOT_STARTED", o[o.CONNECTED = 1] = "CONNECTED", o[o.DISCONNECTED = 2] = "DISCONNECTED", o[o.ERRORED = 3] = "ERRORED", o;
}(Cs || {}), gC = Object.defineProperty, yC = Object.getOwnPropertyDescriptor, du = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? yC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && gC(r, t, a), a;
}, kC = "event://server-simple-message", wC = "event://send-message", xs = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), R(b(e), "socket", void 0), R(b(e), "socketState", void 0), R(b(e), "callbackHandler", null), e.socketState = Cs.NOT_STARTED, t.callbackHandler && (e.callbackHandler = t.callbackHandler), e;
  }
  return D(r, [{ key: "connect", value: function(e) {
    this.socket && (this.socket.removeAllListeners(), this.socket.disconnect()), this.socket = Cf(e, { closeOnBeforeunload: !1 }), this.setupSocket();
  } }, { key: "disconnect", value: function() {
    this.socket.disconnect();
  } }, { key: "reconnect", value: function() {
    this.socket.connect();
  } }, { key: "setupSocket", value: function() {
    var e = this;
    this.socket.on("disconnect", function(a) {
      e.socketState = Cs.DISCONNECTED, P.warn("SocketClient::socket_disconnected", { error: { reason: a } }), e.emit(oa.SOCKET_DISCONNECTED, { reason: a });
    }), this.socket.on("connect_error", function(a) {
      e.socketState = Cs.ERRORED, ue.hasFeature(de.SOCKET_POLLING) && (e.socket.io.opts.transports = ["polling", "websocket"]), P.error("SocketClient::socket_connection_errored", { error: a }), e.emit(oa.SOCKET_CONNECTION_ERROR, { err: a });
    }), this.socket.on("connect", function() {
      e.socketState = Cs.CONNECTED, P.info("SocketClient::socket_connected"), e.emit(oa.SOCKET_CONNECTED);
    }), this.socket.on(kC, /* @__PURE__ */ function() {
      var a = y(/* @__PURE__ */ d().mark(function n(i, s) {
        var u, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                if (u = JSON.parse(i), (!A.logExclusionList.includes(u == null ? void 0 : u.type) || ue.hasFeature(de.BYPASS_LOG_EXCLUSION_LIST)) && P.info("SocketClient::SIMPLE_SERVER_MESSAGE_EVENT::".concat(u == null ? void 0 : u.type)), !s) {
                  h.next = 11;
                  break;
                }
                if (l = "OK", !e.callbackHandler) {
                  h.next = 8;
                  break;
                }
                return h.next = 7, e.callbackHandler(u);
              case 7:
                l = h.sent;
              case 8:
                s(l), h.next = 12;
                break;
              case 11:
                e.emit(oa.SOCKET_MESSAGE, u);
              case 12:
                Object.values(M).find(function(v) {
                  return v === u.type;
                }) && $.emit(u.type, u.payload);
              case 13:
              case "end":
                return h.stop();
            }
        }, n);
      }));
      return function(n, i) {
        return a.apply(this, arguments);
      };
    }());
  } }, { key: "sendMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return (!A.logExclusionList.includes(n == null ? void 0 : n.type) || ue.hasFeature(de.BYPASS_LOG_EXCLUSION_LIST)) && P.info("SocketClient::sendMessage::".concat(n == null ? void 0 : n.type)), Object.assign(n, { metadata: n.metadata || {} }), A.injectContext(n.metadata), u.abrupt("return", new Promise(function(l) {
                i.socket.emit(wC, JSON.stringify(n), function(p) {
                  if (!p) {
                    l(void 0);
                    return;
                  }
                  var h = JSON.parse(p);
                  l(h);
                });
              }));
            case 4:
            case "end":
              return u.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(at);
du([A.trace("SocketClient.connect")], xs.prototype, "connect", 1);
du([A.trace("SocketClient.disconnect")], xs.prototype, "disconnect", 1);
du([A.trace("SocketClient.reconnect")], xs.prototype, "reconnect", 1);
du([A.trace("SocketClient.setupSocket")], xs.prototype, "setupSocket", 1);
var Op = /* @__PURE__ */ new WeakSet(), Np = /* @__PURE__ */ new WeakSet(), Av = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1e3;
    I(this, o), Or(this, Np), Or(this, Op), R(this, "sendTransport", void 0), R(this, "recvTransport", void 0), R(this, "collectStpStats", void 0), R(this, "collectRtpStats", void 0), R(this, "pingInterval", void 0), this.pingInterval = c;
  }
  return D(o, [{ key: "initSendTransport", value: function(r) {
    this.sendTransport = r, $.emit(M.SEND_TRANSPORT_CREATED);
  } }, { key: "initRecvTransport", value: function(r) {
    this.recvTransport = r, $.emit(M.RECV_TRANSPORT_CREATED);
  } }, { key: "collectSendTransportStats", value: function() {
    return !this.sendTransport || this.collectStpStats ? !1 : (this.collectStpStats = setInterval(Ne(this, Op, TC).bind(this), this.pingInterval), !0);
  } }, { key: "collectRecvTransportStats", value: function() {
    return !this.recvTransport || this.collectRtpStats ? !1 : (this.collectRtpStats = setInterval(Ne(this, Np, bC).bind(this), this.pingInterval), !0);
  } }, { key: "stopStatsCollection", value: function(r) {
    return r === "send" ? (clearInterval(this.collectStpStats), this.collectStpStats = void 0, !0) : r === "receive" ? (clearInterval(this.collectRtpStats), this.collectRtpStats = void 0, !0) : !1;
  } }, { key: "cleanup", value: function(r) {
    this.stopStatsCollection(r), r === "send" ? (this.sendTransport = void 0, this.collectStpStats = void 0, $.emit(M.SEND_TRANSPORT_CLOSED)) : (this.recvTransport = void 0, this.collectRtpStats = void 0, $.emit(M.RECV_TRANSPORT_CLOSED));
  } }]), o;
}();
An = Av;
function TC() {
  this.sendTransport || this.stopStatsCollection("send"), this.sendTransport.getStats().then(function(o) {
    return _i(An, An, Mv).call(An, o, "send");
  });
}
function bC() {
  this.recvTransport || this.stopStatsCollection("receive"), this.recvTransport.getStats().then(function(o) {
    return _i(An, An, Mv).call(An, o, "receive");
  });
}
function Mv(o, c) {
  o.forEach(function(r) {
    r.type === "candidate-pair" && $.emit(M.CANDIDATE_PEER_UPDATE, Q(Q({}, r), {}, { transport: c })), r.type === "inbound-rtp" && $.emit(M.INBOUND_RTP_UPDATE, Q(Q({}, r), {}, { transport: c })), r.type === "outbound-rtp" && $.emit(M.OUTBOUND_RTP_UPDATE, Q(Q({}, r), {}, { transport: c }));
  });
}
var Xa = new Av(), SC = Object.defineProperty, EC = Object.getOwnPropertyDescriptor, vt = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? EC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && SC(r, t, a), a;
}, nt = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this), R(b(a), "device", void 0), R(b(a), "sendTransport", void 0), R(b(a), "recvTransport", void 0), R(b(a), "sendTransportIceStateDisconnectTime", void 0), R(b(a), "recvTransportIceStateDisconnectTime", void 0), R(b(a), "producerCreationStatus", void 0), R(b(a), "consumers", void 0), R(b(a), "producers", void 0), R(b(a), "socketClient", void 0), R(b(a), "iceRestartInProgress", void 0), a.producers = /* @__PURE__ */ new Map(), a.consumers = /* @__PURE__ */ new Map(), a.producerCreationStatus = /* @__PURE__ */ new Map(), a.iceRestartInProgress = { sendTransport: !1, recvTransport: !1 }, e !== void 0 ? a.device = e : a.device = new Yh(), a.socketClient = t, a;
  }
  return D(r, [{ key: "setupTransports", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return n = Hr(), u.next = 3, n.getICEServers();
            case 3:
              return i = u.sent, u.next = 6, this.loadRouter();
            case 6:
              return u.next = 8, Promise.all([this.createRecvTransport(i), this.createSendTransport(i)]);
            case 8:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "loadRouter", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!(this.recvTransport || this.sendTransport)) {
                i.next = 3;
                break;
              }
              return i.next = 3, this.stopAllTransports();
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRTPCapabilities", value: function() {
    return this.device.rtpCapabilities;
  } }, { key: "createRecvTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this.socketClient) {
                h.next = 2;
                break;
              }
              return h.abrupt("return");
            case 2:
              return s = { forceTcp: !1, producing: !1, consuming: !0 }, h.next = 5, this.socketClient.sendMessage({ type: "createWebRtcTransport", payload: s });
            case 5:
              u = h.sent.payload, P.info("recvTransport::initializing_transport"), this.recvTransport = this.device.createRecvTransport(Q(Q({}, u), {}, { iceServers: n, proprietaryConstraints: Kd })), Xa.initRecvTransport(this.recvTransport), P.info("recvTransport::initialized_transport"), se.onSafeInitialization(function() {
                se.configureRecvTransport(i.recvTransport);
              }), this.recvTransport.on("connect", /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g, w, k) {
                  var T, _, E, S, C, L;
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return _ = g.dtlsParameters, j.next = 3, i.socketClient.sendMessage({ type: "connectWebRtcTransport", payload: { transportId: i.recvTransport.id, dtlsParameters: _ } });
                        case 3:
                          E = j.sent, (T = E.payload) !== null && T !== void 0 && T.error ? (P.error("recvTransport::transport_status", { error: (C = E.payload) === null || C === void 0 ? void 0 : C.error, transport: { id: i == null || (L = i.recvTransport) === null || L === void 0 ? void 0 : L.id, status: "failed", type: "recv" } }), k(new Error("failed"))) : (w(), P.info("recvTransport::transport_status", { transport: { id: i == null || (S = i.recvTransport) === null || S === void 0 ? void 0 : S.id, status: "connected", type: "recv" } }));
                        case 5:
                        case "end":
                          return j.stop();
                      }
                  }, m);
                }));
                return function(m, g, w) {
                  return v.apply(this, arguments);
                };
              }()), ue.hasFeature(de.ENABLE_ICE_STATE_LOGGING) && (P.info("enabling_ice_state_logging_for_recv_transport"), this.recvTransport.on("connectionstatechange", /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  var w, k, T, _, E, S, C, L;
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          P.info("recvTransport::connection_state_change", { transport: { id: i == null || (w = i.recvTransport) === null || w === void 0 ? void 0 : w.id, status: g, type: "recv" } }), j.t0 = g, j.next = j.t0 === "failed" ? 4 : j.t0 === "disconnected" ? 16 : j.t0 === "connected" ? 23 : 27;
                          break;
                        case 4:
                          if ($.emit(M.ICE_FAILED, { transport: "recv" }), P.warn("recvTransport::ice_state_failed"), !ue.hasFeature(de.ICE_RESTART_ON_FAILED_STATE)) {
                            j.next = 15;
                            break;
                          }
                          return j.prev = 7, j.next = 10, i.restartIceTillSuccess(i.recvTransport);
                        case 10:
                          j.next = 15;
                          break;
                        case 12:
                          j.prev = 12, j.t1 = j.catch(7), P.error("recvTransport::ice_restart_failed", { error: j.t1, transport: { id: i == null || (E = i.recvTransport) === null || E === void 0 ? void 0 : E.id, status: "failed", type: "recv" } });
                        case 15:
                          return j.abrupt("break", 27);
                        case 16:
                          $.emit(M.ICE_DISCONNECTED, { transport: "recv" }), P.warn("recvTransport::ice_state_disconnected"), i.recvTransportIceStateDisconnectTime && P.warn("recvTransport::ice_state_disconnected_again", { transport: { id: i == null || (S = i.recvTransport) === null || S === void 0 ? void 0 : S.id, status: "disconnected", type: "recv", lastDisconnectedTime: (C = i.recvTransportIceStateDisconnectTime) === null || C === void 0 ? void 0 : C.toISOString(), lastDisconnectedTimeOffset: (L = i.recvTransportIceStateDisconnectTime) === null || L === void 0 ? void 0 : L.getTimezoneOffset(), durationPassed: new Date().getTime() - i.recvTransportIceStateDisconnectTime.getTime() } }), i.recvTransportIceStateDisconnectTime = new Date();
                          try {
                            l = ue.getValue(de.ICE_RESTART_ON_DISCONNECTED_STATE), typeof l != "number" && (l = void 0);
                          } catch (ee) {
                            l = void 0;
                          }
                          return l && setTimeout(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function ee() {
                            var Y, Z, F, x, ie;
                            return d().wrap(function(H) {
                              for (; ; )
                                switch (H.prev = H.next) {
                                  case 0:
                                    if (i.recvTransportIceStateDisconnectTime !== void 0) {
                                      H.next = 2;
                                      break;
                                    }
                                    return H.abrupt("return");
                                  case 2:
                                    return $.emit(M.ICE_RECONNECTING, { transport: "recv" }), P.info("recvTransport::attempting_ice_restart", { transport: { id: i == null || (Y = i.recvTransport) === null || Y === void 0 ? void 0 : Y.id, type: "recv", status: "reconnecting", lastDisconnectedTime: (Z = i.recvTransportIceStateDisconnectTime) === null || Z === void 0 ? void 0 : Z.toISOString(), lastDisconnectedTimeOffset: (F = i.recvTransportIceStateDisconnectTime) === null || F === void 0 ? void 0 : F.getTimezoneOffset() }, iceRestart: { isSendTransport: i == null || (x = i.iceRestartInProgress) === null || x === void 0 ? void 0 : x.sendTransport, isRecvTransport: i == null || (ie = i.iceRestartInProgress) === null || ie === void 0 ? void 0 : ie.recvTransport } }), H.prev = 4, H.next = 7, i.restartIceTillSuccess(i.recvTransport);
                                  case 7:
                                    H.next = 12;
                                    break;
                                  case 9:
                                    H.prev = 9, H.t0 = H.catch(4), P.info("SFUHandler.disconnected.restartIceFailed", { error: H.t0, iceRestart: { status: "failed", isRecvTransport: !0 } });
                                  case 12:
                                  case "end":
                                    return H.stop();
                                }
                            }, ee, null, [[4, 9]]);
                          })), l), j.abrupt("break", 27);
                        case 23:
                          return $.emit(M.ICE_CONNECTED, { transport: "recv" }), P.info("recvTransport::ice_state_connected", { transport: { id: i == null || (k = i.recvTransport) === null || k === void 0 ? void 0 : k.id, type: "recv", status: "connected", lastDisconnectedTime: (T = i.recvTransportIceStateDisconnectTime) === null || T === void 0 ? void 0 : T.toISOString(), lastDisconnectedTimeOffset: (_ = i.recvTransportIceStateDisconnectTime) === null || _ === void 0 ? void 0 : _.getTimezoneOffset(), durationPassed: i.recvTransportIceStateDisconnectTime ? new Date().getTime() - i.recvTransportIceStateDisconnectTime.getTime() : null } }), i.recvTransportIceStateDisconnectTime = void 0, j.abrupt("break", 27);
                        case 27:
                        case "end":
                          return j.stop();
                      }
                  }, m, null, [[7, 12]]);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }())), this.recvTransport.observer.on("close", function() {
                i.recvTransport = void 0, Xa.cleanup("receive"), P.warn("recvTransport_closed");
              });
            case 14:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createSendTransport", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return s = { forceTcp: !1, producing: !0, consuming: !1 }, h.next = 3, this.socketClient.sendMessage({ type: "createWebRtcTransport", payload: s });
            case 3:
              u = h.sent.payload, P.info("sendTransport::initializing_transport"), this.sendTransport = this.device.createSendTransport(Q(Q({}, u), {}, { iceServers: n, proprietaryConstraints: Kd })), Xa.initSendTransport(this.sendTransport), P.info("sendTransport::initialized_transport"), se.onSafeInitialization(function() {
                se.configureSendTransport(i.sendTransport);
              }), this.sendTransport.on("connect", /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g, w, k) {
                  var T, _, E, S, C, L;
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return E = g.dtlsParameters, j.next = 3, i.socketClient.sendMessage({ type: "connectWebRtcTransport", payload: { transportId: (T = i.sendTransport) === null || T === void 0 ? void 0 : T.id, dtlsParameters: E } });
                        case 3:
                          S = j.sent, (_ = S.payload) !== null && _ !== void 0 && _.error ? (P.error("sendTransport::transport_status", { transport: { id: i == null || (L = i.sendTransport) === null || L === void 0 ? void 0 : L.id, status: "failed", type: "send" } }), k(new Error("failed"))) : (P.info("sendTransport::transport_status", { transport: { id: i == null || (C = i.sendTransport) === null || C === void 0 ? void 0 : C.id, status: "connected", type: "send" } }), w());
                        case 5:
                        case "end":
                          return j.stop();
                      }
                  }, m);
                }));
                return function(m, g, w) {
                  return v.apply(this, arguments);
                };
              }()), this.sendTransport.on("produce", /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g, w, k) {
                  var T, _, E, S, C, L, G, j, ee, Y;
                  return d().wrap(function(F) {
                    for (; ; )
                      switch (F.prev = F.next) {
                        case 0:
                          return E = g.kind, S = g.rtpParameters, C = g.appData, F.next = 3, i.socketClient.sendMessage({ type: "produce", payload: { transportId: (T = i.sendTransport) === null || T === void 0 ? void 0 : T.id, kind: E, rtpParameters: S, appData: C } });
                        case 3:
                          L = F.sent, (_ = L.payload) !== null && _ !== void 0 && _.error ? (P.info("sendTransport::producer_status::failed", { producer: { kind: E, appData: C, status: "failed", id: L == null || (ee = L.payload) === null || ee === void 0 ? void 0 : ee.id } }), k((Y = L.payload) === null || Y === void 0 ? void 0 : Y.error)) : (P.info("sendTransport::producer_status::producing", { producer: { kind: E, appData: C, status: "producing", id: L == null || (G = L.payload) === null || G === void 0 ? void 0 : G.id } }), w({ id: (j = L.payload) === null || j === void 0 ? void 0 : j.id }));
                        case 5:
                        case "end":
                          return F.stop();
                      }
                  }, m);
                }));
                return function(m, g, w) {
                  return v.apply(this, arguments);
                };
              }()), ue.hasFeature(de.ENABLE_ICE_STATE_LOGGING) && (P.info("Enabling ice state logging for send transport"), this.sendTransport.on("connectionstatechange", /* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  var w, k, T, _;
                  return d().wrap(function(S) {
                    for (; ; )
                      switch (S.prev = S.next) {
                        case 0:
                          P.info("sendTransport::connection_state_change", { transport: { id: i == null || (w = i.sendTransport) === null || w === void 0 ? void 0 : w.id, status: g, type: "send" } }), S.t0 = g, S.next = S.t0 === "failed" ? 4 : S.t0 === "disconnected" ? 16 : S.t0 === "connected" ? 23 : 27;
                          break;
                        case 4:
                          if ($.emit(M.ICE_FAILED, { transport: "send" }), P.warn("sendTransport::ice_state_failed"), !ue.hasFeature(de.ICE_RESTART_ON_FAILED_STATE)) {
                            S.next = 15;
                            break;
                          }
                          return S.prev = 7, S.next = 10, i.restartIceTillSuccess(i.sendTransport);
                        case 10:
                          S.next = 15;
                          break;
                        case 12:
                          S.prev = 12, S.t1 = S.catch(7), P.error("sendTransport::ice_restart_failed", { error: S.t1 });
                        case 15:
                          return S.abrupt("break", 27);
                        case 16:
                          $.emit(M.ICE_DISCONNECTED, { transport: "send" }), P.warn("sendTransport::ice_state_disconnected"), i.sendTransportIceStateDisconnectTime && P.warn("sendTransport::ice_state_disconnected_again", { transport: { id: i == null || (_ = i.sendTransport) === null || _ === void 0 ? void 0 : _.id, status: "disconnected", lastDisconnectedTime: i.sendTransportIceStateDisconnectTime.toLocaleTimeString(), durationPassed: (
                            // eslint-disable-next-line max-len
                            new Date().getTime() - i.sendTransportIceStateDisconnectTime.getTime()
                          ), type: "send" } }), i.sendTransportIceStateDisconnectTime = new Date();
                          try {
                            l = ue.getValue(de.ICE_RESTART_ON_DISCONNECTED_STATE), typeof l != "number" && (l = void 0);
                          } catch (C) {
                            l = void 0;
                          }
                          return l && setTimeout(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function C() {
                            var L, G, j, ee;
                            return d().wrap(function(Z) {
                              for (; ; )
                                switch (Z.prev = Z.next) {
                                  case 0:
                                    if (i.sendTransportIceStateDisconnectTime !== void 0) {
                                      Z.next = 2;
                                      break;
                                    }
                                    return Z.abrupt("return");
                                  case 2:
                                    return $.emit(M.ICE_RECONNECTING, { transport: "send" }), P.info("sendTransport::attempting_ice_restart", { transport: { id: i == null || (L = i.sendTransport) === null || L === void 0 ? void 0 : L.id, status: "reconnecting", type: "send", lastDisconnectedTime: (G = i.sendTransportIceStateDisconnectTime) === null || G === void 0 ? void 0 : G.toISOString(), lastDisconnectedTimeOffset: (j = i.sendTransportIceStateDisconnectTime) === null || j === void 0 ? void 0 : j.getTimezoneOffset() }, iceRestart: { status: "connecting" } }), Z.prev = 4, Z.next = 7, i.restartIceTillSuccess(i.sendTransport);
                                  case 7:
                                    Z.next = 12;
                                    break;
                                  case 9:
                                    Z.prev = 9, Z.t0 = Z.catch(4), P.info("SFUHandler.disconnected.restartIceFailed", { error: Z.t0, transport: { id: i == null || (ee = i.sendTransport) === null || ee === void 0 ? void 0 : ee.id, type: "send", status: "failed" } });
                                  case 12:
                                  case "end":
                                    return Z.stop();
                                }
                            }, C, null, [[4, 9]]);
                          })), l), S.abrupt("break", 27);
                        case 23:
                          return $.emit(M.ICE_CONNECTED, { transport: "send" }), P.info("sendTransport::ice_state_connected", { transport: { id: i == null || (k = i.sendTransport) === null || k === void 0 ? void 0 : k.id, type: "send", status: "connected", lastDisconnectedTime: (T = i.sendTransportIceStateDisconnectTime) === null || T === void 0 ? void 0 : T.toLocaleTimeString(), durationPassed: i.sendTransportIceStateDisconnectTime ? new Date().getTime() - i.sendTransportIceStateDisconnectTime.getTime() : null } }), i.sendTransportIceStateDisconnectTime = void 0, S.abrupt("break", 27);
                        case 27:
                        case "end":
                          return S.stop();
                      }
                  }, m, null, [[7, 12]]);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }())), this.sendTransport.observer.on("close", function() {
                i.sendTransport = void 0, Xa.cleanup("send"), P.warn("sendTransport_closed");
              });
            case 13:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIce", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (i = n.direction, s = i === "recv" ? this.iceRestartInProgress.recvTransport : this.iceRestartInProgress.sendTransport, !s) {
                p.next = 4;
                break;
              }
              return p.abrupt("return");
            case 4:
              return i === "recv" ? this.iceRestartInProgress.recvTransport = !0 : this.iceRestartInProgress.sendTransport = !0, p.prev = 5, p.next = 8, this.socketClient.sendMessage({ type: "restartIce", payload: { transportId: n.id } });
            case 8:
              return u = p.sent.payload, p.next = 11, n.restartIce(u);
            case 11:
              p.next = 16;
              break;
            case 13:
              p.prev = 13, p.t0 = p.catch(5), P.error("SFUHandler.restartIce.Failed", { error: p.t0, iceRestart: { status: "failed" }, transport: { id: n == null ? void 0 : n.id, status: "failed", type: i } });
            case 16:
              i === "recv" ? this.iceRestartInProgress.recvTransport = !1 : this.iceRestartInProgress.sendTransport = !1;
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this, [[5, 13]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (!(this.recvTransport === void 0 || this.recvTransport.closed)) {
                k.next = 2;
                break;
              }
              return k.abrupt("return");
            case 2:
              return i = n.peerId, s = n.producerId, u = n.id, l = n.kind, p = n.rtpParameters, h = n.appData, v = n.remotelyPaused, P.info("createConsumer::initializing_consumer", { consumer: { id: u, peerId: i, kind: l, appData: h, remotelyPaused: v, producerId: s } }), k.next = 6, this.recvTransport.consume({ id: u, producerId: s, kind: l, rtpParameters: p, appData: Q(Q({}, h), {}, { peerId: i }) });
            case 6:
              m = k.sent, P.info("createConsumer::initialized_consumer", { consumer: { id: m.id, peerId: i, kind: l, appData: h, remotelyPaused: v, producerId: s } }), g = m, g.peerId = i, g.remotelyPaused = v, g.score = 10, this.consumers.set(m.id, g);
            case 13:
            case "end":
              return k.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "closeConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (i = n.id, s = this.consumers.get(i), s) {
                l.next = 4;
                break;
              }
              return l.abrupt("return");
            case 4:
              P.info("SFUHandler::close_consumer", { consumer: s }), s.close(), this.consumers.delete(i);
            case 7:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "cleanupConsumers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i = this;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              (n = this.consumers) === null || n === void 0 || n.forEach(function(l) {
                $.emit(M.CONSUMER_CLOSED, { id: l.id }), i.closeConsumer({ id: l.id });
              });
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (i = n.id, s = this.consumers.get(i), s) {
                l.next = 4;
                break;
              }
              return l.abrupt("return");
            case 4:
              s.pause();
            case 5:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeConsumer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (i = n.id, s = this.consumers.get(i), s) {
                l.next = 4;
                break;
              }
              return l.abrupt("return");
            case 4:
              s.resume();
            case 5:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u = this, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (!(this.sendTransport === void 0 || this.sendTransport.closed)) {
                v.next = 2;
                break;
              }
              return v.abrupt("return", null);
            case 2:
              if (P.info("createProducer::initializing_producer", { producer: { id: "TO_BE_CREATED", kind: n, status: "initializing", appData: i == null ? void 0 : i.appData } }), !(this.producerCreationStatus.get(n) && this.producerCreationStatus.get(n) === "INITIALIZING")) {
                v.next = 6;
                break;
              }
              return P.info("createProducer::producer getting initializing", { producer: { id: "GETTING_CREATED", status: "initializing", kind: n, appData: i == null ? void 0 : i.appData } }), v.abrupt("return", null);
            case 6:
              return this.producerCreationStatus.set(
                n,
                "INITIALIZING"
                /* INITIALIZING */
              ), v.next = 9, Promise.race([this.sendTransport.produce(i), new Promise(function(m) {
                return setTimeout(function() {
                  return m(void 0);
                }, 6e3);
              })]);
            case 9:
              if (l = v.sent, l) {
                v.next = 14;
                break;
              }
              return P.error("createProducer::transport_initialization_timed_out", { producer: { id: "FAILED_TO_CREATE", kind: n, status: "failed", appData: i == null ? void 0 : i.appData } }), this.producerCreationStatus.set(
                n,
                "NOT_INITIALIZED"
                /* NOT_INITIALIZED */
              ), v.abrupt("return", null);
            case 14:
              return this.producerCreationStatus.set(
                n,
                "INITIALIZED"
                /* INITIALIZED */
              ), P.info("createProducer::initialized_producer", { producer: { id: l == null ? void 0 : l.id, kind: n, status: "UNKNOWN", appData: i == null ? void 0 : i.appData } }), l.on("transportclose", function() {
                P.info("producer::transportclose", { producer: { id: l == null ? void 0 : l.id, kind: n, status: "UNKNOWN", appData: i == null ? void 0 : i.appData } }), u.producerCreationStatus.set(
                  n,
                  "NOT_INITIALIZED"
                  /* NOT_INITIALIZED */
                ), u.producers.delete(n);
              }), l.on("trackended", function() {
                $.emit(M.PRODUCER_TRACK_ENDED, { kind: n }), P.info("producer::trackended", { producer: { id: l == null ? void 0 : l.id, kind: n, status: "UNKNOWN", appData: i == null ? void 0 : i.appData } }), [ye.MIC, ye.WEBCAM].includes(n) || s();
              }), p = l, p.score = 10, this.producers.set(n, p), v.next = 23, this.reconfigureWebcamLayers();
            case 23:
              return v.next = 25, this.reconfigureSafariScreenshareLayers();
            case 25:
              return v.abrupt("return", l.track);
            case 26:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeProducer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (i = u.length > 1 && u[1] !== void 0 ? u[1] : !0, s = this.producers.get(n), !(!s || s.closed)) {
                p.next = 4;
                break;
              }
              return p.abrupt("return");
            case 4:
              return P.info("SFUHandler::remove_producer", { producer: { id: s == null ? void 0 : s.id, kind: n, status: "UNKNOWN", appData: s == null ? void 0 : s.appData }, debuggingHint: "stopTrack was ".concat(i) }), i && s.track.stop(), s.close(), p.next = 9, this.socketClient.sendMessage({ type: "closeProducer", payload: { producerId: s.id } });
            case 9:
              return this.producerCreationStatus.set(
                n,
                "NOT_INITIALIZED"
                /* NOT_INITIALIZED */
              ), this.producers.delete(n), p.next = 13, this.reconfigureWebcamLayers();
            case 13:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopAllProducers", value: function() {
    var e = this;
    Array.from(this.producers.keys()).forEach(function(a) {
      e.removeProducer(a);
    });
  } }, {
    key: "stopAllTransports",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.sendTransport) {
                  try {
                    this.sendTransport.close();
                  } catch (s) {
                    P.error("stopAllTransports", { error: s });
                  }
                  this.sendTransport = void 0;
                }
                if (this.recvTransport) {
                  try {
                    this.recvTransport.close();
                  } catch (s) {
                    P.error("SFUHandler::stopAllTransports::error", s);
                  }
                  this.recvTransport = void 0;
                }
              case 2:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Control which simulcast layers are active on the webcam producer. Used to
    * save bandwidth while screensharing by disabling extra layers. Also used to
    * enable back layers when screenshare is not active.
    * Currently, this is behing a feature flag.
    */
  }, {
    key: "reconfigureWebcamLayers",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (ue.hasFeature(de.DISABLE_WEBCAM_LAYERS_ON_SCREENSHARE)) {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                if (n = this.producers.get(ye.WEBCAM), n) {
                  s.next = 5;
                  break;
                }
                return s.abrupt("return");
              case 5:
                return s.next = 7, n.setMaxSpatialLayer(this.producers.get(ye.SCREENSHARE_VIDEO) ? 0 : 1);
              case 7:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Mediasoup Safari bug, where encodings were not correctly passed in the Safari handler
    * set the encodings post creation of the screenshare producer in Safari
    */
  }, { key: "reconfigureSafariScreenshareLayers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(!ue.hasFeature(de.SCREENSHARE_SIMULCAST) || !ze.isSafari())) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              if (n = this.producers.get(ye.SCREENSHARE_VIDEO), n) {
                u.next = 5;
                break;
              }
              return u.abrupt("return");
            case 5:
              i = n.rtpSender.getParameters(), i.encodings = oT, n.rtpSender.setParameters(i);
            case 8:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "restartIceTillSuccess", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l = arguments;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              i = l.length > 1 && l[1] !== void 0 ? l[1] : 3, s = !1, u = 0;
            case 3:
              if (!(!s && u < i)) {
                h.next = 16;
                break;
              }
              return h.prev = 4, P.info("SFUHandler.restartIceTillSuccess.AttemptRestart", { iceRestart: { currentAttempt: u, isSendTransport: n.direction === "send", isRecvTransport: n.direction === "recv" } }), h.next = 8, this.restartIce(n);
            case 8:
              s = !0, h.next = 14;
              break;
            case 11:
              h.prev = 11, h.t0 = h.catch(4), u += 1;
            case 14:
              h.next = 3;
              break;
            case 16:
              if (s) {
                h.next = 18;
                break;
              }
              throw new q("Failed to restart Ice");
            case 18:
            case "end":
              return h.stop();
          }
      }, a, this, [[4, 11]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(at);
vt([A.trace("SFUHandler.setupTransports")], nt.prototype, "setupTransports", 1);
vt([A.trace("SFUHandler.loadRouter")], nt.prototype, "loadRouter", 1);
vt([A.trace("SFUHandler.createRecvTransport")], nt.prototype, "createRecvTransport", 1);
vt([A.trace("SFUHandler.createSendTransport")], nt.prototype, "createSendTransport", 1);
vt([A.trace("SFUHandler.restartIce")], nt.prototype, "restartIce", 1);
vt([A.trace("SFUHandler.createConsumer")], nt.prototype, "createConsumer", 1);
vt([A.trace("SFUHandler.closeConsumer")], nt.prototype, "closeConsumer", 1);
vt([A.trace("SFUHandler.cleanupConsumers")], nt.prototype, "cleanupConsumers", 1);
vt([A.trace("SFUHandler.pauseConsumer")], nt.prototype, "pauseConsumer", 1);
vt([A.trace("SFUHandler.resumeConsumer")], nt.prototype, "resumeConsumer", 1);
vt([A.trace("SFUHandler.createProducer")], nt.prototype, "createProducer", 1);
vt([A.trace("SFUHandler.removeProducer")], nt.prototype, "removeProducer", 1);
vt([A.trace("SFUHandler.stopAllProducers")], nt.prototype, "stopAllProducers", 1);
vt([A.trace("SFUHandler.stopAllTransports")], nt.prototype, "stopAllTransports", 1);
var _C = Object.defineProperty, RC = Object.getOwnPropertyDescriptor, PC = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? RC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && _C(r, t, a), a;
}, Ia = /* @__PURE__ */ function(o) {
  return o.REQUEST = "REQUEST", o.ACCEPT = "ACCEPT", o.REJECT = "REJECT", o.END = "END", o.EVENT = "EVENT", o;
}(Ia || {}), Ii = /* @__PURE__ */ function(o) {
  return o.PENDING = "PENDING", o.ACCEPTED = "ACCEPTED", o.REJECTED = "REJECTED", o.ENDED = "ENDED", o;
}(Ii || {}), Hs = /* @__PURE__ */ function(o) {
  return o.KEYBOARD = "KEYBOARD", o.MOUSE = "MOUSE", o;
}(Hs || {}), Fo = /* @__PURE__ */ function(o) {
  return o.LEFT_CLICK = "click", o.RIGHT_CLICK = "contextmenu", o.MOVE = "mousemove", o;
}(Fo || {}), Da = /* @__PURE__ */ function(o) {
  return o.REQUEST_RECEIVED = "REQUEST_RECEIVED", o.REQUEST_SENT = "REQUEST_SENT", o.INCOMING_REQUEST_ACCEPTED = "INCOMING_REQUEST_ACCEPTED", o.OUTGOING_REQUEST_ACCEPTED = "OUTGOING_REQUEST_ACCEPTED", o.INCOMING_REQUEST_ENDED = "INCOMING_REQUEST_ENDED", o.OUTGOING_REQUEST_ENDED = "OUTGOING_REQUEST_ENDED", o;
}(Da || {}), js = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    I(this, r), e = c.call(this), R(b(e), "id", void 0), R(b(e), "remotePeerId", void 0), R(b(e), "hostPeerId", void 0), R(b(e), "state", void 0);
    var a = t.remotePeerId, n = t.requestId, i = t.hostPeerId, s = t.state;
    return e.id = n, e.remotePeerId = a, e.hostPeerId = i, e.state = s, e;
  }
  return D(r);
}(fr);
js = PC([jr(function(o) {
  throw new q(o.message, "1400");
})], js);
var Ov = /* @__PURE__ */ function(o) {
  return o.REQUESTED_BY_PARTICIPANT = "REQUESTED_BY_PARTICIPANT", o.REQUESTED_BY_MODERATOR = "REQUESTED_BY_MODERATOR", o;
}(Ov || {}), Nv = /* @__PURE__ */ function(o) {
  return o.PRESENT = "REQUEST_TO_PRESENT", o;
}(Nv || {}), CC = Object.defineProperty, IC = Object.getOwnPropertyDescriptor, ft = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? IC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && CC(r, t, a), a;
}, DC = (Be = /* @__PURE__ */ new K(), on = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    I(this, r), e = c.call(this), z(b(e), Be, { writable: !0, value: void 0 }), R(b(e), "isV2AuthToken", void 0), z(b(e), on, { writable: !0, value: void 0 }), R(b(e), "legacyMode", void 0), R(b(e), "roomNodeUrl", void 0), R(b(e), "peerDisplayName", void 0);
    var a = t.roomName, n = t.roomNodeUrl, i = t.peerId, s = t.authToken, u = t.legacyMode, l = t.socketClient, p = t.meetingTitle, h = t.viewType;
    e.roomName = a, e.roomNodeUrl = n, e.peerId = i, e.authToken = s, e.legacyMode = u, V(b(e), Be, l), e.roomJoined = !1, e.mediaConnected = !1, e.meetingTitle = p, e.isV2AuthToken = Le.isV2AuthToken, V(b(e), on, new nt(l, t.device)), se.legacySwitch(u);
    var v = 0, m = /* @__PURE__ */ function() {
      var g = y(/* @__PURE__ */ d().mark(function w(k) {
        var T, _, E, S, C, L, G;
        return d().wrap(function(ee) {
          for (; ; )
            switch (ee.prev = ee.next) {
              case 0:
                return _ = k.err, e.isDisconnected = !0, (T = e.sfuHandler) === null || T === void 0 || T.cleanupConsumers(), e.mediaConnected = !1, $.emit(M.ROOM_NODE_CONNECTION_ERROR, _), e.roomJoined = !1, P.error("RoomNodeClient::ROOM_NODE_CONNECTION_ERROR", { error: _ }), E = Le.isV2AuthToken ? Le.meetingId : a, S = Hr(), ee.next = 11, S.getRoomNodeData({ roomName: E, peerId: i });
              case 11:
                if (C = ee.sent, L = C.roomNodeUrl, G = "".concat(L, "?roomURL=").concat(a, "&peerId=").concat(i, "&authToken=").concat(s, "&version=0.5.0"), v += 1, !(v > 3)) {
                  ee.next = 17;
                  break;
                }
                return ee.abrupt("return");
              case 17:
                P.log("RoomNodeClient::SocketReconnection", { socket: { retryAttempt: v } }), f(b(e), Be).connect(G), Sv(Q(Q({}, Le.roomNodeOptions), {}, { roomNodeUrl: L })), e.roomNodeUrl = L;
              case 21:
              case "end":
                return ee.stop();
            }
        }, w);
      }));
      return function(k) {
        return g.apply(this, arguments);
      };
    }();
    return h === Rr.Livestream && (l.removeListener(oa.SOCKET_CONNECTION_ERROR, m.bind(b(e))), l.on(oa.SOCKET_CONNECTION_ERROR, m.bind(b(e)))), e;
  }
  return D(r, [{ key: "sfuHandler", get: function() {
    return f(this, on);
  } }, { key: "reconnect", value: function() {
    f(this, Be).reconnect();
  } }, { key: "setupTransports", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.sfuHandler.setupTransports();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleSocketCallbacks", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              s.t0 = n.type, s.next = s.t0 === M.NEW_CONSUMER ? 3 : 4;
              break;
            case 3:
              return s.abrupt("return", this.sfuHandler.createConsumer(n.payload));
            case 4:
              return s.abrupt("return", null);
            case 5:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleSockets", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              (!A.logExclusionList.includes(n == null ? void 0 : n.type) || ue.hasFeature(de.BYPASS_LOG_EXCLUSION_LIST)) && P.info("RoomNodeClient::handleSockets::".concat(n == null ? void 0 : n.type)), u.t0 = n.type, u.next = u.t0 === M.CONSUMER_CLOSED ? 6 : u.t0 === M.CONSUMER_PAUSED ? 8 : u.t0 === M.CONSUMER_RESUMED ? 10 : u.t0 === M.CONSUMER_SCORE ? 12 : u.t0 === M.PRODUCER_SCORE ? 14 : u.t0 === M.PRODUCER_CLOSED ? 16 : 18;
              break;
            case 6:
              return this.sfuHandler.closeConsumer(n.payload), u.abrupt("break", 18);
            case 8:
              return this.sfuHandler.pauseConsumer(n.payload), u.abrupt("break", 18);
            case 10:
              return this.sfuHandler.resumeConsumer(n.payload), u.abrupt("break", 18);
            case 12:
              return this.handleConsumerScore(n.payload), u.abrupt("break", 18);
            case 14:
              return this.handleProducerScore(n.payload), u.abrupt("break", 18);
            case 16:
              return this.handleProducerClosed(n.payload), u.abrupt("break", 18);
            case 18:
              typeof i == "function" && i();
            case 19:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "joinRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s, u) {
      var l, p, h = this, v, m, g, w = arguments;
      return d().wrap(function(T) {
        for (; ; )
          switch (T.prev = T.next) {
            case 0:
              return v = w.length > 4 && w[4] !== void 0 ? w[4] : {}, this.peerDisplayName = n, this.roomUUID = s, T.next = 5, f(this, Be).sendMessage({ type: "joinRoom", payload: { device: ze.getDeviceInfo(), displayName: n, rtpCapabilities: this.sfuHandler.getRTPCapabilities(), isLegacy: this.legacyMode, audioMuted: i } });
            case 5:
              if (m = T.sent, !((l = m.payload) !== null && l !== void 0 && l.waitlisted)) {
                T.next = 9;
                break;
              }
              return $.emit(M.WAITLISTED), T.abrupt("return", { roomJoined: !1 });
            case 9:
              if (this.roomJoined = !0, this.mediaConnected = !0, (p = m.payload) === null || p === void 0 || (p = p.waitlistedPeers) === null || p === void 0 || p.forEach(function(_) {
                $.emit(M.WAITLIST_PEER_ADDED, _);
              }), this.legacyMode = m.payload.legacyMode || this.legacyMode, !(u && u !== "")) {
                T.next = 16;
                break;
              }
              return T.next = 16, this.changeRoomDisplayTitle(u);
            case 16:
              return this.maxPreferredStreams = m.payload.maxPreferredStreams, g = Hr(), P.info("RoomNodeClient::joinRoom::pre emitasync room_joined"), T.prev = 19, T.next = 22, $.emitAsync(M.ROOM_JOINED, m.payload);
            case 22:
              T.next = 27;
              break;
            case 24:
              T.prev = 24, T.t0 = T.catch(19), P.error("RoomNodeClient::joinRoom::emitAsync", { error: T.t0 });
            case 27:
              return P.info("RoomNodeClient::joinRoom::post emitasync room_joined"), $.emit(M.SELF_ROOM_JOINED), ue.hasFeature(de.INTERNAL_CALL_STATS) && navigator.product !== "ReactNative" && setTimeout(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function _() {
                var E, S;
                return d().wrap(function(L) {
                  for (; ; )
                    switch (L.prev = L.next) {
                      case 0:
                        return L.next = 2, g.getUserDetails();
                      case 2:
                        E = L.sent, S = { userId: Le.isV2AuthToken ? E.participant.id : E.id, peerId: h.peerId, displayName: n, roomUUID: h.roomUUID, roomViewType: "groupCall", roomName: h.roomName, deviceInfo: Q(Q({}, ze.getDeviceInfo()), {}, { userAgent: navigator.userAgent, memory: navigator.deviceMemory, cpus: navigator.hardwareConcurrency }), sdkName: yl, sdkVersion: Ys, metaData: {}, permissions: {} }, se.roomJoined(S), v != null && v.audio ? se.audioOn() : se.audioOff(), v != null && v.video ? se.videoOn() : se.videoOff();
                      case 7:
                      case "end":
                        return L.stop();
                    }
                }, _);
              }))), T.abrupt("return", { roomJoined: !0 });
            case 31:
            case "end":
              return T.stop();
          }
      }, a, this, [[19, 24]]);
    }));
    function e(a, n, i, s) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return this.sfuHandler.stopAllProducers(), i.next = 3, this.sfuHandler.stopAllTransports();
            case 3:
              f(this, Be).disconnect(), se.callEnded(), A.destruct();
            case 6:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handleProducerClosed", value: function(e) {
    var a = this, n = e.id;
    this.sfuHandler.producers.forEach(function(i, s) {
      i.id === n && a.sfuHandler.removeProducer(s);
    });
  } }, { key: "getConsumers", value: function() {
    return this.sfuHandler.consumers;
  } }, { key: "handleConsumerScore", value: function(e) {
    var a, n = e.id, i = e.score, s = f(this, on).consumers.get(n);
    s && (s.score = i && i.producerScore !== void 0 && i.producerScore >= 0 ? i.producerScore : (a = i == null ? void 0 : i.score) !== null && a !== void 0 ? a : 10, $.emit(M.CONSUMER_SCORE_UPDATE, { id: s.id, kind: s.kind, peerId: s.peerId, score: s.score }));
  } }, { key: "handleProducerScore", value: function(e) {
    var a = e.id, n = e.score, i = Array.from(f(this, on).producers.values()).find(function(u) {
      return u.id === a;
    });
    if (!i) {
      P.error("RoomNodeClient::producer_not_found. ProducerId: ".concat(a));
      return;
    }
    if (i) {
      var s = r.getComputedScore(n);
      s !== void 0 && s !== i.score && (i.score = s, $.emit(M.PRODUCER_SCORE_UPDATE, { id: i.id, kind: i.kind, appData: i.appData, score: i.score }));
    }
  } }, { key: "shareWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (n !== void 0) {
                k.next = 2;
                break;
              }
              return k.abrupt("return", null);
            case 2:
              if (!this.sfuHandler.producers.has(ye.WEBCAM)) {
                k.next = 12;
                break;
              }
              if (s = this.sfuHandler.producers.get(ye.WEBCAM), !(!s.closed && !navigator.isReactNative)) {
                k.next = 10;
                break;
              }
              return k.next = 7, s.replaceTrack({ track: n });
            case 7:
              return k.next = 9, this.resumeWebcam();
            case 9:
              return k.abrupt("return", s.track);
            case 10:
              return k.next = 12, this.sfuHandler.removeProducer(ye.WEBCAM, !1);
            case 12:
              if (u = iT, l = this.sfuHandler.getRTPCapabilities().codecs.find(function(T) {
                return T.mimeType.toLowerCase() === "video/vp9";
              }) || void 0, p = this.sfuHandler.getRTPCapabilities().codecs.find(function(T) {
                return T.mimeType.toLowerCase() === "video/vp8";
              }) || void 0, h = ue.getValue(de.OVERRIDE_WEBCAM_SIMULCAST), l && !this.legacyMode)
                u = uT;
              else if (h !== void 0)
                try {
                  u = JSON.parse(h);
                } catch (T) {
                  P.error("Failed to parse flagsmith simulcast");
                }
              return v = function() {
                return i.legacyMode ? p : l;
              }, m = { track: n, encodings: ue.hasFeature(de.DISABLE_WEBCAM_SIMULCAST) ? void 0 : u, codecOptions: { videoGoogleStartBitrate: 1e3 }, codec: v(), appData: { screenShare: !1 }, stopTracks: !1 }, g = function() {
                i.disableWebcam();
              }, k.abrupt("return", this.sfuHandler.createProducer(ye.WEBCAM, m, g));
            case 21:
            case "end":
              return k.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareScreen", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (u = n.video, l = n.audio, u !== void 0) {
                k.next = 3;
                break;
              }
              return k.abrupt("return");
            case 3:
              return ue.hasFeature(de.SCREENSHARE_SIMULCAST) && (p = sT), h = { track: u, appData: { screenShare: !0, supportsRemoteControl: ze.isElectron() }, encodings: p, stopTracks: !1 }, v = function() {
                i.disableScreenShare();
              }, se.screenShareRequested(), k.next = 9, this.sfuHandler.createProducer(ye.SCREENSHARE_VIDEO, h, v);
            case 9:
              if (m = { opusDtx: !1, opusStereo: !1, opusFec: !0, forceGoogConference: !1 }, ue.hasFeature(de.SCREENSHARE_FORCE_GOOG_CONFERENCE) && (m.forceGoogConference = !0), !l) {
                k.next = 16;
                break;
              }
              return g = { track: l, codecOptions: m, appData: { screenShare: !0, supportsRemoteControl: ze.isElectron() }, stopTracks: !1 }, v = function() {
              }, k.next = 16, this.sfuHandler.createProducer(ye.SCREENSHARE_AUDIO, g, v);
            case 16:
              se.screenShareStart((s = this.sfuHandler.producers.get(ye.SCREENSHARE_VIDEO)) === null || s === void 0 || (s = s.rtpParameters.encodings[0]) === null || s === void 0 ? void 0 : s.ssrc);
            case 17:
            case "end":
              return k.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "shareMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (h.prev = 0, n !== void 0) {
                h.next = 3;
                break;
              }
              throw new q("track undefined");
            case 3:
              if (!this.sfuHandler.producers.has(ye.MIC)) {
                h.next = 13;
                break;
              }
              if (s = this.sfuHandler.producers.get(ye.MIC), !(!s.closed && !navigator.isReactNative)) {
                h.next = 11;
                break;
              }
              return h.next = 8, s.replaceTrack({ track: n });
            case 8:
              return h.next = 10, this.resumeMic();
            case 10:
              return h.abrupt("return");
            case 11:
              return h.next = 13, this.sfuHandler.removeProducer(ye.MIC, !1);
            case 13:
              return u = { track: n, codecOptions: { opusDtx: !1, opusStereo: !1, opusFec: !0, opusMaxAverageBitrate: 16e3 }, stopTracks: !1 }, l = function() {
                i.disableMic();
              }, h.next = 17, this.sfuHandler.createProducer(ye.MIC, u, l);
            case 17:
              h.next = 22;
              break;
            case 19:
              throw h.prev = 19, h.t0 = h.catch(0), new q(h.t0);
            case 22:
            case "end":
              return h.stop();
          }
      }, a, this, [[0, 19]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pauseMic", value: function() {
    var e = this.sfuHandler.producers.get(ye.MIC);
    if (!e) {
      P.error("pauseMic::could_not_find_mic_producer");
      return;
    }
    e.pause(), f(this, Be).sendMessage({ type: "pauseProducer", payload: { producerId: e.id } });
  } }, { key: "pauseWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.sfuHandler.producers.get(ye.WEBCAM), n) {
                s.next = 4;
                break;
              }
              return P.error("pauseWebcam::could_not_find_webcam_producer"), s.abrupt("return");
            case 4:
              return n.pause(), s.next = 7, f(this, Be).sendMessage({ type: "pauseProducer", payload: { producerId: n.id } });
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.sfuHandler.producers.get(ye.MIC), n) {
                s.next = 4;
                break;
              }
              return P.error("resumeMic::could_not_find_mic_producer"), s.abrupt("return");
            case 4:
              return n.resume(), s.next = 7, f(this, Be).sendMessage({ type: "resumeProducer", payload: { producerId: n.id } });
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resumeWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.sfuHandler.producers.get(ye.WEBCAM), n) {
                s.next = 4;
                break;
              }
              return P.error("resumeWebcam::could_not_find_webcam_producer"), s.abrupt("return");
            case 4:
              return n.resume(), s.next = 7, f(this, Be).sendMessage({ type: "resumeProducer", payload: { producerId: n.id } });
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableWebcam", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.sfuHandler.removeProducer(ye.WEBCAM);
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableMic", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.sfuHandler.removeProducer(ye.MIC);
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return P.info("screen_sharing_stopped"), se.screenShareStop((n = this.sfuHandler.producers.get(ye.SCREENSHARE_VIDEO)) === null || n === void 0 || (n = n.rtpParameters.encodings[0]) === null || n === void 0 ? void 0 : n.ssrc), s.next = 4, this.sfuHandler.removeProducer(ye.SCREENSHARE_VIDEO);
            case 4:
              return s.next = 6, this.sfuHandler.removeProducer(ye.SCREENSHARE_AUDIO);
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resetVideoProducers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!n) {
                u.next = 4;
                break;
              }
              return u.next = 3, this.sfuHandler.removeProducer(ye.WEBCAM, !1);
            case 3:
              this.shareWebcam(n);
            case 4:
              if (!i) {
                u.next = 8;
                break;
              }
              return u.next = 7, this.sfuHandler.removeProducer(ye.SCREENSHARE_VIDEO, !1);
            case 7:
              this.shareScreen({ video: i });
            case 8:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getRoomState", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", f(this, Be).sendMessage({ type: "getRoomState" }));
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "changeRoomDisplayTitle", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "changeDisplayTitle", payload: { displayTitle: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage(n));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "broadcastMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return s = { payload: i, type: n }, l.abrupt("return", f(this, Be).sendMessage({ type: "roomMessage", payload: s }));
            case 2:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendChatMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "chatMessage", payload: n });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getChatMessages", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", f(this, Be).sendMessage({ type: "getChatMessages" }));
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pinChatMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "pinChatMessage", payload: n }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "unpinChatMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "unpinChatMessage", payload: n }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPolls", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", f(this, Be).sendMessage({ type: "getPolls" }));
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "newPoll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "newPoll", payload: n });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "votePoll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "votePoll", payload: n });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "acceptWaitingRequest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "acceptWaitingRequest", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "rejectWaitingRequest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "rejectWaitingRequest", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteAll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "muteAllNew", payload: { allowUnMute: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteAllVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Be).sendMessage({ type: "muteAllVideo" });
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pinPeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "pinPeer", payload: { id: n } }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "unpinPeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "unpinPeer", payload: { id: n } }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "disableAudioPeerNew", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "disableVideoPeer", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kickAll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Be).sendMessage({ type: "kickAll" });
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Be).sendMessage({ type: "kick", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "getPage", payload: { pageNum: n } }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "muteSelf", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return this.pauseMic(), i.next = 3, f(this, Be).sendMessage({ type: "muteSelf" });
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "unmuteSelf", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.resumeMic();
            case 2:
              return i.next = 4, f(this, Be).sendMessage({ type: "unmuteSelf" });
            case 4:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "addRoomPlugin", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "addPlugin", payload: n }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeRoomPlugin", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "removePlugin", payload: n }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "remoteControlMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, Be).sendMessage({ type: "message", payload: n }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "requestRemoteControl", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.remoteControlMessage({ peerId: n.hostPeerId, remoteRequestId: n.id, hostPeerId: n.hostPeerId, remotePeerId: n.remotePeerId, remoteRequestType: Ia.REQUEST }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "acceptRemoteControl", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.remoteControlMessage({ peerId: n.remotePeerId, remoteRequestId: n.id, hostPeerId: n.hostPeerId, remotePeerId: n.remotePeerId, remoteRequestType: Ia.ACCEPT }));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "terminateRemoteControl", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.remoteControlMessage({ peerId: n, remoteRequestId: i.id, hostPeerId: i.hostPeerId, remotePeerId: i.remotePeerId, remoteRequestType: Ia.END }));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendEventRemoteControl", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return l.abrupt("return", this.remoteControlMessage({ peerId: n, remoteRequestId: i, remoteEvent: s, hostPeerId: this.peerId, remotePeerId: n, remoteRequestType: Ia.EVENT }));
            case 1:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSpotlight", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", f(this, Be).sendMessage({ type: n, payload: Q(Q({}, i), {}, { roomMessageType: "spotlight" }) }));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSpotlightToRoom", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.assertSpotlight("roomMessage", n));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "assertSpotlightToPeer", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", this.assertSpotlight("message", n));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "requestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sendMessage({ type: "requestToJoinStage", payload: n });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "withdrawRequestToJoinStage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.next = 2, this.sendMessage({ type: "withdrawRequestToJoinStage" });
              case 2:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /** @deprecated in favour of `grantStageAccess` */
  }, { key: "acceptAllRequestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sendMessage({ type: "acceptAllRequestToJoinStage", payload: n.map(function(u) {
                return Q(Q({}, u), {}, { type: Ov.REQUESTED_BY_MODERATOR });
              }) });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "grantStageAccess",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, this.sendMessage({ type: "grantStageAccess", payload: { userIDs: n } });
              case 2:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /** @deprecated in favour of `kickPeerFromStage` */
  }, { key: "removePeerFromStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.sendMessage({ type: "removePeerFromStage", payload: { id: n, type: i } });
            case 2:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "kickPeerFromStage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, this.sendMessage({ type: "kickPeerFromStage", payload: { userIDs: n } });
              case 2:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // NOTE(@madhugb): stop all producers
  }, {
    key: "stopAllProducers",
    value: function() {
      f(this, on).stopAllProducers();
    }
    // NOTE(callmetarush): starting to present by default for now.
  }, {
    key: "startPresenting",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.next = 2, this.sendMessage({ type: "startPresenting" });
              case 2:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // NOTE(callmetarush): Unused till above default is on
  }, {
    key: "stopPresenting",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return this.stopAllProducers(), i.next = 3, this.sendMessage({ type: "stopPresenting" });
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /** @deprecated in favour of `denyStageAccess` */
  }, { key: "rejectRequestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sendMessage({ type: "rejectRequestToJoinStage", payload: { id: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "denyStageAccess", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.sendMessage({ type: "denyStageAccess", payload: { userIDs: n } });
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "init", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k;
      return d().wrap(function(_) {
        for (; ; )
          switch (_.prev = _.next) {
            case 0:
              return i = n.legacyMode, s = i === void 0 ? !0 : i, u = n.roomName, l = n.peerId, p = n.authToken, h = n.meetingTitle, v = n.device, m = n.viewType, w = "".concat(n.roomNodeUrl, "?roomURL=").concat(u, "&peerId=").concat(l, "&authToken=").concat(p, "&version=0.5.0"), k = new xs({ callbackHandler: function() {
                var E = y(/* @__PURE__ */ d().mark(function C(L) {
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return j.next = 2, g.handleSocketCallbacks(L);
                        case 2:
                        case "end":
                          return j.stop();
                      }
                  }, C);
                }));
                function S(C) {
                  return E.apply(this, arguments);
                }
                return S;
              }() }), k.on(oa.SOCKET_MESSAGE, /* @__PURE__ */ function() {
                var E = y(/* @__PURE__ */ d().mark(function S(C, L) {
                  return d().wrap(function(j) {
                    for (; ; )
                      switch (j.prev = j.next) {
                        case 0:
                          return j.next = 2, g.handleSockets(C, L);
                        case 2:
                        case "end":
                          return j.stop();
                      }
                  }, S);
                }));
                return function(S, C) {
                  return E.apply(this, arguments);
                };
              }()), k.connect(w), g = new r({ legacyMode: s, authToken: p, peerId: l, roomName: u, roomNodeUrl: w, socketClient: k, meetingTitle: h, device: v, viewType: m }), k.on(oa.SOCKET_DISCONNECTED, function(E) {
                var S, C;
                g.isDisconnected = g.roomJoined, (S = g.sfuHandler) === null || S === void 0 || S.cleanupConsumers(), (C = g.sfuHandler) === null || C === void 0 || C.stopAllTransports(), g.mediaConnected = !1, $.emit(M.ROOM_NODE_DISCONNECTED, E), g.roomJoined = !1, P.info("RoomNodeClient::ROOM_NODE_DISCONNECTED");
              }), k.on(oa.SOCKET_CONNECTED, /* @__PURE__ */ function() {
                var E = y(/* @__PURE__ */ d().mark(function S(C) {
                  return d().wrap(function(G) {
                    for (; ; )
                      switch (G.prev = G.next) {
                        case 0:
                          g.mediaConnected = !0, $.emit(M.ROOM_NODE_CONNECTED, Q(Q({}, C), {}, { wasDisconnected: g.isDisconnected })), g.isDisconnected = !1, P.info("RoomNodeClient::ROOM_NODE_CONNECTED");
                        case 4:
                        case "end":
                          return G.stop();
                      }
                  }, S);
                }));
                return function(S) {
                  return E.apply(this, arguments);
                };
              }()), _.abrupt("return", g);
            case 9:
            case "end":
              return _.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getComputedScore", value: function(e) {
    var a = 0;
    try {
      if (Array.isArray(e))
        if (e.length === 1)
          a = e[0].score;
        else {
          var n = e.map(function(u) {
            var l = u.score;
            return l != null ? l : 10;
          }).filter(function(u) {
            return u > 0;
          });
          a = n.reduce(function(u, l) {
            return u + l;
          }, 0) / e.length;
        }
      else {
        var i;
        a = (i = e == null ? void 0 : e.score) !== null && i !== void 0 ? i : 10;
      }
    } catch (u) {
      var s;
      a = (s = e == null ? void 0 : e.score) !== null && s !== void 0 ? s : 10;
    }
    return a;
  } }]), r;
}(Iv)), qe = DC;
ft([A.trace("RoomNodeClient.reconnect")], qe.prototype, "reconnect", 1);
ft([A.trace("RoomNodeClient.joinRoom")], qe.prototype, "joinRoom", 1);
ft([A.trace("RoomNodeClient.leaveRoom")], qe.prototype, "leaveRoom", 1);
ft([A.trace("RoomNodeClient.shareWebcam")], qe.prototype, "shareWebcam", 1);
ft([A.trace("RoomNodeClient.shareScreen")], qe.prototype, "shareScreen", 1);
ft([A.trace("RoomNodeClient.shareMic")], qe.prototype, "shareMic", 1);
ft([A.trace("RoomNodeClient.pauseMic")], qe.prototype, "pauseMic", 1);
ft([A.trace("RoomNodeClient.pauseWebcam")], qe.prototype, "pauseWebcam", 1);
ft([A.trace("RoomNodeClient.resumeMic")], qe.prototype, "resumeMic", 1);
ft([A.trace("RoomNodeClient.resumeWebcam")], qe.prototype, "resumeWebcam", 1);
ft([A.trace("RoomNodeClient.disableWebcam")], qe.prototype, "disableWebcam", 1);
ft([A.trace("RoomNodeClient.disableMic")], qe.prototype, "disableMic", 1);
ft([A.trace("RoomNodeClient.disableScreenShare")], qe.prototype, "disableScreenShare", 1);
ft([A.trace("RoomNodeClient.resetVideoProducers")], qe.prototype, "resetVideoProducers", 1);
var Gt;
function $v(o) {
  return Uc.apply(this, arguments);
}
function Uc() {
  return Uc = y(/* @__PURE__ */ d().mark(function o(c) {
    var r;
    return d().wrap(function(e) {
      for (; ; )
        switch (e.prev = e.next) {
          case 0:
            if (!((r = Gt) !== null && r !== void 0 && r.roomJoined)) {
              e.next = 2;
              break;
            }
            throw new Error("Room Node Client already setup");
          case 2:
            return Gt && (Gt = void 0), e.next = 5, Ce.init(c);
          case 5:
            Gt = e.sent;
          case 6:
          case "end":
            return e.stop();
        }
    }, o);
  })), Uc.apply(this, arguments);
}
function Lv(o) {
  return Fc.apply(this, arguments);
}
function Fc() {
  return Fc = y(/* @__PURE__ */ d().mark(function o(c) {
    var r;
    return d().wrap(function(e) {
      for (; ; )
        switch (e.prev = e.next) {
          case 0:
            if (!((r = Gt) !== null && r !== void 0 && r.roomJoined)) {
              e.next = 2;
              break;
            }
            throw new Error("Room Node Client already setup");
          case 2:
            return Gt && (Gt = void 0), e.next = 5, qe.init(c);
          case 5:
            Gt = e.sent;
          case 6:
          case "end":
            return e.stop();
        }
    }, o);
  })), Fc.apply(this, arguments);
}
function Uv() {
  try {
    var o;
    (o = Gt) === null || o === void 0 || o.leaveRoom();
  } catch (c) {
    P.error("roomNodeClient::cleanupRoomNodeClient");
  }
  Gt = void 0;
}
function Mr() {
  return Gt;
}
function Cn(o) {
  var c, r, t, e, a, n, i, s, u;
  return o ? { media: { audio: { enabled: o.audioEnabled, trackId: (c = o.audioTrack) === null || c === void 0 ? void 0 : c.id, permission: "mediaPermissions" in o ? (r = o.mediaPermissions) === null || r === void 0 ? void 0 : r.audio : null }, video: { enabled: o.videoEnabled, trackId: (t = o.videoTrack) === null || t === void 0 ? void 0 : t.id, permission: "mediaPermissions" in o ? (e = o.mediaPermissions) === null || e === void 0 ? void 0 : e.video : null }, screenshare: { enabled: o.screenShareEnabled, permission: "mediaPermissions" in o ? (a = o.mediaPermissions) === null || a === void 0 ? void 0 : a.screenshare : null, audio: { enabled: (n = o.screenShareTracks) === null || n === void 0 || (n = n.audio) === null || n === void 0 ? void 0 : n.enabled, trackId: (i = o.screenShareTracks) === null || i === void 0 || (i = i.audio) === null || i === void 0 ? void 0 : i.id }, video: { enabled: (s = o.screenShareTracks) === null || s === void 0 || (s = s.video) === null || s === void 0 ? void 0 : s.enabled, trackId: (u = o.screenShareTracks) === null || u === void 0 || (u = u.video) === null || u === void 0 ? void 0 : u.id } } } } : {};
}
var AC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this, t), R(b(a), "code", void 0), a.code = e, a;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error)), Ca = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a) {
    var n;
    return I(this, r), n = c.call(this, e), R(b(n), "constraints", void 0), R(b(n), "name", void 0), n.name = t, n.constraints = a, n;
  }
  return D(r);
}(/* @__PURE__ */ Bt(Error)), MC = Object.defineProperty, OC = Object.getOwnPropertyDescriptor, La = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? OC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && MC(r, t, a), a;
}, ec = { port: void 0 }, NC = ["virtual", "emulator", "krisp", "solstice conference", "teams", "manycam", "blackHole"];
function _a(o) {
  var c = o.label.toLowerCase();
  return ze._bowser.getOSName() === "macOS" && c.includes("iphone") ? (P.log("isVirtualDevice::ignore_macos_continuity"), !0) : NC.some(function(r) {
    return c.includes(r);
  });
}
var $C = (Fa = /* @__PURE__ */ new K(), Ji = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, Fa, { writable: !0, value: void 0 }), z(this, Ji, { writable: !0, value: void 0 }), V(this, Fa, c), V(this, Ji, new AbortController());
  }
  return D(o, [{ key: "destruct", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              (e = f(this, Ji)) === null || e === void 0 || e.abort();
            case 1:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "onDeviceChange", value: function(r) {
    var t = this;
    ze.supportsDeviceChangeEvent() && navigator.mediaDevices.addEventListener("devicechange", Xo(/* @__PURE__ */ function() {
      var e = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u, l, p;
        return d().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                return i = t.availableDevices, s = new Set(i.map(function(m) {
                  return m.deviceId;
                })), v.next = 4, t.repopulateAvailableDevices();
              case 4:
                u = t.availableDevices, l = new Set(u.map(function(m) {
                  return m.deviceId;
                })), p = { added: u.filter(function(m) {
                  return !s.has(m.deviceId);
                }), removed: i.filter(function(m) {
                  return !l.has(m.deviceId);
                }) }, t.repopulateAvailableDevices().then(function() {
                  return r(n, p);
                });
              case 8:
              case "end":
                return v.stop();
            }
        }, a);
      }));
      return function(a) {
        return e.apply(this, arguments);
      };
    }(), 100), { signal: f(this, Ji).signal });
  } }, { key: "repopulateAvailableDevices", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, o.enumerateDevices();
            case 2:
              e = i.sent, a = !pv(Ab(e, f(this, Fa), Eb)), a && (V(this, Fa, e), se.devices("AUDIO", this.getAudioDevices()), se.devices("VIDEO", this.getVideoDevices()), se.devices("SPEAKER", this.getSpeakerDevices()), P.info("repopulated_full_device_list", { devices: JSON.stringify(e) }));
            case 5:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "availableDevices", get: function() {
    return f(this, Fa);
  } }, { key: "getAvailableDevicesByKind", value: function(r) {
    return f(this, Fa).filter(function(t) {
      return t.kind === r;
    });
  } }, {
    key: "getDeviceById",
    value: function(r, t) {
      return f(this, Fa).find(function(e) {
        return e.deviceId === r && e.kind === t;
      });
    }
    /**
    * Returns all audio input devices (microphone devices).
    */
  }, {
    key: "getAudioDevices",
    value: function() {
      return this.getAvailableDevicesByKind("audioinput").sort(function(r, t) {
        var e = _a(r) ? 0 : 1, a = _a(t) ? 0 : 1;
        return a - e;
      });
    }
    /**
    * Returns all video input devices.
    */
  }, {
    key: "getVideoDevices",
    value: function() {
      return this.getAvailableDevicesByKind("videoinput").sort(function(r, t) {
        var e = _a(r) ? 0 : 1, a = _a(t) ? 0 : 1;
        return a - e;
      });
    }
    /**
    * Returns all audio output devices (speaker devices).
    */
  }, { key: "getSpeakerDevices", value: function() {
    return this.getAvailableDevicesByKind("audiooutput").sort(function(r, t) {
      var e = _a(r) ? 0 : 1, a = _a(t) ? 0 : 1;
      return a - e;
    });
  } }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (e = [], !o.isDeviceListAvailable()) {
                n.next = 8;
                break;
              }
              return n.next = 4, o.enumerateDevices();
            case 4:
              e = n.sent, P.info("initial_full_device_list", { devices: JSON.stringify(e) }), n.next = 9;
              break;
            case 8:
              P.error("UnsupportedMediaAPI::navigator.mediaDevices.enumerateDevices", { debuggingHint: "Try checking meetingMetadata.visitedUrl. It should be running on localhost/127.0.0.1 or HTTPS, if not, there would be issues." });
            case 9:
              return n.abrupt("return", new o(e));
            case 10:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "isDeviceListAvailable", value: function() {
    return !!(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);
  } }, { key: "enumerateDevices", value: function() {
    try {
      return navigator.mediaDevices.enumerateDevices();
    } catch (r) {
      return P.error("enumerate_devices_failed", { error: r }), Promise.resolve([]);
    }
  } }, { key: "getAudioConstraints", value: function(r) {
    var t = {}, e = r.audioOptions || {}, a = e.disableAP, n = a === void 0 ? !1 : a, i = e.disableAEC, s = i === void 0 ? !1 : i, u = e.disableNS, l = u === void 0 ? !1 : u, p = e.disableAGC, h = p === void 0 ? !1 : p, v = e.disableHPF, m = v === void 0 ? !1 : v;
    if (ze.isFirefox() || ze.isWebKitBased())
      t.audio = { deviceId: r.audioDeviceId, autoGainControl: !h && !n, echoCancellation: !s && !n, noiseSuppression: !l && !n };
    else {
      if (typeof t.audio == "boolean")
        return t;
      t.audio = {}, t.audio.optional = [r.audioDeviceId ? { sourceId: r.audioDeviceId } : { sourceId: "default" }, { echoCancellation: !s && !n }, { googEchoCancellation: !s && !n }, { googAutoGainControl: !h && !n }, { googNoiseSuppression: !l && !n }, { googHighpassFilter: !m && !n }, { googNoiseSuppression2: !l && !n }, { googEchoCancellation2: !s && !n }, { googAutoGainControl2: !h && !n }];
    }
    return t;
  } }, { key: "getVideoConstraints", value: function(r) {
    var t = {}, e = r.videoDeviceId, a = r.videoTrackConstraints, n = r.facingMode, i = n === void 0 ? "user" : n, s = r.frameRate, u = s === void 0 ? { ideal: 24, max: 30 } : s;
    return t.video = a || Yo.vga, typeof t.video == "boolean" || (e && (t.video.deviceId = { exact: e }), t.video.facingMode = i, t.video.frameRate = u), t;
  } }, { key: "getUserMediaWithTimeout", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i, s = arguments;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (e = s.length > 0 && s[0] !== void 0 ? s[0] : {}, a = s.length > 1 && s[1] !== void 0 ? s[1] : 0, l.prev = 2, P.info("getUserMediaWithTimeout::requesting_user_media", { timeout: a, constraints: JSON.stringify(e) }), a) {
                l.next = 10;
                break;
              }
              return l.next = 7, navigator.mediaDevices.getUserMedia(e);
            case 7:
              return n = l.sent, P.info("getUserMediaWithTimeout::received_user_media", { timeout: a, constraints: JSON.stringify(e) }), l.abrupt("return", n);
            case 10:
              return l.next = 12, Promise.race([navigator.mediaDevices.getUserMedia(e), new Promise(function(p, h) {
                setTimeout(function() {
                  return h(new AC("Get user media timed out", "ERR_GUM_TIMEOUT"));
                }, a);
              })]);
            case 12:
              return i = l.sent, P.info("getUserMediaWithTimeout::received_user_media", { timeout: a, constraints: JSON.stringify(e) }), l.abrupt("return", i);
            case 17:
              throw l.prev = 17, l.t0 = l.catch(2), P.error("getUserMediaWithTimeout::failed_to_access_local_media", { error: l.t0, constraints: JSON.stringify(e) }), P.error("Failed to get access to local media.", { error: l.t0, constraints: JSON.stringify(e) }), new Ca(l.t0.name, l.t0.message, e);
            case 22:
            case "end":
              return l.stop();
          }
      }, t, null, [[2, 17]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAudioTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, o.getUserMediaWithTimeout(e);
            case 2:
              return a = s.sent, n = a.getAudioTracks()[0], s.abrupt("return", n);
            case 5:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getVideoTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, o.getUserMediaWithTimeout(e);
            case 2:
              return a = s.sent, n = a.getVideoTracks()[0], s.abrupt("return", n);
            case 5:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getScreenShareTracks", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (a = ue.hasFeature(de.EXTENSION_HACK), n = null, a)
                try {
                  ec.port = window.chrome.runtime.connect("nkeimhogjdpnpccoofpliimaahmaaome", { name: "chooseDesktopMedia" });
                } catch (v) {
                  A.addLogInCurrentSpan("error", "Extension connect error"), a = !1;
                }
              if (!a) {
                h.next = 7;
                break;
              }
              return h.next = 6, new Promise(function(v) {
                var m = setTimeout(function() {
                  return v(void 0);
                }, 12e3);
                ec.port.onMessage.addListener(/* @__PURE__ */ function() {
                  var g = y(/* @__PURE__ */ d().mark(function w(k) {
                    var T;
                    return d().wrap(function(E) {
                      for (; ; )
                        switch (E.prev = E.next) {
                          case 0:
                            k.value.streamId && (T = k.value.streamId, clearTimeout(m), v(T));
                          case 1:
                          case "end":
                            return E.stop();
                        }
                    }, w);
                  }));
                  return function(w) {
                    return g.apply(this, arguments);
                  };
                }()), ec.port.postMessage({ method: "chooseDesktopMedia", sources: ["screen"] });
              });
            case 6:
              n = h.sent;
            case 7:
              if (!n) {
                h.next = 15;
                break;
              }
              return A.addLogInCurrentSpan("error", "Acquiring extension screenshare track"), h.next = 11, navigator.mediaDevices.getUserMedia({ audio: !1, video: { mandatory: { maxWidth: 1920, maxHeight: 1080, chromeMediaSource: "desktop", chromeMediaSourceId: n }, optional: [{ maxFrameRate: parseInt((s = ue.getValue(de.VAL_MAX_FRAMERATE_EXT)) !== null && s !== void 0 ? s : "12", 10) }, { minFrameRate: parseInt((u = ue.getValue(de.VAL_MIN_FRAMERATE_EXT)) !== null && u !== void 0 ? u : "8", 10) }] } });
            case 11:
              i = h.sent, A.addLogInCurrentSpan("error", "Acquired extension screenshare track"), h.next = 18;
              break;
            case 15:
              return h.next = 17, navigator.mediaDevices.getDisplayMedia(e);
            case 17:
              i = h.sent;
            case 18:
              return l = { video: i.getVideoTracks()[0], audio: i.getAudioTracks()[0] }, h.abrupt("return", l);
            case 20:
            case "end":
              return h.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAudioAndVideoTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, o.getUserMediaWithTimeout(e);
            case 2:
              return a = u.sent, n = a.getAudioTracks()[0], i = a.getVideoTracks()[0], u.abrupt("return", { audioTrack: n, videoTrack: i });
            case 6:
            case "end":
              return u.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}()), wr = $C;
La([A.trace("LocalMediaUtils.onDeviceChange")], wr.prototype, "onDeviceChange", 1);
La([A.trace("LocalMediaUtils.repopulateAvailableDevices")], wr.prototype, "repopulateAvailableDevices", 1);
La([A.trace("LocalMediaUtils.isDeviceListAvailable")], wr, "isDeviceListAvailable", 1);
La([A.trace("LocalMediaUtils.enumerateDevices")], wr, "enumerateDevices", 1);
La([A.trace("LocalMediaUtils.getUserMediaWithTimeout")], wr, "getUserMediaWithTimeout", 1);
La([A.trace("LocalMediaUtils.getAudioTrack")], wr, "getAudioTrack", 1);
La([A.trace("LocalMediaUtils.getVideoTrack")], wr, "getVideoTrack", 1);
La([A.trace("LocalMediaUtils.getScreenShareTracks")], wr, "getScreenShareTracks", 1);
La([A.trace("LocalMediaUtils.getAudioAndVideoTrack")], wr, "getAudioAndVideoTrack", 1);
var Ra = { setItem: function(c, r) {
  try {
    localStorage.setItem(c, r);
  } catch (t) {
    P.error("LocalStorage::setItem::crashed", { error: t, localStorage: { key: c, value: r } });
  }
}, getItem: function(c) {
  try {
    return localStorage.getItem(c);
  } catch (r) {
    P.error("LocalStorage::getItem::crashed", { error: r, localStorage: { key: c } });
  }
  return null;
} }, LC = function() {
  var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0;
  return new Promise(function(r) {
    return setTimeout(r, c);
  });
}, UC = function(c, r, t) {
  var e = typeof t == "number" ? t : 250, a = c.createMediaStreamSource(r), n = c.createAnalyser();
  n.fftSize = 2048, a.connect(n);
  var i = new Uint8Array(n.fftSize), s = !1;
  setTimeout(function() {
    s = !0;
  }, e);
  function u() {
    return s ? Promise.resolve(!0) : (n.getByteTimeDomainData(i), i.some(function(l) {
      return l !== 128 && l !== 0;
    }) ? Promise.resolve(!1) : LC().then(u));
  }
  return u().then(function(l) {
    return a.disconnect(), l;
  }, function(l) {
    throw a.disconnect(), l;
  });
}, FC = typeof AudioContext != "undefined" ? AudioContext : null, VC = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), R(this, "_AudioContext", void 0), R(this, "audioContext", void 0), R(this, "_audioContextRefContainers", void 0);
    var r = Q({ AudioContext: FC }, c);
    Object.defineProperties(this, { _AudioContext: { value: r.AudioContext }, audioContext: { value: null, writable: !0 }, _audioContextRefContainers: { value: /* @__PURE__ */ new Set() }, AudioContextProvider: { enumerable: !0, value: o } });
  }
  return D(o, [{ key: "getOrCreate", value: function(r) {
    if (!this._audioContextRefContainers.has(r) && (this._audioContextRefContainers.add(r), this._AudioContext && !this.audioContext))
      try {
        this.audioContext = new this._AudioContext();
      } catch (t) {
      }
    return this.audioContext;
  } }, { key: "release", value: function(r) {
    this._audioContextRefContainers.has(r) && (this._audioContextRefContainers.delete(r), !this._audioContextRefContainers.size && this.audioContext && (this.audioContext.close(), this.audioContext = null));
  } }]), o;
}(), $p = new VC(), HC = 3, jC = 250;
function GC(o) {
  var c = {}, r = $p.getOrCreate(c), t = HC;
  function e() {
    return t -= 1, UC(r, o.srcObject, jC).then(function(a) {
      return a ? t > 0 ? e() : !0 : !1;
    }).catch(function() {
      return !0;
    });
  }
  return e().finally(function() {
    $p.release(c);
  });
}
function Ms(o) {
  return Vc.apply(this, arguments);
}
function Vc() {
  return Vc = y(/* @__PURE__ */ d().mark(function o(c) {
    var r, t, e, a;
    return d().wrap(function(i) {
      for (; ; )
        switch (i.prev = i.next) {
          case 0:
            if (r = new Audio(), t = new MediaStream(), t.addTrack(c), r.srcObject = t, e = !1, i.prev = 5, a = r.play(), !a) {
              i.next = 10;
              break;
            }
            return i.next = 10, a;
          case 10:
            return i.next = 12, GC(r);
          case 12:
            e = i.sent, e && P.info("checkIfAudioTrackIsSilent::silence_detected"), i.next = 19;
            break;
          case 16:
            i.prev = 16, i.t0 = i.catch(5), P.error("checkIfAudioTrackIsSilent::failed_to_detect_silence", { error: i.t0 });
          case 19:
            return i.prev = 19, r.pause(), r.remove(), i.finish(19);
          case 23:
            return i.abrupt("return", e);
          case 24:
          case "end":
            return i.stop();
        }
    }, o, null, [[5, 16, 19, 23]]);
  })), Vc.apply(this, arguments);
}
function BC(o, c) {
  return Hc.apply(this, arguments);
}
function Hc() {
  return Hc = y(/* @__PURE__ */ d().mark(function o(c, r) {
    var t, e, a, n, i, s;
    return d().wrap(function(l) {
      for (; ; )
        switch (l.prev = l.next) {
          case 0:
            if (c != null && c.length) {
              l.next = 2;
              break;
            }
            return l.abrupt("return", r);
          case 2:
            return t = new AudioContext(), l.next = 5, Promise.all(c == null ? void 0 : c.map(function(p) {
              return p(t);
            }));
          case 5:
            for (e = l.sent, a = t.createMediaStreamSource(new MediaStream([r])), n = t.createMediaStreamDestination(), l.prev = 8, i = a, s = 0; s < e.length; s += 1)
              i.connect(e[s]), i = e[s];
            i.connect(n), l.next = 18;
            break;
          case 14:
            return l.prev = 14, l.t0 = l.catch(8), P.error("getTransformedAudioTrack::middleware_execution_failed", { error: l.t0 }), l.abrupt("return", r);
          case 18:
            return l.abrupt("return", n.stream.getAudioTracks()[0]);
          case 19:
          case "end":
            return l.stop();
        }
    }, o, null, [[8, 14]]);
  })), Hc.apply(this, arguments);
}
var qC = Object.defineProperty, WC = Object.getOwnPropertyDescriptor, JC = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? WC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && qC(r, t, a), a;
}, jc = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a) {
    var n;
    return I(this, r), n = c.call(this), R(b(n), "constructorName", n.constructor.name), R(b(n), "userSelectedDevice", void 0), R(b(n), "mediaInterface", void 0), R(b(n), "isNonPreferredDevice", void 0), R(b(n), "_mediaTrack", void 0), R(b(n), "transformedMediaTrack", void 0), R(b(n), "middlewares", []), R(b(n), "currentDevice", void 0), n.mediaInterface = t, e && n.setMediaTrack(e), n.userSelectedDevice = void 0, n.isNonPreferredDevice = a, n.onTrackEnded = n.onTrackEnded.bind(b(n)), n.onTrackMuted = n.onTrackMuted.bind(b(n)), n;
  }
  return D(r, [{ key: "disableTrack", value: function() {
    var e, a;
    this.removeMediaTrackListeners(), (e = this._mediaTrack) === null || e === void 0 || e.stop(), this._mediaTrack = void 0, (a = this.transformedMediaTrack) === null || a === void 0 || a.stop(), this.transformedMediaTrack = void 0;
  } }, { key: "mediaTrack", get: function() {
    return this._mediaTrack;
  } }, {
    key: "setMediaTrack",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                s = function(h) {
                  P.error("".concat(i.constructorName, ".setMediaTrack.error"), { error: h });
                };
                try {
                  this.disableTrack();
                } catch (p) {
                  s(p);
                }
                return l.next = 4, this.conditionallyChangeTrack(n);
              case 4:
                return this._mediaTrack = l.sent, l.next = 7, this.setTransformedTrack();
              case 7:
                return l.prev = 7, this.addMediaTrackListeners(), l.next = 11, this.setCurrentDevice();
              case 11:
                l.next = 16;
                break;
              case 13:
                l.prev = 13, l.t0 = l.catch(7), s(l.t0);
              case 16:
              case "end":
                return l.stop();
            }
        }, a, this, [[7, 13]]);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Represents current audio/video state according to track status
    */
  }, {
    key: "trackEnabled",
    get: function() {
      return !!this.mediaTrack && this.mediaTrack.readyState === "live" && this.mediaTrack.enabled;
    }
    /**
    * Mutes track if it's present, DOES NOT STOP IT!
    * Only used for audio streams
    */
  }, {
    key: "muteTrack",
    value: function() {
      if (!this.mediaTrack) {
        P.warn("BaseMediaHandler.muteTrack Tried muting with no track present");
        return;
      }
      this.transformedMediaTrack && (this.transformedMediaTrack.enabled = !1), this.mediaTrack.enabled = !1;
    }
    /**
    * If track is present and not enabled, we enable it.
    * If no track is present we set one up.
    */
  }, {
    key: "unmuteTrack",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (i.prev = 0, this.mediaTrack) {
                  i.next = 6;
                  break;
                }
                return i.next = 4, this.enableTrack(!1);
              case 4:
                i.next = 7;
                break;
              case 6:
                this.mediaTrack.enabled = !0;
              case 7:
                i.next = 14;
                break;
              case 9:
                throw i.prev = 9, i.t0 = i.catch(0), P.error("".concat(this.constructorName, ".unmuteTrack.error"), { error: i.t0 }), this.disableTrack(), new q("Failed to unmute track");
              case 14:
              case "end":
                return i.stop();
            }
        }, a, this, [[0, 9]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Called after every track switch, maintains local state of current
    * selected device for this particular stream.
    */
  }, {
    key: "setCurrentDevice",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (this.mediaTrack) {
                  s.next = 3;
                  break;
                }
                return this.currentDevice = void 0, s.abrupt("return");
              case 3:
                if (((n = this.currentDevice) === null || n === void 0 ? void 0 : n.deviceId) !== this.mediaTrack.getSettings().deviceId) {
                  s.next = 5;
                  break;
                }
                return s.abrupt("return");
              case 5:
                return s.next = 7, this.mediaInterface.getDevice(this.mediaTrack.getSettings().deviceId);
              case 7:
                this.currentDevice = s.sent;
              case 8:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Middleware Utility
    */
  }, { key: "addMiddleware", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!(ze.isSafari() && !ue.hasFeature(de.ALLOW_SAFARI_MEDIA_MIDDLEWARES))) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", { success: !1, message: "Middlewares are not yet supported in Safari." });
            case 2:
              if (!this.middlewares.includes(n)) {
                s.next = 4;
                break;
              }
              return s.abrupt("return", { success: !1, message: "This middleware has been applied, already. Skipping." });
            case 4:
              if (s.prev = 4, this.middlewares.push(n), !this.trackEnabled) {
                s.next = 9;
                break;
              }
              return s.next = 9, this.setTransformedTrack();
            case 9:
              return s.abrupt("return", { success: !0, message: "Successfully added the middleware." });
            case 12:
              return s.prev = 12, s.t0 = s.catch(4), P.error("While adding middleware", { error: s.t0 }), this.removeMiddleware(n), s.abrupt("return", { success: !1, message: s.t0 === null || s.t0 === void 0 ? void 0 : s.t0.message });
            case 17:
            case "end":
              return s.stop();
          }
      }, a, this, [[4, 12]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeMiddleware", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = this.middlewares.indexOf(n, 0), !(i > -1)) {
                u.next = 13;
                break;
              }
              return u.prev = 2, this.middlewares.splice(i, 1), u.next = 6, this.setTransformedTrack(!0);
            case 6:
              return u.abrupt("return", { success: !0, message: "Successfully removed the middleware." });
            case 9:
              return u.prev = 9, u.t0 = u.catch(2), P.error("While removing middleware", { error: u.t0 }), u.abrupt("return", { success: !1, message: u.t0 === null || u.t0 === void 0 ? void 0 : u.t0.message });
            case 13:
              return u.abrupt("return", { success: !1, message: "No such middleware was found. Skipping." });
            case 14:
            case "end":
              return u.stop();
          }
      }, a, this, [[2, 9]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "addMediaTrackListeners", value: function() {
    var e, a;
    this.mediaTrack && (P.info("".concat(this.constructorName, ".addMediaTrackListeners for deviceId ").concat((e = this.mediaTrack) === null || e === void 0 || (e = e.getSettings()) === null || e === void 0 ? void 0 : e.deviceId, " of type ").concat((a = this.mediaTrack) === null || a === void 0 ? void 0 : a.kind)), this.mediaTrack.addEventListener("ended", this.onTrackEnded), this.mediaTrack.addEventListener("mute", this.onTrackMuted));
  } }, { key: "removeMediaTrackListeners", value: function() {
    var e, a;
    this.mediaTrack && (P.info("".concat(this.constructorName, ".removeMediaTrackListeners for deviceId ").concat((e = this.mediaTrack) === null || e === void 0 || (e = e.getSettings()) === null || e === void 0 ? void 0 : e.deviceId, " of type ").concat((a = this.mediaTrack) === null || a === void 0 ? void 0 : a.kind)), P.info("".concat(this.constructorName, ".removeMediaTrackListeners")), this.mediaTrack.removeEventListener("ended", this.onTrackEnded), this.mediaTrack.removeEventListener("mute", this.onTrackMuted));
  } }]), r;
}(fr);
jc = JC([jr(function(o) {
  throw new q(o.message, "1600");
})], jc);
var Fv = jc, KC = Object.defineProperty, zC = Object.getOwnPropertyDescriptor, Cl = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? zC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && KC(r, t, a), a;
}, rc = "[Dyte]nonSilentDeviceLabels", pu = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.apply(this, arguments);
  }
  return D(r, [{ key: "setDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (n) {
                u.next = 3;
                break;
              }
              throw P.warn("AudioMediaHandler.setDevice No device received"), new q("No device received!", "1603");
            case 3:
              if (n.kind === "audioinput") {
                u.next = 6;
                break;
              }
              throw P.warn("AudioMediaHandler.setDevice Received non audio device"), new q("Non audio device received while setting device!", "1603");
            case 6:
              return u.prev = 6, i = this.trackEnabled, this.userSelectedDevice = n.deviceId, u.t0 = this, u.next = 12, this.mediaInterface.getAudioTrack(!i, n.deviceId);
            case 12:
              return u.t1 = u.sent, u.next = 15, u.t0.setMediaTrack.call(u.t0, u.t1);
            case 15:
              u.next = 22;
              break;
            case 17:
              throw u.prev = 17, u.t2 = u.catch(6), P.error("AudioMediaHandler.setDevice.error", { error: u.t2 }), this.disableTrack(), new q(u.t2.message, "1604");
            case 22:
            case "end":
              return u.stop();
          }
      }, a, this, [[6, 17]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!this.trackEnabled) {
                u.next = 3;
                break;
              }
              return P.warn("AudioMediaHandler.enableTrack Track already enabled!"), u.abrupt("return");
            case 3:
              return u.next = 5, this.mediaInterface.getAudioTrack(n, this.userSelectedDevice);
            case 5:
              return i = u.sent, u.next = 8, this.setMediaTrack(i);
            case 8:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setTransformedTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(!n && !((i = this.middlewares) !== null && i !== void 0 && i.length))) {
                u.next = 3;
                break;
              }
              return this.transformedMediaTrack = this.mediaTrack, u.abrupt("return");
            case 3:
              return u.prev = 3, u.next = 6, BC(this.middlewares, this.mediaTrack);
            case 6:
              this.transformedMediaTrack = u.sent, this.emit("trackChanged"), u.next = 14;
              break;
            case 10:
              u.prev = 10, u.t0 = u.catch(3), P.error("AudioMediaHandler.setTransformedTrack", { error: u.t0 }), this.transformedMediaTrack = this.mediaTrack;
            case 14:
            case "end":
              return u.stop();
          }
      }, a, this, [[3, 10]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onTrackEnded", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return P.info("AudioMediaHandler.TrackEnded"), this.emit("trackEnded"), n = this.mediaTrack.enabled, this.disableTrack(), s.next = 6, this.enableTrack(!n);
            case 6:
              return s.next = 8, this.setTransformedTrack();
            case 8:
              this.emit("trackChanged");
            case 9:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onTrackMuted", value: function() {
    P.info("AudioMediaHandler.TrackMuted"), this.emit("trackMuted");
  } }, { key: "conditionallyChangeTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (n) {
                w.next = 2;
                break;
              }
              return w.abrupt("return", n);
            case 2:
              if (!this.userSelectedDevice) {
                w.next = 4;
                break;
              }
              return w.abrupt("return", n);
            case 4:
              return s = n, w.next = 7, this.mediaInterface.getAudioInputDevices();
            case 7:
              if (u = w.sent, l = this.isNonPreferredDevice ? u.filter(function(k) {
                return k && !i.isNonPreferredDevice(k);
              }) : u, l != null && l.length) {
                w.next = 11;
                break;
              }
              return w.abrupt("return", s);
            case 11:
              if (l.find(function(k) {
                return k.deviceId === n.getSettings().deviceId;
              })) {
                w.next = 17;
                break;
              }
              return s.stop(), P.info("localmediahandler::setupstreams::found_audio_non_preferred"), w.next = 16, this.mediaInterface.getAudioTrack(!1, l[0].deviceId);
            case 16:
              s = w.sent;
            case 17:
              if (p = JSON.parse(Ra.getItem(rc)), !(p != null && p.devices.some(function(k) {
                return k.label === s.label;
              }))) {
                w.next = 20;
                break;
              }
              return w.abrupt("return", s);
            case 20:
              return w.next = 22, Ms(s);
            case 22:
              if (w.sent) {
                w.next = 26;
                break;
              }
              return v = (h = p == null ? void 0 : p.devices.concat({ label: s.label })) !== null && h !== void 0 ? h : [{ label: s.label }], Ra.setItem(rc, JSON.stringify({ devices: v })), w.abrupt("return", s);
            case 26:
              return P.info("AudioMediaHandler.conditionallyChangeTrack.DetectedSilentTrack"), m = s.getSettings().deviceId, l.filter(function(k) {
                return k.deviceId !== m;
              }).some(/* @__PURE__ */ function() {
                var k = y(/* @__PURE__ */ d().mark(function T(_) {
                  var E;
                  return d().wrap(function(C) {
                    for (; ; )
                      switch (C.prev = C.next) {
                        case 0:
                          return C.next = 2, i.mediaInterface.getAudioTrack(!1, _.deviceId);
                        case 2:
                          return s = C.sent, C.next = 5, Ms(s);
                        case 5:
                          if (C.sent) {
                            C.next = 10;
                            break;
                          }
                          return E = p.devices.concat({ label: s.label }), Ra.setItem(rc, JSON.stringify({ devices: E })), P.info("AudioMediaHandler.conditionallyChangeTrack.SuccesfullyChangedTrack"), C.abrupt("return", !0);
                        case 10:
                          return P.info("AudioMediaHandler.conditionallyChangeTrack.AnotherSilentTrackFound"), C.abrupt("return", !1);
                        case 12:
                        case "end":
                          return C.stop();
                      }
                  }, T);
                }));
                return function(T) {
                  return k.apply(this, arguments);
                };
              }()), w.abrupt("return", s);
            case 30:
            case "end":
              return w.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(Fv);
Cl([A.trace("AudioMediaHandler.setTransformedTrack")], pu.prototype, "setTransformedTrack", 1);
Cl([A.trace("AudioMediaHandler.onTrackEnded")], pu.prototype, "onTrackEnded", 1);
Cl([A.trace("AudioMediaHandler.conditionallyChangeTrack")], pu.prototype, "conditionallyChangeTrack", 1);
function hu(o, c, r) {
  if (ze.isChromiumBased()) {
    if (c === "NotAllowedError")
      return r.indexOf("by system") > 0 ? "SYSTEM_DENIED" : o === "screenshare" ? "CANCELED" : "DENIED";
    if (c === "NotReadableError")
      return "COULD_NOT_START";
  } else if (ze.isSafari()) {
    if (c === "NotAllowedError")
      return "DENIED";
  } else if (ze.isFirefox()) {
    if (c === "NotFoundError" || c === "NotReadableError")
      return "SYSTEM_DENIED";
    if (c === "NotAllowedError")
      return "DENIED";
    if (c === "AbortError")
      return "COULD_NOT_START";
  }
  return "COULD_NOT_START";
}
function tc(o) {
  return o === 2 .toString() ? jt.DENIED : o === 4 .toString() ? jt.SYS_DENIED : o === 1 .toString() ? jt.ACCEPTED : jt.FAILED;
}
var QC = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "permissions", void 0), this.permissions = { audio: "NOT_REQUESTED", video: "NOT_REQUESTED", screenshare: "NOT_REQUESTED" };
  }
  return D(o, [{ key: "getAudioInputDevices", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, this.getAvailableDevices();
            case 2:
              return e = n.sent, n.abrupt("return", e.filter(function(i) {
                return i.kind === "audioinput";
              }));
            case 4:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getVideoInputDevices", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, this.getAvailableDevices();
            case 2:
              return e = n.sent, n.abrupt("return", e.filter(function(i) {
                return i.kind === "videoinput";
              }));
            case 4:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAudioOutputDevices", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, this.getAvailableDevices();
            case 2:
              return e = n.sent, n.abrupt("return", e.filter(function(i) {
                return i.kind === "audiooutput";
              }));
            case 4:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), YC = Object.defineProperty, XC = Object.getOwnPropertyDescriptor, Kt = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? XC(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && YC(r, t, a), a;
}, Et = (Kn = /* @__PURE__ */ new K(), Ki = /* @__PURE__ */ new K(), ha = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), z(b(e), Kn, { writable: !0, value: void 0 }), z(b(e), Ki, { writable: !0, value: void 0 }), z(b(e), ha, { writable: !0, value: void 0 }), V(b(e), ha, new iv(t)), V(b(e), Ki, new AbortController()), e.getAvailableDevices(), e;
  }
  return D(r, [{ key: "constraintsBuilder", get: function() {
    return f(this, ha);
  } }, { key: "destruct", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              (n = f(this, Ki)) === null || n === void 0 || n.abort();
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "handlePermissionErrors", value: function(e, a) {
    var n = hu(e, a.name, a.message);
    this.permissions[e] = n, $.emit(M.MEDIA_PERMISSION_ERROR, { message: n, constraints: a.constraints, kind: e });
  } }, { key: "getAudioAndVideoTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return n = { audio: f(this, ha).getAudioConstraints().audio, video: f(this, ha).getVideoConstraints().video }, m.prev = 1, P.info("getUserMediaWithoutTimeout::requesting_user_media", { constraints: JSON.stringify(n) }), m.next = 5, navigator.mediaDevices.getUserMedia(n);
            case 5:
              if (i = m.sent, P.info("getUserMediaWithoutTimeout::received_user_media", { constraints: JSON.stringify(n) }), s = i.getAudioTracks()[0], u = i.getVideoTracks()[0], this.permissions.audio = "ACCEPTED", this.permissions.video = "ACCEPTED", l = ue.hasFeature(de.OBS_QUALITY), !(l && u.label.includes("OBS Virtual"))) {
                m.next = 20;
                break;
              }
              return m.next = 15, this.getVideoInputDevices();
            case 15:
              return p = m.sent, h = p.find(function(g) {
                return g.label.includes("OBS Virtual");
              }), m.next = 19, this.getVideoTrack(h.deviceId);
            case 19:
              u = m.sent;
            case 20:
              return $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), m.abrupt("return", { audioTrack: s, videoTrack: u });
            case 25:
              throw m.prev = 25, m.t0 = m.catch(1), P.error("WebMediaInterface.getAudioAndVideoTrack", { error: m.t0 }), new q("Couldnt fetch audio and video track");
            case 29:
            case "end":
              return m.stop();
          }
      }, a, this, [[1, 25]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAudioTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = f(this, ha).getAudioConstraints(i), p.prev = 1, P.info("getUserMediaWithoutTimeout::requesting_user_media", { constraints: JSON.stringify(s) }), p.next = 5, navigator.mediaDevices.getUserMedia(s);
            case 5:
              return u = p.sent.getAudioTracks()[0], P.info("getUserMediaWithoutTimeout::received_user_media", { constraints: JSON.stringify(s) }), u.enabled = !n, this.permissions.audio = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), p.abrupt("return", u);
            case 13:
              throw p.prev = 13, p.t0 = p.catch(1), this.handlePermissionErrors("audio", new Ca(p.t0.name, p.t0.message, s)), new q(p.t0.message, "1601");
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this, [[1, 13]]);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getScreenShareTracks", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return n = f(this, ha).getScreenShareConstraints(), u.prev = 1, P.info("getDisplayMediaWithoutTimeout::requesting_display_media", { constraints: JSON.stringify(n) }), u.next = 5, navigator.mediaDevices.getDisplayMedia(n);
            case 5:
              return i = u.sent, P.info("getDisplayMediaWithoutTimeout::received_display_media", { constraints: JSON.stringify(n) }), this.permissions.screenshare = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.screenshare, kind: "screenshare" }), u.abrupt("return", { audioTrack: i.getAudioTracks()[0], videoTrack: i.getVideoTracks()[0] });
            case 12:
              throw u.prev = 12, u.t0 = u.catch(1), this.handlePermissionErrors("screenshare", new Ca(u.t0.name, u.t0.message, n)), P.error("WebMediaInterface.getScreenShareTracks Error while fetching screenshare tracks", { error: u.t0 }), new q("Couldnt fetch screen share tracks");
            case 17:
            case "end":
              return u.stop();
          }
      }, a, this, [[1, 12]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getCurrentDeviceLabel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, this.getDevice(n || "default");
            case 2:
              return i = u.sent, u.abrupt("return", i == null ? void 0 : i.label);
            case 4:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getVideoTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k;
      return d().wrap(function(_) {
        for (; ; )
          switch (_.prev = _.next) {
            case 0:
              return i = ue.hasFeature(de.OBS_QUALITY), _.next = 3, this.getCurrentDeviceLabel(n);
            case 3:
              return s = _.sent, u = s && s.includes("OBS Virtual"), l = f(this, ha).getVideoConstraints(n), p = l.video, h = {}, i && u && typeof p != "boolean" ? h = { deviceId: p.deviceId } : h = p, _.prev = 8, _.next = 11, navigator.mediaDevices.getUserMedia({ video: h });
            case 11:
              return v = _.sent.getVideoTracks()[0], i && u && typeof p != "boolean" && ce(p.width) === "object" && (m = v.getSettings(), g = m.width, w = m.height, k = p.width.ideal, v.applyConstraints({ width: { ideal: k }, height: { ideal: Math.floor(w * k / g) }, frameRate: p.frameRate })), this.permissions.video = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), _.abrupt("return", v);
            case 18:
              throw _.prev = 18, _.t0 = _.catch(8), this.handlePermissionErrors("video", new Ca(_.t0.name, _.t0.message, h)), P.error("WebMediaInterface.getVideoTrack Error while fetching video track", { error: _.t0 }), new q("Couldnt fetch video track");
            case 23:
            case "end":
              return _.stop();
          }
      }, a, this, [[8, 18]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAvailableDevices", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return n = s.sent, s.abrupt("return", n);
            case 7:
              throw s.prev = 7, s.t0 = s.catch(0), P.error("enumerate_devices_failed", { error: s.t0 }), new q("Failed to get available devices");
            case 11:
            case "end":
              return s.stop();
          }
      }, a, null, [[0, 7]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAvailableDevicesByKind", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return s.abrupt("return", s.sent.filter(function(u) {
                var l = u.kind;
                return n === l;
              }));
            case 6:
              throw s.prev = 6, s.t0 = s.catch(0), P.error("enumerate_devices_failed", { error: s.t0 }), new q("Failed to get available devices by kind");
            case 10:
            case "end":
              return s.stop();
          }
      }, a, null, [[0, 6]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.prev = 0, u.next = 3, navigator.mediaDevices.enumerateDevices();
            case 3:
              return i = u.sent, u.abrupt("return", i.filter(function(l) {
                return l.deviceId === n;
              })[0]);
            case 7:
              throw u.prev = 7, u.t0 = u.catch(0), P.error("enumerate_devices_failed", { error: u.t0 }), new q("Failed to get device");
            case 11:
            case "end":
              return u.stop();
          }
      }, a, null, [[0, 7]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onDeviceChange", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s = this, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if ((i = f(this, Kn)) !== null && i !== void 0 && i.length) {
                p.next = 5;
                break;
              }
              return p.next = 3, this.getAvailableDevices();
            case 3:
              u = p.sent, u != null && u.length && (V(this, Kn, u), n(null, { added: u, removed: [] }, !0));
            case 5:
              ze.supportsDeviceChangeEvent() && navigator.mediaDevices.addEventListener("devicechange", Xo(/* @__PURE__ */ function() {
                var h = y(/* @__PURE__ */ d().mark(function v(m) {
                  var g, w, k, T, _, E, S;
                  return d().wrap(function(L) {
                    for (; ; )
                      switch (L.prev = L.next) {
                        case 0:
                          return k = f(s, Kn), T = new Set(k.map(function(G) {
                            return G.deviceId;
                          })), L.next = 4, s.getAvailableDevices();
                        case 4:
                          _ = L.sent, E = new Set(_.map(function(G) {
                            return G.deviceId;
                          })), S = { added: _.filter(function(G) {
                            return !T.has(G.deviceId);
                          }), removed: k.filter(function(G) {
                            return !E.has(G.deviceId);
                          }) }, V(s, Kn, _), ((g = S.added) !== null && g !== void 0 && g.length || (w = S.removed) !== null && w !== void 0 && w.length) && n(m, S, !1);
                        case 9:
                        case "end":
                          return L.stop();
                      }
                  }, v);
                }));
                return function(v) {
                  return h.apply(this, arguments);
                };
              }(), 100), { signal: f(this, Ki).signal });
            case 6:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(QC));
Kt([A.trace("WebMediaInterface.destruct")], Et.prototype, "destruct", 1);
Kt([A.trace("WebMediaInterface.handlePermissionErrors")], Et.prototype, "handlePermissionErrors", 1);
Kt([A.trace("WebMediaInterface.getAudioAndVideoTrack")], Et.prototype, "getAudioAndVideoTrack", 1);
Kt([A.trace("WebMediaInterface.getAudioTrack")], Et.prototype, "getAudioTrack", 1);
Kt([A.trace("WebMediaInterface.getScreenShareTracks")], Et.prototype, "getScreenShareTracks", 1);
Kt([A.trace("WebMediaInterface.getVideoTrack")], Et.prototype, "getVideoTrack", 1);
Kt([A.trace("WebMediaInterface.getAvailableDevices")], Et.prototype, "getAvailableDevices", 1);
Kt([A.trace("WebMediaInterface.getAvailableDevicesByKind")], Et.prototype, "getAvailableDevicesByKind", 1);
Kt([A.trace("WebMediaInterface.getDevice")], Et.prototype, "getDevice", 1);
Kt([A.trace("WebMediaInterface.onDeviceChange")], Et.prototype, "onDeviceChange", 1);
Et = Kt([jr(function(o) {
  throw new q(o.message, "1600");
})], Et);
var Vv = Et, ko = /* @__PURE__ */ new K(), ZC = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, ko, { writable: !0, value: void 0 }), R(this, "currentDevice", void 0), V(this, ko, c);
  }
  return D(o, [{ key: "setupSpeaker", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (f(this, ko) instanceof Vv) {
                h.next = 2;
                break;
              }
              return h.abrupt("return");
            case 2:
              if (s = e, e) {
                h.next = 9;
                break;
              }
              return h.next = 6, f(this, ko).getAvailableDevicesByKind("audiooutput");
            case 6:
              u = h.sent, l = ar(u, 1), s = l[0];
            case 9:
              if (s) {
                h.next = 11;
                break;
              }
              throw new q("No speaker found");
            case 11:
              if (((a = this.currentDevice) === null || a === void 0 ? void 0 : a.deviceId) !== s.deviceId) {
                h.next = 13;
                break;
              }
              return h.abrupt("return");
            case 13:
              (n = this.currentDevice) !== null && n !== void 0 || (this.currentDevice = s), document.querySelectorAll("audio").forEach(/* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          if (!(typeof g.sinkId != "undefined" && i.currentDevice.deviceId && g.sinkId !== i.currentDevice.deviceId)) {
                            k.next = 8;
                            break;
                          }
                          return k.prev = 1, k.next = 4, g.setSinkId(i.currentDevice.deviceId);
                        case 4:
                          k.next = 8;
                          break;
                        case 6:
                          k.prev = 6, k.t0 = k.catch(1);
                        case 8:
                        case "end":
                          return k.stop();
                      }
                  }, m, null, [[1, 6]]);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }());
            case 15:
            case "end":
              return h.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), xC = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), R(b(e), "mediaInterface", void 0), R(b(e), "audioMediaTrack", void 0), R(b(e), "videoMediaTrack", void 0), e.mediaInterface = t, e;
  }
  return D(r, [{ key: "trackEnabled", get: function() {
    return !!this.videoMediaTrack;
  } }, { key: "enableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, this.mediaInterface.getScreenShareTracks();
            case 2:
              if (i = p.sent, s = i.audioTrack, u = i.videoTrack, this.audioMediaTrack = s, this.videoMediaTrack = u, this.addMediaTrackListeners(), ((n = this.mediaInterface) === null || n === void 0 || (n = n.permissions) === null || n === void 0 ? void 0 : n.screenshare) !== "ACCEPTED") {
                p.next = 10;
                break;
              }
              return p.abrupt("return");
            case 10:
              this.mediaInterface.permissions && (this.mediaInterface.permissions.screenshare = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.mediaInterface.permissions.screenshare, kind: "screenshare" }));
            case 11:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var e, a;
    this.removeMediaTrackListeners(), (e = this.audioMediaTrack) === null || e === void 0 || e.stop(), (a = this.videoMediaTrack) === null || a === void 0 || a.stop(), this.videoMediaTrack = void 0, this.audioMediaTrack = void 0;
  } }, { key: "updateConstraints", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.videoMediaTrack) {
                u.next = 2;
                break;
              }
              throw new q("No media track enabled!");
            case 2:
              if (i = this.mediaInterface, i.constraintsBuilder) {
                u.next = 5;
                break;
              }
              throw new q("update constraints not supported for non web clients", "1100");
            case 5:
              try {
                this.videoMediaTrack.applyConstraints(i.constraintsBuilder.getUpdatedVideoConstraints(n)), this.addMediaTrackListeners();
              } catch (l) {
                P.error("ScreenShareHandler.updateConstraints.error", { error: l });
              }
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "addMediaTrackListeners", value: function() {
    var e;
    (e = this.videoMediaTrack) === null || e === void 0 || e.addEventListener("ended", this.onTrackEnded.bind(this));
  } }, { key: "removeMediaTrackListeners", value: function() {
    var e;
    (e = this.videoMediaTrack) === null || e === void 0 || e.removeEventListener("ended", this.onTrackEnded);
  } }, { key: "onTrackEnded", value: function() {
    this.emit("trackEnded");
  } }]), r;
}(fr), gs = /* @__PURE__ */ new K(), e1 = /* @__PURE__ */ function() {
  function o() {
    I(this, o), z(this, gs, { writable: !0, value: void 0 });
  }
  return D(o, [{ key: "terminateMiddlewareWebWorker", value: function() {
    if (f(this, gs))
      try {
        jo.clearInterval(f(this, gs)), V(this, gs, void 0);
      } catch (r) {
        P.debug("WorkerTimers::terminateMiddlewareWebWorker::failed");
      }
  } }, { key: "getTransformedVideoTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n = this, i, s, u, l, p, h, v;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (e != null && e.length) {
                g.next = 2;
                break;
              }
              return g.abrupt("return", a);
            case 2:
              return g.next = 4, Promise.all(e == null ? void 0 : e.map(function(w) {
                return w();
              }));
            case 4:
              i = g.sent, s = new MediaStream(), s.addTrack(a), u = document.createElement("canvas"), l = u.getContext("2d"), p = document.createElement("video"), p.srcObject = s, p.autoplay = !0, this.terminateMiddlewareWebWorker(), h = /* @__PURE__ */ function() {
                var w = y(/* @__PURE__ */ d().mark(function k() {
                  var T;
                  return d().wrap(function(E) {
                    for (; ; )
                      switch (E.prev = E.next) {
                        case 0:
                          if (!(a.enabled === !1 || a.readyState === "ended")) {
                            E.next = 5;
                            break;
                          }
                          return n.terminateMiddlewareWebWorker(), p.remove(), u.remove(), E.abrupt("return");
                        case 5:
                          E.prev = 5, l.drawImage(p, 0, 0), T = 0;
                        case 8:
                          if (!(T < i.length)) {
                            E.next = 14;
                            break;
                          }
                          return E.next = 11, i[T](u, l);
                        case 11:
                          T += 1, E.next = 8;
                          break;
                        case 14:
                          E.next = 19;
                          break;
                        case 16:
                          E.prev = 16, E.t0 = E.catch(5), P.error("getTransformedVideoTrack::middleware_execution_failed", { error: E.t0 });
                        case 19:
                        case "end":
                          return E.stop();
                      }
                  }, k, null, [[5, 16]]);
                }));
                return function() {
                  return w.apply(this, arguments);
                };
              }();
              try {
                p.play();
              } catch (w) {
              }
              return p.addEventListener("play", function() {
                u.width = p.width || a.getSettings().width, u.height = p.width || a.getSettings().height, V(n, gs, jo.setInterval(h, 50));
              }, !1), v = u.captureStream(), g.abrupt("return", v.getVideoTracks()[0]);
            case 18:
            case "end":
              return g.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), r1 = Object.defineProperty, t1 = Object.getOwnPropertyDescriptor, Il = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? t1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && r1(r, t, a), a;
}, wo = /* @__PURE__ */ new K(), vu = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a) {
    var n;
    return I(this, r), n = c.call(this, t, e, a), z(b(n), wo, { writable: !0, value: void 0 }), V(b(n), wo, new e1()), n;
  }
  return D(r, [{ key: "setDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n) {
                s.next = 3;
                break;
              }
              throw P.warn("VideoMediaHandler.setDevice No device received"), new q("No device received!");
            case 3:
              if (n.kind === "videoinput") {
                s.next = 6;
                break;
              }
              throw P.warn("VideoMediaHandler.setDevice Received non video device", { devices: [n] }), new q("Non video device received while setting video device!");
            case 6:
              if (this.userSelectedDevice = n.deviceId, this.mediaTrack && this.mediaTrack.enabled) {
                s.next = 11;
                break;
              }
              return P.warn("VideoMediaHandler.setDevice Tried switching device with video disabled", { devices: [n] }), this.currentDevice = n, s.abrupt("return");
            case 11:
              return s.prev = 11, s.t0 = this, s.next = 15, this.mediaInterface.getVideoTrack(this.userSelectedDevice);
            case 15:
              return s.t1 = s.sent, s.next = 18, s.t0.setMediaTrack.call(s.t0, s.t1);
            case 18:
              s.next = 25;
              break;
            case 20:
              throw s.prev = 20, s.t2 = s.catch(11), P.error("VideoMediaHandler.setDevice.error", { error: s.t2 }), this.disableTrack(), new q("Failed to change device");
            case 25:
            case "end":
              return s.stop();
          }
      }, a, this, [[11, 20]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!this.trackEnabled) {
                i.next = 3;
                break;
              }
              return P.warn("VideoMediaHandler.enableTrack Track already enabled!"), i.abrupt("return");
            case 3:
              return i.t0 = this, i.next = 6, this.mediaInterface.getVideoTrack(this.userSelectedDevice);
            case 6:
              return i.t1 = i.sent, i.next = 9, i.t0.setMediaTrack.call(i.t0, i.t1);
            case 9:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setTransformedTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!(!n && !((i = this.middlewares) !== null && i !== void 0 && i.length))) {
                u.next = 3;
                break;
              }
              return this.transformedMediaTrack = this.mediaTrack, u.abrupt("return");
            case 3:
              return u.prev = 3, u.next = 6, f(this, wo).getTransformedVideoTrack(this.middlewares, this.mediaTrack);
            case 6:
              this.transformedMediaTrack = u.sent, this.emit("trackChanged"), u.next = 14;
              break;
            case 10:
              u.prev = 10, u.t0 = u.catch(3), P.error("VideoMediaHandler.setTransformedTrack", { error: u.t0 }), this.transformedMediaTrack = this.mediaTrack;
            case 14:
            case "end":
              return u.stop();
          }
      }, a, this, [[3, 10]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateConstraints", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this._mediaTrack) {
                u.next = 2;
                break;
              }
              throw new q("No media track enabled!");
            case 2:
              if (i = this.mediaInterface, i.constraintsBuilder) {
                u.next = 5;
                break;
              }
              throw new q("update constraints not supported for non web clients", "1100");
            case 5:
              return u.prev = 5, this._mediaTrack.applyConstraints(i.constraintsBuilder.getUpdatedVideoConstraints(n)), u.next = 9, this.setTransformedTrack();
            case 9:
              return this.addMediaTrackListeners(), u.next = 12, this.setCurrentDevice();
            case 12:
              u.next = 17;
              break;
            case 14:
              u.prev = 14, u.t0 = u.catch(5), P.error("VideoMediaHandler.updateConstraints.error", { error: u.t0 });
            case 17:
            case "end":
              return u.stop();
          }
      }, a, this, [[5, 14]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "terminateMiddlewareWebWorker", value: function() {
    f(this, wo).terminateMiddlewareWebWorker();
  } }, { key: "onTrackEnded", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              P.info("VideoMediaHandler.TrackEnded"), this.disableTrack(), this.emit("trackEnded");
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onTrackMuted", value: function() {
    P.info("VideoMediaHandler.TrackMuted"), this.emit("trackMuted");
  } }, { key: "conditionallyChangeTrack", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (n) {
                h.next = 2;
                break;
              }
              return h.abrupt("return", n);
            case 2:
              if (!this.userSelectedDevice) {
                h.next = 4;
                break;
              }
              return h.abrupt("return", n);
            case 4:
              return s = n, h.next = 7, this.mediaInterface.getVideoInputDevices();
            case 7:
              if (u = h.sent, l = this.isNonPreferredDevice ? u.filter(function(v) {
                return !i.isNonPreferredDevice(v);
              }) : u, l != null && l.length) {
                h.next = 11;
                break;
              }
              return h.abrupt("return", s);
            case 11:
              if (l.find(function(v) {
                return v.deviceId === n.getSettings().deviceId;
              })) {
                h.next = 17;
                break;
              }
              return s.stop(), P.info("localmediahandler::setupstreams::found_video_non_preferred"), h.next = 16, this.mediaInterface.getVideoTrack(l[0].deviceId);
            case 16:
              s = h.sent;
            case 17:
              return h.abrupt("return", s);
            case 18:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(Fv);
Il([A.trace("VideoMediaHandler.setTransformedTrack")], vu.prototype, "setTransformedTrack", 1);
Il([A.trace("VideoMediaHandler.onTrackEnded")], vu.prototype, "onTrackEnded", 1);
Il([A.trace("VideoMediaHandler.conditionallyChangeTrack")], vu.prototype, "conditionallyChangeTrack", 1);
var a1 = Object.defineProperty, n1 = Object.getOwnPropertyDescriptor, _t = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? n1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && a1(r, t, a), a;
}, Gr = /* @__PURE__ */ new K(), rt = /* @__PURE__ */ new K(), Jr = /* @__PURE__ */ new K(), li = /* @__PURE__ */ new K(), ra = /* @__PURE__ */ new K(), ac = /* @__PURE__ */ new K(), mt = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _a, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0;
    return I(this, r), e = c.call(this), z(b(e), Gr, { writable: !0, value: void 0 }), z(b(e), rt, { writable: !0, value: void 0 }), z(b(e), Jr, { writable: !0, value: void 0 }), z(b(e), li, { writable: !0, value: void 0 }), z(b(e), ra, { writable: !0, value: void 0 }), z(b(e), ac, { writable: !0, value: void 0 }), V(b(e), Gr, new Vv(t)), V(b(e), rt, new pu(f(b(e), Gr), void 0, a)), V(b(e), Jr, new vu(f(b(e), Gr), void 0, a)), V(b(e), ra, new xC(f(b(e), Gr))), V(b(e), li, new ZC(f(b(e), Gr))), V(b(e), ac, n), f(b(e), rt).on("trackMuted", e.onAudioTrackMuted.bind(b(e))), f(b(e), rt).on("trackChanged", e.onAudioTrackChanged.bind(b(e))), f(b(e), Jr).on("trackChanged", e.onVideoTrackChanged.bind(b(e))), f(b(e), Jr).on("trackEnded", e.onVideoTrackEnded.bind(b(e))), f(b(e), ra).on("trackEnded", e.onScreenShareEnded.bind(b(e))), e.onVisibilityChange = e.onVisibilityChange.bind(b(e)), document.addEventListener("visibilitychange", e.onVisibilityChange), e;
  }
  return D(r, [{
    key: "onVisibilityChange",
    value: function() {
      se.tabChanged(document.visibilityState === "visible"), document.visibilityState !== "visible" ? se.browserBackgrounded() : se.browserForegrounded();
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "repopulateAvailableDevices", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", !0);
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupStreams", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i = this, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              if (s = n.audio, u = n.video, !(s && u)) {
                m.next = 13;
                break;
              }
              return m.prev = 2, m.next = 5, f(this, Gr).getAudioAndVideoTrack();
            case 5:
              h = m.sent, l = h.audioTrack, p = h.videoTrack, m.next = 13;
              break;
            case 10:
              m.prev = 10, m.t0 = m.catch(2), P.error("LocalMediaHandler::init::Failed to get audio video tracks", { error: m.t0 });
            case 13:
              if (!(!l && s)) {
                m.next = 23;
                break;
              }
              return m.prev = 14, m.next = 17, f(this, Gr).getAudioTrack(!1);
            case 17:
              l = m.sent, m.next = 23;
              break;
            case 20:
              m.prev = 20, m.t1 = m.catch(14), P.error("LocalMediaHandler::init::Failed to get audio track", { error: m.t1 });
            case 23:
              if (!(!p && u)) {
                m.next = 33;
                break;
              }
              return m.prev = 24, m.next = 27, f(this, Gr).getVideoTrack();
            case 27:
              p = m.sent, m.next = 33;
              break;
            case 30:
              m.prev = 30, m.t2 = m.catch(24), P.error("LocalMediaHandler::init::Failed to get video track", { error: m.t2 });
            case 33:
              return m.next = 35, f(this, rt).setMediaTrack(l);
            case 35:
              return m.next = 37, f(this, Jr).setMediaTrack(p);
            case 37:
              return m.prev = 37, m.next = 40, f(this, li).setupSpeaker();
            case 40:
              m.next = 44;
              break;
            case 42:
              m.prev = 42, m.t3 = m.catch(37);
            case 44:
              f(this, Gr).onDeviceChange(function(g, w, k) {
                i.onDeviceChange(w, k);
              });
            case 45:
            case "end":
              return m.stop();
          }
      }, a, this, [[2, 10], [14, 20], [24, 30], [37, 42]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getCurrentDevices", value: function() {
    return { audio: f(this, rt).currentDevice, video: f(this, Jr).currentDevice, speaker: f(this, li).currentDevice };
  } }, { key: "permissions", get: function() {
    return f(this, Gr).permissions;
  } }, { key: "getAllDevices", value: function() {
    return f(this, Gr).getAvailableDevices();
  } }, {
    key: "getDeviceById",
    value: function(e, a) {
      return f(this, Gr).getDevice(e);
    }
    /**
    * Audio Input Handler
    */
  }, { key: "onAudioTrackMuted", value: function() {
    this.emit("AUDIO_TRACK_SILENT");
  } }, { key: "onAudioTrackChanged", value: function() {
    this.emit("AUDIO_TRACK_CHANGE");
  } }, { key: "rawAudioTrack", get: function() {
    return f(this, rt).mediaTrack;
  } }, { key: "audioTrack", get: function() {
    return f(this, rt).transformedMediaTrack;
  } }, { key: "audioEnabled", get: function() {
    return f(this, rt).trackEnabled;
  } }, { key: "enableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, rt).unmuteTrack();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    f(this, rt).muteTrack();
  } }, { key: "getAudioDevices", value: function() {
    return f(this, Gr).getAudioInputDevices();
  } }, {
    key: "setAudioDevice",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, f(this, rt).setDevice(n);
              case 2:
                this.emit("AUDIO_TRACK_CHANGE"), this.emit("DEVICE_CHANGE", { device: n });
              case 4:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Audio Output Handler
    */
  }, { key: "setupSpeaker", value: function() {
    return f(this, li).setupSpeaker();
  } }, {
    key: "setSpeakerDevice",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, f(this, li).setupSpeaker(n);
              case 2:
                this.emit("DEVICE_CHANGE", { device: n });
              case 3:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Video Handler
    */
  }, { key: "onVideoTrackChanged", value: function() {
    this.emit("VIDEO_TRACK_CHANGE");
  } }, { key: "onVideoTrackEnded", value: function() {
    this.emit("VIDEO_TRACK_CHANGE");
  } }, { key: "rawVideoTrack", get: function() {
    return f(this, Jr).mediaTrack;
  } }, { key: "videoTrack", get: function() {
    return f(this, Jr).transformedMediaTrack;
  } }, { key: "videoEnabled", get: function() {
    return f(this, Jr).trackEnabled;
  } }, { key: "enableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Jr).unmuteTrack();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    f(this, Jr).disableTrack();
  } }, { key: "getVideoDevices", value: function() {
    return f(this, Gr).getVideoInputDevices();
  } }, { key: "setVideoDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, Jr).setDevice(n);
            case 2:
              this.emit("VIDEO_TRACK_CHANGE"), this.emit("DEVICE_CHANGE", { device: n });
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "updateVideoConstraints",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, f(this, Jr).updateConstraints(n);
              case 2:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Screen Share Handler
    */
  }, { key: "onScreenShareEnded", value: function() {
    this.emit("SCREENSHARE_ENDED");
  } }, { key: "screenShareTracks", get: function() {
    return { audio: f(this, ra).audioMediaTrack, video: f(this, ra).videoMediaTrack };
  } }, { key: "screenShareEnabled", get: function() {
    return f(this, ra).trackEnabled;
  } }, { key: "enableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, ra).enableScreenShare();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              f(this, ra).disableScreenShare();
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateScreenshareConstraints", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, ra).updateConstraints(n);
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "getSpeakerDevices",
    value: function() {
      return f(this, Gr).getAudioOutputDevices();
    }
    /**
    * Middleware Utility
    */
  }, { key: "addAudioMiddleware", value: function(e) {
    return f(this, rt).addMiddleware(e);
  } }, { key: "removeAudioMiddleware", value: function(e) {
    return f(this, rt).removeMiddleware(e);
  } }, { key: "addVideoMiddleware", value: function(e) {
    return f(this, Jr).addMiddleware(e);
  } }, { key: "removeVideoMiddleware", value: function(e) {
    return f(this, Jr).removeMiddleware(e);
  } }, { key: "destruct", value: function() {
    f(this, rt).disableTrack(), f(this, Jr).disableTrack(), f(this, Jr).terminateMiddlewareWebWorker(), f(this, ra).disableScreenShare(), f(this, Gr).destruct();
  } }, {
    key: "onDeviceChange",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        var s, u = this, l;
        return d().wrap(function(h) {
          for (; ; )
            switch (h.prev = h.next) {
              case 0:
                return h.next = 2, f(this, Gr).getAvailableDevices();
              case 2:
                if (l = h.sent, P.info("repopulated_full_device_list", { devices: JSON.stringify(l) }), se.onSafeInitialization(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function v() {
                  return d().wrap(function(g) {
                    for (; ; )
                      switch (g.prev = g.next) {
                        case 0:
                          se.devices("AUDIO", l == null ? void 0 : l.filter(function(w) {
                            return w.kind === "audioinput";
                          })), se.devices("VIDEO", l == null ? void 0 : l.filter(function(w) {
                            return w.kind === "videoinput";
                          })), se.devices("SPEAKER", l == null ? void 0 : l.filter(function(w) {
                            return w.kind === "audiooutput";
                          }));
                        case 3:
                        case "end":
                          return g.stop();
                      }
                  }, v);
                }))), this.emit("DEVICE_LIST_UPDATED", n), !(i || !f(this, ac))) {
                  h.next = 8;
                  break;
                }
                return h.abrupt("return");
              case 8:
                n == null || (s = n.added) === null || s === void 0 || s.forEach(/* @__PURE__ */ function() {
                  var v = y(/* @__PURE__ */ d().mark(function m(g) {
                    var w;
                    return d().wrap(function(T) {
                      for (; ; )
                        switch (T.prev = T.next) {
                          case 0:
                            if (!(g && !_a(g))) {
                              T.next = 9;
                              break;
                            }
                            if (!(g.kind === "audioinput" && ((w = u.audioTrack) === null || w === void 0 ? void 0 : w.enabled) === !0)) {
                              T.next = 6;
                              break;
                            }
                            return T.next = 4, u.setAudioDevice(g);
                          case 4:
                            T.next = 9;
                            break;
                          case 6:
                            if (g.kind !== "audiooutput") {
                              T.next = 9;
                              break;
                            }
                            return T.next = 9, u.setSpeakerDevice(g);
                          case 9:
                          case "end":
                            return T.stop();
                        }
                    }, m);
                  }));
                  return function(m) {
                    return v.apply(this, arguments);
                  };
                }());
              case 9:
              case "end":
                return h.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Backward Compatibility
    */
  }, { key: "removeAllTracks", value: function() {
    this.destruct();
  } }, { key: "removeDocumentEventListeners", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              document.removeEventListener("visibilitychange", this.onVisibilityChange);
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr);
_t([A.trace("MediaHandler.setupStreams")], mt.prototype, "setupStreams", 1);
_t([A.trace("MediaHandler.enableAudio")], mt.prototype, "enableAudio", 1);
_t([A.trace("MediaHandler.disableAudio")], mt.prototype, "disableAudio", 1);
_t([A.trace("MediaHandler.setAudioDevice")], mt.prototype, "setAudioDevice", 1);
_t([A.trace("MediaHandler.enableVideo")], mt.prototype, "enableVideo", 1);
_t([A.trace("MediaHandler.disableVideo")], mt.prototype, "disableVideo", 1);
_t([A.trace("MediaHandler.setVideoDevice")], mt.prototype, "setVideoDevice", 1);
_t([A.trace("MediaHandler.updateVideoConstraints")], mt.prototype, "updateVideoConstraints", 1);
_t([A.trace("MediaHandler.enableScreenShare")], mt.prototype, "enableScreenShare", 1);
_t([A.trace("MediaHandler.disableScreenShare")], mt.prototype, "disableScreenShare", 1);
_t([A.trace("MediaHandler.updateScreenshareConstraints")], mt.prototype, "updateScreenshareConstraints", 1);
_t([A.trace("MediaHandler.destruct")], mt.prototype, "destruct", 1);
_t([A.trace("MediaHandler.onDeviceChange")], mt.prototype, "onDeviceChange", 1);
var i1 = Object.defineProperty, s1 = Object.getOwnPropertyDescriptor, Vi = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? s1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && i1(r, t, a), a;
}, Fr = /* @__PURE__ */ new K(), ys = /* @__PURE__ */ new K(), Wn = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, Fr, { writable: !0, value: void 0 }), R(this, "audioMiddlewares", []), R(this, "videoMiddlewares", []), z(this, ys, { writable: !0, value: void 0 }), V(this, Fr, c);
  }
  return D(o, [{ key: "terminateMiddlewareWebWorker", value: function() {
    if (f(this, ys))
      try {
        jo.clearInterval(f(this, ys)), V(this, ys, void 0);
      } catch (r) {
        P.debug("WorkerTimers::terminateMiddlewareWebWorker::failed");
      }
  } }, { key: "getTransformedVideoTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i = this, s, u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if ((a = this.videoMiddlewares) !== null && a !== void 0 && a.length) {
                w.next = 2;
                break;
              }
              return w.abrupt("return", e);
            case 2:
              return w.next = 4, Promise.all((n = this.videoMiddlewares) === null || n === void 0 ? void 0 : n.map(function(k) {
                return k();
              }));
            case 4:
              s = w.sent, u = new MediaStream(), u.addTrack(e), l = document.createElement("canvas"), p = l.getContext("2d"), h = document.createElement("video"), h.srcObject = u, h.autoplay = !0, this.terminateMiddlewareWebWorker(), v = /* @__PURE__ */ function() {
                var k = y(/* @__PURE__ */ d().mark(function T() {
                  var _;
                  return d().wrap(function(S) {
                    for (; ; )
                      switch (S.prev = S.next) {
                        case 0:
                          if (!(!f(i, Fr).videoEnabled || e.readyState === "ended")) {
                            S.next = 5;
                            break;
                          }
                          return i.terminateMiddlewareWebWorker(), h.remove(), l.remove(), S.abrupt("return");
                        case 5:
                          S.prev = 5, p.drawImage(h, 0, 0), _ = 0;
                        case 8:
                          if (!(_ < s.length)) {
                            S.next = 14;
                            break;
                          }
                          return S.next = 11, s[_](l, p);
                        case 11:
                          _ += 1, S.next = 8;
                          break;
                        case 14:
                          S.next = 19;
                          break;
                        case 16:
                          S.prev = 16, S.t0 = S.catch(5), P.error("getTransformedVideoTrack::middleware_execution_failed", { error: S.t0 });
                        case 19:
                        case "end":
                          return S.stop();
                      }
                  }, T, null, [[5, 16]]);
                }));
                return function() {
                  return k.apply(this, arguments);
                };
              }();
              try {
                h.play();
              } catch (k) {
              }
              return h.addEventListener("play", function() {
                l.width = h.width || e.getSettings().width, l.height = h.width || e.getSettings().height, V(i, ys, jo.setInterval(v, 50));
              }, !1), m = l.captureStream(), w.abrupt("return", m.getVideoTracks()[0]);
            case 18:
            case "end":
              return w.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "addVideoMiddleware", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (!(ze.isSafari() && !ue.hasFeature(de.ALLOW_SAFARI_MEDIA_MIDDLEWARES))) {
                n.next = 2;
                break;
              }
              return n.abrupt("return", { success: !1, message: "Video middlewares are not yet supported in Safari." });
            case 2:
              if (!this.videoMiddlewares.includes(e)) {
                n.next = 4;
                break;
              }
              return n.abrupt("return", { success: !0, message: "This video middleware has been applied, already. Skipping." });
            case 4:
              if (this.videoMiddlewares.push(e), !f(this, Fr).videoEnabled) {
                n.next = 13;
                break;
              }
              return n.t0 = f(this, Fr), n.next = 9, this.getTransformedVideoTrack(f(this, Fr).rawVideoTrack);
            case 9:
              return n.t1 = n.sent, n.t0.setVideoTrack.call(n.t0, n.t1), f(this, Fr).emit("VIDEO_TRACK_CHANGE"), n.abrupt("return", { success: !0, message: "Successfully applied the video middleware." });
            case 13:
              return n.abrupt("return", { success: !0, message: "Successfully added the video middleware. It will be applied automatically once webcam is turned on." });
            case 14:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeVideoMiddleware", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (a = this.videoMiddlewares.indexOf(e, 0), !(a > -1)) {
                i.next = 11;
                break;
              }
              if (this.videoMiddlewares.splice(a, 1), !f(this, Fr).videoEnabled) {
                i.next = 10;
                break;
              }
              return i.t0 = f(this, Fr), i.next = 7, this.getTransformedVideoTrack(f(this, Fr).rawVideoTrack);
            case 7:
              i.t1 = i.sent, i.t0.setVideoTrack.call(i.t0, i.t1), f(this, Fr).emit("VIDEO_TRACK_CHANGE");
            case 10:
              return i.abrupt("return", { success: !0, message: "Successfully removed the video middleware." });
            case 11:
              return i.abrupt("return", { success: !0, message: "No such video middleware was found. Skipping." });
            case 12:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getTransformedAudioTrack", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              if ((a = this.audioMiddlewares) !== null && a !== void 0 && a.length) {
                m.next = 2;
                break;
              }
              return m.abrupt("return", e);
            case 2:
              return i = new AudioContext(), m.next = 5, Promise.all((n = this.audioMiddlewares) === null || n === void 0 ? void 0 : n.map(function(g) {
                return g(i);
              }));
            case 5:
              for (s = m.sent, u = i.createMediaStreamSource(new MediaStream([e])), l = i.createMediaStreamDestination(), m.prev = 8, p = u, h = 0; h < s.length; h += 1)
                p.connect(s[h]), p = s[h];
              p.connect(l), m.next = 18;
              break;
            case 14:
              return m.prev = 14, m.t0 = m.catch(8), P.error("getTransformedAudioTrack::middleware_execution_failed", { error: m.t0 }), m.abrupt("return", e);
            case 18:
              return m.abrupt("return", l.stream.getAudioTracks()[0]);
            case 19:
            case "end":
              return m.stop();
          }
      }, t, this, [[8, 14]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "addAudioMiddleware", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (!(ze.isSafari() && !ue.hasFeature(de.ALLOW_SAFARI_MEDIA_MIDDLEWARES))) {
                n.next = 2;
                break;
              }
              return n.abrupt("return", { success: !1, message: "Audio middlewares are not yet supported in Safari." });
            case 2:
              if (!this.audioMiddlewares.includes(e)) {
                n.next = 4;
                break;
              }
              return n.abrupt("return", { success: !0, message: "This audio middleware has been applied, already. Skipping." });
            case 4:
              if (this.audioMiddlewares.push(e), !f(this, Fr).audioEnabled) {
                n.next = 13;
                break;
              }
              return n.t0 = f(this, Fr), n.next = 9, this.getTransformedAudioTrack(f(this, Fr).rawAudioTrack);
            case 9:
              return n.t1 = n.sent, n.t0.setAudioTrack.call(n.t0, n.t1), f(this, Fr).emit("AUDIO_TRACK_CHANGE"), n.abrupt("return", { success: !0, message: "Successfully applied the audio middleware." });
            case 13:
              return n.abrupt("return", { success: !0, message: "Successfully added the audio middleware. It will be applied automatically once mic is turned on." });
            case 14:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "removeAudioMiddleware", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (a = this.audioMiddlewares.indexOf(e, 0), !(a > -1)) {
                i.next = 11;
                break;
              }
              if (this.audioMiddlewares.splice(a, 1), !f(this, Fr).audioEnabled) {
                i.next = 10;
                break;
              }
              return i.t0 = f(this, Fr), i.next = 7, this.getTransformedAudioTrack(f(this, Fr).rawAudioTrack);
            case 7:
              i.t1 = i.sent, i.t0.setAudioTrack.call(i.t0, i.t1), f(this, Fr).emit("AUDIO_TRACK_CHANGE");
            case 10:
              return i.abrupt("return", { success: !0, message: "Successfully removed the audio middleware." });
            case 11:
              return i.abrupt("return", { success: !0, message: "No such audio middleware was found. Skipping." });
            case 12:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}();
Vi([A.trace("MediaMiddlewareUtils.getTransformedVideoTrack")], Wn.prototype, "getTransformedVideoTrack", 1);
Vi([A.trace("MediaMiddlewareUtils.addVideoMiddleware")], Wn.prototype, "addVideoMiddleware", 1);
Vi([A.trace("MediaMiddlewareUtils.removeVideoMiddleware")], Wn.prototype, "removeVideoMiddleware", 1);
Vi([A.trace("MediaMiddlewareUtils.getTransformedAudioTrack")], Wn.prototype, "getTransformedAudioTrack", 1);
Vi([A.trace("MediaMiddlewareUtils.addAudioMiddleware")], Wn.prototype, "addAudioMiddleware", 1);
Vi([A.trace("MediaMiddlewareUtils.removeAudioMiddleware")], Wn.prototype, "removeAudioMiddleware", 1);
var Hv = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "mediaPermissionEvent", void 0), this.mediaPermissionEvent = !0;
  }
  return D(o, [{ key: "shouldEmitMediaPermissionEvent", get: function() {
    return this.mediaPermissionEvent;
  } }, { key: "setEmitMediaPermissionEvent", value: function(r) {
    this.mediaPermissionEvent = r;
  } }], [{ key: "getInstance", value: function() {
    return o.instance || (o.instance = new o()), o.instance;
  } }]), o;
}();
R(Hv, "instance", void 0);
var To = Hv.getInstance(), o1 = {
  lowVolumeThreshold: -40,
  // dBFS
  clipThreshold: 1,
  // dB
  silentThreshold: 1 / 1987,
  // dB
  delay: 500,
  // ms
  media: "audio"
}, Gc = /* @__PURE__ */ new K(), Is = /* @__PURE__ */ new K(), Lp = /* @__PURE__ */ new WeakSet(), Dl = /* @__PURE__ */ new WeakSet(), Al = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), Or(this, Dl), Or(this, Lp), R(this, "analyser", void 0), R(this, "silentThreshold", void 0), R(this, "lowVolumeThreshold", void 0), R(this, "clipThreshold", void 0), R(this, "delay", void 0), R(this, "audioContext", void 0), R(this, "audioSource", void 0), R(this, "metadata", {}), R(this, "analysing", void 0), R(this, "track", void 0), z(this, Gc, { writable: !0, value: void 0 }), z(this, Is, { writable: !0, value: void 0 });
    var r = Q(Q({}, o1), c), t = r.lowVolumeThreshold, e = r.silentThreshold, a = r.clipThreshold, n = r.delay, i = r.media;
    this.lowVolumeThreshold = t, this.silentThreshold = e, this.clipThreshold = a, this.delay = n, this.analysing = !1, V(this, Is, i);
  }
  return D(o, [{ key: "setTrack", value: function(r) {
    if (r) {
      this.track = r.clone();
      var t = window.AudioContext || window.webkitAudioContext;
      if (this.audioContext = new t(), this.analyser = this.audioContext.createAnalyser(), f(this, Is) === "screenshare") {
        $.emit(M.SCREENSHARE_AUDIO_TRACK_CREATED);
        return;
      }
      $.emit(M.AUDIO_TRACK_CREATED);
    }
  } }, { key: "getTrackMetadata", value: function() {
    if (!this.track)
      return null;
    switch (this.metadata.label = this.track.label, this.metadata.channelCountMode = this.analyser.channelCountMode, this.metadata.channelCount = this.analyser.channelCount, this.metadata.channelInterpretation = this.analyser.channelInterpretation, this.metadata.outputs = this.analyser.numberOfOutputs, this.analyser.numberOfOutputs) {
      case 1:
        this.metadata.channelType = "MONO";
        break;
      case 2:
        this.metadata.channelType = "STEREO";
        break;
      case 4:
        this.metadata.channelType = "QUAD";
        break;
    }
    return this.metadata;
  } }, { key: "startTrackAnalysis", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!(!this.track || this.analysing)) {
                a.next = 2;
                break;
              }
              return a.abrupt("return", !1);
            case 2:
              return a.prev = 2, a.next = 5, this.audioContext.resume();
            case 5:
              return a.next = 7, Ne(this, Lp, u1).call(this);
            case 7:
              return this.analysing = !0, a.abrupt("return", !0);
            case 11:
              return a.prev = 11, a.t0 = a.catch(2), P.error(a.t0), a.abrupt("return", !1);
            case 15:
            case "end":
              return a.stop();
          }
      }, t, this, [[2, 11]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopTrackAnalysis", value: function() {
    this.analysing && (this.analysing = !1, clearTimeout(f(this, Gc)));
  } }, { key: "cleanup", value: function() {
    var r, t, e, a, n;
    if (this.stopTrackAnalysis(), (r = this.analyser) === null || r === void 0 || r.disconnect(), (t = this.audioSource) === null || t === void 0 || t.disconnect(this.analyser), (e = this.audioSource) === null || e === void 0 || e.disconnect(), (a = this.audioContext) === null || a === void 0 || a.close(), this.audioContext = void 0, this.analyser = void 0, this.audioSource = void 0, (n = this.track) === null || n === void 0 || n.stop(), this.track = void 0, f(this, Is) === "screenshare") {
      $.emit(M.SCREENSHARE_AUDIO_TRACK_CLOSED);
      return;
    }
    $.emit(M.AUDIO_TRACK_CLOSED);
  } }], [{ key: "dbFS", value: function(r) {
    var t = 20 * (Math.log(r) / Math.log(10));
    return Math.round(t * 10) / 10;
  } }]), o;
}();
th = Al;
function u1() {
  return Bc.apply(this, arguments);
}
function Bc() {
  return Bc = y(/* @__PURE__ */ d().mark(function o() {
    var c = this, r;
    return d().wrap(function(e) {
      for (; ; )
        switch (e.prev = e.next) {
          case 0:
            return e.prev = 0, r = new MediaStream(), r.addTrack(this.track), this.audioSource = this.audioContext.createMediaStreamSource(r), this.audioSource.connect(this.analyser), e.next = 7, new Promise(function(a) {
              window.requestAnimationFrame(function() {
                Ne(c, Dl, jv).call(c), a(!0);
              });
            });
          case 7:
            e.next = 12;
            break;
          case 9:
            e.prev = 9, e.t0 = e.catch(0), P.error(e.t0);
          case 12:
          case "end":
            return e.stop();
        }
    }, o, this, [[0, 9]]);
  })), Bc.apply(this, arguments);
}
function jv() {
  var o = this, c = new Float32Array(this.analyser.fftSize);
  this.analyser.getFloatTimeDomainData(c);
  var r = 0, t = ae(c), e;
  try {
    for (t.s(); !(e = t.n()).done; ) {
      var a = e.value;
      r += a * a;
    }
  } catch (u) {
    t.e(u);
  } finally {
    t.f();
  }
  var n = Math.sqrt(r / c.length), i = th.dbFS(n), s = { volume: n, lowVolume: i < this.lowVolumeThreshold, silence: n < this.silentThreshold, clip: n > this.clipThreshold, timestamp: new Date().getTime() };
  f(this, Is) === "screenshare" ? $.emit(M.SCREENSHARE_AUDIO_TRACK_ANALYSIS, s) : $.emit(M.AUDIO_TRACK_ANALYSIS, s), V(this, Gc, setTimeout(function() {
    window.requestAnimationFrame(Ne(o, Dl, jv).bind(o));
  }, this.delay));
}
var ia = new Al(), On = new Al({ media: "screenshare" }), c1 = Object.defineProperty, l1 = Object.getOwnPropertyDescriptor, mr = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? l1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && c1(r, t, a), a;
}, d1 = (er = /* @__PURE__ */ new K(), un = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this), z(b(a), er, { writable: !0, value: void 0 }), z(b(a), un, { writable: !0, value: void 0 }), R(b(a), "mediaMiddlewareUtils", void 0), R(b(a), "audioTrack", void 0), R(b(a), "rawAudioTrack", void 0), R(b(a), "videoTrack", void 0), R(b(a), "rawVideoTrack", void 0), R(b(a), "screenShareTracks", void 0), R(b(a), "audioEnabled", void 0), R(b(a), "videoEnabled", void 0), R(b(a), "screenShareEnabled", void 0), R(b(a), "currentDevices", void 0), R(b(a), "permissions", void 0), R(b(a), "audioUpdateInProgress", void 0), R(b(a), "videoUpdateInProgress", void 0), R(b(a), "audioRestartInProgress", void 0), R(b(a), "videoRestartInProgress", void 0), R(b(a), "screenShareUpdateInProgress", void 0), R(b(a), "initialSetupComplete", !1), R(b(a), "isDeprecated", function() {
      return !0;
    }), V(b(a), er, t), V(b(a), un, new iv(e)), a.audioEnabled = !0, a.videoEnabled = !0, a.audioUpdateInProgress = !1, a.videoUpdateInProgress = !1, a.audioRestartInProgress = !1, a.videoRestartInProgress = !1, a.screenShareUpdateInProgress = !1, a.screenShareEnabled = !1, a.permissions = { audio: "NOT_REQUESTED", video: "NOT_REQUESTED", screenshare: "NOT_REQUESTED" }, a.screenShareTracks = { audio: void 0, video: void 0 }, a.currentDevices = { audio: void 0, video: void 0, speaker: void 0 }, f(b(a), er).onDeviceChange(function(n, i) {
      a.onDeviceChange(i, !1), a.emit("DEVICE_LIST_UPDATED", i);
    }), a.conditionallyRestartAudio = a.conditionallyRestartAudio.bind(b(a)), a.conditionallyRestartVideo = a.conditionallyRestartVideo.bind(b(a)), a.onVisibilityChange = a.onVisibilityChange.bind(b(a)), document.addEventListener("visibilitychange", a.onVisibilityChange), a.on("AUDIO_TRACK_CHANGE", function() {
      a.notifyIfTrackSilent();
    }), $.on(M.PRODUCER_TRACK_ENDED, function(n) {
      var i = n.kind;
      i === "mic" && a.conditionallyRestartAudio(), i === "webcam" && a.conditionallyRestartVideo();
    }), a;
  }
  return D(r, [{ key: "handlePermissionErrors", value: function(e, a) {
    var n = hu(e, a.name, a.message);
    this.permissions[e] = n, $.emit(M.MEDIA_PERMISSION_ERROR, { message: n, constraints: a.constraints, kind: e });
  } }, {
    key: "repopulateAvailableDevices",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.abrupt("return", f(this, er).repopulateAvailableDevices());
              case 1:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "onVisibilityChange", value: function(e) {
    document.visibilityState === "visible" && (ze.isMobile() && this.conditionallyRestartAudio(), this.conditionallyRestartVideo()), se.tabChanged(document.visibilityState === "visible"), document.visibilityState !== "visible" ? se.browserBackgrounded() : se.browserForegrounded();
  } }, { key: "conditionallyRestartAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s = this, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (!this.audioRestartInProgress) {
                h.next = 2;
                break;
              }
              return h.abrupt("return");
            case 2:
              if (this.audioRestartInProgress = !0, !(!((i = this.currentDevices) !== null && i !== void 0 && i.audio) || !this.audioEnabled)) {
                h.next = 5;
                break;
              }
              return h.abrupt("return");
            case 5:
              return h.next = 7, Promise.race([new Promise(function(v) {
                var m;
                return (m = s.rawAudioTrack) === null || m === void 0 ? void 0 : m.addEventListener("unmute", function(g) {
                  v(g);
                });
              }), new Promise(function(v) {
                return setTimeout(v, 50);
              })]);
            case 7:
              return P.info("performingCheck::shouldReacquireAudioTrack", { actions: { trackRobustness: { eventType: n == null ? void 0 : n.type } } }), h.next = 10, this.shouldReacquireTrack("audio");
            case 10:
              if (u = h.sent, P.info("performedCheck::shouldReacquireAudioTrack", { actions: { trackRobustness: { reacquireTrack: u } } }), !u) {
                h.next = 22;
                break;
              }
              if (P.info("reacquiring_audio_track"), this.removeMediaStreamTrackListeners(this.rawAudioTrack), !ze.isChromiumBased()) {
                h.next = 18;
                break;
              }
              return h.next = 18, f(this, er).repopulateAvailableDevices();
            case 18:
              return h.next = 20, this.setupAudioStream((l = this.currentDevices.audio) === null || l === void 0 ? void 0 : l.deviceId);
            case 20:
              this.addMediaStreamTrackListeners(this.rawAudioTrack), this.emit("AUDIO_TRACK_CHANGE");
            case 22:
              this.audioRestartInProgress = !1;
            case 23:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "conditionallyRestartVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s = this, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (!this.videoRestartInProgress) {
                p.next = 2;
                break;
              }
              return p.abrupt("return");
            case 2:
              if (this.videoRestartInProgress = !0, !(!((i = this.currentDevices) !== null && i !== void 0 && i.video) || !this.videoEnabled)) {
                p.next = 5;
                break;
              }
              return p.abrupt("return");
            case 5:
              return P.info("performingCheck::shouldReacquireVideoTrack", { actions: { trackRobustness: { eventType: n == null ? void 0 : n.type } } }), p.next = 8, Promise.race([new Promise(function(h) {
                var v;
                return (v = s.rawVideoTrack) === null || v === void 0 ? void 0 : v.addEventListener("unmute", h);
              }), new Promise(function(h) {
                return setTimeout(h, 50);
              })]);
            case 8:
              return p.next = 10, this.shouldReacquireTrack("video");
            case 10:
              if (u = p.sent, P.info("performedCheck::shouldReacquireVideoTrack", { actions: { trackRobustness: { reacquireTrack: u } } }), !u) {
                p.next = 21;
                break;
              }
              return P.info("reacquiring_video_track"), this.removeMediaStreamTrackListeners(this.rawVideoTrack), p.next = 17, f(this, er).repopulateAvailableDevices();
            case 17:
              return p.next = 19, this.setupVideoStream(this.currentDevices.video.deviceId);
            case 19:
              this.addMediaStreamTrackListeners(this.rawVideoTrack), this.emit("VIDEO_TRACK_CHANGE");
            case 21:
              this.videoRestartInProgress = !1;
            case 22:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "shouldReacquireTrack",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u, l, p, h, v;
        return d().wrap(function(g) {
          for (; ; )
            switch (g.prev = g.next) {
              case 0:
                if (n !== "audio") {
                  g.next = 12;
                  break;
                }
                if (!(this.audioUpdateInProgress || !this.audioEnabled)) {
                  g.next = 3;
                  break;
                }
                return g.abrupt("return", !1);
              case 3:
                if (!(!this.rawAudioTrack || !this.audioTrack)) {
                  g.next = 5;
                  break;
                }
                return g.abrupt("return", !0);
              case 5:
                return i = this.rawAudioTrack.muted || this.audioTrack.muted, s = this.rawAudioTrack.readyState === "ended" || this.audioTrack.readyState === "ended", u = s && this.audioEnabled, g.next = 10, Ms(this.rawAudioTrack);
              case 10:
                return l = g.sent, g.abrupt("return", document.visibilityState === "visible" && (l || u || i));
              case 12:
                if (!(this.videoUpdateInProgress || !this.videoEnabled)) {
                  g.next = 14;
                  break;
                }
                return g.abrupt("return", !1);
              case 14:
                if (!(!this.rawVideoTrack || !this.videoTrack)) {
                  g.next = 16;
                  break;
                }
                return g.abrupt("return", !0);
              case 16:
                return p = this.rawVideoTrack.muted || this.videoTrack.muted, h = this.rawVideoTrack.readyState === "ended" || this.videoTrack.readyState === "ended", v = h && this.videoEnabled, g.abrupt("return", document.visibilityState === "visible" && (v || p));
              case 20:
              case "end":
                return g.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "onAudioUnmute",
    value: function(e) {
      P.info("audio_track_unmuted", { actions: { trackRobustness: { eventType: e == null ? void 0 : e.type } } });
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "onVideoUnmute", value: function(e) {
    P.info("video_track_unmuted", { actions: { trackRobustness: { eventType: e == null ? void 0 : e.type } } });
  } }, { key: "removeMediaStreamTrackListeners", value: function(e) {
    if (P.info("Removing ".concat(e.kind, " listerners")), !!e) {
      var a = e.kind === "audio" ? this.conditionallyRestartAudio : this.conditionallyRestartVideo;
      return e.removeEventListener("ended", a), e.removeEventListener("mute", a), e.removeEventListener("unmute", e.kind === "audio" ? this.onAudioUnmute : this.onVideoUnmute), e;
    }
  } }, {
    key: "addMediaStreamTrackListeners",
    value: function(e) {
      var a = this;
      if (!e)
        return null;
      P.info("adding_".concat(e.kind, "_stream_listerners"));
      var n = e.kind === "audio", i = n ? this.conditionallyRestartAudio : this.conditionallyRestartVideo;
      return e.addEventListener("ended", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function s() {
        var u, l, p;
        return d().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                return v.next = 2, i();
              case 2:
                u = n ? a.audioEnabled : a.videoEnabled, l = n ? a.audioTrack : a.videoTrack, p = n ? "FORCE_MUTE_AUDIO" : "FORCE_MUTE_VIDEO", u && !(l && l.readyState === "live" && l.enabled) && (P.info("LocalMediaHandler::trackEnded::Failed to restart ".concat(e.kind, " track")), a.emit(p));
              case 6:
              case "end":
                return v.stop();
            }
        }, s);
      }))), e.addEventListener("mute", i), e.addEventListener("unmute", n ? this.onAudioUnmute : this.onVideoUnmute), e;
    }
    /**
    * NOTE(callmetarush): Emits AUDIO_TRACK_SILENT
    * If audio is enabled and current track is silent
    */
  }, { key: "notifyIfTrackSilent", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (!(this.audioEnabled && this.audioTrack && this.audioTrack.readyState !== "ended" && this.audioTrack.enabled)) {
                p.next = 7;
                break;
              }
              return p.next = 3, Ms(this.audioTrack);
            case 3:
              if (p.t0 = p.sent, p.t0 !== !0) {
                p.next = 7;
                break;
              }
              P.info("LocalMediaHandler:notifyIfTrackSilent:TrackSilent", { media: { audio: { enabled: this.audioEnabled, deviceId: (n = this.audioTrack) === null || n === void 0 || (n = n.getSettings()) === null || n === void 0 ? void 0 : n.deviceId, permission: (i = this.permissions) === null || i === void 0 ? void 0 : i.audio, deviceName: (s = this.currentDevices) === null || s === void 0 || (s = s.audio) === null || s === void 0 ? void 0 : s.label, trackId: (u = this.audioTrack) === null || u === void 0 ? void 0 : u.id } } }), this.emit("AUDIO_TRACK_SILENT");
            case 7:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupAudioStream", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m = arguments;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (i = m.length > 1 && m[1] !== void 0 ? m[1] : !0, !this.audioUpdateInProgress) {
                w.next = 3;
                break;
              }
              return w.abrupt("return");
            case 3:
              if (w.prev = 3, this.audioUpdateInProgress = !0, u = f(this, er).getAudioDevices(), u.length) {
                w.next = 9;
                break;
              }
              throw this.audioEnabled = !1, new Ca("COULD_NOT_START", "No audio devices", {});
            case 9:
              if (l = n, !(!l || !u.find(function(k) {
                return k.deviceId === l;
              }))) {
                w.next = 15;
                break;
              }
              return w.next = 13, this.getPreferredDeviceId("AUDIO");
            case 13:
              l = w.sent, P.debug("setupAudioStream::AUDIO::getPreferredDeviceId", { preferredDevice: { preferredDeviceId: l, kind: "audio" } });
            case 15:
              return p = wr.getAudioConstraints({ audioDeviceId: l }), i && ((h = this.rawAudioTrack) === null || h === void 0 || h.stop(), (v = this.audioTrack) === null || v === void 0 || v.stop()), w.next = 19, wr.getAudioTrack(p);
            case 19:
              return this.rawAudioTrack = w.sent, l = this.rawAudioTrack.getSettings().deviceId, ((s = this.currentDevices.audio) === null || s === void 0 ? void 0 : s.deviceId) !== l && (this.currentDevices.audio = f(this, er).getDeviceById(l, "audioinput"), this.emit("DEVICE_CHANGE", { device: this.currentDevices.audio })), this.rawAudioTrack.enabled = this.audioEnabled, w.t0 = this, w.next = 26, this.mediaMiddlewareUtils.getTransformedAudioTrack(this.rawAudioTrack);
            case 26:
              return w.t1 = w.sent, w.t0.setAudioTrack.call(w.t0, w.t1), this.addMediaStreamTrackListeners(this.rawAudioTrack), w.next = 31, f(this, er).repopulateAvailableDevices();
            case 31:
              this.permissions.audio = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), se.mediaPermission("AUDIO", jt.ACCEPTED), se.selectedDevice("AUDIO", this.currentDevices.audio), l && Ra.setItem("lastUsedAudioDeviceId", l), w.next = 41;
              break;
            case 38:
              w.prev = 38, w.t2 = w.catch(3), this.handlePermissionErrors("audio", w.t2);
            case 41:
              return w.prev = 41, this.audioUpdateInProgress = !1, w.finish(41);
            case 44:
            case "end":
              return w.stop();
          }
      }, a, this, [[3, 38, 41, 44]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getPreferredDeviceId", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (n !== "AUDIO") {
                k.next = 14;
                break;
              }
              if (s = f(this, er).getAudioDevices(), u = Ra.getItem("lastUsedAudioDeviceId"), P.debug("getPreferredDeviceId::lastUsedAudioDeviceId", { preferredDevice: { lastUsedPreferredDeviceId: u, kind: "audio" } }), u && (l = s.find(function(T) {
                return T.deviceId === u;
              })), !l) {
                k.next = 9;
                break;
              }
              i = u, k.next = 13;
              break;
            case 9:
              if (ue.hasFeature(de.REMOVE_OPERATIONAL_MIC)) {
                k.next = 13;
                break;
              }
              return k.next = 12, this.getOperationalMicDeviceId();
            case 12:
              i = k.sent.deviceId;
            case 13:
              i || (i = (p = s[0]) === null || p === void 0 ? void 0 : p.deviceId);
            case 14:
              if (n !== "VIDEO") {
                k.next = 27;
                break;
              }
              if (h = Ra.getItem("lastUsedVideoDeviceId"), P.debug("getPreferredDeviceId::lastUsedVideoDeviceId", { preferredDevice: { kind: "video", lastUsedPreferredDeviceId: h } }), v = f(this, er).getVideoDevices(), h && (m = v.find(function(T) {
                return T.deviceId === h;
              })), !m) {
                k.next = 23;
                break;
              }
              i = h, k.next = 26;
              break;
            case 23:
              return k.next = 25, this.getOperationalWebcamDeviceId();
            case 25:
              i = k.sent.deviceId;
            case 26:
              i || (i = (g = v[0]) === null || g === void 0 ? void 0 : g.deviceId);
            case 27:
              return k.abrupt("return", i);
            case 28:
            case "end":
              return k.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupVideoStream", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v = arguments;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (i = v.length > 1 && v[1] !== void 0 ? v[1] : !0, !this.videoUpdateInProgress) {
                g.next = 3;
                break;
              }
              return g.abrupt("return");
            case 3:
              if (g.prev = 3, this.videoUpdateInProgress = !0, u = f(this, er).getVideoDevices(), u.length) {
                g.next = 9;
                break;
              }
              throw this.videoEnabled = !1, new Ca("COULD_NOT_START", "No video devices", {});
            case 9:
              if (l = n, !(!l || !u.find(function(w) {
                return w.deviceId === l;
              }))) {
                g.next = 15;
                break;
              }
              return g.next = 13, this.getPreferredDeviceId("VIDEO");
            case 13:
              l = g.sent, P.debug("setupVideoStream::VIDEO::getPreferredDeviceId", { preferredDevice: { preferredDeviceId: l, kind: "video" } });
            case 15:
              if (i && ((p = this.videoTrack) === null || p === void 0 || p.stop()), !this.videoEnabled) {
                g.next = 28;
                break;
              }
              return h = f(this, un).getVideoConstraints(l), g.next = 20, wr.getVideoTrack(h);
            case 20:
              return this.rawVideoTrack = g.sent, l = this.rawVideoTrack.getSettings().deviceId, g.t0 = this, g.next = 25, this.mediaMiddlewareUtils.getTransformedVideoTrack(this.rawVideoTrack);
            case 25:
              g.t1 = g.sent, g.t0.setVideoTrack.call(g.t0, g.t1), this.addMediaStreamTrackListeners(this.rawVideoTrack);
            case 28:
              return g.next = 30, f(this, er).repopulateAvailableDevices();
            case 30:
              ((s = this.currentDevices.video) === null || s === void 0 ? void 0 : s.deviceId) !== l && (this.currentDevices.video = f(this, er).getDeviceById(l, "videoinput"), this.emit("DEVICE_CHANGE", { device: this.currentDevices.video })), this.permissions.video = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), se.mediaPermission("VIDEO", jt.ACCEPTED), se.selectedDevice("VIDEO", this.currentDevices.video), l && Ra.setItem("lastUsedVideoDeviceId", l), g.next = 41;
              break;
            case 38:
              g.prev = 38, g.t2 = g.catch(3), this.handlePermissionErrors("video", g.t2);
            case 41:
              return g.prev = 41, this.videoUpdateInProgress = !1, g.finish(41);
            case 44:
            case "end":
              return g.stop();
          }
      }, a, this, [[3, 38, 41, 44]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupScreenShareStreams", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!this.screenShareUpdateInProgress) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              return n = f(this, un).getScreenShareConstraints(), ue.hasFeature(de.SCREENSHARE_MAX_DIMENSIONS) && (n.video.width.max = window.screen.width, n.video.height.max = window.screen.height), u.prev = 4, this.screenShareUpdateInProgress = !0, u.next = 8, wr.getScreenShareTracks(n);
            case 8:
              i = u.sent, this.setScreenShareTracks(i), u.next = 16;
              break;
            case 12:
              throw u.prev = 12, u.t0 = u.catch(4), this.handlePermissionErrors("screenshare", new Ca(u.t0.name, u.t0.message, n)), new q(u.t0.message);
            case 16:
              return u.prev = 16, this.screenShareUpdateInProgress = !1, u.finish(16);
            case 19:
            case "end":
              return u.stop();
          }
      }, a, this, [[4, 12, 16, 19]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupSpeaker", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s = this, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (u = f(this, er).getSpeakerDevices(), u.length) {
                h.next = 3;
                break;
              }
              return h.abrupt("return");
            case 3:
              l = n != null ? n : u[0].deviceId, ((i = this.currentDevices.speaker) === null || i === void 0 ? void 0 : i.deviceId) !== l && (this.currentDevices.speaker = f(this, er).getDeviceById(l, "audiooutput"), se.selectedDevice("SPEAKER", this.currentDevices.speaker), this.emit("DEVICE_CHANGE", { device: this.currentDevices.speaker })), document.querySelectorAll("audio").forEach(/* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          if (!(typeof g.sinkId != "undefined" && s.currentDevices.speaker.deviceId && g.sinkId !== s.currentDevices.speaker.deviceId)) {
                            k.next = 8;
                            break;
                          }
                          return k.prev = 1, k.next = 4, g.setSinkId(s.currentDevices.speaker.deviceId);
                        case 4:
                          k.next = 8;
                          break;
                        case 6:
                          k.prev = 6, k.t0 = k.catch(1);
                        case 8:
                        case "end":
                          return k.stop();
                      }
                  }, m, null, [[1, 6]]);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }());
            case 6:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getOperationalWebcamDeviceId", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              if (i = f(this, er).getVideoDevices(), i.length) {
                m.next = 3;
                break;
              }
              return m.abrupt("return", { isOperational: !1, deviceId: null });
            case 3:
              return To.setEmitMediaPermissionEvent(!1), s = [], m.next = 7, i.reduce(/* @__PURE__ */ function() {
                var g = y(/* @__PURE__ */ d().mark(function w(k, T) {
                  var _, E, S;
                  return d().wrap(function(L) {
                    for (; ; )
                      switch (L.prev = L.next) {
                        case 0:
                          return L.next = 2, k;
                        case 2:
                          if (_ = L.sent, _ === null) {
                            L.next = 5;
                            break;
                          }
                          return L.abrupt("return", _);
                        case 5:
                          return E = f(n, un).getVideoConstraints(T.deviceId), L.prev = 6, L.next = 9, wr.getVideoTrack(E);
                        case 9:
                          return S = L.sent, S.stop(), L.abrupt("return", T.deviceId);
                        case 14:
                          L.prev = 14, L.t0 = L.catch(6), P.error("getOperationalWebcamDeviceId::could_not_acquire_video_device", { error: L.t0, constraints: E }), s.push({ exception: L.t0, constraints: E });
                        case 18:
                          return L.abrupt("return", _);
                        case 19:
                        case "end":
                          return L.stop();
                      }
                  }, w, null, [[6, 14]]);
                }));
                return function(w, k) {
                  return g.apply(this, arguments);
                };
              }(), Promise.resolve(null));
            case 7:
              if (u = m.sent, To.setEmitMediaPermissionEvent(!0), !(!u && s.length > 0 && s.length === i.length)) {
                m.next = 12;
                break;
              }
              throw l = s[0], p = l.exception, h = l.constraints, new Ca(p.name, p.message, h);
            case 12:
              return m.abrupt("return", u ? { isOperational: !0, deviceId: u } : { isOperational: !1, deviceId: i[0].deviceId });
            case 13:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getOperationalMicDeviceId", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (n = f(this, er).getAudioDevices(), n.length) {
                v.next = 3;
                break;
              }
              return v.abrupt("return", { isOperational: !1, deviceId: null });
            case 3:
              return i = [], To.setEmitMediaPermissionEvent(!1), v.next = 7, n.reduce(/* @__PURE__ */ function() {
                var m = y(/* @__PURE__ */ d().mark(function g(w, k) {
                  var T, _, E, S;
                  return d().wrap(function(L) {
                    for (; ; )
                      switch (L.prev = L.next) {
                        case 0:
                          return L.next = 2, w;
                        case 2:
                          if (T = L.sent, T === null) {
                            L.next = 5;
                            break;
                          }
                          return L.abrupt("return", T);
                        case 5:
                          return _ = wr.getAudioConstraints({ audioDeviceId: k.deviceId }), L.prev = 6, L.next = 9, wr.getAudioTrack(_);
                        case 9:
                          return E = L.sent, L.next = 12, Ms(E);
                        case 12:
                          if (S = L.sent, E == null || E.stop(), S) {
                            L.next = 16;
                            break;
                          }
                          return L.abrupt("return", k);
                        case 16:
                          L.next = 22;
                          break;
                        case 18:
                          L.prev = 18, L.t0 = L.catch(6), P.error("getOperationalMicDeviceId::could_not_acquire_audio_device", { error: L.t0, constraints: _ }), i.push({ exception: L.t0, constraints: _ });
                        case 22:
                          return L.abrupt("return", T);
                        case 23:
                        case "end":
                          return L.stop();
                      }
                  }, g, null, [[6, 18]]);
                }));
                return function(g, w) {
                  return m.apply(this, arguments);
                };
              }(), Promise.resolve(null));
            case 7:
              if (s = v.sent, To.setEmitMediaPermissionEvent(!0), !(!s && i.length > 0 && i.length === n.length)) {
                v.next = 12;
                break;
              }
              throw u = i[0], l = u.exception, p = u.constraints, new Ca(l.name, l.message, p);
            case 12:
              return v.abrupt("return", s ? { isOperational: !0, deviceId: s.deviceId } : { isOperational: !1, deviceId: n[0].deviceId });
            case 13:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setupStreams", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (i = n.audio, s = n.video, u = {}, this.currentDevices || (this.currentDevices = { audio: void 0, video: void 0, speaker: void 0 }), S.prev = 3, !(i && !this.audioUpdateInProgress)) {
                S.next = 13;
                break;
              }
              if (p = f(this, er).getAudioDevices(), p.length === 0) {
                S.next = 13;
                break;
              }
              return S.next = 9, this.getPreferredDeviceId("AUDIO");
            case 9:
              h = S.sent, P.info("setupStreams::AUDIO::getPreferredDeviceId", { preferredDevice: { preferredDeviceId: h, kind: "audio" } }), v = wr.getAudioConstraints({ audioDeviceId: h }), u.audio = v.audio;
            case 13:
              if (!(s && !this.videoUpdateInProgress)) {
                S.next = 22;
                break;
              }
              if (m = f(this, er).getVideoDevices(), m.length === 0) {
                S.next = 22;
                break;
              }
              return S.next = 18, this.getPreferredDeviceId("VIDEO");
            case 18:
              g = S.sent, P.info("setupStreams::VIDEO::getPreferredDeviceId", { preferredDevice: { preferredDeviceId: g, kind: "video" } }), w = f(this, un).getVideoConstraints(g), u.video = w.video;
            case 22:
              if (((l = Object.keys(u)) === null || l === void 0 ? void 0 : l.length) !== 0) {
                S.next = 29;
                break;
              }
              return this.audioEnabled = i != null ? i : this.audioEnabled, this.videoEnabled = s != null ? s : this.videoEnabled, this.audioUpdateInProgress = !1, this.videoUpdateInProgress = !1, this.initialSetupComplete = !0, S.abrupt("return");
            case 29:
              return S.next = 31, wr.getAudioAndVideoTrack(u);
            case 31:
              return k = S.sent, T = k.audioTrack, _ = k.videoTrack, i && T && (this.audioTrack = T, this.rawAudioTrack = T, this.permissions.audio = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" }), this.currentDevices.audio = f(this, er).getDeviceById(T.getSettings().deviceId, "audioinput"), Ra.setItem("lastUsedAudioDeviceId", T.getSettings().deviceId)), s && _ && (this.videoTrack = _, this.rawVideoTrack = _, this.permissions.video = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" }), this.currentDevices.video = f(this, er).getDeviceById(_.getSettings().deviceId, "videoinput"), Ra.setItem("lastUsedVideoDeviceId", _.getSettings().deviceId)), S.next = 38, f(this, er).repopulateAvailableDevices();
            case 38:
              S.next = 49;
              break;
            case 40:
              if (S.prev = 40, S.t0 = S.catch(3), S.t0.name !== "NotAllowedError") {
                S.next = 49;
                break;
              }
              if (!i) {
                S.next = 46;
                break;
              }
              return S.next = 46, this.setupAudioStream();
            case 46:
              if (!s) {
                S.next = 49;
                break;
              }
              return S.next = 49, this.setupVideoStream();
            case 49:
              return this.audioEnabled = !!this.audioTrack, this.videoEnabled = !!this.videoTrack, this.screenShareEnabled = !1, this.audioUpdateInProgress = !1, this.videoUpdateInProgress = !1, this.initialSetupComplete = !0, S.next = 57, this.setupSpeaker();
            case 57:
            case "end":
              return S.stop();
          }
      }, a, this, [[3, 40]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopAudioTrack", value: function() {
    var e, a;
    this.audioUpdateInProgress || (this.audioUpdateInProgress = !0, (e = this.audioTrack) === null || e === void 0 || e.stop(), (a = this.rawAudioTrack) === null || a === void 0 || a.stop(), this.audioEnabled = !1, this.audioUpdateInProgress = !1);
  } }, { key: "stopVideoTrack", value: function() {
    var e, a;
    this.videoUpdateInProgress || (this.videoUpdateInProgress = !0, (e = this.videoTrack) === null || e === void 0 || e.stop(), (a = this.rawVideoTrack) === null || a === void 0 || a.stop(), this.videoEnabled = !1, this.videoUpdateInProgress = !1);
  } }, { key: "stopScreenShareTracks", value: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    if (!this.screenShareUpdateInProgress) {
      this.screenShareUpdateInProgress = !0;
      var a = e.audio, n = a === void 0 ? !0 : a, i = e.video, s = i === void 0 ? !0 : i;
      if (n) {
        var u;
        (u = this.screenShareTracks) === null || u === void 0 || (u = u.audio) === null || u === void 0 || u.stop();
      }
      if (s) {
        var l;
        (l = this.screenShareTracks) === null || l === void 0 || (l = l.video) === null || l === void 0 || l.stop();
      }
      this.screenShareEnabled = !1, this.screenShareUpdateInProgress = !1;
    }
  } }, { key: "removeAudioTrack", value: function() {
    this.stopAudioTrack(), this.audioTrack = void 0, this.rawAudioTrack = void 0;
    var e = ue.hasFeature(de.TROUBLESHOOTING);
    e && ia.cleanup();
  } }, { key: "removeVideoTrack", value: function() {
    this.stopVideoTrack(), this.videoTrack = void 0, this.rawVideoTrack = void 0;
  } }, { key: "removeScreenShareTracks", value: function(e) {
    var a;
    (a = this.screenShareTracks.video) === null || a === void 0 || a.removeEventListener("ended", this.onScreenShareEnded), this.stopScreenShareTracks(e), this.screenShareTracks = { audio: void 0, video: void 0 };
  } }, { key: "removeAllTracks", value: function() {
    this.removeAudioTrack(), this.removeVideoTrack(), this.removeScreenShareTracks({ audio: !!this.screenShareTracks.audio, video: !!this.screenShareTracks.video });
  } }, { key: "setAudioTrack", value: function(e) {
    e !== this.audioTrack && (e === void 0 && this.stopAudioTrack(), this.audioTrack = e, this.audioTrack && (this.audioTrack.enabled = this.audioEnabled));
  } }, { key: "setVideoTrack", value: function(e) {
    e !== this.videoTrack && (e === void 0 && this.stopVideoTrack(), this.videoTrack = e);
  } }, { key: "setScreenShareTracks", value: function(e) {
    var a, n = e.audio, i = e.video;
    (!n || !i) && this.stopScreenShareTracks({ audio: !!n, video: !!i }), this.screenShareTracks = e, (a = this.screenShareTracks.video) === null || a === void 0 || a.addEventListener("ended", this.onScreenShareEnded.bind(this));
  } }, { key: "onScreenShareEnded", value: function() {
    this.emit("SCREENSHARE_ENDED");
  } }, { key: "disableAudio", value: function() {
    this.audioEnabled = !1, this.audioTrack && (this.audioTrack.enabled = this.audioEnabled), this.rawAudioTrack && (this.rawAudioTrack.enabled = this.audioEnabled);
  } }, { key: "enableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.permissions.audio !== "DENIED") {
                s.next = 3;
                break;
              }
              return this.audioEnabled = !1, s.abrupt("return");
            case 3:
              if (s.prev = 3, !(!this.audioTrack || this.audioTrack.readyState === "ended")) {
                s.next = 7;
                break;
              }
              return s.next = 7, this.setupAudioStream((n = this.currentDevices.audio) === null || n === void 0 ? void 0 : n.deviceId);
            case 7:
              if (!(!this.audioTrack || !this.rawAudioTrack)) {
                s.next = 11;
                break;
              }
              return this.audioEnabled = !1, P.error("LocalMediaHandler::enableAudio:Setting up audio stream failed while enabling audio", { debuggingHint: "Refer to SelfController::mediaPermissionError log." }), s.abrupt("return");
            case 11:
              this.audioEnabled = !0, s.next = 20;
              break;
            case 14:
              s.prev = 14, s.t0 = s.catch(3), this.audioEnabled = !1, this.audioTrack = void 0, this.rawAudioTrack = void 0, P.error("LocalMediaHandler::enableAudio", { error: s.t0 }, !0);
            case 20:
              if (this.audioTrack && (this.audioTrack.enabled = !0), this.rawAudioTrack && (this.rawAudioTrack.enabled = !0), !(this.permissions.audio === "ACCEPTED" || !this.audioEnabled)) {
                s.next = 24;
                break;
              }
              return s.abrupt("return");
            case 24:
              this.permissions.audio = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.audio, kind: "audio" });
            case 26:
            case "end":
              return s.stop();
          }
      }, a, this, [[3, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "toggleAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.permissions.audio !== "DENIED") {
                s.next = 3;
                break;
              }
              return this.audioEnabled = !1, s.abrupt("return");
            case 3:
              if (s.prev = 3, !(!this.audioTrack || this.audioTrack.readyState === "ended")) {
                s.next = 7;
                break;
              }
              return s.next = 7, this.setupAudioStream((n = this.currentDevices.audio) === null || n === void 0 ? void 0 : n.deviceId);
            case 7:
              if (!(!this.audioTrack || !this.rawAudioTrack)) {
                s.next = 10;
                break;
              }
              return this.audioEnabled = !1, s.abrupt("return");
            case 10:
              this.audioEnabled = !this.audioEnabled, s.next = 17;
              break;
            case 13:
              s.prev = 13, s.t0 = s.catch(3), this.audioEnabled = !1, P.error("LocalMediaHandler::toggleAudio", { error: s.t0 }, !0);
            case 17:
              this.audioTrack && (this.audioTrack.enabled = this.audioEnabled), this.rawAudioTrack && (this.rawAudioTrack.enabled = this.audioEnabled);
            case 19:
            case "end":
              return s.stop();
          }
      }, a, this, [[3, 13]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "toggleVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.permissions.video !== "DENIED") {
                s.next = 3;
                break;
              }
              return this.videoEnabled = !1, s.abrupt("return");
            case 3:
              if (!this.videoEnabled) {
                s.next = 6;
                break;
              }
              return this.removeVideoTrack(), s.abrupt("return");
            case 6:
              return this.videoEnabled = !0, s.prev = 7, s.next = 10, this.setupVideoStream((n = this.currentDevices.video) === null || n === void 0 ? void 0 : n.deviceId);
            case 10:
              s.next = 15;
              break;
            case 12:
              s.prev = 12, s.t0 = s.catch(7), this.videoEnabled = !1;
            case 15:
              if (this.videoTrack && (this.videoTrack.enabled = this.videoEnabled), this.rawVideoTrack && (this.rawVideoTrack.enabled = this.videoEnabled), !(this.permissions.video === "ACCEPTED" || !this.videoEnabled)) {
                s.next = 19;
                break;
              }
              return s.abrupt("return");
            case 19:
              this.permissions.video = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.video, kind: "video" });
            case 21:
            case "end":
              return s.stop();
          }
      }, a, this, [[7, 12]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "toggleScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!this.screenShareEnabled) {
                i.next = 3;
                break;
              }
              return this.removeScreenShareTracks({ audio: !!this.screenShareTracks.audio, video: !!this.screenShareTracks.video }), i.abrupt("return");
            case 3:
              return i.prev = 3, i.next = 6, this.setupScreenShareStreams();
            case 6:
              if (this.screenShareEnabled = !0, this.permissions.screenshare !== "ACCEPTED") {
                i.next = 9;
                break;
              }
              return i.abrupt("return");
            case 9:
              this.permissions.screenshare = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: this.permissions.screenshare, kind: "screenshare" }), i.next = 16;
              break;
            case 13:
              i.prev = 13, i.t0 = i.catch(3), this.screenShareEnabled = !1;
            case 16:
            case "end":
              return i.stop();
          }
      }, a, this, [[3, 13]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAllDevices", value: function() {
    return f(this, er).availableDevices;
  } }, { key: "getDeviceById", value: function(e, a) {
    return f(this, er).getDeviceById(e, a);
  } }, { key: "getAudioDevices", value: function() {
    return f(this, er).getAudioDevices();
  } }, { key: "getVideoDevices", value: function() {
    return f(this, er).getVideoDevices();
  } }, { key: "getSpeakerDevices", value: function() {
    return f(this, er).getSpeakerDevices();
  } }, { key: "onDeviceChange", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u = this, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (this.initialSetupComplete) {
                h.next = 2;
                break;
              }
              return h.abrupt("return");
            case 2:
              n == null || (s = n.added) === null || s === void 0 || s.forEach(/* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  return d().wrap(function(k) {
                    for (; ; )
                      switch (k.prev = k.next) {
                        case 0:
                          if (!(g && (i || !_a(g)))) {
                            k.next = 16;
                            break;
                          }
                          if (g.kind !== "audioinput") {
                            k.next = 7;
                            break;
                          }
                          return k.next = 4, u.setupAudioStream(g.deviceId);
                        case 4:
                          u.emit("AUDIO_TRACK_CHANGE"), k.next = 16;
                          break;
                        case 7:
                          if (!(g.kind === "videoinput" && u.videoEnabled)) {
                            k.next = 13;
                            break;
                          }
                          return k.next = 10, u.setupVideoStream(g.deviceId);
                        case 10:
                          u.emit("VIDEO_TRACK_CHANGE"), k.next = 16;
                          break;
                        case 13:
                          if (g.kind !== "audiooutput") {
                            k.next = 16;
                            break;
                          }
                          return k.next = 16, u.setupSpeaker(g.deviceId);
                        case 16:
                        case "end":
                          return k.stop();
                      }
                  }, m);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }()), n == null || (l = n.removed) === null || l === void 0 || l.forEach(/* @__PURE__ */ function() {
                var v = y(/* @__PURE__ */ d().mark(function m(g) {
                  var w, k, T;
                  return d().wrap(function(E) {
                    for (; ; )
                      switch (E.prev = E.next) {
                        case 0:
                          if (!g) {
                            E.next = 15;
                            break;
                          }
                          if (!(g.kind === "audioinput" && !u.audioEnabled || g.kind === "videoinput" && !u.videoEnabled || ue.hasFeature(de.DEVICE_REMOVE_EXP) || !ze.isChromiumBased())) {
                            E.next = 12;
                            break;
                          }
                          if (!(g.kind === "audioinput" && g.deviceId === ((k = u.currentDevices.audio) === null || k === void 0 ? void 0 : k.deviceId))) {
                            E.next = 8;
                            break;
                          }
                          return E.next = 5, u.setupAudioStream();
                        case 5:
                          u.emit("AUDIO_TRACK_CHANGE"), E.next = 12;
                          break;
                        case 8:
                          if (!(g.kind === "videoinput" && g.deviceId === ((T = u.currentDevices.video) === null || T === void 0 ? void 0 : T.deviceId))) {
                            E.next = 12;
                            break;
                          }
                          return E.next = 11, u.setupVideoStream();
                        case 11:
                          u.emit("VIDEO_TRACK_CHANGE");
                        case 12:
                          if (!(g.kind === "audiooutput" && g.deviceId === ((w = u.currentDevices.speaker) === null || w === void 0 ? void 0 : w.deviceId))) {
                            E.next = 15;
                            break;
                          }
                          return E.next = 15, u.setupSpeaker();
                        case 15:
                        case "end":
                          return E.stop();
                      }
                  }, m);
                }));
                return function(m) {
                  return v.apply(this, arguments);
                };
              }());
            case 4:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "emit", value: function(e) {
    for (var a, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    return (a = Oe(Pe(r.prototype), "emit", this)).call.apply(a, [this, e].concat(i));
  } }, { key: "on", value: function(e, a) {
    return Oe(Pe(r.prototype), "on", this).call(this, e, a);
  } }, {
    key: "removeDocumentEventListeners",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                document.removeEventListener("visibilitychange", this.onVisibilityChange);
              case 1:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * NOTE(callmetarush): Compatibility with Local media refactor
    */
  }, { key: "addAudioMiddleware", value: function(e) {
    return this.mediaMiddlewareUtils.addAudioMiddleware(e);
  } }, { key: "removeAudioMiddleware", value: function(e) {
    return this.mediaMiddlewareUtils.removeAudioMiddleware(e);
  } }, { key: "addVideoMiddleware", value: function(e) {
    return this.mediaMiddlewareUtils.addVideoMiddleware(e);
  } }, { key: "removeVideoMiddleware", value: function(e) {
    return this.mediaMiddlewareUtils.removeVideoMiddleware(e);
  } }, { key: "enableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.toggleVideo();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.toggleVideo();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.toggleScreenShare();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.toggleScreenShare();
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getCurrentDevices", value: function() {
    return this.currentDevices;
  } }, { key: "destruct", value: function() {
    this.mediaMiddlewareUtils.terminateMiddlewareWebWorker(), f(this, er).destruct(), this.removeAllTracks(), this.removeAllListeners();
  } }], [{ key: "init", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, wr.init();
            case 2:
              return i = p.sent, s = new r(i, n), u = new Wn(s), s.mediaMiddlewareUtils = u, p.abrupt("return", s);
            case 7:
            case "end":
              return p.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(at.EventEmitter)), pr = d1;
mr([A.trace("OldMediaHandler.shouldReacquireTrack")], pr.prototype, "shouldReacquireTrack", 1);
mr([A.trace("OldMediaHandler.removeMediaStreamTrackListeners")], pr.prototype, "removeMediaStreamTrackListeners", 1);
mr([A.trace("OldMediaHandler.addMediaStreamTrackListeners")], pr.prototype, "addMediaStreamTrackListeners", 1);
mr([A.trace("OldMediaHandler.setupAudioStream")], pr.prototype, "setupAudioStream", 1);
mr([A.trace("OldMediaHandler.getPreferredDeviceId")], pr.prototype, "getPreferredDeviceId", 1);
mr([A.trace("OldMediaHandler.setupVideoStream")], pr.prototype, "setupVideoStream", 1);
mr([A.trace("OldMediaHandler.setupScreenShareStreams")], pr.prototype, "setupScreenShareStreams", 1);
mr([A.trace("OldMediaHandler.setupSpeaker")], pr.prototype, "setupSpeaker", 1);
mr([A.trace("OldMediaHandler.getOperationalWebcamDeviceId")], pr.prototype, "getOperationalWebcamDeviceId", 1);
mr([A.trace("OldMediaHandler.getOperationalMicDeviceId")], pr.prototype, "getOperationalMicDeviceId", 1);
mr([A.trace("OldMediaHandler.setupStreams")], pr.prototype, "setupStreams", 1);
mr([A.trace("OldMediaHandler.stopAudioTrack")], pr.prototype, "stopAudioTrack", 1);
mr([A.trace("OldMediaHandler.stopVideoTrack")], pr.prototype, "stopVideoTrack", 1);
mr([A.trace("OldMediaHandler.stopScreenShareTracks")], pr.prototype, "stopScreenShareTracks", 1);
mr([A.trace("OldMediaHandler.removeAudioTrack")], pr.prototype, "removeAudioTrack", 1);
mr([A.trace("OldMediaHandler.removeVideoTrack")], pr.prototype, "removeVideoTrack", 1);
mr([A.trace("OldMediaHandler.removeScreenShareTracks")], pr.prototype, "removeScreenShareTracks", 1);
mr([A.trace("OldMediaHandler.removeAllTracks")], pr.prototype, "removeAllTracks", 1);
mr([A.trace("OldMediaHandler.setAudioTrack")], pr.prototype, "setAudioTrack", 1);
mr([A.trace("OldMediaHandler.setVideoTrack")], pr.prototype, "setVideoTrack", 1);
mr([A.trace("OldMediaHandler.setScreenShareTracks")], pr.prototype, "setScreenShareTracks", 1);
mr([A.trace("OldMediaHandler::disableAudio")], pr.prototype, "disableAudio", 1);
mr([A.trace("OldMediaHandler::enableAudio")], pr.prototype, "enableAudio", 1);
mr([A.trace("OldMediaHandler.toggleAudio")], pr.prototype, "toggleAudio", 1);
mr([A.trace("OldMediaHandler.toggleVideo")], pr.prototype, "toggleVideo", 1);
mr([A.trace("OldMediaHandler.toggleScreenShare")], pr.prototype, "toggleScreenShare", 1);
var Gv = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    I(this, r);
    for (var e = arguments.length, a = new Array(e), n = 0; n < e; n++)
      a[n] = arguments[n];
    return t = c.call.apply(c, [this].concat(a)), R(b(t), "localMediaHandler", void 0), t;
  }
  return D(r, [{ key: "updatePermission", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n = this, i, s, u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (u = function(T, _) {
                n.mediaPermissions[T] = _;
                var E = { message: n.mediaPermissions[T], kind: T };
                _ === "DENIED" ? $.emit(M.MEDIA_PERMISSION_ERROR, E) : $.emit(M.MEDIA_PERMISSION_UPDATE, E);
              }, ze.getName() !== "firefox") {
                w.next = 3;
                break;
              }
              return w.abrupt("return");
            case 3:
              return l = "microphone", p = "camera", w.next = 7, (i = navigator) === null || i === void 0 || (i = i.permissions) === null || i === void 0 ? void 0 : i.query({ name: l });
            case 7:
              return h = w.sent, w.next = 10, (s = navigator) === null || s === void 0 || (s = s.permissions) === null || s === void 0 ? void 0 : s.query({ name: p });
            case 10:
              v = w.sent, m = function(T, _) {
                switch (_) {
                  case "granted":
                    u(T, "ACCEPTED");
                    break;
                  case "denied":
                    u(T, "DENIED");
                    break;
                }
                n.localMediaHandler.repopulateAvailableDevices();
              }, h && (h.onchange = function() {
                return m("audio", h.state);
              }), v && (v.onchange = function() {
                return m("video", v.state);
              });
            case 14:
            case "end":
              return w.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "init",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n = this, i, s, u, l, p, h, v, m, g, w = arguments;
        return d().wrap(function(T) {
          for (; ; )
            switch (T.prev = T.next) {
              case 0:
                if (i = w.length > 0 && w[0] !== void 0 ? w[0] : {}, ze.init(), !this.localMediaHandler) {
                  T.next = 4;
                  break;
                }
                return T.abrupt("return");
              case 4:
                if (this.updatePermission(), T.prev = 5, s = !0, u = i.constraints || dt, !fe.defaults.mediaHandler) {
                  T.next = 13;
                  break;
                }
                s = !1, this.localMediaHandler = fe.defaults.mediaHandler.localMediaHandler, T.next = 27;
                break;
              case 13:
                if (!navigator.RNLocalMediaHandlerImpl) {
                  T.next = 20;
                  break;
                }
                return l = navigator, p = l.RNLocalMediaHandlerImpl, T.next = 17, p.init();
              case 17:
                this.localMediaHandler = T.sent, T.next = 27;
                break;
              case 20:
                if (!ue.hasFeature(de.NEW_LOCAL_MEDIA_HANDLER)) {
                  T.next = 24;
                  break;
                }
                this.localMediaHandler = new mt(u, fe == null || (h = fe.defaults) === null || h === void 0 ? void 0 : h.isNonPreferredDevice, fe == null || (v = fe.defaults) === null || v === void 0 ? void 0 : v.autoSwitchAudioDevice), T.next = 27;
                break;
              case 24:
                return T.next = 26, pr.init(u);
              case 26:
                this.localMediaHandler = T.sent;
              case 27:
                if ($.on(M.MEDIA_PERMISSION_UPDATE, /* @__PURE__ */ function() {
                  var _ = y(/* @__PURE__ */ d().mark(function E(S) {
                    var C, L, G, j, ee, Y, Z;
                    return d().wrap(function(x) {
                      for (; ; )
                        switch (x.prev = x.next) {
                          case 0:
                            if (S.message !== "ACCEPTED") {
                              x.next = 20;
                              break;
                            }
                            return C = n.getCurrentDevices(), x.next = 4, n.getAudioDevices();
                          case 4:
                            return L = x.sent, x.next = 7, n.getVideoDevices();
                          case 7:
                            return G = x.sent, x.next = 10, n.getSpeakerDevices();
                          case 10:
                            j = x.sent, x.t0 = S == null ? void 0 : S.kind, x.next = x.t0 === "audio" ? 14 : x.t0 === "video" ? 17 : 19;
                            break;
                          case 14:
                            return !C.audio && L.length > 0 && (n.setDevice(L[0]), se.mediaPermission("AUDIO", jt.ACCEPTED), se.selectedDevice("AUDIO", (ee = n.getCurrentDevices()) === null || ee === void 0 ? void 0 : ee.audio)), !C.speaker && j.length > 0 && (n.setDevice(j[0]), se.mediaPermission("SPEAKER", jt.ACCEPTED), se.selectedDevice("SPEAKER", (Y = n.getCurrentDevices()) === null || Y === void 0 ? void 0 : Y.speaker)), x.abrupt("break", 20);
                          case 17:
                            return !C.video && G.length > 0 && (n.setDevice(G[0]), se.mediaPermission("VIDEO", jt.ACCEPTED), se.selectedDevice("VIDEO", (Z = n.getCurrentDevices()) === null || Z === void 0 ? void 0 : Z.video)), x.abrupt("break", 20);
                          case 19:
                            return x.abrupt("break", 20);
                          case 20:
                            n.emit("mediaPermissionUpdate", S);
                          case 21:
                          case "end":
                            return x.stop();
                        }
                    }, E);
                  }));
                  return function(E) {
                    return _.apply(this, arguments);
                  };
                }()), $.on(M.MEDIA_PERMISSION_ERROR, /* @__PURE__ */ function() {
                  var _ = y(/* @__PURE__ */ d().mark(function E(S) {
                    var C, L;
                    return d().wrap(function(j) {
                      for (; ; )
                        switch (j.prev = j.next) {
                          case 0:
                            C = S.kind, L = S.message, C === "audio" ? (se.mediaPermission("AUDIO", tc(L)), n.disableAudio()) : C === "video" ? (se.mediaPermission("VIDEO", tc(L)), n.disableVideo()) : C === "screenshare" && (se.mediaPermission("VIDEO", tc(L)), n.disableScreenShare()), P.error("SelfController::mediaPermissionError", { error: { message: S.message }, constraints: S.constraints, mediaPermissionsErrors: { kind: C, message: L } }), n.emit("mediaPermissionError", S), n.emit("mediaPermissionUpdate", { message: L, kind: C });
                          case 5:
                          case "end":
                            return j.stop();
                        }
                    }, E);
                  }));
                  return function(E) {
                    return _.apply(this, arguments);
                  };
                }()), !s) {
                  T.next = 32;
                  break;
                }
                return T.next = 32, this.localMediaHandler.setupStreams({ video: (m = i == null ? void 0 : i.video) !== null && m !== void 0 ? m : !0, audio: (g = i == null ? void 0 : i.audio) !== null && g !== void 0 ? g : !0 });
              case 32:
                T.next = 37;
                break;
              case 34:
                T.prev = 34, T.t0 = T.catch(5), P.error("DyteSelf::init::Failed To Setup Streams", { error: { name: T.t0.name, message: T.t0.message } });
              case 37:
              case "end":
                return T.stop();
            }
        }, a, this, [[5, 34]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the `audioTrack`.
    */
  }, {
    key: "audioTrack",
    get: function() {
      return this.localMediaHandler.audioTrack;
    }
    /**
    * Returns the `rawAudioTrack` having no middleware executed on it.
    */
  }, {
    key: "rawAudioTrack",
    get: function() {
      return this.localMediaHandler.rawAudioTrack;
    }
    /**
    * Returns the current audio and video permissions given by the user.
    * 'ACCEPTED' if the user has given permission to use the media.
    * 'CANCELED' if the user has canceled the screenshare.
    * 'DENIED' if the user has denied permission to use the media.
    * 'SYS_DENIED' if the user's system has denied permission to use the media.
    * 'UNAVAILABLE' if the media is not available (or being used by a different application).
    */
  }, {
    key: "mediaPermissions",
    get: function() {
      return this.localMediaHandler.permissions;
    }
    /**
    * Adds the audio middleware to be executed on the raw audio stream.
    * If there are more than 1 audio middlewares,
    * they will be executed in the sequence they were added in.
    * If you want the sequence to be altered, please remove all previous middlewares and re-add.
    */
  }, {
    key: "addAudioMiddleware",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", this.localMediaHandler.addAudioMiddleware(n));
              case 1:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Removes the audio middleware, if it is there.
    */
  }, {
    key: "removeAudioMiddleware",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", this.localMediaHandler.removeAudioMiddleware(n));
              case 1:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the `videoTrack`.
    */
  }, {
    key: "videoTrack",
    get: function() {
      return this.localMediaHandler.videoTrack;
    }
    /**
    * Returns the `videoTrack` having no middleware executed on it.
    */
  }, {
    key: "rawVideoTrack",
    get: function() {
      return this.localMediaHandler.rawVideoTrack;
    }
    /**
    * Adds the video middleware to be executed on the raw video stream.
    * If there are more than 1 video middlewares,
    * they will be executed in the sequence they were added in.
    * If you want the sequence to be altered, please remove all previous middlewares and re-add.
    */
  }, {
    key: "addVideoMiddleware",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", this.localMediaHandler.addVideoMiddleware(n));
              case 1:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Removes the video middleware, if it is there.
    */
  }, {
    key: "removeVideoMiddleware",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.abrupt("return", this.localMediaHandler.removeVideoMiddleware(n));
              case 1:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the screen share tracks.
    */
  }, {
    key: "screenShareTracks",
    get: function() {
      return this.localMediaHandler.screenShareTracks;
    }
    /**
    * Returns true if audio is enabled.
    */
  }, {
    key: "audioEnabled",
    get: function() {
      return this.localMediaHandler.audioEnabled;
    }
    /**
    * Returns true if video is enabled.
    */
  }, {
    key: "videoEnabled",
    get: function() {
      return this.localMediaHandler.videoEnabled;
    }
    /**
    * Returns true if screen share is enabled.
    */
  }, { key: "screenShareEnabled", get: function() {
    return this.localMediaHandler.screenShareEnabled;
  } }, { key: "enableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.enableAudio();
            case 2:
              this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, this.localMediaHandler.enableVideo();
            case 2:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              this.localMediaHandler.disableAudio(), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 2:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "disableVideo",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.next = 2, this.localMediaHandler.disableVideo();
              case 2:
                this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "disableScreenShare",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
              case "end":
                return i.stop();
            }
        }, a);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the media devices currently being used.
    */
  }, {
    key: "getCurrentDevices",
    value: function() {
      return this.localMediaHandler.getCurrentDevices();
    }
    /**
    * Returns the local participant's audio devices.
    */
  }, {
    key: "getAudioDevices",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, this.localMediaHandler.getAudioDevices();
              case 2:
                return n = s.sent, s.abrupt("return", n);
              case 4:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the local participant's video devices.
    */
  }, {
    key: "getVideoDevices",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, this.localMediaHandler.getVideoDevices();
              case 2:
                return n = s.sent, s.abrupt("return", n);
              case 4:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the local participant's speaker devices.
    */
  }, {
    key: "getSpeakerDevices",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return s.next = 2, this.localMediaHandler.getSpeakerDevices();
              case 2:
                return n = s.sent, s.abrupt("return", n);
              case 4:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns the local participant's device, indexed by ID and kind.
    * @param deviceId The ID of the device.
    * @param kind The kind of the device: audio, video, or speaker.
    */
  }, {
    key: "getDeviceById",
    value: function(e, a) {
      var n;
      return a === "audio" ? n = "audioinput" : a === "video" ? n = "videoinput" : a === "speaker" && (n = "audiooutput"), this.localMediaHandler.getDeviceById(e, n);
    }
    /**
    * Change the current media device that is being used by the local participant.
    * @param device The device that is to be used. A device of the same `kind` will be replaced.
    * the primary stream.
    */
  }, { key: "setDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = { added: [n], removed: [] }, !("isDeprecated" in this.localMediaHandler)) {
                u.next = 5;
                break;
              }
              return u.next = 4, this.localMediaHandler.onDeviceChange(i, !0);
            case 4:
              return u.abrupt("return");
            case 5:
              u.t0 = n.kind, u.next = u.t0 === "audioinput" ? 8 : u.t0 === "audiooutput" ? 19 : u.t0 === "videoinput" ? 22 : 33;
              break;
            case 8:
              return u.prev = 8, u.next = 11, this.localMediaHandler.setAudioDevice(n);
            case 11:
              u.next = 15;
              break;
            case 13:
              u.prev = 13, u.t1 = u.catch(8);
            case 15:
              return u.prev = 15, this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }), u.finish(15);
            case 18:
              return u.abrupt("break", 33);
            case 19:
              return u.next = 21, this.localMediaHandler.setSpeakerDevice(n);
            case 21:
              return u.abrupt("break", 33);
            case 22:
              return u.prev = 22, u.next = 25, this.localMediaHandler.setVideoDevice(n);
            case 25:
              u.next = 29;
              break;
            case 27:
              u.prev = 27, u.t2 = u.catch(22);
            case 29:
              return u.prev = 29, this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), u.finish(29);
            case 32:
              return u.abrupt("break", 33);
            case 33:
              this.emit("deviceUpdate", { device: n });
            case 34:
            case "end":
              return u.stop();
          }
      }, a, this, [[8, 13, 15, 18], [22, 27, 29, 32]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr), p1 = { nonBlackPixelLumaThreshold: 20, identicalFrameSsimThreshold: 0.985, media: "video" }, qc = /* @__PURE__ */ new K(), Ei = /* @__PURE__ */ new K(), ks = /* @__PURE__ */ new K(), Wc = /* @__PURE__ */ new WeakSet(), Bv = /* @__PURE__ */ new WeakSet(), qv = /* @__PURE__ */ new WeakSet(), Ml = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), Or(this, qv), Or(this, Bv), Or(this, Wc), R(this, "metadata", {}), R(this, "video", void 0), R(this, "canvas", void 0), R(this, "nonBlackPixelLumaThreshold", void 0), R(this, "identicalFrameSsimThreshold", void 0), R(this, "previousFrame", new Uint8ClampedArray()), z(this, qc, { writable: !0, value: void 0 }), R(this, "track", void 0), R(this, "analysing", void 0), z(this, Ei, { writable: !0, value: void 0 }), z(this, ks, { writable: !0, value: void 0 }), R(this, "preview", void 0);
    var r = Q(Q({}, p1), c), t = r.nonBlackPixelLumaThreshold, e = r.identicalFrameSsimThreshold, a = r.media;
    this.nonBlackPixelLumaThreshold = t, this.identicalFrameSsimThreshold = e, this.analysing = !1, V(this, Ei, a), this.preview = !1;
  }
  return D(o, [{ key: "setTrack", value: function(r) {
    var t, e, a;
    (t = this.track) === null || t === void 0 || t.stop(), this.track = r;
    var n = (e = (a = this.track) === null || a === void 0 ? void 0 : a.getConstraints()) !== null && e !== void 0 ? e : {}, i = n.height, s = n.width;
    if (this.metadata.resolution = [s, i], f(this, Ei) === "screenshare") {
      $.emit(M.SCREENSHARE_VIDEO_TRACK_CREATED);
      return;
    }
    $.emit(M.VIDEO_TRACK_CREATED);
  } }, { key: "getTrackMetadata", value: function() {
    return this.track ? (this.metadata.label = this.track.label, this.metadata) : null;
  } }, { key: "startTrackAnalysis", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (!(!this.track || this.analysing)) {
                i.next = 2;
                break;
              }
              return i.abrupt("return", !1);
            case 2:
              return !this.video && !((e = this.video) !== null && e !== void 0 && e.src) && (V(this, ks, new MediaStream()), f(this, ks).addTrack(this.track), this.video = document.createElement("video"), this.canvas = document.createElement("canvas"), this.video.setAttribute("autoplay", ""), this.video.setAttribute("muted", ""), a = ar(this.metadata.resolution, 2), this.video.width = a[0], this.video.height = a[1], this.video.srcObject = f(this, ks)), window.requestAnimationFrame(Ne(this, Wc, Wv).bind(this)), this.analysing = !0, i.abrupt("return", !0);
            case 6:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "stopTrackAnalysis", value: function() {
    this.analysing && (this.analysing = !1, clearTimeout(f(this, qc)));
  } }, { key: "cleanup", value: function() {
    var r;
    if (this.stopTrackAnalysis(), (r = this.track) === null || r === void 0 || r.stop(), this.track = void 0, V(this, ks, void 0), this.video && (this.video.srcObject = void 0, this.video = void 0), this.canvas = void 0, this.previousFrame = new Uint8ClampedArray(), f(this, Ei) === "screenshare") {
      $.emit(M.SCREENSHARE_VIDEO_TRACK_CLOSED);
      return;
    }
    $.emit(M.VIDEO_TRACK_CLOSED);
  } }]), o;
}();
yt = Ml;
function Wv() {
  var o = this;
  try {
    var c = Ne(this, Bv, h1).call(this), r = Ne(this, qv, v1).call(this, c.data, c.data.length), t = _i(yt, yt, f1).call(yt, this.previousFrame, c.data);
    this.previousFrame = c.data;
    var e = { isBlackFrame: r, videoScore: t, isFrozenFrame: t > this.identicalFrameSsimThreshold, timestamp: new Date().getTime() };
    f(this, Ei) === "screenshare" ? $.emit(M.SCREENSHARE_VIDEO_TRACK_ANALYSIS, e) : $.emit(M.VIDEO_TRACK_ANALYSIS, e), V(this, qc, setTimeout(function() {
      o.track && window.requestAnimationFrame(Ne(o, Wc, Wv).bind(o));
    }, 3e3));
  } catch (a) {
    f(this, Ei) === "screenshare" ? $.emit(M.SCREENSHARE_VIDEO_TRACK_ANALYSIS_ERROR) : $.emit(M.VIDEO_TRACK_ANALYSIS_ERROR);
  }
}
function h1() {
  var o, c;
  this.canvas.width = (o = this.video) === null || o === void 0 ? void 0 : o.width, this.canvas.height = (c = this.video) === null || c === void 0 ? void 0 : c.height;
  var r = this.canvas.getContext("2d", { willReadFrequently: !0 });
  return r.drawImage(this.video, 0, 0, this.canvas.width, this.canvas.height), r.getImageData(0, 0, this.canvas.width, this.canvas.height);
}
function v1(o, c) {
  for (var r = this.nonBlackPixelLumaThreshold, t = 0, e = 4; e < c; e += 4)
    if (t += 0.21 * o[e] + 0.72 * o[e + 1] + 0.07 * o[e + 2], t > r * (e / 4))
      return !1;
  return !0;
}
function f1(o, c) {
  if (o.length !== c.length)
    return 0;
  var r = 0.01, t = 0.03, e = 255, a = r * e * (r * e), n = t * e * (t * e), i = n / 2, s = _i(yt, yt, Up).call(yt, o), u = s.mean, l = s.variance, p = Math.sqrt(l), h = _i(yt, yt, Up).call(yt, c), v = h.mean, m = h.variance, g = Math.sqrt(m), w = _i(yt, yt, m1).call(yt, o, c, u, v), k = (2 * u * v + a) / (u * u + v * v + a), T = (w + i) / (p * g + i), _ = (2 * p * g + n) / (l + m + n);
  return k * _ * T;
}
function Up(o) {
  var c = 0, r;
  for (r = 0; r < o.length; r++)
    c += o[r];
  var t = c / (o.length - 1), e = 0;
  for (r = 1; r < o.length; r++)
    e = o[r - 1] - t, c += o[r] + e * e;
  return { mean: t, variance: c / o.length };
}
function m1(o, c, r, t) {
  for (var e = 0, a = 0; a < o.length; a += 1)
    e += (o[a] - r) * (c[a] - t);
  return e / o.length;
}
var kt = new Ml(), xa = new Ml({ media: "screenshare" }), g1 = Object.defineProperty, y1 = Object.getOwnPropertyDescriptor, $r = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? y1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && g1(r, t, a), a;
}, Tr = /* @__PURE__ */ function(o) {
  return o.OFF_STAGE = "OFF_STAGE", o.REQUESTED_TO_JOIN_STAGE = "REQUESTED_TO_JOIN_STAGE", o.ACCEPTED_TO_JOIN_STAGE = "ACCEPTED_TO_JOIN_STAGE", o.ON_STAGE = "ON_STAGE", o;
}(Tr || {}), br = (zi = /* @__PURE__ */ new K(), va = /* @__PURE__ */ new K(), Qi = /* @__PURE__ */ new K(), zn = /* @__PURE__ */ new K(), Ye = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a, n, i) {
    var s, u;
    return I(this, r), u = c.call(this), z(b(u), Ye, { get: k1, set: void 0 }), R(b(u), "id", void 0), R(b(u), "name", void 0), R(b(u), "picture", void 0), R(b(u), "clientSpecificId", void 0), R(b(u), "waitlistStatus", void 0), z(b(u), zi, { writable: !0, value: void 0 }), z(b(u), va, { writable: !0, value: void 0 }), z(b(u), Qi, { writable: !0, value: void 0 }), R(b(u), "role", void 0), R(b(u), "userId", void 0), R(b(u), "organizationId", void 0), R(b(u), "supportsRemoteControl", !1), R(b(u), "device", void 0), z(b(u), zn, { writable: !0, value: void 0 }), R(b(u), "presetName", void 0), R(b(u), "roomState", "init"), u.id = t, u.userId = e.id, u.name = e.name, u.picture = e.picture, u.clientSpecificId = (s = e.customParticipantId) !== null && s !== void 0 ? s : e.clientSpecificId, u.waitlistStatus = "none", V(b(u), va, a), V(b(u), zi, n), V(b(u), Qi, !1), u.organizationId = e.organizationId, u.supportsRemoteControl = ze.isElectron(), u.device = ze.getDeviceInfo(), u.presetName = i, n.viewType !== Rr.Chat && u.updatePermission(), u;
  }
  return D(r, [{ key: "stageStatus", get: function() {
    return f(this, zn);
  } }, {
    key: "setupEvents",
    value: function() {
      var e = this;
      $.on(M.ROOM_NODE_CONNECTED, /* @__PURE__ */ function() {
        var a = y(/* @__PURE__ */ d().mark(function n(i) {
          var s;
          return d().wrap(function(l) {
            for (; ; )
              switch (l.prev = l.next) {
                case 0:
                  if (s = i.wasDisconnected, !s) {
                    l.next = 4;
                    break;
                  }
                  return l.next = 4, e.resetSelf();
                case 4:
                case "end":
                  return l.stop();
              }
          }, n);
        }));
        return function(n) {
          return a.apply(this, arguments);
        };
      }()), $.onAsync(M.SET_STAGE_STATUS, /* @__PURE__ */ function() {
        var a = y(/* @__PURE__ */ d().mark(function n(i) {
          return d().wrap(function(u) {
            for (; ; )
              switch (u.prev = u.next) {
                case 0:
                  V(e, zn, i), u.t0 = i, u.next = u.t0 === "ACCEPTED_TO_JOIN_STAGE" ? 4 : u.t0 === "REQUESTED_TO_JOIN_STAGE" ? 6 : u.t0 === "OFF_STAGE" ? 8 : 10;
                  break;
                case 4:
                  return e.emit("joinStageRequestAccepted"), u.abrupt("break", 10);
                case 6:
                  return e.emit("peerRequestToJoinStage"), u.abrupt("break", 10);
                case 8:
                  return e.emit("stageLeft"), u.abrupt("break", 10);
                case 10:
                case "end":
                  return u.stop();
              }
          }, n);
        }));
        return function(n) {
          return a.apply(this, arguments);
        };
      }()), $.on(M.RESET_PRODUCER_STATE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (e.roomJoined) {
                  i.next = 2;
                  break;
                }
                return i.abrupt("return");
              case 2:
                if (f(e, Ye) instanceof Ce) {
                  i.next = 4;
                  break;
                }
                return i.abrupt("return");
              case 4:
                if (!e.localMediaHandler.videoEnabled) {
                  i.next = 7;
                  break;
                }
                return i.next = 7, f(e, Ye).shareWebcam(e.localMediaHandler.videoTrack);
              case 7:
                if (!e.localMediaHandler.audioEnabled) {
                  i.next = 16;
                  break;
                }
                return i.prev = 8, i.next = 11, f(e, Ye).shareMic(e.localMediaHandler.audioTrack);
              case 11:
                i.next = 16;
                break;
              case 13:
                i.prev = 13, i.t0 = i.catch(8), e.localMediaHandler.disableAudio();
              case 16:
                if (!e.localMediaHandler.screenShareEnabled) {
                  i.next = 19;
                  break;
                }
                return i.next = 19, f(e, Ye).shareScreen({ video: e.localMediaHandler.screenShareTracks.video, audio: e.localMediaHandler.screenShareTracks.audio });
              case 19:
              case "end":
                return i.stop();
            }
        }, a, null, [[8, 13]]);
      }))), $.on(M.STOPPED_PRESENTING, function() {
        e.localMediaHandler.destruct(), e.setWebinarStageStatus(
          "OFF_STAGE"
          /* OFF_STAGE */
        ), e.emit("stageLeft");
      }), this.localMediaHandler.on("AUDIO_TRACK_CHANGE", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if ($.emit(M.AUDIO_TRACK_CHANGED), P.info("DyteSelf::setupEvents::AUDIO_TRACK_CHANGE", Q({}, Cn(e))), !(e.roomJoined && e.audioEnabled)) {
                  i.next = 12;
                  break;
                }
                return i.prev = 3, i.next = 6, f(e, Ye).shareMic(e.audioTrack);
              case 6:
                i.next = 12;
                break;
              case 8:
                i.prev = 8, i.t0 = i.catch(3), P.error("DyteSelf::setupEvents::Error while sharing mic", { error: i.t0 }), e.localMediaHandler.disableAudio();
              case 12:
                e.emit("audioUpdate", { audioEnabled: e.audioEnabled, audioTrack: e.audioTrack });
              case 13:
              case "end":
                return i.stop();
            }
        }, a, null, [[3, 8]]);
      }))), this.localMediaHandler.on("VIDEO_TRACK_CHANGE", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if ($.emit(M.VIDEO_TRACK_CHANGED), P.info("DyteSelf::setupEvents::VIDEO_TRACK_CHANGE", Q({}, Cn(e))), !(e.roomJoined && e.rawVideoTrack === void 0)) {
                  s.next = 7;
                  break;
                }
                P.info("DyteSelf::VIDEO_TRACK_CHANGE::Forcing_disable_video"), e.disableVideo(), s.next = 23;
                break;
              case 7:
                if (!(e.videoEnabled && e.roomJoined)) {
                  s.next = 23;
                  break;
                }
                return s.prev = 8, s.next = 11, f(e, Ye).shareWebcam(e.videoTrack);
              case 11:
                if (n = s.sent, !(n && n.id !== e.videoTrack.id && ue.hasFeature(de.EXP_RESHARE))) {
                  s.next = 15;
                  break;
                }
                return s.next = 15, f(e, Ye).shareWebcam(e.videoTrack);
              case 15:
                s.next = 23;
                break;
              case 17:
                if (s.prev = 17, s.t0 = s.catch(8), P.error("DyteSelf::setupEvents::failed shareWebcam", { error: s.t0 }), !e.videoEnabled) {
                  s.next = 23;
                  break;
                }
                return s.next = 23, e.localMediaHandler.disableVideo();
              case 23:
                e.emit("videoUpdate", { videoEnabled: e.videoEnabled, videoTrack: e.videoTrack });
              case 24:
              case "end":
                return s.stop();
            }
        }, a, null, [[8, 17]]);
      }))), this.localMediaHandler.on("DEVICE_CHANGE", /* @__PURE__ */ function() {
        var a = y(/* @__PURE__ */ d().mark(function n(i) {
          var s;
          return d().wrap(function(l) {
            for (; ; )
              switch (l.prev = l.next) {
                case 0:
                  s = i.device, e.emit("deviceUpdate", { device: s });
                case 2:
                case "end":
                  return l.stop();
              }
          }, n);
        }));
        return function(n) {
          return a.apply(this, arguments);
        };
      }()), this.localMediaHandler.on("DEVICE_LIST_UPDATED", function(a) {
        e.emit("deviceListUpdate", a);
      }), this.localMediaHandler.on("SCREENSHARE_TRACK_CHANGE", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if ($.emit(M.SCREENSHARE_TRACK_CHANGED), e.roomJoined) {
                  i.next = 4;
                  break;
                }
                return P.error("DyteSelf.SCREENSHARE_TRACK_CHANGE.LocalMediaInitialized_WithoutRoomNode"), i.abrupt("return");
              case 4:
                if (!e.screenShareEnabled) {
                  i.next = 16;
                  break;
                }
                return i.prev = 5, i.next = 8, f(e, Ye).shareScreen(e.screenShareTracks);
              case 8:
                i.next = 16;
                break;
              case 10:
                if (i.prev = 10, i.t0 = i.catch(5), P.error("DyteSelf::setupEvents::Error while sharing screen", { error: i.t0 }), !e.screenShareEnabled) {
                  i.next = 16;
                  break;
                }
                return i.next = 16, e.localMediaHandler.disableScreenShare();
              case 16:
                P.info("DyteSelf::setupEvents::SCREENSHARE_TRACK_CHANGE", Q({}, Cn(e))), e.emit("screenShareUpdate", { screenShareEnabled: e.screenShareEnabled, screenShareTracks: e.screenShareTracks });
              case 18:
              case "end":
                return i.stop();
            }
        }, a, null, [[5, 10]]);
      }))), this.localMediaHandler.on("SCREENSHARE_ENDED", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.next = 2, e.disableScreenShare();
              case 2:
                P.info("DyteSelf::setupEvents::SCREENSHARE_ENDED", Q({}, Cn(e)));
              case 3:
              case "end":
                return i.stop();
            }
        }, a);
      }))), this.localMediaHandler.on("AUDIO_TRACK_SILENT", function() {
        e.emit("audioTrackSilent"), se.mediaTrackMuted("AUDIO");
      }), this.localMediaHandler.on("FORCE_MUTE_AUDIO", function() {
        e.disableAudio();
      }), this.localMediaHandler.on("FORCE_MUTE_VIDEO", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (!e.roomJoined) {
                  i.next = 3;
                  break;
                }
                return i.next = 3, f(e, Ye).pauseWebcam();
              case 3:
                e.emit("videoUpdate", { videoEnabled: e.videoEnabled, videoTrack: e.videoTrack }), se.videoOff();
              case 5:
              case "end":
                return i.stop();
            }
        }, a);
      })));
    }
    /**
    * Returns the current permission given to the user for the meeting.
    */
  }, {
    key: "permissions",
    get: function() {
      return f(this, va);
    }
    /**
    * @deprecated use 'config'
    * Returns suggested theme for the meeting.
    */
  }, {
    key: "suggestedTheme",
    get: function() {
      return f(this, zi);
    }
    /**
    * Returns configuration for the meeting.
    */
  }, { key: "config", get: function() {
    return f(this, zi);
  } }, {
    key: "roomJoined",
    get: (
      /**
      * Returns true if the local participant has joined the meeting.
      */
      function() {
        var e;
        return ((e = f(this, Ye)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
      }
    )
    /**
    * The name of the user can be set by calling this method.
    * This will get reflected to other participants ONLY if
    * this method is called before the room is joined.
    * @param name Name of the user.
    */
  }, { key: "setName", value: function(e) {
    if (!e)
      throw new q("Name cannot be empty.");
    this.name = e;
  } }, { key: "setupTracks", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = u.length > 0 && u[0] !== void 0 ? u[0] : {}, s.forceReset && (f(this, Ye).stopAllProducers(), this.localMediaHandler.removeAllTracks()), p.abrupt("return", this.localMediaHandler.setupStreams({ video: (n = s.video) !== null && n !== void 0 ? n : !0, audio: (i = s.audio) !== null && i !== void 0 ? i : !0 }));
            case 3:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resetSelf", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u, l, p, h, v;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (se.callEnded(), (n = f(this, Ye)) === null || n === void 0 || (n = n.sfuHandler) === null || n === void 0 || (i = n.cleanupConsumers) === null || i === void 0 || i.call(n), !(f(this, Ye) instanceof qe)) {
                g.next = 5;
                break;
              }
              return g.next = 5, (u = f(this, Ye)) === null || u === void 0 || (u = u.sfuHandler) === null || u === void 0 || (l = u.setupTransports) === null || l === void 0 ? void 0 : l.call(u);
            case 5:
              return g.next = 7, (s = f(this, Ye)) === null || s === void 0 ? void 0 : s.joinRoom(this.name, !this.localMediaHandler.audioEnabled, f(this, Ye).roomUUID, f(this, Ye).meetingTitle, { audio: this.localMediaHandler.audioEnabled, video: this.localMediaHandler.videoEnabled, screen: this.localMediaHandler.screenShareEnabled });
            case 7:
              if (!this.localMediaHandler.videoEnabled) {
                g.next = 10;
                break;
              }
              return g.next = 10, (p = f(this, Ye)) === null || p === void 0 ? void 0 : p.shareWebcam(this.localMediaHandler.videoTrack);
            case 10:
              if (!this.localMediaHandler.audioEnabled) {
                g.next = 19;
                break;
              }
              return g.prev = 11, g.next = 14, (h = f(this, Ye)) === null || h === void 0 ? void 0 : h.shareMic(this.localMediaHandler.audioTrack);
            case 14:
              g.next = 19;
              break;
            case 16:
              g.prev = 16, g.t0 = g.catch(11), this.localMediaHandler.disableAudio();
            case 19:
              if (!this.localMediaHandler.screenShareEnabled) {
                g.next = 22;
                break;
              }
              return g.next = 22, (v = f(this, Ye)) === null || v === void 0 ? void 0 : v.shareScreen({ video: this.localMediaHandler.screenShareTracks.video, audio: this.localMediaHandler.screenShareTracks.audio });
            case 22:
            case "end":
              return g.stop();
          }
      }, a, this, [[11, 16]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "destructMediaHandler", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.destruct());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeDocumentEventListeners", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this.localMediaHandler.removeDocumentEventListeners());
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.permissions.canProduceAudio !== En.notAllowed) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if (!(f(this, va).canProduceAudio === En.canRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              if (!this.audioEnabled) {
                s.next = 6;
                break;
              }
              return s.abrupt("return");
            case 6:
              return s.next = 8, this.localMediaHandler.enableAudio();
            case 8:
              if (!this.roomJoined) {
                s.next = 22;
                break;
              }
              if (!this.audioTrack) {
                s.next = 19;
                break;
              }
              return s.prev = 10, s.next = 13, f(this, Ye).shareMic(this.audioTrack);
            case 13:
              s.next = 19;
              break;
            case 15:
              s.prev = 15, s.t0 = s.catch(10), P.error("DyteSelf::enableAudio::Error while sharing mic", { error: s.t0 }), this.localMediaHandler.disableAudio();
            case 19:
              if (this.audioEnabled) {
                s.next = 21;
                break;
              }
              return s.abrupt("return");
            case 21:
              f(this, Ye).unmuteSelf();
            case 22:
              if (this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }), se.audioOn(), n = ue.hasFeature(de.TROUBLESHOOTING), n)
                try {
                  ia.setTrack(this.rawAudioTrack);
                } catch (u) {
                  P.error("Troubleshooter::micTest::Error while setting track", { error: u });
                }
            case 26:
            case "end":
              return s.stop();
          }
      }, a, this, [[10, 15]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (f(this, va).canProduceVideo !== En.notAllowed) {
                u.next = 2;
                break;
              }
              return u.abrupt("return");
            case 2:
              if (!(f(this, va).canProduceVideo === En.canRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              if (!this.videoEnabled) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              return u.next = 8, this.localMediaHandler.enableVideo();
            case 8:
              if (!this.roomJoined) {
                u.next = 20;
                break;
              }
              return u.prev = 9, u.next = 12, f(this, Ye).shareWebcam(this.videoTrack);
            case 12:
              u.next = 20;
              break;
            case 14:
              if (u.prev = 14, u.t0 = u.catch(9), P.error("DyteSelf::enableVideo::Error while sharing video", { error: u.t0 }), !this.videoEnabled) {
                u.next = 20;
                break;
              }
              return u.next = 20, this.localMediaHandler.disableVideo();
            case 20:
              if (this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), P.info("DyteSelf.enableVideo", Q({}, Cn(this))), se.videoOn(), n = ue.hasFeature(de.TROUBLESHOOTING), n)
                try {
                  kt.setTrack((i = this.videoTrack) === null || i === void 0 ? void 0 : i.clone());
                } catch (l) {
                  P.error("Troubleshooter::camTest::Error while setting track", { error: l });
                }
            case 25:
            case "end":
              return u.stop();
          }
      }, a, this, [[9, 14]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateVideoConstraints", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.localMediaHandler.updateVideoConstraints) {
                s.next = 2;
                break;
              }
              throw new q("Unsupported");
            case 2:
              return s.next = 4, this.localMediaHandler.updateVideoConstraints(n);
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "enableScreenShare", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (this.roomJoined) {
                u.next = 2;
                break;
              }
              throw new q("Can`t enable screenshare without joining room");
            case 2:
              if (f(this, va).canProduceScreenshare !== En.notAllowed) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              if (!(f(this, va).canProduceScreenshare === En.canRequest && (this.stageStatus === "OFF_STAGE" || this.stageStatus === "REQUESTED_TO_JOIN_STAGE"))) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              if (!this.screenShareEnabled) {
                u.next = 8;
                break;
              }
              return u.abrupt("return");
            case 8:
              return u.next = 10, this.localMediaHandler.enableScreenShare();
            case 10:
              if (!(this.screenShareTracks.audio || this.screenShareTracks.video)) {
                u.next = 22;
                break;
              }
              return u.prev = 11, u.next = 14, f(this, Ye).shareScreen(this.screenShareTracks);
            case 14:
              u.next = 22;
              break;
            case 16:
              if (u.prev = 16, u.t0 = u.catch(11), P.error("DyteSelf::enableScreenShare::Error while sharing screen", { error: u.t0 }), !this.screenShareEnabled) {
                u.next = 22;
                break;
              }
              return u.next = 22, this.localMediaHandler.disableScreenShare();
            case 22:
              if (this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks }), n = ue.hasFeature(de.TROUBLESHOOTING), n && this.screenShareTracks.audio)
                try {
                  On.setTrack(this.screenShareTracks.audio);
                } catch (l) {
                  P.error("Troubleshooter::screenshareMicTest::Error while setting track", { error: l });
                }
              if (n && this.screenShareTracks.video)
                try {
                  xa.setTrack((i = this.screenShareTracks.video) === null || i === void 0 ? void 0 : i.clone());
                } catch (l) {
                  P.error("Troubleshooter::screenshareCamTest::Error while setting track", { error: l });
                }
            case 26:
            case "end":
              return u.stop();
          }
      }, a, this, [[11, 16]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateScreenshareConstraints", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.localMediaHandler.updateScreenshareConstraints) {
                s.next = 2;
                break;
              }
              throw new q("Unsupported");
            case 2:
              return s.next = 4, this.localMediaHandler.updateScreenshareConstraints(n);
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.audioEnabled) {
                i.next = 2;
                break;
              }
              return i.abrupt("return");
            case 2:
              this.localMediaHandler.disableAudio(), this.roomJoined && f(this, Ye).muteSelf(), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }), se.audioOff();
            case 6:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.videoEnabled) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              return s.next = 4, this.localMediaHandler.disableVideo();
            case 4:
              if (!this.roomJoined) {
                s.next = 7;
                break;
              }
              return s.next = 7, f(this, Ye).pauseWebcam();
            case 7:
              if (this.mediaPermissions.video === "ACCEPTED") {
                s.next = 9;
                break;
              }
              return s.abrupt("return");
            case 9:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }), se.videoOff(), n = ue.hasFeature(de.TROUBLESHOOTING), n && !kt.preview && kt.cleanup();
            case 13:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "disableScreenShare",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (this.screenShareEnabled) {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                return s.next = 4, this.localMediaHandler.disableScreenShare();
              case 4:
                if (!this.roomJoined) {
                  s.next = 7;
                  break;
                }
                return s.next = 7, f(this, Ye).disableScreenShare();
              case 7:
                this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks }), n = ue.hasFeature(de.TROUBLESHOOTING), n && (xa.cleanup(), On.cleanup());
              case 10:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns all media devices accessible by the local participant.
    */
  }, {
    key: "getAllDevices",
    value: function() {
      return this.localMediaHandler.getAllDevices();
    }
    /**
    * @access private
    * Not for external use.
    */
  }, {
    key: "setIsPinned",
    value: function(e) {
      var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
      V(this, Qi, e);
      var n = e ? "pinned" : "unpinned";
      a && this.emit(n, this);
    }
    /**
    * Returns true if the current user is pinned.
    */
  }, {
    key: "isPinned",
    get: function() {
      return f(this, Qi);
    }
    /**
    * @deprecated
    * Denotes the user's current stage status.
    * Use `self.stageStatus` instead.
    * */
  }, {
    key: "webinarStageStatus",
    get: function() {
      return f(this, zn);
    }
    /**
    * Returns `self.id` if user has permission
    * to pin participants.
    */
  }, {
    key: "pin",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.roomJoined) {
                  i.next = 2;
                  break;
                }
                throw new q("Can`t pin participants without joining room");
              case 2:
                return i.abrupt("return", f(this, Ye).pinPeer(this.id));
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns `self.id` if user has permission
    * to unpin participants.
    */
  }, { key: "unpin", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.roomJoined) {
                i.next = 2;
                break;
              }
              throw new q("Can`t unpin participants without joining room");
            case 2:
              return i.abrupt("return", f(this, Ye).pinPeer(null));
            case 3:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "setDevice", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (i = { added: [n], removed: [] }, !("isDeprecated" in this.localMediaHandler)) {
                u.next = 5;
                break;
              }
              return u.next = 4, this.localMediaHandler.onDeviceChange(i, !0);
            case 4:
              return u.abrupt("return");
            case 5:
              u.t0 = n.kind, u.next = u.t0 === "audioinput" ? 8 : u.t0 === "audiooutput" ? 20 : u.t0 === "videoinput" ? 23 : 35;
              break;
            case 8:
              return u.prev = 8, u.next = 11, this.localMediaHandler.setAudioDevice(n);
            case 11:
              u.next = 19;
              break;
            case 13:
              if (u.prev = 13, u.t1 = u.catch(8), !this.roomJoined) {
                u.next = 18;
                break;
              }
              return u.next = 18, f(this, Ye).muteSelf();
            case 18:
              this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack });
            case 19:
              return u.abrupt("break", 35);
            case 20:
              return u.next = 22, this.localMediaHandler.setSpeakerDevice(n);
            case 22:
              return u.abrupt("break", 35);
            case 23:
              return u.prev = 23, u.next = 26, this.localMediaHandler.setVideoDevice(n);
            case 26:
              u.next = 34;
              break;
            case 28:
              if (u.prev = 28, u.t2 = u.catch(23), !this.roomJoined) {
                u.next = 33;
                break;
              }
              return u.next = 33, f(this, Ye).pauseWebcam();
            case 33:
              this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack });
            case 34:
              return u.abrupt("break", 35);
            case 35:
            case "end":
              return u.stop();
          }
      }, a, this, [[8, 13], [23, 28]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "cleanUpTracks", value: function() {
    var e, a, n, i;
    (e = this.audioTrack) === null || e === void 0 || e.stop(), (a = this.rawAudioTrack) === null || a === void 0 || a.stop(), (n = this.videoTrack) === null || n === void 0 || n.stop(), (i = this.rawVideoTrack) === null || i === void 0 || i.stop();
  } }, { key: "requestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.REQUEST_TO_JOIN_STAGE);
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "withdrawRequestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.WITHDRAW_REQUEST_TO_JOIN_STAGE);
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "leaveStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.LEAVE_STAGE);
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "joinStage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                $.emitAsync(M.JOIN_STAGE);
              case 1:
              case "end":
                return i.stop();
            }
        }, a);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * @deprecated
    * Use `stage.setStatus(StageStatus)` instead.
    */
  }, { key: "setWebinarStageStatus", value: function(e) {
    switch (V(this, zn, e), $.emit(M.SET_WEBINAR_STAGE_STATUS, e), e) {
      case "ACCEPTED_TO_JOIN_STAGE":
        this.emit("joinStageRequestAccepted");
        break;
      case "REQUESTED_TO_JOIN_STAGE":
        this.emit("peerRequestToJoinStage");
        break;
      case "OFF_STAGE":
        this.emit("stageLeft");
        break;
    }
  } }, { key: "disablePreview", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", this);
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "__init__", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s, u, l) {
      var p, h, v, m, g, w, k;
      return d().wrap(function(_) {
        for (; ; )
          switch (_.prev = _.next) {
            case 0:
              if (g = (p = (h = fe.defaults) === null || h === void 0 ? void 0 : h.audio) !== null && p !== void 0 ? p : !0, w = (v = (m = fe.defaults) === null || m === void 0 ? void 0 : m.video) !== null && v !== void 0 ? v : !0, s.canProduceAudio !== "ALLOWED" && (g = !1), s.canProduceVideo !== "ALLOWED" && (w = !1), k = new br(n, i, s, u, l), u.viewType !== Rr.Chat) {
                _.next = 7;
                break;
              }
              return _.abrupt("return", k);
            case 7:
              return _.next = 9, k.init({ audio: g, video: w });
            case 9:
              return k.setupEvents(), _.abrupt("return", k);
            case 11:
            case "end":
              return _.stop();
          }
      }, a);
    }));
    function e(a, n, i, s, u) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(Gv));
function k1() {
  return Mr();
}
$r([A.trace("DyteSelf.setupEvents")], br.prototype, "setupEvents", 1);
$r([A.trace("DyteSelf.setupTracks")], br.prototype, "setupTracks", 1);
$r([A.trace("DyteSelf.resetSelf")], br.prototype, "resetSelf", 1);
$r([A.trace("DyteSelf.destructMediaHandler")], br.prototype, "destructMediaHandler", 1);
$r([A.trace("DyteSelf.removeDocumentEventListeners")], br.prototype, "removeDocumentEventListeners", 1);
$r([A.trace("DyteSelf.enableAudio")], br.prototype, "enableAudio", 1);
$r([A.trace("DyteSelf.enableVideo")], br.prototype, "enableVideo", 1);
$r([A.trace("DyteSelf.updateVideoConstraints")], br.prototype, "updateVideoConstraints", 1);
$r([A.trace("DyteSelf.enableScreenShare")], br.prototype, "enableScreenShare", 1);
$r([A.trace("DyteSelf.updateScreenshareConstraints")], br.prototype, "updateScreenshareConstraints", 1);
$r([A.trace("DyteSelf.disableAudio")], br.prototype, "disableAudio", 1);
$r([A.trace("DyteSelf.disableVideo")], br.prototype, "disableVideo", 1);
$r([A.trace("DyteSelf.disableScreenShare")], br.prototype, "disableScreenShare", 1);
$r([A.trace("DyteSelf.setDevice")], br.prototype, "setDevice", 1);
$r([A.trace("DyteSelf.requestToJoinStage")], br.prototype, "requestToJoinStage", 1);
$r([A.trace("DyteSelf.withdrawRequestToJoinStage")], br.prototype, "withdrawRequestToJoinStage", 1);
$r([A.trace("DyteSelf.leaveStage")], br.prototype, "leaveStage", 1);
$r([A.trace("DyteSelf.joinStage")], br.prototype, "joinStage", 1);
$r([A.trace("DyteSelf.deprecated.disablePreview")], br.prototype, "disablePreview", 1);
br = $r([jr(function(o) {
  throw new q(o.message, "1100");
})], br);
function Jv(o) {
  return !(o.viewType === "LIVESTREAM" || o.viewType === "CHAT");
}
var ws, Jc = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), R(this, "socket", void 0), this.socket = c, this.handleSocketEvents();
  }
  return D(o, [{ key: "onReconnect", set: function(r) {
    this.socket.onStateEvent("reconnected", r);
  } }, { key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i) {
      var s, u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return s = { capabilities: [], peer: { displayName: e, peerId: a, userId: n, waitlisted: !1 }, roomUuid: i }, v.t0 = hs, v.next = 4, this.socket.sendMessagePromise(le.joinRoom, gR.toBinary(s));
            case 4:
              return v.t1 = v.sent.payload, u = v.t0.fromBinary.call(v.t0, v.t1), v.next = 8, $.emitAsync(M.SOCKET_SERVICE_ROOM_JOINED, u);
            case 8:
              return v.prev = 8, v.next = 11, this.getRoomState();
            case 11:
              l = v.sent, p = l.room, $.emit(M.ROOM_STATE, p), v.next = 19;
              break;
            case 16:
              v.prev = 16, v.t2 = v.catch(8), P.error("RoomSocketHandler.joinRoom.failedToGetRoomState", { error: v.t2 });
            case 19:
            case "end":
              return v.stop();
          }
      }, t, this, [[8, 16]]);
    }));
    function r(t, e, a, n) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAllAddedParticipants", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.prev = 0, n.t0 = r0, n.next = 4, this.socket.sendMessagePromise(le.getAllAddedParticipants);
            case 4:
              return n.t1 = n.sent.payload, e = n.t0.fromBinary.call(n.t0, n.t1), n.abrupt("return", e.participants.map(function(i) {
                var s = i.id, u = ah(i, df);
                return Q(Q({}, u), {}, { userId: s });
              }));
            case 9:
              return n.prev = 9, n.t2 = n.catch(0), n.abrupt("return", []);
            case 12:
            case "end":
              return n.stop();
          }
      }, t, this, [[0, 9]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getRoomPeers", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.prev = 0, s = {
                // F
                seachQuery: e,
                limit: a,
                offset: n
              }, p.next = 4, this.socket.sendMessagePromise(le.getRoomPeersInfo, iR.toBinary(s));
            case 4:
              u = p.sent, i = oR.fromBinary(u.payload), p.next = 11;
              break;
            case 8:
              p.prev = 8, p.t0 = p.catch(0), P.error("getRoomPeers::binary_decode_error", { error: p.t0 });
            case 11:
              return p.abrupt("return", i);
            case 12:
            case "end":
              return p.stop();
          }
      }, t, this, [[0, 8]]);
    }));
    function r(t, e, a) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getPeerInfo", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, this.socket.sendMessagePromise(le.getPeerInfo, vR.toBinary({ peerId: e }));
            case 3:
              n = s.sent, a = hs.fromBinary(n.payload), s.next = 10;
              break;
            case 7:
              s.prev = 7, s.t0 = s.catch(0), P.error("getPeerInfo::binary_decode_error", { error: s.t0 });
            case 10:
              return s.abrupt("return", a);
            case 11:
            case "end":
              return s.stop();
          }
      }, t, this, [[0, 7]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getRoomState", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return e = lp.create(), i.prev = 1, i.next = 4, this.socket.sendMessagePromise(le.getRoomInfo);
            case 4:
              a = i.sent, e = lp.fromBinary(a.payload), i.next = 11;
              break;
            case 8:
              i.prev = 8, i.t0 = i.catch(1), P.error("getRoomState::binary_decode_error", { error: i.t0 });
            case 11:
              return i.abrupt("return", e);
            case 12:
            case "end":
              return i.stop();
          }
      }, t, this, [[1, 8]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getRoomStageState", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return e = fp.create(), i.prev = 1, i.next = 4, this.socket.sendMessagePromise(le.getRoomStageState);
            case 4:
              a = i.sent, e = fp.fromBinary(a.payload), i.next = 11;
              break;
            case 8:
              i.prev = 8, i.t0 = i.catch(1), P.error("getRoomStageState::binary_decode_error", { error: i.t0 });
            case 11:
              return i.abrupt("return", e);
            case 12:
            case "end":
              return i.stop();
          }
      }, t, this, [[1, 8]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "broadcastMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return n = { type: e, payload: new TextEncoder().encode(JSON.stringify(a)), timestamp: Date.now(), peerIds: [] }, s.abrupt("return", this.socket.sendMessagePromise(le.broadcastMessage, hp.toBinary(n)));
            case 2:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveRoom", value: function() {
    this.socket.sendMessage(le.leaveRoom, kR.toBinary({}));
  } }, { key: "kick", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              a = { peerIds: [e] }, this.socket.sendMessage(le.kick, i0.toBinary(a));
            case 2:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "kickAll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              this.socket.sendMessage(le.kickAll);
            case 1:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getWaitingRoomRequests", value: function() {
    this.socket.sendMessage(le.getWaitingRoomRequests);
  } }, { key: "acceptWaitingRoomRequest", value: function(r) {
    var t = { userIds: r };
    this.socket.sendMessage(le.acceptWaitingRoomRequests, u0.toBinary(t));
  } }, { key: "rejectWaitingRoomRequest", value: function(r) {
    var t = { userIds: r };
    this.socket.sendMessage(le.denyWaitingRoomRequests, l0.toBinary(t));
  } }, { key: "handleSocketEvents", value: function() {
    this.socket.on(le.broadcastMessage, function(r) {
      var t = r.payload;
      try {
        var e = hp.fromBinary(t);
        $.emit(M.ROOM_MESSAGE, { payload: JSON.parse(new TextDecoder().decode(e.payload)), type: e.type, timestamp: e.timestamp });
      } catch (a) {
        P.error("failed to decode broadcast message:", a);
      }
    });
  } }, { key: "on", value: function(r, t) {
    var e, a;
    switch (r) {
      case le.joinRoom:
      case le.leaveRoom:
      case le.kick:
      case le.kickAll: {
        e = hs.fromBinary.bind(hs), a = hs.create();
        break;
      }
      case le.getWaitingRoomRequests: {
        e = function(i, s) {
          return i ? vp.fromBinary(i, s) : { requests: [] };
        }, a = vp.create();
        break;
      }
      case le.recordingPaused:
      case le.recordingStarted:
      case le.recordingStopped: {
        e = Sp.fromBinary.bind(Sp);
        break;
      }
    }
    this.socket.on(r, function(n) {
      var i = n.payload, s = a;
      if (!e)
        return t(void 0);
      try {
        s = e(i);
      } catch (u) {
        P.error("roomSocketHandler::on::binary_decode_error", { error: u });
      }
      return t(s);
    });
  } }], [{ key: "create", value: function(r) {
    return ws || (ws = new o(r)), ws;
  } }, { key: "cleanup", value: function() {
    try {
      var r;
      (r = ws) === null || r === void 0 || (r = r.socket) === null || r === void 0 || r.disconnect();
    } catch (t) {
      P.error("roomSocketHandler::cleanup");
    }
    ws = void 0;
  } }]), o;
}(), w1 = Object.defineProperty, T1 = Object.getOwnPropertyDescriptor, eo = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? T1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && w1(r, t, a), a;
}, b1 = (cn = /* @__PURE__ */ new K(), Pt = /* @__PURE__ */ new K(), kr = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c, r, t, e) {
    var a, n, i, s;
    I(this, o), z(this, kr, { get: S1, set: void 0 }), R(this, "self", void 0), R(this, "authToken", void 0), R(this, "peerId", void 0), z(this, cn, { writable: !0, value: void 0 }), R(this, "roomNodeSetupInProgress", !1), R(this, "viewType", void 0), z(this, Pt, { writable: !0, value: void 0 }), V(this, cn, c), V(this, Pt, t), this.authToken = (a = (n = Mr()) === null || n === void 0 ? void 0 : n.authToken) !== null && a !== void 0 ? a : c.authToken, this.peerId = (i = (s = Mr()) === null || s === void 0 ? void 0 : s.peerId) !== null && i !== void 0 ? i : c.peerId, this.self = r, this.viewType = e, r.config.viewType !== Rr.Chat && this.setupEvents();
  }
  return D(o, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var r;
      return ((r = f(this, kr)) === null || r === void 0 ? void 0 : r.roomJoined) === !0;
    }
  ) }, { key: "shareMediaTracks", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (!this.self.audioTrack) {
                n.next = 9;
                break;
              }
              return n.prev = 1, n.next = 4, f(this, kr).shareMic(this.self.audioTrack);
            case 4:
              n.next = 9;
              break;
            case 6:
              n.prev = 6, n.t0 = n.catch(1), this.self.disableAudio();
            case 9:
              if (!this.self.videoTrack) {
                n.next = 22;
                break;
              }
              return n.prev = 10, n.next = 13, f(this, kr).shareWebcam(this.self.videoTrack);
            case 13:
              if (e = n.sent, !(e && e.id !== this.self.videoTrack.id && ue.hasFeature(de.EXP_RESHARE))) {
                n.next = 17;
                break;
              }
              return n.next = 17, f(this, kr).shareWebcam(this.self.videoTrack);
            case 17:
              n.next = 22;
              break;
            case 19:
              n.prev = 19, n.t1 = n.catch(10), this.self.disableVideo();
            case 22:
            case "end":
              return n.stop();
          }
      }, t, this, [[1, 6], [10, 19]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "kickHandler",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        var a;
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                a = "kicked", (e == null ? void 0 : e.kickType) === "kickAll" && (a = "ended"), this.leaveRoom(a);
              case 3:
              case "end":
                return i.stop();
            }
        }, t, this);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    /**
    * Waitlist handlers
    */
  }, { key: "waitlistedHandler", value: function(r) {
    P.info("SelController.waitlisted", { source: r }), this.self.waitlistStatus = "waiting", this.self.roomState = "waitlisted", this.self.emit("waitlisted");
  } }, { key: "waitlistAcceptHandler", value: function(r) {
    if (P.info("SelController.waitlistAccepted", { source: r }), this.self.waitlistStatus === "accepted") {
      P.warn("SelfController.WAITLIST_ACCEPTED.UserAlreadyAccepted");
      return;
    }
    this.self.waitlistStatus = "accepted", this.joinRoom();
  } }, { key: "waitlistRejectedHandler", value: function(r) {
    if (P.info("SelfController.waitlistRejected", { source: r }), this.self.waitlistStatus === "rejected") {
      P.warn("SelfController.WAITLIST_REJECTED.UserAlreadyRejected");
      return;
    }
    this.self.waitlistStatus = "rejected", this.leaveRoom("rejected");
  } }, { key: "setupEvents", value: function() {
    var r = this;
    $.on(M.DISABLE_AUDIO, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!r.self.audioEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, r.self.disableAudio();
            case 3:
              se.audioOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.on(M.DISABLE_VIDEO, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!r.self.videoEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, r.self.disableVideo();
            case 3:
              se.videoOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.on(M.MUTE_ALL, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!r.self.audioEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, r.self.disableAudio();
            case 3:
              se.audioOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.on(M.MUTE_ALL_VIDEO, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!r.self.videoEnabled) {
                a.next = 4;
                break;
              }
              return a.next = 3, r.self.disableVideo();
            case 3:
              se.videoOff();
            case 4:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.onAsync(M.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                a != null && (n = a.peer) !== null && n !== void 0 && n.waitlisted && r.waitlistedHandler("socketservice");
              case 1:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.WAITLISTED, function() {
      r.waitlistedHandler("roomnode");
    }), $.on(M.WAITLIST_ACCEPTED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              r.waitlistAcceptHandler("roomnode");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), f(this, Pt).on(le.waitingRoomRequestAccepted, function() {
      r.waitlistAcceptHandler("socketservice");
    }), $.on(M.WAITLIST_REJECTED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              r.waitlistRejectedHandler("roomnode");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), f(this, Pt).on(le.waitingRoomRequestDenied, function() {
      r.waitlistRejectedHandler("socketservice");
    }), $.on(M.KICKED, this.kickHandler.bind(this)), f(this, Pt).on(le.kick, function() {
      r.kickHandler({ kickType: "kick" });
    }), f(this, Pt).on(le.kickAll, function() {
      r.kickHandler({ kickType: "kickAll" });
    }), $.on(M.PRODUCER_SCORE_UPDATE, function(t) {
      var e, a = t.score, n = t.kind, i = t.appData, s = n === "video" && ((e = i == null ? void 0 : i.screenShare) !== null && e !== void 0 ? e : !1);
      r.self.emit("mediaScoreUpdate", { kind: n, isScreenshare: s, score: a });
    }), $.on(M.PRODUCER_STATUS_UPDATE, function(t) {
      var e = t.status;
      r.self.emit("mediaChannelUpdate", { status: e });
    }), $.onAsync(M.JOIN_MEDIA_ROOM, this.setupRoomNode.bind(this)), $.onAsync(M.LEAVE_MEDIA_ROOM, this.leaveMediaRoom.bind(this)), $.on(M.PIP_HANGUP, this.leaveRoom.bind(this));
  } }, { key: "setupRoomNode", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a = this, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (!this.roomNodeSetupInProgress) {
                u.next = 3;
                break;
              }
              return P.warn("SelfController.roomNodeSetupInProgress"), u.abrupt("return");
            case 3:
              if (!((e = f(this, kr)) !== null && e !== void 0 && e.roomJoined)) {
                u.next = 6;
                break;
              }
              return P.warn("SelfController.roomNodeAlreadySetup"), u.abrupt("return");
            case 6:
              if (this.roomNodeSetupInProgress = !0, n = /* @__PURE__ */ function() {
                var l = y(/* @__PURE__ */ d().mark(function p() {
                  var h, v, m, g, w;
                  return d().wrap(function(T) {
                    for (; ; )
                      switch (T.prev = T.next) {
                        case 0:
                          if (h = "", !(f(a, kr) instanceof qe)) {
                            T.next = 10;
                            break;
                          }
                          return T.next = 4, f(a, kr).setupTransports();
                        case 4:
                          return T.next = 6, f(a, kr).getRoomState();
                        case 6:
                          g = T.sent, w = (v = g == null || (m = g.payload) === null || m === void 0 ? void 0 : m.roomState) !== null && v !== void 0 ? v : {}, h = w.roomUUID, Hr().setRoomUUID(h);
                        case 10:
                          return T.next = 12, a.joinMediaRoom(h);
                        case 12:
                          a.roomNodeSetupInProgress = !1, a.self.roomState = "joined", a.self.emit("roomJoined");
                        case 15:
                        case "end":
                          return T.stop();
                      }
                  }, p);
                }));
                return function() {
                  return l.apply(this, arguments);
                };
              }(), i = Le.roomNodeOptions, !i.useHiveMedia) {
                u.next = 14;
                break;
              }
              return u.next = 12, $v(Q(Q({}, i), {}, { roomName: i.roomName, peerId: i.peerId, socket: f(this, cn) }));
            case 12:
              u.next = 16;
              break;
            case 14:
              return u.next = 16, Lv(Q(Q({}, i), {}, { roomName: i.roomName, peerId: i.peerId, viewType: this.viewType }));
            case 16:
              f(this, kr).mediaConnected || f(this, cn).isConnected && this.self.permissions.mediaRoomType === "HIVE" ? n() : $.once(M.ROOM_NODE_CONNECTED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function l() {
                return d().wrap(function(h) {
                  for (; ; )
                    switch (h.prev = h.next) {
                      case 0:
                        n();
                      case 1:
                      case "end":
                        return h.stop();
                    }
                }, l);
              })));
            case 17:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e = this, a, n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (h.prev = 0, a = Hr(), n = "", !(f(this, kr) instanceof qe)) {
                h.next = 12;
                break;
              }
              return h.next = 6, f(this, kr).getRoomState();
            case 6:
              u = h.sent, l = (i = u == null || (s = u.payload) === null || s === void 0 ? void 0 : s.roomState) !== null && i !== void 0 ? i : {}, n = l.roomUUID, a.setRoomUUID(n), h.next = 13;
              break;
            case 12:
              a.setRoomUUID(Le.meetingId);
            case 13:
              if (!Rv(this.self.config.viewType, f(this, cn).capabilities)) {
                h.next = 18;
                break;
              }
              return h.next = 16, f(this, Pt).joinRoom(this.self.name, this.self.id, this.self.userId, n);
            case 16:
              f(this, Pt).socket.flush(), f(this, Pt).onReconnect = /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function v() {
                return d().wrap(function(g) {
                  for (; ; )
                    switch (g.prev = g.next) {
                      case 0:
                        return g.next = 2, f(e, Pt).joinRoom(e.self.name, e.self.id, e.self.userId, n);
                      case 2:
                        f(e, Pt).socket.flush();
                      case 3:
                      case "end":
                        return g.stop();
                    }
                }, v);
              }));
            case 18:
              if (!Jv(this.self.config)) {
                h.next = 23;
                break;
              }
              return h.next = 21, this.joinMediaRoom(n);
            case 21:
              this.self.roomState = "joined", this.self.emit("roomJoined");
            case 23:
              h.next = 29;
              break;
            case 25:
              throw h.prev = 25, h.t0 = h.catch(0), P.error("Error in joinRoom", { error: h.t0 }), h.t0;
            case 29:
            case "end":
              return h.stop();
          }
      }, t, this, [[0, 25]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i = arguments;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return e = i.length > 0 && i[0] !== void 0 ? i[0] : "left", a = this.roomJoined, u.next = 4, this.leaveMediaRoom();
            case 4:
              try {
                (n = f(this, cn)) === null || n === void 0 || n.disconnect();
              } catch (l) {
                P.error("SelfController::leaveRoom::socketDisconnect");
              }
              if (this.self.roomState = e, Uv(), Jc.cleanup(), !(e !== "rejected" && this.self.config.viewType !== "LIVESTREAM" && !a)) {
                u.next = 10;
                break;
              }
              return u.abrupt("return");
            case 10:
              this.self.emit("roomLeft", { state: e });
            case 11:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "joinMediaRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (!((a = f(this, kr)) !== null && a !== void 0 && a.isDisconnected && f(this, kr) instanceof qe)) {
                h.next = 3;
                break;
              }
              return (s = f(this, kr)) === null || s === void 0 || s.reconnect(), h.abrupt("return");
            case 3:
              if (!(f(this, kr) instanceof Ce && this.self.waitlistStatus === "waiting")) {
                h.next = 5;
                break;
              }
              return h.abrupt("return");
            case 5:
              return h.next = 7, (i = f(this, kr)) === null || i === void 0 ? void 0 : i.joinRoom(this.self.name, !this.self.audioEnabled, e, void 0, { audio: this.self.audioEnabled, video: this.self.videoEnabled, screen: this.self.screenShareEnabled });
            case 7:
              if (h.t1 = n = h.sent, h.t0 = h.t1 !== null, !h.t0) {
                h.next = 11;
                break;
              }
              h.t0 = n !== void 0;
            case 11:
              if (!h.t0) {
                h.next = 15;
                break;
              }
              h.t2 = n, h.next = 16;
              break;
            case 15:
              h.t2 = {};
            case 16:
              if (u = h.t2, l = u.roomJoined, f(this, kr) instanceof Ce && (f(this, kr).onSocketReconnection = this.joinMediaRoom.bind(this, e)), !l) {
                h.next = 22;
                break;
              }
              return h.next = 22, this.shareMediaTracks();
            case 22:
            case "end":
              return h.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveMediaRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, this.cleanupSelf();
            case 2:
              if (f(this, kr)) {
                a.next = 4;
                break;
              }
              return a.abrupt("return");
            case 4:
              if (!this.roomJoined) {
                a.next = 8;
                break;
              }
              return a.next = 7, f(this, kr).leaveRoom();
            case 7:
              f(this, kr).roomJoined = !1;
            case 8:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "cleanupSelf", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, this.self.disableAudio();
            case 2:
              return a.next = 4, this.self.disableVideo();
            case 4:
              return a.next = 6, this.self.disableScreenShare();
            case 6:
              this.self.cleanUpTracks(), this.self.destructMediaHandler(), this.self.removeDocumentEventListeners();
            case 9:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i, s, u) {
      var l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              return h = Hr(), v = Le.isV2AuthToken, k.next = 4, br.__init__((l = (p = Mr()) === null || p === void 0 ? void 0 : p.peerId) !== null && l !== void 0 ? l : e.peerId, Le.isV2AuthToken ? n.participant : n, i, s, u);
            case 4:
              return m = k.sent, g = v ? n.participant.organizationId : n.organizationId, A.meetingMetadata.organizationId = g, ue.hasFeature(de.INTERNAL_CALL_STATS) && navigator.product !== "ReactNative" && (ue.getValue(de.CALLSTATS_INGESTION_LAYER), setTimeout(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function T() {
                var _, E;
                return d().wrap(function(C) {
                  for (; ; )
                    switch (C.prev = C.next) {
                      case 0:
                        return C.t0 = se, C.t1 = (_ = (E = Mr()) === null || E === void 0 ? void 0 : E.peerId) !== null && _ !== void 0 ? _ : e.peerId, C.t2 = ze.getDeviceInfo().engineName, C.t3 = fe.env, C.next = 6, h.getICEServers();
                      case 6:
                        C.t4 = C.sent, C.t5 = fe.apiBase, C.t6 = ue.getAllFlags(), C.t7 = P, C.t8 = Pv(), C.t9 = { peerId: C.t1, engineName: C.t2, env: C.t3, iceServers: C.t4, apiBase: C.t5, flags: C.t6, logger: C.t7, apiHostnames: C.t8 }, C.t0.initialize.call(C.t0, C.t9);
                      case 13:
                      case "end":
                        return C.stop();
                    }
                }, T);
              })))), k.abrupt("return", new o(e, m, a, s.viewType));
            case 9:
            case "end":
              return k.stop();
          }
      }, t);
    }));
    function r(t, e, a, n, i, s) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}());
function S1() {
  return Mr();
}
var Hi = b1;
eo([A.trace("SelfController.setupEvents")], Hi.prototype, "setupEvents", 1);
eo([A.trace("SelfController.joinRoom")], Hi.prototype, "joinRoom", 1);
eo([A.trace("SelfController.leaveRoom")], Hi.prototype, "leaveRoom", 1);
eo([A.trace("SelfController.joinMediaRoom")], Hi.prototype, "joinMediaRoom", 1);
eo([A.trace("SelfController.leaveMediaRoom")], Hi.prototype, "leaveMediaRoom", 1);
var E1 = Object.defineProperty, _1 = Object.getOwnPropertyDescriptor, an = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? _1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && E1(r, t, a), a;
}, St = (Yi = /* @__PURE__ */ new K(), Qn = /* @__PURE__ */ new K(), Va = /* @__PURE__ */ new K(), Yn = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    I(this, r), a = c.call(this), z(b(a), Va, { get: R1, set: void 0 }), R(b(a), "id", void 0), R(b(a), "userId", void 0), R(b(a), "name", void 0), R(b(a), "picture", void 0), R(b(a), "isHost", void 0), R(b(a), "clientSpecificId", void 0), R(b(a), "flags", void 0), R(b(a), "device", void 0), R(b(a), "videoTrack", void 0), R(b(a), "audioTrack", void 0), R(b(a), "screenShareTracks", void 0), R(b(a), "videoEnabled", void 0), R(b(a), "audioEnabled", void 0), R(b(a), "screenShareEnabled", void 0), R(b(a), "producers", void 0), z(b(a), Yi, { writable: !0, value: void 0 }), R(b(a), "supportsRemoteControl", !1), z(b(a), Qn, { writable: !0, value: void 0 }), R(b(a), "presetName", void 0), z(b(a), Yn, { writable: !0, value: void 0 });
    var n = t.id, i = t.userId, s = t.displayName, u = t.device, l = t.picture, p = t.isHost, h = t.flags, v = t.clientSpecificId, m = t.stageStatus, g = t.customParticipantId, w = t.audioMuted, k = t.audioTrack, T = t.videoEnabled, _ = T === void 0 ? !1 : T, E = t.videoTrack, S = t.producers, C = t.metadata;
    return a.id = n, a.userId = i, a.name = s, a.device = u, a.picture = l, a.isHost = p, a.flags = h, V(b(a), Qn, m != null ? m : Tr.ON_STAGE), a.clientSpecificId = g != null ? g : v, a.audioEnabled = !w, a.audioTrack = k, a.videoEnabled = _, a.videoTrack = E, a.screenShareTracks = { audio: void 0, video: void 0 }, a.producers = S != null ? S : [], a.presetName = C == null ? void 0 : C.preset_name, V(b(a), Yi, !1), V(b(a), Yn, e), a.setupEvents(), a;
  }
  return D(r, [{
    key: "webinarStageStatus",
    get: (
      /**
      * @deprecated
      * Denotes the participants's current stage status.
      * Use `participant.stageStatus` instead.
      *  */
      function() {
        return f(this, Qn);
      }
    )
    /** Denotes the participants's current stage status. */
  }, {
    key: "stageStatus",
    get: function() {
      return f(this, Qn);
    }
    /**
    * Returns true if the local participant has joined the meeting.
    */
  }, { key: "roomJoined", get: function() {
    var e;
    return ((e = f(this, Va)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
  } }, { key: "setVideoEnabled", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.videoEnabled = e, a && (P.info("DyteParticipant::setVideoEnabled::videoUpdate", Q({}, Cn(this))), this.emit("videoUpdate", { videoEnabled: this.videoEnabled, videoTrack: this.videoTrack }));
  } }, { key: "setAudioEnabled", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.audioEnabled = e, a && (P.info("DyteParticipant::setAudioEnabled::audioUpdate", Q({}, Cn(this))), this.emit("audioUpdate", { audioEnabled: this.audioEnabled, audioTrack: this.audioTrack }));
  } }, { key: "setScreenShareEnabled", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    this.screenShareEnabled = e, a && this.emit("screenShareUpdate", { screenShareEnabled: this.screenShareEnabled, screenShareTracks: this.screenShareTracks });
  } }, {
    key: "setupEvents",
    value: function() {
      var e = this;
      $.onAsync(M.UPDATE_PEER_STAGE_STATUS, /* @__PURE__ */ function() {
        var a = y(/* @__PURE__ */ d().mark(function n(i) {
          var s, u;
          return d().wrap(function(p) {
            for (; ; )
              switch (p.prev = p.next) {
                case 0:
                  if (s = i.id, u = i.status, s === e.id) {
                    p.next = 3;
                    break;
                  }
                  return p.abrupt("return");
                case 3:
                  if (u !== e.stageStatus) {
                    p.next = 5;
                    break;
                  }
                  return p.abrupt("return");
                case 5:
                  e.setStageStatus(u);
                case 6:
                case "end":
                  return p.stop();
              }
          }, n);
        }));
        return function(n) {
          return a.apply(this, arguments);
        };
      }());
    }
    /**
    * Returns `participant.id` if user has permission
    * to pin participants.
    */
  }, {
    key: "pin",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.roomJoined) {
                  i.next = 2;
                  break;
                }
                throw new q("Can`t pin participant without joining room");
              case 2:
                return i.abrupt("return", f(this, Va).pinPeer(this.id));
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns `participant.id` if user has permission
    * to unpin participants.
    */
  }, {
    key: "unpin",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (this.roomJoined) {
                  i.next = 2;
                  break;
                }
                throw new q("Can`t unpin participant without joining room");
              case 2:
                return i.abrupt("return", f(this, Va).pinPeer(null));
              case 3:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * @access private
    * Not for external use
    */
  }, { key: "setIsPinned", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    V(this, Yi, e);
    var n = e ? "pinned" : "unpinned";
    a && this.emit(n, this);
  } }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.id, P.info("DyteParticipant::disable_audio", { dyteParticipant: { id: n } }), this.roomJoined) {
                s.next = 4;
                break;
              }
              throw new q("Can`t disable participant audio without joining room");
            case 4:
              if (!f(this, Yn).permissions.canDisableParticipantAudio) {
                s.next = 6;
                break;
              }
              return s.abrupt("return", f(this, Va).disableAudio(n));
            case 6:
              throw P.error("DyteParticipant::unauthorized_disable_audio", { dyteParticipant: { id: n } }), new q("Unauthorized: User does not have permission to disable participant audio.");
            case 8:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.id, P.info("DyteParticipant::kick", { dyteParticipant: { id: n } }), this.roomJoined) {
                s.next = 4;
                break;
              }
              throw new q("Can`t kick participant without joining room");
            case 4:
              if (!f(this, Yn).permissions.kickParticipant) {
                s.next = 6;
                break;
              }
              return s.abrupt("return", f(this, Va).kick(n));
            case 6:
              throw P.error("DyteParticipant::unauthorized_kick", { dyteParticipant: { id: n } }), new q("Unauthorized: User does not have permission to kick participants.");
            case 8:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = this.id, P.info("DyteParticipant::disable_video", { dyteParticipant: { id: n } }), this.roomJoined) {
                s.next = 4;
                break;
              }
              throw new q("Can`t disable participant video without joining room");
            case 4:
              if (!f(this, Yn).permissions.canDisableParticipantVideo) {
                s.next = 6;
                break;
              }
              return s.abrupt("return", f(this, Va).disableVideo(n));
            case 6:
              throw P.error("DyteParticipant::unauthorized_disable_video", { dyteParticipant: { id: n } }), new q("Unauthorized: User does not have permission to disable participant video.");
            case 8:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "acceptJoinStageRequest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.ACCEPT_JOIN_STAGE_REQUEST, { userId: this.userId });
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "rejectRequestToJoinStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.REJECT_REQUEST_TO_JOIN_STAGE, { userId: this.userId });
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "removeFromStage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              $.emitAsync(M.REMOVE_FROM_STAGE, { userId: this.userId });
            case 1:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "setStageStatus",
    value: function(e) {
      V(this, Qn, e);
      var a;
      e === Tr.OFF_STAGE && (a = "peerStoppedPresenting"), e === Tr.ON_STAGE && (a = "peerStartedPresenting"), e === Tr.ACCEPTED_TO_JOIN_STAGE && (a = "peerAcceptedToJoinStage"), e === Tr.REQUESTED_TO_JOIN_STAGE && (a = "peerRequestToJoinStage"), a && this.emit(a, this), this.emit("stageStatusUpdate", this);
    }
    /** @deprecated */
  }, {
    key: "setWebinarStageStatus",
    value: function(e) {
      this.setStageStatus(e);
    }
    /**
    * Returns true if the participant is pinned.
    */
  }, { key: "isPinned", get: function() {
    return f(this, Yi);
  } }]), r;
}(fr));
function R1() {
  return Mr();
}
an([A.trace("DyteParticipant.disableAudio")], St.prototype, "disableAudio", 1);
an([A.trace("DyteParticipant.kick")], St.prototype, "kick", 1);
an([A.trace("DyteParticipant.disableVideo")], St.prototype, "disableVideo", 1);
an([A.trace("DyteParticipant.acceptJoinStageRequest")], St.prototype, "acceptJoinStageRequest", 1);
an([A.trace("DyteParticipant.rejectRequestToJoinStage")], St.prototype, "rejectRequestToJoinStage", 1);
an([A.trace("DyteParticipant.removeFromStage")], St.prototype, "removeFromStage", 1);
an([A.trace("DyteParticipant.setStageStatus")], St.prototype, "setStageStatus", 1);
St = an([jr(function(o) {
  throw new q(o.message, "1200");
})], St);
var Vr = /* @__PURE__ */ new K(), Ts = /* @__PURE__ */ new K(), Ol = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    I(this, r);
    var a = t != null ? t : {}, n = a.onAddEvent, i = n === void 0 ? "added" : n, s = a.onDeleteEvent, u = s === void 0 ? "deleted" : s, l = a.onClearEvent, p = l === void 0 ? "cleared" : l;
    return e = c.call(this), z(b(e), Vr, { writable: !0, value: void 0 }), z(b(e), Ts, { writable: !0, value: void 0 }), R(b(e), "onAddEvent", void 0), R(b(e), "onDeleteEvent", void 0), R(b(e), "onClearEvent", void 0), V(b(e), Vr, new fr()), e.onAddEvent = i, e.onDeleteEvent = u, e.onClearEvent = p, V(b(e), Ts, /* @__PURE__ */ new Map()), e;
  }
  return D(r, [{ key: "emit", value: function(e) {
    for (var a, n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), s = 1; s < n; s++)
      i[s - 1] = arguments[s];
    return (a = f(this, Vr)).emit.apply(a, [e].concat(i));
  } }, { key: "on", value: function(e, a) {
    return f(this, Vr).on(e, a);
  } }, { key: "addListener", value: function(e, a) {
    return f(this, Vr).addListener(e, a);
  } }, { key: "off", value: function(e, a) {
    return f(this, Vr).off(e, a);
  } }, { key: "once", value: function(e, a) {
    return f(this, Vr).once(e, a);
  } }, { key: "prependListener", value: function(e, a) {
    return f(this, Vr).prependListener(e, a);
  } }, { key: "prependOnceListener", value: function(e, a) {
    return f(this, Vr).prependOnceListener(e, a);
  } }, { key: "removeListener", value: function(e, a) {
    return f(this, Vr).removeListener(e, a);
  } }, { key: "removeAllListeners", value: function(e) {
    return f(this, Vr).removeAllListeners(e);
  } }, { key: "listeners", value: function(e) {
    return f(this, Vr).listeners(e);
  } }, { key: "listenerCount", value: function(e) {
    return f(this, Vr).listenerCount(e);
  } }, { key: "getMaxListeners", value: function() {
    return f(this, Vr).getMaxListeners();
  } }, { key: "setMaxListeners", value: function(e) {
    return f(this, Vr).setMaxListeners(e);
  } }, { key: "eventNames", value: function() {
    return f(this, Vr).eventNames();
  } }, { key: "add", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return this.set(e.id, e, a);
  } }, { key: "set", value: function(e, a) {
    var n = this, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, s = Oe(Pe(r.prototype), "set", this).call(this, e, a), u = function(p) {
      for (var h = arguments.length, v = new Array(h > 1 ? h - 1 : 0), m = 1; m < h; m++)
        v[m - 1] = arguments[m];
      n.emit.apply(n, [p, a].concat(v));
    };
    return f(this, Ts).set(e, u), a.on("*", u), i && f(this, Vr).emit(this.onAddEvent, a), s;
  } }, { key: "delete", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, i = this.get(e);
    if (!i)
      return !1;
    i.removeListener("*", f(this, Ts).get(e));
    var s = Oe(Pe(r.prototype), "delete", this).call(this, e);
    return n && i.removeAllListeners(), a && f(this, Vr).emit(this.onDeleteEvent, i), s;
  } }, { key: "clear", value: function() {
    var e = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    this.forEach(function(s) {
      s.removeListener("*", f(e, Ts).get(s.id)), n && s.removeAllListeners();
    });
    var i = Oe(Pe(r.prototype), "clear", this).call(this);
    return a && f(this, Vr).emit(this.onClearEvent), i;
  } }, { key: "toArray", value: function() {
    return Array.from(this.values());
  } }]), r;
}(/* @__PURE__ */ Bt(Map)), bo = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    I(this, r);
    var e = t != null ? t : {}, a = e.onAddEvent, n = a === void 0 ? "participantJoined" : a, i = e.onDeleteEvent, s = i === void 0 ? "participantLeft" : i, u = e.onClearEvent, l = u === void 0 ? "participantsCleared" : u;
    return c.call(this, { onAddEvent: n, onDeleteEvent: s, onClearEvent: l });
  }
  return D(r, [{ key: "add", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return Oe(Pe(r.prototype), "add", this).call(this, e, a);
  } }, { key: "clear", value: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0, a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    return Oe(Pe(r.prototype), "clear", this).call(this, e, a);
  } }, { key: "delete", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return Oe(Pe(r.prototype), "delete", this).call(this, e, a, n);
  } }]), r;
}(Ol);
rh = Symbol.iterator;
var P1 = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "_orderedArray", void 0), R(this, "_map", void 0), this._map = /* @__PURE__ */ new Map(), this._orderedArray = [];
  }
  return D(o, [{ key: "add", value: function(r, t) {
    if (!this._map.has(r)) {
      this._map.set(r, { peerId: r, priority: t }), this._orderedArray.splice(Math.max(t - 1, 0), 0, r);
      var e = this.index(r);
      return e;
    }
    var a = this.index(r);
    this.delete(r);
    var n = this.add(r, t);
    return a !== n ? (P.info("DyteSelectedPeer::add()::new_position_for_active_speaker", { selectedPeer: { oldIndex: a, newIndex: n } }), n) : -1;
  } }, { key: "delete", value: function(r) {
    if (this._map.has(r)) {
      var t = this.index(r);
      this._map.delete(r), this._orderedArray.splice(t, 1);
    }
  } }, { key: "index", value: function(r) {
    return this._map.has(r) ? this._orderedArray.indexOf(r) : -1;
  } }, { key: rh, value: function() {
    return this._orderedArray[Symbol.iterator]();
  } }]), o;
}(), C1 = /* @__PURE__ */ function() {
  function o() {
    I(this, o), R(this, "_activeSpeakerPeers", void 0), R(this, "_compulsoryPeers", void 0), this._activeSpeakerPeers = new P1(), this._compulsoryPeers = /* @__PURE__ */ new Set();
  }
  return D(o, [{ key: "add", value: function(r, t) {
    if (t < 0)
      return this._compulsoryPeers.add(r), 0;
    if (this.compulsoryPeers.includes(r) && (t > 0 || t === 246267631)) {
      if (P.info("DyteSelectedPeer::removing_compulsory_peer", { selectedPeer: { peerId: r } }), this._removeFromCompulsoryPeer(r), t === 246267631)
        return -1;
    } else if (t === 229490415)
      return this.delete(r), -1;
    return this._activeSpeakerPeers.add(r, t);
  } }, { key: "delete", value: function(r) {
    P.info("DyteSelectedPeer::deleting_peer_from_selectedPeer", { selectedPeer: { peerId: r } }), this._removeFromCompulsoryPeer(r), this._activeSpeakerPeers.delete(r);
  } }, { key: "index", value: function(r) {
    return this._activeSpeakerPeers.index(r);
  } }, { key: "peers", get: function() {
    return Array.from(new Set(this.compulsoryPeers.concat(this.activeSpeakerPeers)));
  } }, { key: "compulsoryPeers", get: function() {
    return Array.from(this._compulsoryPeers.values());
  } }, { key: "peerPriorities", get: function() {
    return Array.from(this._activeSpeakerPeers).map(function(r, t) {
      return t;
    });
  } }, { key: "activeSpeakerPeers", get: function() {
    return Array.from(this._activeSpeakerPeers);
  } }, { key: "_removeFromCompulsoryPeer", value: function(r) {
    this._compulsoryPeers.delete(r);
  } }]), o;
}(), di = /* @__PURE__ */ new K(), I1 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), z(b(t), di, { writable: !0, value: void 0 }), V(b(t), di, /* @__PURE__ */ new Map()), t;
  }
  return D(r, [{
    key: "__set",
    value: function(e, a) {
      return f(this, di).set(e, a);
    }
    /**
    * @private
    */
  }, { key: "__clear", value: function() {
    return f(this, di).clear();
  } }, { key: "get", value: function(e) {
    return f(this, di).get(e);
  } }, { key: "toArray", value: function() {
    return Array.from(f(this, di).values());
  } }]), r;
}(fr), D1 = { setup_screen: { is_enabled: !1 }, alone_here: { is_enabled: !1 }, waiting_room: { is_enabled: !1, enable_preview: !0 }, control_bar: { is_enabled: !0, elements: { plugins: !0, screenshare: !0, invite: !1, participants: !0, chat: !0, reactions: !1, polls: !0, fullscreen: !0, layout: !0 } }, header: { is_enabled: !0, elements: { logo: "", timer: !0, title: !0, participant_count: !0, change_layout: !0 } }, pip_mode: !0, auto_tune: !0, grid: { multi: { max_video_count: 9, video_fit: "cover" }, single: { max_video_count: 6, video_fit: "cover" }, default_view: "MULTI" }, colors: { primary: "#2160FD", secondary: "#1A1A1A", text: "#EEEEEE", background: "#1A1A1A", text_primary: "#EEEEEE", video_background: "#1A1A1A" }, controls: { pip_toggle: !1 }, plugins: [] }, A1 = Dt(D1), tt = /* @__PURE__ */ new K(), So = /* @__PURE__ */ new K(), Eo = /* @__PURE__ */ new K(), nc = /* @__PURE__ */ new K(), ic = /* @__PURE__ */ new K(), Kc = /* @__PURE__ */ function() {
  function o(c) {
    if (I(this, o), z(this, tt, { writable: !0, value: void 0 }), z(this, So, { writable: !0, value: void 0 }), z(this, Eo, { writable: !0, value: void 0 }), z(this, nc, { writable: !0, value: void 0 }), z(this, ic, { writable: !0, value: [] }), !c)
      throw new q("Could not load preset theme.");
    V(this, tt, c), V(this, So, 1), V(this, Eo, Rr.GroupCall);
  }
  return D(o, [{ key: "configFromPermissions", value: function(r) {
    var t, e, a, n, i, s, u, l;
    V(this, So, r.maxScreenshareCount || 1), V(this, Eo, r.viewType), V(this, nc, { video: { quality: (t = r == null || (e = r.produce) === null || e === void 0 || (e = e.video) === null || e === void 0 ? void 0 : e.quality) !== null && t !== void 0 ? t : dt.video.quality, frameRate: (a = r == null || (n = r.produce) === null || n === void 0 || (n = n.video) === null || n === void 0 ? void 0 : n.frameRate) !== null && a !== void 0 ? a : dt.video.frameRate }, screenshare: { quality: (i = r == null || (s = r.produce) === null || s === void 0 || (s = s.screenshare) === null || s === void 0 ? void 0 : s.quality) !== null && i !== void 0 ? i : dt.screenshare.quality, frameRate: (u = r == null || (l = r.produce) === null || l === void 0 || (l = l.screenshare) === null || l === void 0 ? void 0 : l.frameRate) !== null && u !== void 0 ? u : dt.screenshare.frameRate } });
  } }, {
    key: "setDisabledPlugins",
    value: function(r) {
      var t = f(this, tt).plugins;
      t && t.length > 0 && V(this, ic, r.filter(function(e) {
        return !t.includes(e);
      }));
    }
    /**
    * @deprecated
    * The `setupScreen` represents the setup screen for the meeting.
    */
  }, {
    key: "setupScreen",
    get: function() {
      return f(this, tt).setupScreen;
    }
    /**
    * The `aloneHere` contains the properties to show a layout when
    * the participant is alone in the meeting.
    */
  }, {
    key: "aloneHere",
    get: function() {
      return f(this, tt).aloneHere;
    }
    /**
    * The `waitingRoom` contains the properties to show a layout when
    * the participant is in waiting to join the meeting.
    */
  }, {
    key: "waitingRoom",
    get: function() {
      return f(this, tt).waitingRoom;
    }
    /**
    * @deprecated
    * The `controlBar` contains the properties to show the meeting control bar with
    * various action buttons for the meeting.
    * The `elements` key contains the various action buttons.
    */
  }, {
    key: "controlBar",
    get: function() {
      return f(this, tt).controlBar;
    }
    /**
    * The `header` contains the properties to show the meeting header with various elements.
    * The `elements` key contains the following properties
    * `logo` - string value representing the public URL for the logo
    * `timer` - boolean value suggesting if the timer should be shown
    * `title` - boolean value suggesting if the meeting title should be shown
    * `participantCount` - boolean value suggesting if the participant count shuld be shown
    * `changeLayout` - boolean value suggesting if the participant can change layout
    */
  }, {
    key: "header",
    get: function() {
      return f(this, tt).header;
    }
    /**
    * The `pipMode` property returns a boolean value
    * If true, picture-in-picture mode is enabled for the participant.
    */
  }, {
    key: "pipMode",
    get: function() {
      var r;
      return ((r = f(this, tt).controls) === null || r === void 0 ? void 0 : r.pipToggle) || f(this, tt).pipMode;
    }
    /**
    * The `viewType` tells the type of the meeting
    * possible values are: GROUP_CALL| LIVESTREAM | CHAT | AUDIO_ROOM
    */
  }, {
    key: "viewType",
    get: function() {
      return f(this, Eo);
    }
    /**
    * @deprecated
    * The `autoTune` property returns a boolean value
    * If true, force the participant's video to be in compatibility mode.
    */
  }, {
    key: "autoTune",
    get: function() {
      return f(this, tt).autoTune;
    }
    /**
    * The `grid` contains the properties to show participant grid for the meeting.
    * `defaultView` key points to the view type, possible values are `MULTI`, `SINGLE`
    * `multi` and `single` keys contain the following preferences to show grid layout.
    * `maxVideoCount` - number of participants to show in the grid.
    * `videoFit` - string value suggesting how to align the video content.
    */
  }, {
    key: "grid",
    get: function() {
      return f(this, tt).grid;
    }
    /**
    * The `maxVideoStreams` contains the maximum video
    * streams for mobile and desktop
    */
  }, {
    key: "maxVideoStreams",
    get: function() {
      return { mobile: this.grid.multi.maxVideoCount > 6 ? 6 : this.grid.multi.maxVideoCount, desktop: this.grid.multi.maxVideoCount };
    }
    /**
    * The `maxScreenShareCount` contains the maximum
    * possible concurrent screen shares
    */
  }, { key: "maxScreenShareCount", get: function() {
    return f(this, So);
  } }, { key: "colors", get: function() {
    return f(this, tt).colors;
  } }, { key: "controls", get: function() {
    return f(this, tt).controls;
  } }, {
    key: "plugins",
    get: function() {
      return f(this, tt).plugins;
    }
    /**
    * The `disabledPlugins` property returns id of all disabled plugins
    */
  }, { key: "disabledPlugins", get: function() {
    return f(this, ic);
  } }, {
    key: "mediaConstraints",
    get: function() {
      return f(this, nc);
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "isV2", get: function() {
    return !1;
  } }], [{ key: "fromResponse", value: function(r) {
    return new o(r);
  } }, { key: "default", value: function() {
    return new o(A1);
  } }]), o;
}();
function M1(o) {
  var c = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2, r = o.replace(/[^\u00BF-\u1FFF\u2C00-\uD7FF\w\s]/g, ""), t = r.trim().split(/\s+/).slice(0, c);
  return t.map(function(e) {
    return e.charAt(0);
  }).join("").toUpperCase();
}
var Fp = 1080, Vp = 1920, O1 = function(c, r, t, e, a, n) {
  var i = 0.5, s = 0.5, u = a, l = n, p = Math.min(t / u, e / l), h = u * p, v = l * p, m, g, w, k, T = 1;
  return h < t && (T = t / h), Math.abs(T - 1) < 1e-14 && v < e && (T = e / v), h *= T, v *= T, w = u / (h / t), k = l / (v / e), m = (u - w) * i, g = (l - k) * s, m < 0 && (m = 0), g < 0 && (g = 0), w > u && (w = u), k > l && (k = l), [m, g, w, k, c, r, t, e];
}, ga = /* @__PURE__ */ new K(), pi = /* @__PURE__ */ new K(), Sr = /* @__PURE__ */ new K(), Ja = /* @__PURE__ */ new K(), kn = /* @__PURE__ */ new K(), ta = /* @__PURE__ */ new K(), Er = /* @__PURE__ */ new K(), N1 = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    if (I(this, r), e = c.call(this), z(b(e), ga, { writable: !0, value: void 0 }), z(b(e), pi, { writable: !0, value: void 0 }), z(b(e), Sr, { writable: !0, value: { height: Fp, width: Vp } }), z(b(e), Ja, { writable: !0, value: { brand: "#2160FD", background: "#141414", videoBackground: "#191919", textOnBrand: "#EEEEEE" } }), z(b(e), kn, { writable: !0, value: void 0 }), z(b(e), ta, { writable: !0, value: {} }), z(b(e), Er, { writable: !0, value: void 0 }), R(b(e), "cleanupEventListeners", function() {
      f(b(e), Er).removeListener("stageJoined", e.enablePipMediaControls), f(b(e), Er).removeListener("stageLeft", e.unmountEvents), f(b(e), Er).removeListener("videoUpdate", e.onSelfVideoUpdateListener), f(b(e), Er).removeListener("audioUpdate", e.onSelfAudioUpdateListener), f(b(e), Er).removeListener("roomLeft", e.disable);
    }), R(b(e), "enablePipMediaControls", function() {
      e.mountAudioEvents(), e.mountVideoEvents();
    }), R(b(e), "onSelfVideoUpdateListener", function(m) {
      var g = m.videoEnabled;
      e.updateMediaSession("CAMERA", g);
    }), R(b(e), "onSelfAudioUpdateListener", function(m) {
      var g = m.audioEnabled;
      e.updateMediaSession("MIC", g);
    }), R(b(e), "eventCallback", function(m) {
      m === "CAMERA" && (f(b(e), Er).videoEnabled ? f(b(e), Er).disableVideo() : f(b(e), Er).enableVideo(), e.emit("cameraToggled")), m === "MIC" && (f(b(e), Er).audioEnabled ? f(b(e), Er).disableAudio() : f(b(e), Er).enableAudio(), e.emit("micToggled")), m === "END" && ($.emit(M.PIP_HANGUP), e.cleanupEventListeners(), e.emit("hangup"), e.cleanup());
    }), R(b(e), "unmountEvents", function() {
      navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || (navigator.mediaSession.setActionHandler("togglemicrophone", void 0), navigator.mediaSession.setActionHandler("togglecamera", void 0));
    }), R(b(e), "animate", function() {
      f(b(e), ta) !== void 0 && e.paintCanvas(), f(b(e), kn) !== void 0 && V(b(e), kn, requestAnimationFrame(function() {
        return e.animate();
      }));
    }), R(b(e), "disable", function() {
      e.cleanupEventListeners(), cancelAnimationFrame(f(b(e), kn)), V(b(e), kn, void 0), document.exitPictureInPicture();
    }), V(b(e), Er, t), t.config.isV2 === !0)
      V(b(e), Ja, { brand: t.config.designTokens.colors.brand[500], background: t.config.designTokens.colors.background[1e3], videoBackground: t.config.designTokens.colors.videoBg, textOnBrand: t.config.designTokens.colors.textOnBrand });
    else if (t.config.isV2 === !1) {
      var a, n, i, s, u, l, p, h, v = Kc.default();
      V(b(e), Ja, { brand: (a = (n = t.config.colors) === null || n === void 0 ? void 0 : n.primary) !== null && a !== void 0 ? a : v.colors.primary, background: (i = (s = t.config.colors) === null || s === void 0 ? void 0 : s.background) !== null && i !== void 0 ? i : v.colors.background, videoBackground: (u = (l = t.config.colors) === null || l === void 0 ? void 0 : l.videoBackground) !== null && u !== void 0 ? u : v.colors.videoBackground, textOnBrand: (p = (h = t.config.colors) === null || h === void 0 ? void 0 : h.textPrimary) !== null && p !== void 0 ? p : v.colors.textPrimary });
    }
    return e;
  }
  return D(r, [{ key: "setupEventListeners", value: function() {
    f(this, Er).addListener("stageJoined", this.enablePipMediaControls), f(this, Er).addListener("stageLeft", this.unmountEvents), f(this, Er).addListener("videoUpdate", this.onSelfVideoUpdateListener), f(this, Er).addListener("audioUpdate", this.onSelfAudioUpdateListener), f(this, Er).addListener("roomLeft", this.disable);
  } }, { key: "createCanvas", value: (
    // private handlePipMediaControls = (status: StageStatus) => {
    // 	if (status === 'ON_STAGE') this.enablePipMediaControls();
    // 	else this.unmountEvents();
    // };
    function() {
      var e = document.createElement("canvas");
      e.height = f(this, Sr).height, e.width = f(this, Sr).width, V(this, ga, e);
    }
  ) }, { key: "setupMediaSessionEvents", value: function() {
    var e = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || (navigator.mediaSession.setActionHandler("hangup", function() {
      e.eventCallback("END");
    }), this.mountAudioEvents(), this.mountVideoEvents());
  } }, { key: "mountAudioEvents", value: function() {
    var e = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setMicrophoneActive === void 0 || f(this, Er).permissions.canProduceAudio && navigator.mediaSession.setActionHandler("togglemicrophone", function() {
      e.eventCallback("MIC");
    });
  } }, { key: "mountVideoEvents", value: function() {
    var e = this;
    navigator.mediaSession === void 0 || navigator.mediaSession.setCameraActive === void 0 || f(this, Er).permissions.canProduceVideo && navigator.mediaSession.setActionHandler("togglecamera", function() {
      e.eventCallback("CAMERA");
    });
  } }, { key: "getSources", value: function() {
    var e = Object.values(f(this, ta)), a = e.filter(function(n) {
      return n.pinned;
    });
    return a.length === 1 ? a : e;
  } }, { key: "drawEmptyTile", value: function(e, a, n, i, s) {
    if (f(this, ga) !== void 0) {
      var u = f(this, ga).getContext("2d"), l = f(this, ga).width, p = 4, h = 4, v = a - p * 2, m = n - p * 2, g = Math.floor(l / v), w = Math.floor(e / g), k = e % g, T = k * (v + p) + p, _ = w * (m + p) + p;
      u.fillStyle = f(this, Ja).videoBackground, u.strokeStyle = f(this, Ja).brand, u.beginPath(), u.moveTo(T + h, _), u.arcTo(T + v, _, T + v, _ + h, h), u.arcTo(T + v, _ + m, T + v - h, _ + m, h), u.arcTo(T, _ + m, T, _ + m - h, h), u.arcTo(T, _, T + h, _, h), u.closePath(), u.fill(), u.stroke();
      var E = v / 6, S = v / 2 + T, C = m / 2 + _;
      if (u.save(), (i || s) && (u.beginPath(), u.arc(S, C, E, 0, Math.PI * 2), u.fillStyle = f(this, Ja).brand, u.fill()), i && (u.fillStyle = f(this, Ja).textOnBrand, u.font = "".concat(E / 2, "px sans-serif"), u.textAlign = "center", u.textBaseline = "middle", u.fillText(i, S, C)), s) {
        var L = new Image();
        L.src = s, L.onload = function() {
          u.drawImage(L, S - E, C - E, E * 2, E * 2), u.restore();
        };
      }
    }
  } }, { key: "drawGrid", value: function(e, a, n) {
    if (f(this, ga) !== void 0) {
      var i = f(this, ga).getContext("2d");
      i.fillStyle = f(this, Ja).background, i.fillRect(0, 0, f(this, Sr).width, f(this, Sr).height);
      for (var s = this.getSources(), u = 0, l = 0; u < f(this, Sr).height - 5; ) {
        for (var p = 0; p < f(this, Sr).width - 5 && l < n; ) {
          var h = s[l].element;
          if (s[l].enabled) {
            var v = O1(p, u, e, a, h.videoWidth, h.videoHeight), m = ar(v, 8), g = m[0], w = m[1], k = m[2], T = m[3], _ = m[4], E = m[5], S = m[6], C = m[7];
            i.drawImage(h, g, w, k, T, _, E, S, C);
          } else
            this.drawEmptyTile(l, e, a, s[l].displayText);
          l += 1, p += e;
        }
        u += a;
      }
    }
  } }, { key: "calcGridElemSize", value: function(e) {
    switch (e) {
      case 0:
      case 1:
        return [f(this, Sr).width, f(this, Sr).height];
      case 2:
        return [Math.floor(f(this, Sr).width / 2), f(this, Sr).height];
      case 3:
      case 4:
        return [Math.floor(f(this, Sr).width / 2), Math.floor(f(this, Sr).height / 2)];
      case 5:
      case 6:
        return [Math.floor(f(this, Sr).width / 3), Math.floor(f(this, Sr).height / 2)];
      case 7:
      case 8:
      case 9:
        return [Math.floor(f(this, Sr).width / 3), Math.floor(f(this, Sr).height / 3)];
      default:
        return [Math.floor(f(this, Sr).width / 3), Math.floor(f(this, Sr).height / 2)];
    }
  } }, { key: "paintCanvas", value: function() {
    var e = this.getSources().length, a = this.calcGridElemSize(e), n = ar(a, 2), i = n[0], s = n[1];
    this.drawGrid(i, s, e);
  } }, { key: "isSupported", value: function() {
    return !!window.chrome && document.pictureInPictureEnabled;
  } }, { key: "isActive", get: function() {
    return document.pictureInPictureElement !== null;
  } }, {
    key: "cleanup",
    value: function() {
      this.isSupported() && document.exitPictureInPicture !== void 0 && document.pictureInPictureElement !== null && document.exitPictureInPicture(), this.removeAllSources(), V(this, ga, void 0), V(this, pi, void 0), V(this, kn, void 0);
    }
    /**
    * Initialize PiP and prepare sources
    */
  }, { key: "init", value: function() {
    var e = this, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = a.height, i = a.width;
    this.cleanup(), this.createCanvas(), this.setupMediaSessionEvents();
    var s = document.createElement("video");
    V(this, Sr, { height: n != null ? n : Fp, width: i != null ? i : Vp }), s.height = f(this, Sr).height, s.width = f(this, Sr).width, s.autoplay = !0, s.srcObject = f(this, ga).captureStream(24), V(this, pi, s), f(this, pi).onloadedmetadata = function() {
      try {
        e.emit("pipStarted"), f(e, pi).onleavepictureinpicture = function() {
          e.emit("pipEnded");
        };
      } catch (u) {
        e.emit("pipEnded");
      }
    }, this.paintCanvas();
  } }, { key: "updateMediaSession", value: function(e, a) {
    navigator.mediaSession !== void 0 && (e === "CAMERA" && navigator.mediaSession.setCameraActive !== void 0 && navigator.mediaSession.setCameraActive(a), e === "MIC" && navigator.mediaSession.setMicrophoneActive !== void 0 && navigator.mediaSession.setMicrophoneActive(a));
  } }, { key: "enableSource", value: function(e) {
    f(this, ta)[e] !== void 0 && (f(this, ta)[e].enabled = !0);
  } }, {
    key: "disableSource",
    value: function(e) {
      f(this, ta)[e] !== void 0 && (f(this, ta)[e].enabled = !1);
    }
    /**
    * Add a video source from the participant grid
    * @param {string} id id for the source (ex. participant id)
    * @param {HTMLVideoElement} element HTMLVideoElement for the video source
    * @param {boolean} enabled if source is enabled
    * @param {?string} [displayText] two character display text
    */
  }, {
    key: "addSource",
    value: function(e, a, n) {
      var i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1, s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : void 0;
      i && this.removePinnedSource(), f(this, ta)[e] = { id: e, element: a, enabled: n, pinned: i, displayText: s ? M1(s) : void 0 };
    }
    /**
    * Remove the video source for the participant
    * @param id id for the source (ex. participant id)
    */
  }, {
    key: "removeSource",
    value: function(e) {
      delete f(this, ta)[e];
    }
    /**
    * Remove the pinned source
    * @param id id for the source (ex. participant id)
    */
  }, {
    key: "removePinnedSource",
    value: function() {
      var e = this.getSources(), a = ar(e, 1), n = a[0];
      n && this.removeSource(n.id);
    }
    /**
    * Remove all sources
    */
  }, {
    key: "removeAllSources",
    value: function() {
      V(this, ta, {});
    }
    /**
    * Enable PiP
    */
  }, { key: "enable", value: function() {
    var e = this;
    this.setupEventListeners(), this.updateMediaSession("CAMERA", f(this, Er).videoEnabled), this.updateMediaSession("MIC", f(this, Er).audioEnabled), V(this, kn, requestAnimationFrame(function() {
      return e.animate();
    })), f(this, pi).requestPictureInPicture();
  } }]), r;
}(fr), $1 = Object.defineProperty, L1 = Object.getOwnPropertyDescriptor, Ot = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? L1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && $1(r, t, a), a;
}, pt = (Pr = /* @__PURE__ */ new K(), Ha = /* @__PURE__ */ new K(), Qt = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this), z(b(a), Pr, { get: U1, set: void 0 }), R(b(a), "waitlisted", void 0), R(b(a), "joined", void 0), R(b(a), "active", void 0), R(b(a), "pinned", void 0), R(b(a), "all", void 0), R(b(a), "pip", void 0), z(b(a), Ha, { writable: !0, value: void 0 }), z(b(a), Qt, { writable: !0, value: void 0 }), R(b(a), "viewMode", void 0), R(b(a), "currentPage", void 0), R(b(a), "lastActiveSpeaker", void 0), R(b(a), "selectedPeers", void 0), V(b(a), Ha, t), V(b(a), Qt, e), a.waitlisted = new bo(), a.joined = new bo(), a.active = new bo(), a.pinned = new bo(), a.all = new I1(), a.pip = new N1(t), a.selectedPeers = new C1(), a.viewMode = "ACTIVE_GRID", a.currentPage = 0, a;
  }
  return D(r, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var e;
      return ((e = f(this, Pr)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
    }
  ) }, {
    key: "count",
    get: function() {
      return this.joined.size;
    }
    /**
    * Returns the maximum number of participants that can be present in
    * the active map.
    */
  }, {
    key: "maxActiveParticipantsCount",
    get: function() {
      return f(this, Pr).maxPreferredStreams;
    }
    /**
    * Returns the number of pages that are available in the meeting in PAGINATED mode.
    * If the meeting is in ACTIVE_GRID mode, this value will be 0.
    */
  }, {
    key: "pageCount",
    get: function() {
      return this.viewMode === "PAGINATED" ? Math.ceil(this.joined.size / this.maxActiveParticipantsCount) : 0;
    }
    /**
    * Accepts requests from waitlisted participants if user
    * has appropriate permissions.
    * @param id peerId or userId of the waitlisted participant.
    */
  }, {
    key: "acceptWaitingRoomRequest",
    value: function(e) {
      var a, n;
      if (f(this, Pr) instanceof qe) {
        if (!this.roomJoined)
          throw new q("Can`t accept waiting room request without joining room");
        return f(this, Pr).acceptWaitingRequest(e);
      }
      var i = (a = (n = this.waitlisted.get(e)) === null || n === void 0 ? void 0 : n.userId) !== null && a !== void 0 ? a : e;
      return f(this, Qt).acceptWaitingRoomRequest([i]);
    }
    /**
    * We need a new event for socket service events
    * since if we send them all together, sequence of events
    * can be unreliable
    */
  }, {
    key: "acceptAllWaitingRoomRequest",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                if (!(f(this, Pr) instanceof qe)) {
                  p.next = 3;
                  break;
                }
                return s = n.map(function(h) {
                  return i.acceptWaitingRoomRequest(h);
                }), p.abrupt("return", Promise.all(s));
              case 3:
                return u = n.map(function(h) {
                  var v, m;
                  return (v = (m = i.waitlisted.get(h)) === null || m === void 0 ? void 0 : m.userId) !== null && v !== void 0 ? v : h;
                }), p.abrupt("return", f(this, Qt).acceptWaitingRoomRequest(u));
              case 5:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Rejects requests from waitlisted participants if user
    * has appropriate permissions.
    * @param id participantId of the waitlisted participant.
    */
  }, { key: "rejectWaitingRoomRequest", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (!(f(this, Pr) instanceof qe)) {
                p.next = 6;
                break;
              }
              if (this.roomJoined) {
                p.next = 3;
                break;
              }
              throw new q("Can`t reject waiting room request without joining room");
            case 3:
              return p.next = 5, f(this, Pr).rejectWaitingRequest(n);
            case 5:
              this.waitlisted.delete(n);
            case 6:
              u = (i = (s = this.waitlisted.get(n)) === null || s === void 0 ? void 0 : s.userId) !== null && i !== void 0 ? i : n, f(this, Qt).rejectWaitingRoomRequest([u]);
            case 8:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "setViewMode",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (P.info("DyteParticipants::set_view_mode", { pageNavigation: { viewMode: n, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), ["ACTIVE_GRID", "PAGINATED"].includes(n)) {
                  u.next = 4;
                  break;
                }
                throw P.error("DyteParticipants::setViewMode::invalid_view_mode", { pageNavigation: { viewMode: n, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), new q("Invalid view mode: ".concat(n, ". Try ACTIVE_GRID or PAGINATED."));
              case 4:
                if (this.viewMode !== n) {
                  u.next = 7;
                  break;
                }
                return P.info("DyteParticipants::setViewMode::view_mode_same_as_previous", { pageNavigation: { viewMode: n, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), u.abrupt("return");
              case 7:
                if (this.viewMode = n, n !== "PAGINATED") {
                  u.next = 21;
                  break;
                }
                if (this.currentPage = 1, i = [], !(f(this, Pr) instanceof qe)) {
                  u.next = 17;
                  break;
                }
                return u.next = 14, f(this, Pr).getPage(this.currentPage);
              case 14:
                i = u.sent.payload.peerIds, u.next = 18;
                break;
              case 17:
                i = this.getPeerIdsForCurrentPage();
              case 18:
                $.emit(M.GET_PAGE, { peerIds: i }), u.next = 22;
                break;
              case 21:
                n === "ACTIVE_GRID" && (this.currentPage = 0, f(this, Pr) instanceof qe ? f(this, Pr).getPage(this.currentPage) : $.emit(M.REFRESH_GRID));
              case 22:
                this.emit("viewModeChanged", { viewMode: n, currentPage: this.currentPage, pageCount: this.pageCount });
              case 23:
              case "end":
                return u.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    // NOTE(itzmanish): hive systems specific code
  }, { key: "getPeerIdsForCurrentPage", value: function() {
    var e = this;
    P.info("DyteParticipants::getPeerIdsForCurrentPage()", { pageNavigation: { viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } });
    var a = this.selectedPeers.compulsoryPeers, n = a.filter(function(p) {
      return e.joined.has(p);
    }), i = Array.from(this.pinned.keys()).filter(function(p) {
      return !n.includes(p);
    }), s = Array.from(this.joined.keys()), u = Math.max((this.currentPage - 1) * (this.maxActiveParticipantsCount - n.length - i.length)), l = this.currentPage * (this.maxActiveParticipantsCount - n.length - i.length);
    return n.concat(i, s.slice(u, l));
  } }, { key: "setPage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (P.info("DyteParticipants::set_page", { pageNavigation: { settingPage: n, viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), this.viewMode === "PAGINATED") {
                u.next = 3;
                break;
              }
              return u.abrupt("return");
            case 3:
              if (Number.isInteger(n)) {
                u.next = 6;
                break;
              }
              throw P.error("DyteParticipants::invalid_page_number", { pageNavigation: { settingPage: n, viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), new q("Invalid page: ".concat(n, ". Page must be an integer."));
            case 6:
              if (!(n < 1 || n > this.pageCount)) {
                u.next = 9;
                break;
              }
              throw P.error("DyteParticipants::invalid_page_number", { pageNavigation: { settingPage: n, viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount, maxActiveParticipantsCount: this.maxActiveParticipantsCount } }), new q("Invalid page: ".concat(n, ". Page must be greater than 0 and less than or equal to ").concat(this.pageCount, "."));
            case 9:
              if (this.currentPage = n, i = [], !(f(this, Pr) instanceof qe)) {
                u.next = 17;
                break;
              }
              return u.next = 14, f(this, Pr).getPage(n);
            case 14:
              i = u.sent.payload.peerIds, u.next = 18;
              break;
            case 17:
              i = this.getPeerIdsForCurrentPage();
            case 18:
              $.emit(M.GET_PAGE, { peerIds: i }), this.emit("pageChanged", { viewMode: this.viewMode, currentPage: this.currentPage, pageCount: this.pageCount });
            case 20:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAllAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (P.info("DyteParticipants::disable_all_audio", { actions: { disableAllAudio: { allowUnmute: n } } }), this.roomJoined) {
                s.next = 3;
                break;
              }
              throw new q("Can`t disable all audio without joining room");
            case 3:
              if (!f(this, Ha).permissions.canAllowParticipantAudio) {
                s.next = 5;
                break;
              }
              return s.abrupt("return", f(this, Pr).muteAll(n));
            case 5:
              throw P.error("DyteParticipants::unauthorized_disable_all_audio", { actions: { disableAllAudio: { allowUnmute: n } } }), new q("Unauthorized: User does not have permission to disable peer audio.");
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAllVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (P.info("DyteParticipants::disable_all_video"), this.roomJoined) {
                i.next = 3;
                break;
              }
              throw new q("Can`t disable all video without joining room");
            case 3:
              if (!f(this, Ha).permissions.canAllowParticipantVideo) {
                i.next = 5;
                break;
              }
              return i.abrupt("return", f(this, Pr).muteAllVideo());
            case 5:
              throw P.error("DyteParticipants::unauthorized_disable_all_video"), new q("Unauthorized: User does not have permission to disable peer video.");
            case 7:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableAudio", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this.joined.get(n).disableAudio();
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "disableVideo", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this.joined.get(n).disableVideo();
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kick", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, this.joined.get(n).kick();
            case 2:
              return s.next = 4, f(this, Qt).kick(n);
            case 4:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "kickAll", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (P.info("DyteParticipants::kick_all"), this.roomJoined) {
                i.next = 3;
                break;
              }
              throw new q("Can`t kick all without joining room");
            case 3:
              if (f(this, Ha).permissions.kickParticipant) {
                i.next = 6;
                break;
              }
              throw P.error("DyteParticipants::unauthorized_kick_all"), new q("Unauthorized: User does not have permission to kick peers.");
            case 6:
              f(this, Pr).kickAll(), f(this, Qt).kickAll();
            case 8:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "broadcastMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (P.info("DyteParticipants::broadcastMessage"), this.roomJoined) {
                u.next = 3;
                break;
              }
              throw new q("Can`t broadcast message without joining room");
            case 3:
              if (n != null && n.trim()) {
                u.next = 5;
                break;
              }
              throw new q("`type` must be a non-empty string.");
            case 5:
              f(this, Pr) instanceof qe && f(this, Ha).config.viewType !== "LIVESTREAM" && f(this, Ha).config.viewType !== "CHAT" ? f(this, Pr).broadcastMessage(n, i) : f(this, Qt).broadcastMessage(n, i);
            case 6:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "acceptAllRequestToJoinStageRequests", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              $.emitAsync(M.ACCEPT_ALL_REQUESTS_TO_JOIN_STAGE, { data: n });
            case 1:
            case "end":
              return s.stop();
          }
      }, a);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getAllJoinedPeers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return p.next = 2, f(this, Qt).getRoomPeers(n, i, s);
            case 2:
              return u = p.sent, p.abrupt("return", u.peers.map(pa.formatSocketServiceMessage));
            case 4:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr));
function U1() {
  return Mr();
}
Ot([A.trace("DyteParticipants.setViewMode")], pt.prototype, "setViewMode", 1);
Ot([A.trace("DyteParticipants.setPage")], pt.prototype, "setPage", 1);
Ot([A.trace("DyteParticipants.disableAllAudio")], pt.prototype, "disableAllAudio", 1);
Ot([A.trace("DyteParticipants.disableAllVideo")], pt.prototype, "disableAllVideo", 1);
Ot([A.trace("DyteParticipants.disablePeerAudio")], pt.prototype, "disableAudio", 1);
Ot([A.trace("DyteParticipants.disablePeerVideo")], pt.prototype, "disableVideo", 1);
Ot([A.trace("DyteParticipants.kickPeer")], pt.prototype, "kick", 1);
Ot([A.trace("DyteParticipants.kickAll")], pt.prototype, "kickAll", 1);
Ot([A.trace("DyteParticipants.broadcastMessage")], pt.prototype, "broadcastMessage", 1);
Ot([A.trace("DyteParticipants.acceptAllRequestToJoinStageRequests")], pt.prototype, "acceptAllRequestToJoinStageRequests", 1);
Ot([A.trace("DyteParticipants.getAllJoinedPeers")], pt.prototype, "getAllJoinedPeers", 1);
pt = Ot([jr(function(o) {
  throw new q(o.message, "1200");
})], pt);
var F1 = Object.defineProperty, V1 = Object.getOwnPropertyDescriptor, nn = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? V1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && F1(r, t, a), a;
}, H1 = (lr = /* @__PURE__ */ new K(), Xn = /* @__PURE__ */ new K(), fa = /* @__PURE__ */ new K(), so = /* @__PURE__ */ new K(), Yt = /* @__PURE__ */ new K(), ir = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c, r, t) {
    var e = this;
    I(this, o), z(this, ir, { get: j1, set: void 0 }), R(this, "participants", void 0), z(this, lr, { writable: !0, value: void 0 }), z(this, Xn, { writable: !0, value: void 0 }), z(this, fa, { writable: !0, value: /* @__PURE__ */ new Set() }), z(this, so, { writable: !0, value: void 0 }), z(this, Yt, { writable: !0, value: void 0 }), R(this, "validateScreenShare", function(a) {
      if (f(e, ir) instanceof Ce) {
        var n = f(e, ir).validateScreenShare(a);
        n === e.participants.joined.size ? (P.info("ParticipantController::Screenshare_validated", {}), e.participants.emit("screenShareSuccessful", n)) : (P.info("ParticipantController::Screenshare_not_validated", {}), setTimeout(function() {
          e.validateScreenShare(a);
        }, 5e3));
      } else
        P.info("ParticipantController::not_hive_node_client", {});
    }), R(this, "syncMembers", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(e, Yt).getAllAddedParticipants();
            case 2:
              n = s.sent, e.participants.all.__clear(), n.forEach(function(u) {
                return e.participants.all.__set(u.userId, u);
              }), e.participants.all.emit("participantsUpdate");
            case 6:
            case "end":
              return s.stop();
          }
      }, a);
    }))), R(this, "chatRoomJoinHandler", /* @__PURE__ */ function() {
      var a = y(/* @__PURE__ */ d().mark(function n(i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                if (i.peer) {
                  u.next = 2;
                  break;
                }
                return u.abrupt("return");
              case 2:
                if (i.peer.userId !== f(e, lr).userId) {
                  u.next = 4;
                  break;
                }
                return u.abrupt("return");
              case 4:
                return u.next = 6, e.syncMembers();
              case 6:
              case "end":
                return u.stop();
            }
        }, n);
      }));
      return function(n) {
        return a.apply(this, arguments);
      };
    }()), R(this, "updateSelfVideoConstraints", Xo(/* @__PURE__ */ y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (ue.hasFeature(de.DYNAMIC_VIDEO_QUALITY)) {
                k.next = 2;
                break;
              }
              return k.abrupt("return");
            case 2:
              if (n = e.participants.active.size, i = "vga", f(e, lr).isPinned || n < 2 ? i = "hd" : n < 6 ? i = "vga" : n < 12 ? i = "qvga" : i = "gross", k.prev = 5, !f(e, lr).videoEnabled) {
                k.next = 14;
                break;
              }
              if (h = { height: (s = Yo[i]) === null || s === void 0 ? void 0 : s.height.ideal, width: (u = Yo[i]) === null || u === void 0 ? void 0 : u.width.ideal }, v = ((l = f(e, lr).videoTrack) === null || l === void 0 || (l = l.getSettings()) === null || l === void 0 ? void 0 : l.width) !== h.width, m = ((p = f(e, lr).videoTrack) === null || p === void 0 || (p = p.getSettings()) === null || p === void 0 ? void 0 : p.height) !== h.height, !(!v && !m)) {
                k.next = 12;
                break;
              }
              return k.abrupt("return");
            case 12:
              return k.next = 14, f(e, lr).updateVideoConstraints({ height: { ideal: h.height }, width: { ideal: h.width } });
            case 14:
              k.next = 19;
              break;
            case 16:
              k.prev = 16, k.t0 = k.catch(5), (g = k.t0.message) !== null && g !== void 0 && g.includes("Unsupported") || P.error("Failure in setOptimalViewerBasedVideoConstraints::updateVideoConstraints", { error: k.t0 });
            case 19:
            case "end":
              return k.stop();
          }
      }, a, null, [[5, 16]]);
    })), 1e3)), V(this, Yt, r), this.participants = new pt(c, f(this, Yt)), V(this, Xn, /* @__PURE__ */ new Map()), V(this, lr, c), V(this, so, El(c.config.viewType, t) ? "socket-service" : "room-node"), f(this, so) === "socket-service" && c.config.viewType === "CHAT" ? this.setupChatEvents() : this.setupEvents();
  }
  return D(o, [{ key: "roomJoined", get: function() {
    var r;
    return ((r = f(this, ir)) === null || r === void 0 ? void 0 : r.roomJoined) === !0;
  } }, { key: "updatePageParticipants", value: function(r) {
    var t = this, e = new Set(r), a = new Map(this.participants.active);
    if (this.participants.active.forEach(function(i, s) {
      t.participants.active.delete(s, !e.has(s));
    }), e.forEach(function(i) {
      if (!t.participants.joined.get(i)) {
        P.warn("updatePageParticipants::participant_not_in_joined_list", { dyteParticipant: { id: i } });
        return;
      }
      t.participants.active.add(t.participants.joined.get(i), !a.get(i));
    }), f(this, ir) instanceof Ce) {
      V(this, fa, new Set(this.participants.active.keys())), Array.from(a.keys()).forEach(function(i) {
        if (!e.has(i)) {
          var s = t.participants.joined.get(i);
          if (s) {
            var u = { producers: s.producers, peerId: s.id };
            f(t, ir).deactivatePeers(u);
          }
        }
      });
      var n = [];
      this.participants.active.forEach(function(i) {
        var s = { peerId: i.id, producers: i.producers };
        n.push(s);
      }), f(this, ir).activatePeers(n);
    }
    this.updateSelfVideoConstraints();
  } }, { key: "updatePinnedParticipants", value: function() {
    var r = this;
    this.participants.pinned.forEach(function(t) {
      t.setIsPinned(!1), r.participants.pinned.delete(t.id);
    });
  } }, {
    key: "refreshGridParticipants",
    value: (
      // NOTE(itzmanish): hive specific code
      function() {
        var r = this, t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1, e = Array.from(this.participants.joined.keys()), a = this.participants.selectedPeers.peers, n = Array.from(this.participants.pinned.keys());
        if (this.participants.viewMode !== "ACTIVE_GRID") {
          P.warn("ParticipantController::refreshGridParticipants::not_refreshing_grid_in_not_active_grid_mode");
          return;
        }
        var i = this.participants.maxActiveParticipantsCount - 1, s = new Set(a.concat(n).filter(function(h) {
          return h !== f(r, lr).id && r.participants.joined.has(h);
        })), u = Array.from(s), l = i - s.size;
        if (l >= 0) {
          var p = e.filter(function(h) {
            return !s.has(h) && h !== f(r, lr).id;
          }).slice(0, l);
          u = Array.from(s).concat(p);
        } else
          u = u.slice(0, i);
        this.updateActiveParticipantsHiveNode(u, t);
      }
    )
    // NOTE(itzmanish): hive specific code
  }, { key: "updateActiveParticipantsHiveNode", value: function(r) {
    var t = this, e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    if (!this.roomJoined) {
      P.warn("Skipped::ParticipantController::updateActiveParticipants", { roomJoined: this.roomJoined });
      return;
    }
    var a = Array.from(this.participants.active.keys()), n = new Map(this.participants.active), i = {};
    r.forEach(function(v) {
      i[v] = !0;
    });
    var s = [];
    a.forEach(function(v, m) {
      (!i[v] || !t.participants.joined.get(v)) && s.push(m);
    }), r.forEach(function(v) {
      n.get(v) || (a.length < r.length ? a.push(v) : a[s.shift()] = v);
    }), a.forEach(function(v, m) {
      i[v] || a.splice(m, 1);
    }), Array.from(this.participants.active.keys()).forEach(function(v) {
      t.participants.active.delete(v, !i[v]);
    }), a.forEach(function(v) {
      if (!t.participants.joined.get(v)) {
        P.warn("updateActiveParticipants::participant_not_in_joined_list", { dyteParticipant: { id: v } });
        return;
      }
      t.participants.active.add(t.participants.joined.get(v), !n.get(v));
    }), this.participants.active.emit("participantsUpdate"), P.info("ParticipantController::updateActiveParticipants::updating_current_selected_peers", { debuggingHint: e ? "Forcefully updating currentActiveGridParticipants set" : null }), e && V(this, fa, /* @__PURE__ */ new Set());
    var u = new Set(r), l = [], p = [];
    if (f(this, fa).forEach(function(v) {
      u.has(v) || l.push(v);
    }), u.forEach(function(v) {
      f(t, fa).has(v) || p.push(v);
    }), V(this, fa, u), p.length === 0 && l.length === 0) {
      P.info("ParticipantController::updateActiveParticipants::current_selected_peers_is_same");
      return;
    }
    if (f(this, ir) instanceof Ce) {
      var h = [];
      l.forEach(function(v) {
        var m = t.participants.joined.get(v);
        if (m) {
          var g = { producers: m.producers, peerId: m.id };
          h.push(f(t, ir).deactivatePeers(g));
        }
      }), Promise.all(h).then(function() {
        var v = [];
        p.forEach(function(m) {
          var g = t.participants.active.get(m);
          if (!g) {
            P.warn("peer is not in active map which is going to activate, should not happen", { dyteParticipant: { id: m } });
            return;
          }
          var w = { peerId: g.id, producers: g.producers, force: e };
          v.push(w);
        }), f(t, ir).activatePeers(v);
      }).catch(function(v) {
        P.info("Error on deactivating peers", v);
      });
    }
    this.updateSelfVideoConstraints();
  } }, {
    key: "updateActiveParticipants",
    value: function(r) {
      var t = this;
      if (!this.roomJoined) {
        P.warn("Skipped::ParticipantController::updateActiveParticipants", { roomJoined: this.roomJoined });
        return;
      }
      var e = Array.from(this.participants.active.keys()), a = new Map(this.participants.active), n = {};
      r.forEach(function(s) {
        n[s] = !0;
      });
      var i = [];
      e.forEach(function(s, u) {
        (!n[s] || !t.participants.joined.get(s)) && i.push(u);
      }), r.forEach(function(s) {
        a.get(s) || (e.length < r.length ? e.push(s) : e[i.shift()] = s);
      }), e.forEach(function(s, u) {
        n[s] || e.splice(u, 1);
      }), Array.from(this.participants.active.keys()).forEach(function(s) {
        t.participants.active.delete(s, !n[s]);
      }), e.forEach(function(s) {
        if (!t.participants.joined.get(s)) {
          P.warn("updateActiveParticipants::participant_not_in_joined_list", { dyteParticipant: { id: s } });
          return;
        }
        t.participants.active.add(t.participants.joined.get(s), !a.get(s));
      }), this.participants.active.emit("participantsUpdate"), this.updateSelfVideoConstraints();
    }
    // NOTE(itzmanish): hive specific code
  }, { key: "updateActiveParticipantsWithPriorities", value: function(r) {
    var t = this, e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    if (!this.roomJoined) {
      P.warn("Skipped::ParticipantController::updateActiveParticipantsWithPriorities", { roomJoined: this.roomJoined });
      return;
    }
    r.forEach(function(a) {
      t.participants.selectedPeers.add(a.peerId, a.priority);
    }), e && this.refreshGridParticipants();
  } }, {
    key: "setupChatEvents",
    value: function() {
      $.onAsync(M.SOCKET_SERVICE_ROOM_JOINED, this.syncMembers), f(this, Yt).on(le.joinRoom, this.chatRoomJoinHandler);
    }
    /**
    * Socket Service only
    */
  }, { key: "waitingRoomRequestHandler", value: function(r) {
    var t = this;
    if (!(f(this, ir) instanceof qe)) {
      var e = r.requests.filter(function(n) {
        return !t.participants.waitlisted.toArray().find(function(i) {
          return i.userId === n.userId;
        });
      }), a = this.participants.waitlisted.toArray().filter(function(n) {
        return !r.requests.find(function(i) {
          return i.userId === n.userId;
        });
      });
      e.forEach(function(n) {
        return t.participants.waitlisted.add(new St({ id: n.peerId, displayName: n.displayName, audioMuted: !0, videoEnabled: !1, audioTrack: void 0, videoTrack: void 0, stageStatus: Tr.OFF_STAGE, userId: n.userId, flags: {}, isHost: !1 }, f(t, lr)));
      }), a.forEach(function(n) {
        return t.participants.waitlisted.delete(n.id);
      });
    }
  } }, { key: "setupEvents", value: function() {
    var r = this;
    $.on(M.PEER_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i, s, u, l, p;
        return d().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (u = new St(a, f(r, lr)), !(f(r, ir) instanceof Ce)) {
                  v.next = 7;
                  break;
                }
                return v.next = 4, f(r, Yt).getPeerInfo(a.id);
              case 4:
                l = v.sent, p = l.peer.stageType, u.setStageStatus(o.getStageStatusFromStageType(p));
              case 7:
                if (!(f(r, lr).id !== u.id && !((n = a.flags) !== null && n !== void 0 && n.recorder) && !((i = u.flags) !== null && i !== void 0 && i.hidden_participant) && !((s = u.flags) !== null && s !== void 0 && s.hiddenParticipant))) {
                  v.next = 19;
                  break;
                }
                if (r.participants.joined.add(u), r.participants.waitlisted.delete(u.id), a.stageStatus === Tr.REQUESTED_TO_JOIN_STAGE && $.emit(M.STAGE_REQUESTS_UPDATED), r.participants.currentPage !== r.participants.pageCount) {
                  v.next = 19;
                  break;
                }
                if (!(f(r, ir) instanceof qe)) {
                  v.next = 19;
                  break;
                }
                return v.t0 = $, v.t1 = M.GET_PAGE, v.next = 17, f(r, ir).getPage(r.participants.currentPage);
              case 17:
                v.t2 = v.sent.payload, v.t0.emit.call(v.t0, v.t1, v.t2);
              case 19:
                r.updateSelfVideoConstraints();
              case 20:
              case "end":
                return v.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), f(this, Yt).on(le.getWaitingRoomRequests, this.waitingRoomRequestHandler.bind(this)), $.on(M.SOCKET_SERVICE_ROOM_JOINED, function() {
      f(r, ir) instanceof qe || f(r, lr).permissions.acceptWaitingRequests && f(r, Yt).getWaitingRoomRequests();
    }), $.on(M.WAITLIST_PEER_ADDED, function(t) {
      var e = t.id, a = t.name;
      r.participants.waitlisted.add(new St({ id: e, displayName: a, audioMuted: !0, videoEnabled: !1, audioTrack: void 0, videoTrack: void 0, stageStatus: Tr.OFF_STAGE, userId: void 0, flags: {}, isHost: !1 }, f(r, lr)));
    }), $.on(M.WAITLIST_PEER_REMOVED, function(t) {
      var e = t.id;
      r.participants.waitlisted.delete(e);
    }), f(this, lr).on("videoUpdate", function() {
      return r.updateSelfVideoConstraints();
    }), $.on(M.ROOM_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return n = a.peers, i = a.pinnedPeerId, s = a.requestToJoinPeersList, f(r, ir) instanceof Ce && r.participants.joined.clear(), p.next = 4, f(r, Yt).getRoomStageState();
              case 4:
                u = p.sent, n.forEach(function(h) {
                  var v, m, g;
                  if (!((v = h.flags) !== null && v !== void 0 && v.recorder || (m = h.flags) !== null && m !== void 0 && m.hidden_participant || (g = h.flags) !== null && g !== void 0 && g.hiddenParticipant)) {
                    var w = Tr.OFF_STAGE;
                    u.approvedStagePeers.includes(h.userId) && (w = Tr.ACCEPTED_TO_JOIN_STAGE), u.requestedStagePeers.includes(h.userId) && (w = Tr.REQUESTED_TO_JOIN_STAGE), u.onStagePeers.includes(h.userId) && (w = Tr.ON_STAGE);
                    var k = new St(Q(Q({}, h), {}, { stageStatus: w }), f(r, lr));
                    k.id === i && (k.setIsPinned(!0, !1), r.participants.pinned.add(k)), r.participants.joined.add(k);
                  }
                }), s && s.forEach(function(h) {
                  var v = h.id;
                  $.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: v, status: Tr.REQUESTED_TO_JOIN_STAGE });
                }), f(r, ir) instanceof qe && f(r, ir).getPage(r.participants.currentPage);
              case 8:
              case "end":
                return p.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.PEER_CLOSED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i, s, u, l, p, h;
        return d().wrap(function(m) {
          for (; ; )
            switch (m.prev = m.next) {
              case 0:
                if (n = a.id, r.participants.joined.delete(n, !0, !0), r.participants.pinned.delete(n, !0, !0), !(f(r, ir) instanceof Ce)) {
                  m.next = 8;
                  break;
                }
                if (r.participants.selectedPeers.delete(n), !(r.participants.active.get(n) && r.participants.currentPage === 0)) {
                  m.next = 8;
                  break;
                }
                return r.refreshGridParticipants(), m.abrupt("return");
              case 8:
                if (i = r.participants.currentPage, s = f(r, lr).config.maxVideoStreams, u = ze.isMobile() ? s.mobile : s.desktop, l = u * (i - 1), p = r.participants.active.get(n), l !== 0) {
                  m.next = 17;
                  break;
                }
                r.participants.setViewMode("ACTIVE_GRID"), m.next = 31;
                break;
              case 17:
                if (!(r.participants.joined.size <= l)) {
                  m.next = 21;
                  break;
                }
                i === 2 ? r.participants.setViewMode("ACTIVE_GRID") : r.participants.setPage(i - 1), m.next = 31;
                break;
              case 21:
                if (!p) {
                  m.next = 31;
                  break;
                }
                if (h = [], !(f(r, ir) instanceof qe)) {
                  m.next = 29;
                  break;
                }
                return m.next = 26, f(r, ir).getPage(i);
              case 26:
                h = m.sent.payload.peerIds, m.next = 30;
                break;
              case 29:
                h = r.participants.getPeerIdsForCurrentPage();
              case 30:
                $.emit(M.GET_PAGE, { peerIds: h });
              case 31:
                r.updateSelfVideoConstraints();
              case 32:
              case "end":
                return m.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.ROOM_NODE_DISCONNECTED, function() {
      Array.from(r.participants.joined.keys()).forEach(function(t) {
        r.participants.joined.delete(t);
      }), Array.from(r.participants.active.keys()).forEach(function(t) {
        r.participants.active.delete(t);
      }), Array.from(r.participants.pinned.keys()).forEach(function(t) {
        r.participants.pinned.delete(t);
      }), r.participants.currentPage = 0, r.participants.viewMode = "ACTIVE_GRID", r.participants.emit("viewModeChanged", { viewMode: "ACTIVE_GRID", currentPage: r.participants.currentPage, pageCount: r.participants.pageCount }), V(r, fa, /* @__PURE__ */ new Set());
    }), $.on(M.PEER_MUTED, function(t) {
      var e = t.peerId, a = r.participants.joined.get(e);
      a && a.setAudioEnabled(!1);
    }), $.on(M.PEER_UNMUTED, function(t) {
      var e = t.peerId, a = r.participants.joined.get(e);
      a && a.setAudioEnabled(!0);
    }), $.on(M.CONSUMER_PAUSED, function(t) {
      var e = t.id;
      r.processConsumerPaused(e);
    }), $.on(M.CONSUMER_RESUMED, function(t) {
      var e = t.id;
      r.processConsumerResumed(e);
    }), $.on(M.NEW_CONSUMER, function(t) {
      var e = t.id;
      r.processNewConsumer(e);
    }), $.on(M.CONSUMER_CLOSED, function(t) {
      var e = t.id;
      r.processConsumerClosed(e);
    }), $.on(M.GET_PAGE, function(t) {
      var e = t.peerIds;
      r.participants.viewMode === "PAGINATED" && r.updatePageParticipants(e);
    }), $.on(M.SELECTED_PEERS, function(t) {
      var e = t.peerIds, a = t.compulsoryPeers;
      if (r.participants.viewMode === "ACTIVE_GRID") {
        if (f(r, ir) instanceof qe) {
          r.updateActiveParticipants(e);
          return;
        }
        var n = e.map(function(s, u) {
          return { peerId: s, priority: u + 1 };
        }), i = a == null ? void 0 : a.map(function(s, u) {
          return { peerId: s, priority: -(u + 1) };
        });
        n.push.apply(n, sr(i != null ? i : [])), n.length > 0 && r.updateActiveParticipantsWithPriorities(n);
      }
    }), $.on(M.SELECTED_PEERS_DIFF, function(t) {
      var e = t.entries;
      r.participants.viewMode === "ACTIVE_GRID" && r.updateActiveParticipantsWithPriorities(e, !0);
    }), $.on(M.REFRESH_GRID, function() {
      var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !1;
      r.participants.viewMode === "ACTIVE_GRID" && Xo(function() {
        r.refreshGridParticipants(t);
      }, 500, { maxWait: 1e3, leading: !0 })();
    }), $.on(M.NEW_PRODUCER, function(t) {
      var e = t.peerId, a = t.producer, n = r.participants.joined.get(e);
      if (!n) {
        P.warn("ParticipantController::NEW_PRODUCER::participant not found", { producer: { id: a == null ? void 0 : a.producerId, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } }, dyteParticipant: { id: e } });
        return;
      }
      n.producers.push(a), P.info("ParticipantController::NEW_PRODUCER::producer_added_to_participant", { producer: { id: a == null ? void 0 : a.producerId, peerId: e, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } } }), (a == null ? void 0 : a.kind) === "audio" || a != null && a.screenShare || f(r, fa).has(e) ? f(r, ir).createConsumer({ producingPeerId: e, producerId: a.producerId, screenShare: a.screenShare }) : P.info("ParticipantController::NEW_PRODUCER::not_consuming_producer", { producer: { id: a == null ? void 0 : a.producerId, peerId: e, kind: a == null ? void 0 : a.kind, status: "UNKNOWN", appData: { screenShare: a == null ? void 0 : a.screenShare } } });
    }), $.on(M.PRODUCER_CLOSED, function(t) {
      var e = t.peerId, a = t.producerId, n = r.participants.joined.get(e);
      if (!n) {
        P.warn("ParticipantController::NEW_PRODUCER::participant not found", { dyteParticipant: { id: e } });
        return;
      }
      n.producers = n.producers.filter(function(i) {
        return i.producerId !== a;
      });
    }), $.on(M.PRODUCER_TOGGLE, function(t) {
      var e = t.peerId, a = t.producerId, n = t.paused, i = t.kind, s = r.participants.joined.get(e);
      if (s) {
        i === "audio" && s.setAudioEnabled(!n);
        var u = s.producers.find(function(l) {
          return l.producerId === a;
        });
        u && (u.pause = n);
      }
    }), $.on(M.ACTIVE_SPEAKER, function(t) {
      var e = t.peerId, a = t.volume;
      r.participants.lastActiveSpeaker = e, r.participants.emit("activeSpeaker", { peerId: e, volume: a });
    }), $.on(M.ROOM_MESSAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                n = a.payload, i = a.type, s = a.timestamp, r.participants.emit("broadcastedMessage", { type: i, payload: n, timestamp: s }), i === "screenshareConsumerCreated" && (P.info("ParticipantController::ROOM_MESSAGE::screenshareConsumerCreated"), r.validateScreenShare(n));
              case 3:
              case "end":
                return l.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.LOW_CONSUMER_SCORE, function(t) {
      var e = t.peerId, a = t.score, n = t.kind, i = r.participants.joined.get(e);
      i && (i.emit("poorConnection", { score: a, kind: n }), r.participants.emit("poorConnection", { participantId: e, score: a, kind: n }));
    }), $.on(M.CONSUMER_SCORE_UPDATE, function(t) {
      var e, a = t.score, n = t.kind, i = t.appData, s = t.peerId, u = n === "video" && ((e = i == null ? void 0 : i.screenShare) !== null && e !== void 0 ? e : !1), l = r.participants.joined.get(s);
      l && (l.emit("mediaScoreUpdate", { kind: n, isScreenshare: u, score: a, participantId: s }), r.participants.emit("mediaScoreUpdate", { kind: n, isScreenshare: u, score: a, participantId: s }));
    }), $.on(M.PEER_PINNED, function(t) {
      var e = t.peerId;
      if (!e) {
        f(r, lr).isPinned && f(r, lr).setIsPinned(!1), r.participants.pinned.size !== 0 && r.updatePinnedParticipants(), r.updateSelfVideoConstraints();
        return;
      }
      if (e === f(r, lr).id) {
        r.participants.pinned.size !== 0 && r.updatePinnedParticipants(), f(r, lr).setIsPinned(!0), r.updateSelfVideoConstraints();
        return;
      }
      var a = r.participants.joined.get(e);
      f(r, lr).isPinned && f(r, lr).setIsPinned(!1), r.updatePinnedParticipants(), a.setIsPinned(!0), r.participants.pinned.add(a), f(r, ir) instanceof Ce && f(r, ir).activatePeers([{ peerId: a.id, producers: a.producers }]).catch(function(n) {
        P.error("unable to create consumers", { error: n });
      }), r.updateSelfVideoConstraints();
    });
  } }, { key: "processMedia", value: function(r) {
    var t, e = f(this, ir).getConsumers(), a = (t = e.get(r)) !== null && t !== void 0 ? t : {}, n = a.peerId, i = a.kind, s = a.appData, u = a.remotelyPaused, l = a.track, p = a.producerId;
    if (!n)
      return P.warn("processMedia::Peer ID is undefined", { consumer: { id: r, kind: i, peerId: n, appData: { supportsRemoteControl: s == null ? void 0 : s.supportsRemoteControl, screenShare: s == null ? void 0 : s.screenShare }, remotelyPaused: u, producerId: p } }), {};
    var h = s;
    return P.info("ParticipantController::processMedia", { consumer: { id: r, peerId: n, kind: i, appData: h, remotelyPaused: u, producerId: p } }), f(this, Xn).set(r, { type: i, peerId: n, appData: h, remotelyPaused: u, producerId: p }), { peerId: n, kind: i, appData: h, remotelyPaused: u, track: l, producerId: p };
  } }, { key: "processConsumerClosed", value: function(r) {
    var t = f(this, Xn).get(r) || {}, e = t.peerId, a = t.type, n = t.appData, i = t.remotelyPaused, s = t.producerId, u = this.participants.joined.get(e);
    if (P.info("ParticipantController::processConsumerClosed", { consumer: { id: r, peerId: e, appData: n, kind: a, remotelyPaused: i, producerId: s } }), f(this, Xn).delete(r), !!u) {
      if (n && n.screenShare) {
        u.setScreenShareEnabled(!1), se.consumerSharedMediaState(r, { screen: !1 }), u.screenShareTracks = { audio: void 0, video: void 0 };
        return;
      }
      a === "audio" ? (u.setAudioEnabled(!1), se.consumerSharedMediaState(r, { audio: !1 }), u.audioTrack = void 0) : a === "video" && (u.setVideoEnabled(!1), se.consumerSharedMediaState(r, { video: !1 }), u.videoTrack = void 0);
    }
  } }, { key: "processConsumerResumed", value: function(r) {
    var t = this.processMedia(r), e = t.peerId, a = t.kind, n = t.appData, i = t.track, s = t.remotelyPaused, u = t.producerId;
    if (e) {
      P.info("ParticipantController::processConsumerResumed", { consumer: { id: r, peerId: e, kind: a, appData: n, remotelyPaused: s, producerId: u } });
      var l = this.participants.joined.get(e);
      if (l) {
        if (n.screenShare) {
          a === "video" ? l.screenShareTracks.video = i : a === "audio" && (l.screenShareTracks.audio = i), l.setScreenShareEnabled(!0), se.consumerSharedMediaState(r, { screen: !0 });
          return;
        }
        a === "video" ? (l.videoTrack = i, l.setVideoEnabled(!0), se.consumerSharedMediaState(r, { video: !0 })) : a === "audio" && (l.audioTrack = i, l.setAudioEnabled(l.audioEnabled), se.consumerSharedMediaState(r, { audio: l.audioEnabled }));
      }
    }
  } }, { key: "processConsumerPaused", value: function(r) {
    P.info("ParticipantController::processConsumerPaused called for consumerId: ".concat(r));
    var t = this.processMedia(r), e = t.peerId, a = t.kind, n = t.track, i = t.appData, s = t.remotelyPaused, u = t.producerId;
    if (e) {
      P.info("ParticipantController::processConsumerPaused", { consumer: { id: r, peerId: e, kind: a, appData: i, remotelyPaused: s, producerId: u } });
      var l = this.participants.joined.get(e);
      l && (a === "video" ? (l.videoTrack = n, l.setVideoEnabled(!1), se.consumerSharedMediaState(r, { video: !1 })) : a === "audio" && (l.audioTrack = n, l.setAudioEnabled(l.audioEnabled), se.consumerSharedMediaState(r, { audio: l.audioEnabled })));
    }
  } }, {
    key: "processNewConsumer",
    value: function(r) {
      var t = this.processMedia(r), e = t.peerId, a = t.kind, n = t.remotelyPaused, i = t.track, s = t.appData, u = t.producerId;
      if (e) {
        P.info("ParticipantController::processNewConsumer", { consumer: { id: r, peerId: e, kind: a, remotelyPaused: n, appData: s, producerId: u } });
        var l = this.participants.joined.get(e);
        if (l) {
          if (s.screenShare) {
            a === "video" ? l.screenShareTracks.video = i : a === "audio" && (l.screenShareTracks.audio = i), (!n || f(this, lr).permissions.isRecorder || ue.hasFeature(de.SCREEENSHARE_ERR_HACK)) && l.setScreenShareEnabled(!0), s.supportsRemoteControl && (l.supportsRemoteControl = !0), this.participants.broadcastMessage("screenshareConsumerCreated", { producerId: u, peerId: e, screenShare: !0, consumerId: r, consumerPeerId: f(this, lr).id }), P.info("ParticipantController::newScreenshareConsumer::screenshareConsumerCreated", { consumer: { id: r, peerId: e, kind: a, remotelyPaused: n, appData: s, producerId: u } });
            return;
          }
          a === "video" ? (l.videoTrack = i, n || l.setVideoEnabled(!0), se.consumerSharedMediaState(r, { video: !n })) : a === "audio" && f(this, ir) instanceof Ce && (l.audioTrack = i, n || l.setAudioEnabled(!0), se.consumerSharedMediaState(r, { audio: !n }));
        }
      }
    }
    /**
    * @access private
    *
    * This function formates the stage status coming from socket service.
    */
  }], [{
    key: "getStageStatusFromStageType",
    value: function(r) {
      switch (r) {
        case bt.UNSPECIFIED:
          return "OFF_STAGE";
        case bt.REQUESTED_STAGE:
          return "REQUESTED_TO_JOIN_STAGE";
        case bt.APPROVED_STAGE:
          return "ACCEPTED_TO_JOIN_STAGE";
        case bt.OFF_STAGE:
          return "OFF_STAGE";
        case bt.ON_STAGE:
          return "ON_STAGE";
        default:
          return "OFF_STAGE";
      }
    }
    /**
    * @access private
    * This function formates the chat message coming from
    * socket service. This is not meant for external use.
    */
  }, { key: "formatSocketServiceMessage", value: function(r) {
    var t = o.getStageStatusFromStageType(r.stageType);
    return { id: r.peerId, userId: r.userId, name: r.displayName, stageType: t, customParticipantId: r.customParticipantId, presetId: r.presetId, picture: r.displayPictureUrl, waitlisted: r.waitlisted };
  } }]), o;
}());
function j1() {
  return Mr();
}
var pa = H1;
nn([A.trace("ParticipantController.updatePageParticipants")], pa.prototype, "updatePageParticipants", 1);
nn([A.trace("ParticipantController.setupChatEvents")], pa.prototype, "setupChatEvents", 1);
nn([A.trace("ParticipantController.setupEvents")], pa.prototype, "setupEvents", 1);
nn([A.trace("ParticipantController.processMedia")], pa.prototype, "processMedia", 1);
nn([A.trace("ParticipantController.processConsumerClosed")], pa.prototype, "processConsumerClosed", 1);
nn([A.trace("ParticipantController.processConsumerResumed")], pa.prototype, "processConsumerResumed", 1);
nn([A.trace("ParticipantController.processConsumerPaused")], pa.prototype, "processConsumerPaused", 1);
nn([A.trace("ParticipantController.processNewConsumer")], pa.prototype, "processNewConsumer", 1);
var G1 = Object.defineProperty, B1 = Object.getOwnPropertyDescriptor, q1 = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? B1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && G1(r, t, a), a;
}, Kv = /* @__PURE__ */ function(o) {
  return o[o.User = 0] = "User", o[o.Meeting = 1] = "Meeting", o;
}(Kv || {}), zc = (ja = /* @__PURE__ */ new K(), Zn = /* @__PURE__ */ new K(), Xi = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a, n) {
    var i;
    return I(this, r), i = c.call(this), z(b(i), ja, { get: W1, set: void 0 }), R(b(i), "selfActiveTab", void 0), R(b(i), "broadcastTabChanges", void 0), z(b(i), Zn, { writable: !0, value: void 0 }), z(b(i), Xi, { writable: !0, value: void 0 }), R(b(i), "viewType", void 0), R(b(i), "meetingStartedTimestamp", void 0), R(b(i), "meetingTitle", void 0), V(b(i), Zn, t), i.viewType = e, V(b(i), Xi, a), i.meetingTitle = n, i.broadcastTabChanges = t.permissions.canSpotlight, i;
  }
  return D(r, [{
    key: "joined",
    get: function() {
      var e;
      return (e = f(this, ja)) === null || e === void 0 ? void 0 : e.roomJoined;
    }
    /**
    * The room name of the meeting.
    */
  }, {
    key: "roomName",
    get: function() {
      var e;
      return (e = f(this, ja)) === null || e === void 0 ? void 0 : e.roomName;
    }
    /**
    * Has room-node connection been made.
    */
  }, {
    key: "mediaConnected",
    get: function() {
      if (f(this, ja) instanceof qe) {
        var e, a;
        return (e = (a = f(this, ja)) === null || a === void 0 ? void 0 : a.mediaConnected) !== null && e !== void 0 ? e : !1;
      }
      return f(this, Xi).isConnected;
    }
    /**
    * This is set to true if user has succesfully connected to the socket.
    */
  }, {
    key: "socketConnected",
    get: function() {
      return f(this, Xi).isConnected;
    }
    /**
    * Sets current user as broadcasting tab changes
    * @param broadcastTabChanges
    */
  }, {
    key: "setBroadcastTabChanges",
    value: function(e) {
      if (!f(this, Zn).permissions.canSpotlight)
        throw P.error("DyteSpotlight::setSpotlighted::permission_denied"), new q("User does not have permission to toggle spotlight");
      this.broadcastTabChanges = e, this.emit("broadcastTabChangesUpdate", this.broadcastTabChanges), this.broadcastTabChanges && this.assertActiveTabToRoom();
    }
    /**
    * Sets current active tab for user
    * @param spotlightTab
    */
  }, { key: "setSelfActiveTab", value: function(e, a) {
    var n;
    P.info("DyteSpotlight::setActiveTab", { spotlight: { currentTab: { id: e.id, type: e.type } } }), this.selfActiveTab = e, a === 0 && this.emit("selfTabUpdate", e), (n = f(this, Zn).permissions) !== null && n !== void 0 && n.canSpotlight && this.broadcastTabChanges && a === 0 && this.assertActiveTabToRoom();
  } }, { key: "assertActiveTabToRoom", value: function() {
    f(this, ja) instanceof qe && this.selfActiveTab && f(this, ja).assertSpotlightToRoom({ userId: f(this, Zn).userId, currentTab: this.selfActiveTab, peerId: void 0 });
  } }]), r;
}(fr));
function W1() {
  return Mr();
}
zc = q1([jr(function(o) {
  throw new q(o.message, "0800");
})], zc);
function J1(o) {
  var c = "", r = [""], t = [r], e = 0, a = 0, n = !0, i, s = ae(o), u;
  try {
    for (s.s(); !(u = s.n()).done; )
      i = u.value, i === '"' ? (n && i === c && (r[e] += i), n = !n) : i === "," && n ? i = r[++e] = "" : i === `
` && n ? (c === "\r" && (r[e] = r[e].slice(0, -1)), r = t[++a] = [i = ""], e = 0) : r[e] += i, c = i;
  } catch (l) {
    s.e(l);
  } finally {
    s.f();
  }
  return t;
}
var K1 = Object.defineProperty, z1 = Object.getOwnPropertyDescriptor, Q1 = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? z1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && K1(r, t, a), a;
}, $i = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), R(b(t), "transcripts", void 0), t.transcripts = [], t;
  }
  return D(r, [{ key: "getActiveTranscript", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return n = Hr(), p.next = 3, n.getActiveTranscript();
            case 3:
              i = p.sent, s = i.transcript, u = $i.parseTranscripts(s), this.transcripts = u;
            case 7:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onTranscript", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              this.transcripts.push(n), this.emit("transcript", n);
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{
    key: "parseTranscript",
    value: function(e) {
      try {
        if (!e)
          return;
        var a = J1(e), n = ar(a, 1), i = ar(n[0], 4), s = i[0], u = i[1], l = i[2], p = i[3], h = { id: Bs(), name: l, peerId: u, transcript: p, isPartialTranscript: !1, date: new Date(parseInt(s, 10) * 1e3) };
        return h;
      } catch (v) {
        P.error("Failed to parse transcript: ".concat(e), v);
        return;
      }
    }
    /**
    * Parse a multi-line transcript
    */
  }, { key: "parseTranscripts", value: function(e) {
    if (!e)
      return [];
    var a = e.split(`
`).map($i.parseTranscript);
    return a;
  } }]), r;
}(fr);
$i = Q1([jr(function(o) {
  throw new q(o.message, "0000");
})], $i);
var Y1 = Object.defineProperty, X1 = Object.getOwnPropertyDescriptor, Z1 = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? X1(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && Y1(r, t, a), a;
}, hi = /* @__PURE__ */ new K(), bs = /* @__PURE__ */ new K(), zv = /* @__PURE__ */ function() {
  function o(c, r, t, e) {
    I(this, o), z(this, bs, { get: x1, set: void 0 }), R(this, "meta", void 0), R(this, "ai", void 0), z(this, hi, { writable: !0, value: void 0 }), R(this, "aiSocketHandler", void 0), this.meta = new zc(c, Le.isV2AuthToken ? c.config.viewType : c.permissions.viewType, r, e), this.ai = new $i(), V(this, hi, c), this.aiSocketHandler = t, c.config.viewType !== Rr.Chat && this.setupEvents();
  }
  return D(o, [{ key: "roomName", get: function() {
    return this.meta.roomName;
  } }, { key: "conditionallySetActiveTab", value: function(r) {
    var t;
    r != null && r.currentTab && ((t = this.meta.selfActiveTab) === null || t === void 0 ? void 0 : t.id) !== r.currentTab.id && (this.meta.setSelfActiveTab(r.currentTab, Kv.Meeting), this.meta.emit("activeTabUpdate", r.currentTab));
  } }, { key: "setupEvents", value: function() {
    var r = this;
    $.on(M.ROOM_JOINED, function(t) {
      t.startedAt && (r.meta.meetingStartedTimestamp = new Date(t.startedAt), r.meta.emit("meetingStartTimeUpdate", { meetingStartedTimestamp: r.meta.meetingStartedTimestamp }));
    }), $.on(M.ROOM_STATE, function(t) {
      var e = t.createdAt, a = r.meta.meetingStartedTimestamp;
      if (e && !a) {
        var n = new Date(e * 1e3);
        r.meta.meetingStartedTimestamp = n, r.meta.emit("meetingStartTimeUpdate", { meetingStartedTimestamp: r.meta.meetingStartedTimestamp });
      }
    }), $.on(M.ROOM_NODE_CONNECTED, function() {
      r.meta.emit("connected");
    }), $.on(M.ROOM_NODE_DISCONNECTED, function() {
      r.meta.emit("disconnected");
    }), $.on(M.ICE_CONNECTED, function(t) {
      var e = t.transport;
      r.meta.emit("iceConnected", { transport: e });
    }), $.on(M.ICE_DISCONNECTED, function(t) {
      var e = t.transport;
      r.meta.emit("iceDisconnected", { transport: e });
    }), $.on(M.ICE_RECONNECTING, function(t) {
      var e = t.transport;
      r.meta.emit("iceReconnecting", { transport: e });
    }), $.on(M.ICE_FAILED, function(t) {
      var e = t.transport;
      r.meta.emit("iceFailed", { transport: e });
    }), $.on(M.PRODUCER_SCORE_UPDATE, function(t) {
      var e = t.score;
      e < 5 && r.meta.emit("poorConnection", { score: e });
    }), $.on(M.SOCKET_SERVICE_CONNECTED, function() {
      r.meta.emit("socketConnected");
    }), $.on(M.SOCKET_SERVICE_DISCONNECTED, function() {
      r.meta.emit("socketDisconnected");
    }), $.on(M.SOCKET_SERVICE_RECONNECTING, function() {
      r.meta.emit("socketReconnecting");
    }), $.on(M.SOCKET_SERVICE_RECONNECTION_ATTEMPT, function(t) {
      var e = t.attempt;
      r.meta.emit("socketReconnectAttempt", { attempt: e });
    }), $.on(M.SOCKET_SERVICE_RECONNECT_FAILURE, function(t) {
      var e = t.attempt;
      r.meta.emit("socketReconnectFailure", { attempt: e });
    }), $.on(M.SOCKET_SERVICE_RECONNECTED, function() {
      r.meta.emit("socketReconnected");
    }), $.on(M.SOCKET_SERVICE_FAILED, function() {
      r.meta.emit("socketFailure");
    }), $.on(M.ROOM_NODE_CONNECTION_ERROR, function(t) {
      var e = t.message;
      e.match(/room '([a-z0-9-]+)' not found/i) && r.meta.emit("connectionError", { reason: "ROOM_NOT_FOUND" });
    }), f(this, hi).permissions.canSpotlight && (P.info("DyteSpotlightController::Asserting Spotlight"), f(this, bs) instanceof qe && this.meta.selfActiveTab && f(this, bs).assertSpotlightToRoom({ userId: f(this, hi).userId, currentTab: this.meta.selfActiveTab, peerId: void 0 })), $.on(M.PEER_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                f(r, hi).permissions.canSpotlight && f(r, bs) instanceof qe && r.meta.selfActiveTab && f(r, bs).assertSpotlightToPeer({ userId: f(r, hi).userId, currentTab: r.meta.selfActiveTab, peerId: a.id });
              case 1:
              case "end":
                return i.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.ROOM_MESSAGE, function(t) {
      var e, a;
      t.roomMessageType === "spotlight" && (P.info("Spotlight Assertion Received", { spotlight: { spotlighter: { id: t.userId }, currentTab: { id: (e = t.currentTab) === null || e === void 0 ? void 0 : e.id, type: (a = t.currentTab) === null || a === void 0 ? void 0 : a.type } } }), r.conditionallySetActiveTab(t));
    }), $.on(M.MESSAGE, function(t) {
      var e, a;
      t.roomMessageType === "spotlight" && (P.info("Spotlight Assertion Received", { spotlight: { spotlighter: { id: t.userId }, currentTab: { id: (e = t.currentTab) === null || e === void 0 ? void 0 : e.id, type: (a = t.currentTab) === null || a === void 0 ? void 0 : a.type } } }), r.conditionallySetActiveTab(t));
    }), this.aiSocketHandler.on(le.transcript, function(t) {
      var e = t.meetingId, a = t.transcript, n = $i.parseTranscript(a);
      if (!n) {
        P.warn("Received empty transcript data");
        return;
      }
      r.ai.onTranscript(n), r.meta.emit("transcript", n);
      var i = n.peerId, s = n.name, u = n.transcript;
      P.debug("".concat(e, " Received transcript for peer ").concat(i, " - ").concat(s, ": ").concat(u));
    });
  } }]), o;
}();
function x1() {
  return Mr();
}
Z1([A.trace("MetaController.setupEvents")], zv.prototype, "setupEvents", 1);
var eI = Object.defineProperty, rI = Object.getOwnPropertyDescriptor, Nl = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? rI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && eI(r, t, a), a;
}, Dr = { getPeer: 14, getPeers: 15, chatMessage: 16, getRoomName: 17, getDisplayTitle: 18, getPluginInitiator: 19, customPluginEventToParent: 20, peerJoined: 22, peerLeft: 23, sendData: 24 }, Gs = (xr = /* @__PURE__ */ new K(), ln = /* @__PURE__ */ new K(), st = /* @__PURE__ */ new K(), Zi = /* @__PURE__ */ new K(), xi = /* @__PURE__ */ new K(), dn = /* @__PURE__ */ new K(), es = /* @__PURE__ */ new K(), et = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a, n, i, s) {
    var u, l = t.baseURL, p = t.createdAt, h = t.description, v = t.id, m = t.name, g = t.organizationId, w = t.picture, k = t.private, T = t.published, _ = t.staggered, E = t.tags, S = t.type, C = t.updatedAt;
    return I(this, r), u = c.call(this), z(b(u), et, { get: tI, set: void 0 }), z(b(u), xr, { writable: !0, value: void 0 }), z(b(u), ln, { writable: !0, value: void 0 }), R(b(u), "baseURL", void 0), R(b(u), "createdAt", void 0), R(b(u), "description", void 0), R(b(u), "id", void 0), R(b(u), "name", void 0), z(b(u), st, { writable: !0, value: void 0 }), z(b(u), Zi, { writable: !0, value: void 0 }), z(b(u), xi, { writable: !0, value: void 0 }), R(b(u), "organizationId", void 0), R(b(u), "picture", void 0), R(b(u), "private", void 0), R(b(u), "published", void 0), R(b(u), "staggered", void 0), R(b(u), "tags", void 0), R(b(u), "type", void 0), R(b(u), "updatedAt", void 0), z(b(u), dn, { writable: !0, value: void 0 }), R(b(u), "config", void 0), z(b(u), es, { writable: !0, value: void 0 }), R(b(u), "active", void 0), R(b(u), "iframes", void 0), R(b(u), "enabledBy", void 0), u.baseURL = l, u.createdAt = new Date(p), u.description = h, u.id = v, u.name = m, V(b(u), st, n), u.organizationId = g, u.picture = w, u.private = k, u.published = T, u.staggered = _, u.tags = E, u.type = S, u.updatedAt = new Date(C), u.active = !1, u.iframes = /* @__PURE__ */ new Map(), V(b(u), xr, e), V(b(u), ln, a), V(b(u), Zi, i), V(b(u), xi, s), u.enabledBy = "", u;
  }
  return D(r, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var e;
      return ((e = f(this, et)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
    }
  ) }, { key: "sendIframeEvent", value: function(e) {
    this.iframes.size && this.iframes.forEach(function(a) {
      var n = a.iframe;
      n && (navigator.isReactNative ? n.postMessage(JSON.stringify(e)) : n.contentWindow.postMessage(e, "*"));
    });
  } }, {
    key: "handleIframeMessage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y, Z, F, x, ie, B, H, U, J, X, re, pe, Ge;
        return d().wrap(function(te) {
          for (; ; )
            switch (te.prev = te.next) {
              case 0:
                if (f(this, ln) !== "socket-service") {
                  te.next = 57;
                  break;
                }
                u = n, l = u.payload, p = u.uuid, h = u.type, te.t0 = h, te.next = te.t0 === Ee.customPluginEventToRoom ? 6 : te.t0 === Ee.customPluginEventToPeers ? 8 : te.t0 === Ee.enablePluginForRoom ? 10 : te.t0 === Ee.enablePluginForPeers ? 12 : te.t0 === Ee.disablePluginForRoom ? 14 : te.t0 === Ee.disablePluginForPeers ? 16 : te.t0 === Ee.storeInsertKeys ? 18 : te.t0 === Ee.storeGetKeys ? 20 : te.t0 === Ee.storeDeleteKeys ? 22 : te.t0 === Ee.storeDelete ? 24 : te.t0 === Dr.chatMessage ? 26 : te.t0 === Dr.getPeer ? 40 : te.t0 === Dr.getPeers ? 45 : te.t0 === Dr.getPluginInitiator ? 48 : te.t0 === Dr.getDisplayTitle ? 50 : te.t0 === Dr.getRoomName ? 52 : te.t0 === Dr.customPluginEventToParent ? 54 : 56;
                break;
              case 6:
                return f(this, xr).customPluginEventToRoom(this.id, l, p), te.abrupt("break", 56);
              case 8:
                return f(this, xr).customPluginEventToPeers(this.id, l.peerIds, l, p), te.abrupt("break", 56);
              case 10:
                return f(this, xr).enablePluginForRoom(this.id, p), te.abrupt("break", 56);
              case 12:
                return f(this, xr).enablePluginForPeers(this.id, l.peerIds, p), te.abrupt("break", 56);
              case 14:
                return f(this, xr).disablePluginForRoom(this.id, p), te.abrupt("break", 56);
              case 16:
                return f(this, xr).disablePluginForPeers(this.id, l.peerIds, p), te.abrupt("break", 56);
              case 18:
                return f(this, xr).storeInsertKeys(this.id, l.store, l.insertKeys, p), te.abrupt("break", 56);
              case 20:
                return f(this, xr).storeGetKeys(this.id, l.store, l.getKeys, p), te.abrupt("break", 56);
              case 22:
                return f(this, xr).storeDeleteKeys(this.id, l.store, l.deleteKeys, p), te.abrupt("break", 56);
              case 24:
                return f(this, xr).storeDelete(this.id, l.store, p), te.abrupt("break", 56);
              case 26:
                if (v = l.messagePayload, m = l.peerIds, f(this, xi)) {
                  te.next = 30;
                  break;
                }
                return this.sendIframeEvent({ type: Dr.chatMessage, uuid: u.uuid, payload: { error: "Chat is disabled for this room." } }), te.abrupt("return");
              case 30:
                return te.prev = 30, te.next = 33, f(this, xi).sendMessage(v, m);
              case 33:
                this.sendIframeEvent({ type: Dr.chatMessage, uuid: u.uuid, payload: { success: !0 } }), te.next = 39;
                break;
              case 36:
                te.prev = 36, te.t1 = te.catch(30), this.sendIframeEvent({ type: Dr.chatMessage, uuid: u.uuid, payload: { error: te.t1 } });
              case 39:
                return te.abrupt("break", 56);
              case 40:
                return k = l.peerId, T = Q(Q({}, f(this, st)), {}, { isRecorder: (g = f(this, st).permissions) === null || g === void 0 ? void 0 : g.isRecorder, isHidden: f(this, st).permissions.hiddenParticipant }), k ? (w = f(this, Zi).joined.get(l.peerId), f(this, st).id === k && (w = T)) : w = T, this.sendIframeEvent({ type: Dr.getPeer, payload: { peer: w && _c(w) }, uuid: u.uuid }), te.abrupt("break", 56);
              case 45:
                return _ = f(this, Zi).joined.toArray().map(function(Ue) {
                  return _c(Ue);
                }), this.sendIframeEvent({ type: Dr.getPeers, payload: { peers: _ }, uuid: u.uuid }), te.abrupt("break", 56);
              case 48:
                return this.sendIframeEvent({ type: Dr.getPluginInitiator, payload: { enabledBy: this.enabledBy }, uuid: u.uuid }), te.abrupt("break", 56);
              case 50:
                return this.sendIframeEvent({ type: Dr.getDisplayTitle, payload: { displayTitle: f(this, et).meetingTitle }, uuid: u.uuid }), te.abrupt("break", 56);
              case 52:
                return this.sendIframeEvent({ type: Dr.getRoomName, payload: { roomName: f(this, et).roomName }, uuid: u.uuid }), te.abrupt("break", 56);
              case 54:
                return this.emit(u.payload.eventName, u.payload.data), te.abrupt("break", 56);
              case 56:
                return te.abrupt("return");
              case 57:
                E = function(xe, Ve) {
                  if (f(i, st).userId === xe)
                    return f(i, st).id;
                  var nr;
                  return Ve.forEach(function(ke) {
                    ke.userId === xe && (nr = ke.id);
                  }), nr;
                }, S = n, te.t2 = S.type, te.next = te.t2 === "pluginEvent" || te.t2 === "storePluginData" || te.t2 === "getPluginData" || te.t2 === "enablePluginForAll" || te.t2 === "enablePluginForUser" || te.t2 === "disablePluginForUser" || te.t2 === "chatMessage" ? 62 : te.t2 === "getJoinedPeers" ? 67 : te.t2 === "getPeerInfo" ? 72 : te.t2 === "getRoomState" ? 77 : te.t2 === "getPluginInitiatorId" ? 85 : te.t2 === "getPluginInitiatorUserId" ? 93 : te.t2 === "pluginEventToParent" ? 100 : te.t2 === "toggleViewMode" ? 102 : 104;
                break;
              case 62:
                return te.next = 64, f(this, et).sendMessage(S);
              case 64:
                return s = te.sent, this.sendIframeEvent(s), te.abrupt("break", 104);
              case 67:
                return te.next = 69, f(this, et).getRoomState();
              case 69:
                return s = te.sent, this.sendIframeEvent({ type: "websocket/get-joined-peers", payload: Q(Q({}, S.payload), {}, { peers: s.payload.roomState.peers }) }), te.abrupt("break", 104);
              case 72:
                return te.next = 74, f(this, et).sendMessage({ type: S.type, payload: Q(Q({}, S.payload), {}, { peerId: (C = (L = S.payload) === null || L === void 0 ? void 0 : L.peerId) !== null && C !== void 0 ? C : f(this, st).id }) });
              case 74:
                return s = te.sent, this.sendIframeEvent(s), te.abrupt("break", 104);
              case 77:
                return te.next = 79, f(this, et).getRoomState();
              case 79:
                return s = te.sent, j = s.payload.roomState, ee = j.plugins, Y = j.peers, Z = ee.find(function(Ue) {
                  return Ue.id === i.id;
                }), F = Z.enabledBy, x = E(F, Y), this.sendIframeEvent({ type: "websocket/get-room-state", payload: Q(Q({}, S.payload), {}, { roomName: s.payload.roomState.roomName, pluginInitiatorPeerId: x, pluginInitiatorUserId: F, peers: s.payload.roomState.peers, displayTitle: s.payload.roomState.displayTitle, roomUUID: s.payload.roomState.roomUUID, currentPeer: f(this, st).id, isRecorder: (G = f(this, st).permissions) === null || G === void 0 ? void 0 : G.isRecorder }) }), te.abrupt("break", 104);
              case 85:
                return te.next = 87, f(this, et).getRoomState();
              case 87:
                return s = te.sent, ie = s.payload.roomState, B = ie.plugins, H = ie.peers, U = B.find(function(Ue) {
                  return Ue.id === i.id;
                }), J = U.enabledBy, X = E(J, H), this.sendIframeEvent({ type: "websocket/get-plugin-initiator-peer-id", payload: Q(Q({}, S.payload), {}, { pluginInitiatorPeerId: X }) }), te.abrupt("break", 104);
              case 93:
                return te.next = 95, f(this, et).getRoomState();
              case 95:
                return s = te.sent, re = s.payload.roomState.plugins, pe = re.find(function(Ue) {
                  return Ue.id === i.id;
                }), Ge = pe.enabledBy, this.sendIframeEvent({ type: "websocket/get-plugin-initiator-user-id", payload: Q(Q({}, S.payload), {}, { pluginInitiatorUserId: Ge }) }), te.abrupt("break", 104);
              case 100:
                return this.emit(S.payload.eventName, S.payload.data), te.abrupt("break", 104);
              case 102:
                return this.emit("toggleViewMode", S.payload.data), te.abrupt("break", 104);
              case 104:
              case "end":
                return te.stop();
            }
        }, a, this, [[30, 36]]);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * This method is used to send arbitrary data to the plugin.
    * @param payload The payload that you want to send inside the plugin.
    * @param payload.eventName Name of the event.
    * This is used to listen for the event in plugin SDK.
    * @param payload.data Data you wish to emit. It can assume any data type.
    */
  }, {
    key: "sendData",
    value: function(e) {
      if (f(this, ln) === "socket-service") {
        this.sendIframeEvent({ type: Dr.sendData, uuid: "", payload: e });
        return;
      }
      this.sendIframeEvent({ type: M.PLUGIN_INTERNAL_DATA, payload: { pluginId: this.id, data: e } });
    }
    /**
    * This method is used for cleaning up event listeners attached to an iframe. It must
    * be used before the iframe is removed from the DOM.
    * @param viewId ID of the view corresponding to this iframe. Default is 'default'.
    */
  }, {
    key: "removePluginView",
    value: function() {
      var e, a = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "default", n = (e = this.iframes.get(a)) !== null && e !== void 0 ? e : {}, i = n.iframe, s = n.listener;
      (i || s) && (navigator.isReactNative ? i.props.onMessage = void 0 : window.removeEventListener("message", s), this.iframes.delete(a));
    }
    /**
    * This method adds the communcation layer between the plugin inside the iframe
    * and the core application (meeting object) in the main window.
    * @param iframe Iframe element to display this plugin.
    * @param viewId ID of the view corresponding to this iframe. Default is 'default'.
    */
  }, { key: "addPluginView", value: function(e) {
    var a, n = this, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "default";
    if (!f(this, es))
      throw P.error("DytePlugin::addPluginView::no_auth_token_set_for_plugin"), new q("No auth token set for plugin.");
    if (!e)
      throw P.error("DytePlugin::addPluginView::iframe_was_not_provided"), new q("Iframe was not provided.");
    this.removePluginView(i);
    var s = e, u = new URL(this.baseURL), l = { auth: f(this, es), parent: navigator.isReactNative ? this.baseURL : window.location.origin, backend: fe.apiBase, pluginId: this.id, roomName: (a = f(this, et).roomName) !== null && a !== void 0 ? a : "", displayTitle: f(this, et).meetingTitle };
    if (Object.keys(l).forEach(function(h) {
      u.searchParams.set(h, l[h]);
    }), s.src = u.href, s.allow = "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture", s.title = i, navigator.isReactNative)
      s.props.onMessage = function(h) {
        n.handleIframeMessage(JSON.parse(h.nativeEvent.data));
      }, this.iframes.set(i, { iframe: s });
    else {
      var p = /* @__PURE__ */ function() {
        var h = y(/* @__PURE__ */ d().mark(function v(m) {
          return d().wrap(function(w) {
            for (; ; )
              switch (w.prev = w.next) {
                case 0:
                  if (m.source !== e.contentWindow) {
                    w.next = 3;
                    break;
                  }
                  return w.next = 3, n.handleIframeMessage(m.data);
                case 3:
                case "end":
                  return w.stop();
              }
          }, v);
        }));
        return function(m) {
          return h.apply(this, arguments);
        };
      }();
      window.addEventListener("message", p), this.iframes.set(i, { iframe: s, listener: p });
    }
  } }, {
    key: "setActive",
    value: function(e) {
      var a;
      if (this.active = e, e) {
        var n;
        this.emit("stateUpdate", { active: this.active, pluginId: this.id, bind: this.addPluginView.bind(this), views: (n = this.config) === null || n === void 0 ? void 0 : n.views });
        return;
      }
      this.active = !1, this.emit("stateUpdate", { active: this.active, pluginId: this.id, views: (a = this.config) === null || a === void 0 ? void 0 : a.views });
    }
    /**
    * @access private
    * Not for external use
    */
    // NOTE(roerohan): Enable this plugin for the current user.
  }, {
    key: "activateForSelf",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n, i, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                return n = Hr(), l.next = 3, n.authorizePlugin(this.id);
              case 3:
                return i = l.sent, V(this, es, i), V(this, dn, new Date()), l.prev = 6, l.next = 9, n.getPluginConfig(this.baseURL);
              case 9:
                s = l.sent, this.config = s, l.next = 16;
                break;
              case 13:
                l.prev = 13, l.t0 = l.catch(6), P.error("DytePlugin::activateForSelf", { error: l.t0 });
              case 16:
                this.setActive(!0), this.emit("enabled");
              case 18:
              case "end":
                return l.stop();
            }
        }, a, this, [[6, 13]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * @access private
    * Not for external use
    */
    // NOTE(roerohan): Disable this plugin for the current user.
  }, {
    key: "deactivateForSelf",
    value: function() {
      var e = this;
      Array.from(this.iframes.keys()).forEach(function(a) {
        e.removePluginView(a);
      }), V(this, dn, void 0), this.iframes.clear(), this.setActive(!1), this.emit("closed");
    }
    /**
    * @deprecated
    */
  }, {
    key: "enable",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                return i.abrupt("return", this.activateForSelf());
              case 1:
              case "end":
                return i.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * @deprecated
    */
  }, { key: "disable", value: function() {
    return this.deactivateForSelf();
  } }, { key: "activate", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!this.active) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if ((n = f(this, st).permissions) !== null && n !== void 0 && (n = n.plugins) !== null && n !== void 0 && n.canStart) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              if (f(this, ln) !== "socket-service") {
                s.next = 8;
                break;
              }
              f(this, xr).addPlugin(this.id, this.staggered), s.next = 10;
              break;
            case 8:
              return s.next = 10, f(this, et).addRoomPlugin(this);
            case 10:
              V(this, dn, new Date()), P.info("plugin::activated", { plugin: { id: this.id, enabledBy: this.enabledBy, name: this.name } });
            case 12:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "deactivate", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.activate) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if ((n = f(this, st).permissions) !== null && n !== void 0 && (n = n.plugins) !== null && n !== void 0 && n.canClose) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              if (f(this, ln) !== "socket-service") {
                s.next = 8;
                break;
              }
              f(this, xr).removePlugin(this.id), s.next = 10;
              break;
            case 8:
              return s.next = 10, f(this, et).removeRoomPlugin(this);
            case 10:
              P.info("plugin::deactivated", { plugin: { id: this.id, name: this.name, duration: new Date().getTime() - f(this, dn).getTime() } }), V(this, dn, void 0);
            case 12:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr));
function tI() {
  return Mr();
}
Nl([A.trace("PluginController.activatePlugin")], Gs.prototype, "activate", 1);
Nl([A.trace("PluginController.deactivatePlugin")], Gs.prototype, "deactivate", 1);
Gs = Nl([jr(function(o) {
  throw new q(o.message, "0600");
})], Gs);
var Hp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, { onAddEvent: "pluginAdded", onDeleteEvent: "pluginDeleted" });
  }
  return D(r, [{ key: "add", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return Oe(Pe(r.prototype), "add", this).call(this, e, a);
  } }, { key: "delete", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return Oe(Pe(r.prototype), "delete", this).call(this, e, a, n);
  } }]), r;
}(Ol), aI = Object.defineProperty, nI = Object.getOwnPropertyDescriptor, iI = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? nI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && aI(r, t, a), a;
}, Qc = /* @__PURE__ */ D(function o() {
  I(this, o), R(this, "all", void 0), R(this, "active", void 0), this.all = new Hp(), this.active = new Hp();
});
Qc = iI([jr(function(o) {
  throw new q(o.message, "0600");
})], Qc);
var sI = Object.defineProperty, oI = Object.getOwnPropertyDescriptor, $l = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? oI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && sI(r, t, a), a;
}, uI = (pn = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, pn, { writable: !0, value: void 0 }), V(this, pn, c);
  }
  return D(o, [{ key: "createChannel", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
      var i, s, u, l, p, h = arguments;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return i = h.length > 3 && h[3] !== void 0 ? h[3] : "public", s = h.length > 4 && h[4] !== void 0 ? h[4] : !1, u = { displayName: e, targetUserIds: a, displayPictureUrl: n, visibility: i, isDirectMessage: s }, s && (u.visibility = "private"), m.next = 6, f(this, pn).sendMessagePromise(_n.createChatChannel, H_.toBinary(u));
            case 6:
              return l = m.sent, p = ba.fromBinary(l.payload).chatChannels, m.abrupt("return", o.formatChannel(p[0]));
            case 9:
            case "end":
              return m.stop();
          }
      }, t, this);
    }));
    function r(t, e, a) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "updateChannel", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.next = 2, f(this, pn).sendMessagePromise(_n.updateChatChannel, G_.toBinary({ chatChannelId: e, targetUserIds: a.memberIds, displayName: a.displayName, displayPictureUrl: a.displayPictureUrl, visibility: a.visibility }));
            case 2:
              return n = u.sent, i = ba.fromBinary(n.payload).chatChannels, u.abrupt("return", o.formatChannel(i[0]));
            case 5:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getChannelMembers", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.prev = 0, i.next = 3, f(this, pn).sendMessagePromise(_n.getChannelMembers, W_.toBinary({ chatChannelId: e }));
            case 3:
              return a = i.sent, i.abrupt("return", eR.fromBinary(a.payload).channelMembers.map(function(s) {
                var u = s.id, l = ah(s, pf);
                return Q(Q({}, l), {}, { userId: u });
              }));
            case 7:
              return i.prev = 7, i.t0 = i.catch(0), i.abrupt("return", []);
            case 10:
            case "end":
              return i.stop();
          }
      }, t, this, [[0, 7]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "on", value: function(r, t) {
    var e, a;
    switch (r) {
      case _n.createChatChannel: {
        e = ba.fromBinary.bind(ba), a = ba.create();
        break;
      }
      case _n.updateChatChannel: {
        e = ba.fromBinary.bind(ba), a = ba.create();
        break;
      }
    }
    if (!e) {
      P.warn("ChatChannelSocketHandler::Event ".concat(r, " is not recognized"));
      return;
    }
    f(this, pn).on(r, function(n) {
      var i = n.payload, s = a;
      try {
        s = e(i);
      } catch (u) {
        P.error("ChatChannelSocketHandler::on::binary_decode_error", { error: u });
      }
      return t(s);
    });
  } }], [{ key: "formatChannel", value: function(r) {
    var t, e = r.latestMessageAndUnreadCount, a = Q(Q({}, r), {}, { id: r.chatChannelId, memberIds: r.targetUserIds, unreadCount: (t = e == null ? void 0 : e.unreadCount) !== null && t !== void 0 ? t : 0 });
    return e != null && e.message && (a.latestMessage = Ht.formatSocketServiceMessage(e.message)), delete a.chatChannelId, delete a.targetUserIds, delete a.latestMessageAndUnreadCount, a;
  } }]), o;
}()), Fn = uI;
$l([A.trace("ChatChannelHandler.createChannel")], Fn.prototype, "createChannel", 1);
$l([A.trace("ChatChannelHandler.updateChannel")], Fn.prototype, "updateChannel", 1);
$l([A.trace("ChatChannelHandler.getChannelMembers")], Fn.prototype, "getChannelMembers", 1);
var cI = Object.defineProperty, lI = Object.getOwnPropertyDescriptor, zt = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? lI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && cI(r, t, a), a;
}, wt = /* @__PURE__ */ function(o) {
  return o[o.TEXT = 0] = "TEXT", o[o.IMAGE = 1] = "IMAGE", o[o.FILE = 2] = "FILE", o;
}(wt || {}), gt = /* @__PURE__ */ new K(), Nt = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, gt, { writable: !0, value: void 0 }), V(this, gt, c);
  }
  return D(o, [{ key: "getChatMessages", value: function() {
    return f(this, gt).sendMessagePromise(Ar.getMessages);
  } }, { key: "getChatMessagesPaginated", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
      var i, s, u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              return i = p.length > 3 && p[3] !== void 0 ? p[3] : 0, s = p.length > 4 && p[4] !== void 0 ? p[4] : "", u = { timeStamp: e, size: a, from: i, reversed: n, channelId: s }, v.next = 5, f(this, gt).sendMessagePromise(Ar.getPaginatedMessages, v_.toBinary(u));
            case 5:
              if (l = v.sent, l.payload) {
                v.next = 8;
                break;
              }
              return v.abrupt("return", { messages: [], next: !1 });
            case 8:
              return v.abrupt("return", m_.fromBinary(l.payload));
            case 9:
            case "end":
              return v.stop();
          }
      }, t, this);
    }));
    function r(t, e, a) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendMessageToRoom", value: function(r, t) {
    var e = { payloadType: t, payload: r };
    f(this, gt).sendMessage(Ar.sendMessageToRoom, k_.toBinary(e));
  } }, { key: "sendMessageToPeers", value: function(r, t, e) {
    var a = { payloadType: t, peerIds: e, payload: r };
    f(this, gt).sendMessage(Ar.sendMessageToPeers, b_.toBinary(a));
  } }, { key: "sendMessageToChannel", value: function(r, t, e) {
    var a = { payloadType: t, channelId: e, payload: r };
    f(this, gt).sendMessage(Ar.sendMessageToChannel, __.toBinary(a));
  } }, { key: "sendMessage", value: function(r, t, e, a) {
    if (a && this.sendMessageToChannel(r, t, a), e && e.length > 0) {
      this.sendMessageToPeers(r, t, e);
      return;
    }
    this.sendMessageToRoom(r, t);
  } }, { key: "editMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = { chatId: e, payloadType: n, payload: a }, i && (s.channelId = i), p.next = 4, f(this, gt).sendMessagePromise(Ar.editMessage, C_.toBinary(s));
            case 4:
              return u = p.sent, p.abrupt("return", mo.fromBinary(u.payload).message);
            case 6:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t, e, a, n) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "deleteMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              return n = { chatId: e }, a && (n.channelId = a), l.next = 4, f(this, gt).sendMessagePromise(Ar.deleteMessage, A_.toBinary(n));
            case 4:
              return i = l.sent, s = go.fromBinary(i.payload), l.abrupt("return", Q({ id: s.chatId }, s.channelId ? { channelId: s.channelId } : {}));
            case 7:
            case "end":
              return l.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "searchMessages", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return u = { searchTerm: e, timeStamp: (n = a.timestamp) !== null && n !== void 0 ? n : Date.now(), size: (i = a.size) !== null && i !== void 0 ? i : 75, from: 0, reversed: (s = a.reversed) !== null && s !== void 0 ? s : !0 }, a.channelId && (u.channelId = a.channelId), h.prev = 2, h.next = 5, f(this, gt).sendMessagePromise(Ar.searchChannelMessages, N_.toBinary(u));
            case 5:
              return l = h.sent, h.abrupt("return", kv.fromBinary(l.payload).messages);
            case 9:
              return h.prev = 9, h.t0 = h.catch(2), h.abrupt("return", []);
            case 12:
            case "end":
              return h.stop();
          }
      }, t, this, [[2, 9]]);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAllChannels", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.prev = 0, n.next = 3, f(this, gt).sendMessagePromise(Ar.getAllChatChannels);
            case 3:
              return e = n.sent, n.abrupt("return", ba.fromBinary(e.payload).chatChannels.map(Fn.formatChannel));
            case 7:
              return n.prev = 7, n.t0 = n.catch(0), n.abrupt("return", []);
            case 10:
            case "end":
              return n.stop();
          }
      }, t, this, [[0, 7]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "markLastReadMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, f(this, gt).sendMessagePromise(Ar.markChannelIndexAsRead, L_.toBinary({ channelId: e, userId: a.userId, channelIndex: a.channelIndex }));
            case 2:
              return n = s.sent, s.abrupt("return", F_.fromBinary(n.payload).channelIndex);
            case 4:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "on", value: function(r, t) {
    var e, a;
    switch (r) {
      case Ar.sendMessageToRoom: {
        e = Vu.fromBinary.bind(Vu), a = Vu.create();
        break;
      }
      case Ar.sendMessageToPeers: {
        e = Hu.fromBinary.bind(Hu), a = Hu.create();
        break;
      }
      case Ar.editMessage: {
        e = mo.fromBinary.bind(mo), a = mo.create();
        break;
      }
      case Ar.deleteMessage: {
        e = go.fromBinary.bind(go), a = go.create();
        break;
      }
    }
    if (!e) {
      P.warn("ChatSocketHandler::Event ".concat(r, " is not recognized"));
      return;
    }
    f(this, gt).on(r, function(n) {
      var i = n.payload, s = a;
      try {
        s = e(i);
      } catch (u) {
        P.error("chatSocketHandler::on::binary_decode_error", { error: u });
      }
      return t(s);
    });
  } }]), o;
}();
zt([A.trace("SocketService.getChatMessages")], Nt.prototype, "getChatMessages", 1);
zt([A.trace("SocketService.getChatMessagesPaginated")], Nt.prototype, "getChatMessagesPaginated", 1);
zt([A.trace("SocketService.sendMessageToRoom")], Nt.prototype, "sendMessageToRoom", 1);
zt([A.trace("SocketService.sendMessageToPeers")], Nt.prototype, "sendMessageToPeers", 1);
zt([A.trace("SocketService.sendMessageToChannel")], Nt.prototype, "sendMessageToChannel", 1);
zt([A.trace("SocketService.sendMessage")], Nt.prototype, "sendMessage", 1);
zt([A.trace("SocketService.editMessage")], Nt.prototype, "editMessage", 1);
zt([A.trace("SocketService.deleteMessage")], Nt.prototype, "deleteMessage", 1);
zt([A.trace("SocketService.searchMessages")], Nt.prototype, "searchMessages", 1);
zt([A.trace("SocketService.getAllChannels")], Nt.prototype, "getAllChannels", 1);
zt([A.trace("SocketService.markLastReadMessage")], Nt.prototype, "markLastReadMessage", 1);
function dI(o, c) {
  var r = c.replace(/<blockquote>[.\s\S]*<\/blockquote>\n\n/m, "");
  return "<blockquote>".concat(r, `</blockquote>

`).concat(o);
}
var pI = Object.defineProperty, hI = Object.getOwnPropertyDescriptor, Zr = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? hI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && pI(r, t, a), a;
}, Di = ["text", "image", "file", "poll"], qr = ($e = /* @__PURE__ */ new K(), xn = /* @__PURE__ */ new K(), Yr = /* @__PURE__ */ new K(), ei = /* @__PURE__ */ new K(), Xr = /* @__PURE__ */ new K(), Ga = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a, n, i) {
    var s;
    return I(this, r), s = c.call(this), z(b(s), Ga, { get: vI, set: void 0 }), R(b(s), "messages", void 0), R(b(s), "channels", []), z(b(s), $e, { writable: !0, value: void 0 }), z(b(s), xn, { writable: !0, value: void 0 }), z(b(s), Yr, { writable: !0, value: void 0 }), z(b(s), ei, { writable: !0, value: void 0 }), z(b(s), Xr, { writable: !0, value: void 0 }), V(b(s), Yr, t), V(b(s), ei, e), V(b(s), Xr, a), V(b(s), $e, n), V(b(s), xn, i), s.messages = [], s;
  }
  return D(r, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var e;
      return ((e = f(this, Ga)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
    }
  ) }, { key: "sendMessageInternal", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p = arguments;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              u = p.length > 3 && p[3] !== void 0 ? p[3] : {}, v.t0 = n.type, v.next = v.t0 === "text" ? 4 : v.t0 === "image" ? 8 : v.t0 === "file" ? 11 : 14;
              break;
            case 4:
              return l = u.replyTo && u.replyTo.type === "text" ? dI(n.message, u.replyTo.message) : n.message, v.next = 7, this.sendTextMessageInternal(l, i, s);
            case 7:
              return v.abrupt("break", 16);
            case 8:
              return v.next = 10, this.sendImageMessageInternal(n.image, i, s);
            case 10:
              return v.abrupt("break", 16);
            case 11:
              return v.next = 13, this.sendFileMessageInternal(n.file, i, s);
            case 13:
              return v.abrupt("break", 16);
            case 14:
              return P.error("sendMessage::message_type_not_supported", { dyteChat: { messageType: n.type } }), v.abrupt("break", 16);
            case 16:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendTextMessageInternal", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (!(i && i.length > 0)) {
                w.next = 6;
                break;
              }
              if (!(!((p = f(this, $e).permissions) !== null && p !== void 0 && p.chatPrivate.canSend) || !((h = f(this, $e).permissions) !== null && h !== void 0 && h.chatPrivate.text))) {
                w.next = 4;
                break;
              }
              throw P.error("sendTextMessage::private_chat_permission_denied"), new q("Could not send message to private chat.", "0501");
            case 4:
              w.next = 9;
              break;
            case 6:
              if (!(!((u = f(this, $e).permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.text))) {
                w.next = 9;
                break;
              }
              throw P.error("sendTextMessage::public_chat_permission_denied"), new q("Could not send message to public chat.", "0501");
            case 9:
              if (n) {
                w.next = 12;
                break;
              }
              throw P.error("sendTextMessage::message_can_not_be_empty"), new q("Message can not be empty.", "0502");
            case 12:
              if (!s) {
                w.next = 17;
                break;
              }
              if (f(this, Xr) === "socket-service") {
                w.next = 15;
                break;
              }
              throw new Error("Socket service required for channel support");
            case 15:
              return f(this, Yr).sendMessageToChannel(n, wt.TEXT, s), w.abrupt("return");
            case 17:
              if (f(this, Xr) !== "socket-service") {
                w.next = 22;
                break;
              }
              return v = [], i && i.length > 0 && (i.push(f(this, $e).id), v = f(this, xn).joined.toArray().filter(function(k) {
                return i.includes(k.id);
              }).map(function(k) {
                return k.userId;
              }), v.push(f(this, $e).userId)), f(this, Yr).sendMessage(n, wt.TEXT, i), w.abrupt("return");
            case 22:
              if (!(i !== void 0 && i.length > 0)) {
                w.next = 25;
                break;
              }
              return P.error("sendTextMessage::private_chat_unsupported"), w.abrupt("return");
            case 25:
              if (m = { userId: f(this, $e).userId, displayName: f(this, $e).name, message: n, type: Di.indexOf(
                "text"
                /* text */
              ), time: +new Date() }, this.roomJoined) {
                w.next = 29;
                break;
              }
              throw P.error("DyteChat.sendTextMessage.RoomNodeClientSocketUsed_WithoutRoomJoin"), new q("Can`t sendTextMessage without joining room");
            case 29:
              return w.next = 31, f(this, Ga).sendChatMessage(m);
            case 31:
            case "end":
              return w.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendImageMessageInternal", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (!(i && i.length > 0)) {
                S.next = 6;
                break;
              }
              if (!(!((p = f(this, $e).permissions) !== null && p !== void 0 && p.chatPrivate.canSend) || !((h = f(this, $e).permissions) !== null && h !== void 0 && h.chatPrivate.files))) {
                S.next = 4;
                break;
              }
              return P.error("sendImageMessage::private_chat_permission_denied"), S.abrupt("return");
            case 4:
              S.next = 9;
              break;
            case 6:
              if (!(!((u = f(this, $e).permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.files))) {
                S.next = 9;
                break;
              }
              return P.error("sendImageMessage::permission_denied"), S.abrupt("return");
            case 9:
              if (n) {
                S.next = 12;
                break;
              }
              return P.error("sendImageMessage::required_argument_image_can_not_be_empty"), S.abrupt("return");
            case 12:
              if (v = ["image/gif", "image/jpeg", "image/png"], v.includes(n.type)) {
                S.next = 16;
                break;
              }
              return P.error("sendImageMessage::image_type_not_supported", { dyteChat: { imageType: n.type } }), S.abrupt("return");
            case 16:
              return S.prev = 16, m = Hr(), S.next = 20, m.getPresignedUrls(n.name, f(this, $e).config.viewType);
            case 20:
              return g = S.sent, w = g.getLocation, k = g.putLocation, S.next = 25, m.uploadFile(n, k);
            case 25:
              if (!s) {
                S.next = 30;
                break;
              }
              if (f(this, Xr) === "socket-service") {
                S.next = 28;
                break;
              }
              throw new Error("Socket service required for channel support");
            case 28:
              return f(this, Yr).sendMessageToChannel(w, wt.IMAGE, s), S.abrupt("return");
            case 30:
              if (f(this, Xr) !== "socket-service") {
                S.next = 35;
                break;
              }
              return T = [], i && i.length > 0 && (i.push(f(this, $e).id), T = f(this, xn).joined.toArray().filter(function(C) {
                return i.includes(C.id);
              }).map(function(C) {
                return C.userId;
              }), T.push(f(this, $e).userId)), f(this, Yr).sendMessage(w, wt.IMAGE, i), S.abrupt("return");
            case 35:
              if (!(i !== void 0 && i.length > 0)) {
                S.next = 38;
                break;
              }
              return P.error("sendImageMessage::private_chat_unsupported"), S.abrupt("return");
            case 38:
              if (_ = { userId: f(this, $e).userId, displayName: f(this, $e).name, type: Di.indexOf(
                "image"
                /* image */
              ), link: w, time: +new Date() }, this.roomJoined) {
                S.next = 42;
                break;
              }
              throw P.error("DyteChat.sendImageMessage.RoomNodeClientSocketUsed_WithoutRoomJoin"), new q("Can`t sendImageMessage without joining room");
            case 42:
              return S.next = 44, f(this, Ga).sendChatMessage(_);
            case 44:
              S.next = 49;
              break;
            case 46:
              throw S.prev = 46, S.t0 = S.catch(16), new q("Error sending image message.");
            case 49:
            case "end":
              return S.stop();
          }
      }, a, this, [[16, 46]]);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendFileMessageInternal", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h, v, m, g, w, k, T, _;
      return d().wrap(function(S) {
        for (; ; )
          switch (S.prev = S.next) {
            case 0:
              if (!(i && i.length > 0)) {
                S.next = 6;
                break;
              }
              if (!(!((p = f(this, $e).permissions) !== null && p !== void 0 && p.chatPrivate.canSend) || !((h = f(this, $e).permissions) !== null && h !== void 0 && h.chatPrivate.files))) {
                S.next = 4;
                break;
              }
              return P.error("sendFileMessage::private_chat_permission_denied"), S.abrupt("return");
            case 4:
              S.next = 9;
              break;
            case 6:
              if (!(!((u = f(this, $e).permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.files))) {
                S.next = 9;
                break;
              }
              return P.error("sendFileMessage::permission_denied"), S.abrupt("return");
            case 9:
              if (n) {
                S.next = 12;
                break;
              }
              return P.error("sendFileMessage::required_argument_file_can_not_be_empty"), S.abrupt("return");
            case 12:
              return S.prev = 12, v = Hr(), S.next = 16, v.getPresignedUrls(n.name, f(this, $e).config.viewType);
            case 16:
              return m = S.sent, g = m.getLocation, w = m.putLocation, S.next = 21, v.uploadFile(n, w);
            case 21:
              if (!s) {
                S.next = 26;
                break;
              }
              if (f(this, Xr) === "socket-service") {
                S.next = 24;
                break;
              }
              throw new Error("Socket service required for channel support");
            case 24:
              return f(this, Yr).sendMessageToChannel(JSON.stringify({ link: g, name: n.name, size: "size" in n ? n.size : 0 }), wt.FILE, s), S.abrupt("return");
            case 26:
              if (f(this, Xr) !== "socket-service") {
                S.next = 32;
                break;
              }
              return k = [], i && i.length > 0 && (i.push(f(this, $e).id), k = f(this, xn).joined.toArray().filter(function(C) {
                return i.includes(C.id);
              }).map(function(C) {
                return C.userId;
              }), k.push(f(this, $e).userId)), T = JSON.stringify({ link: g, name: n.name, size: "size" in n ? n.size : 0 }), f(this, Yr).sendMessage(T, wt.FILE, i), S.abrupt("return");
            case 32:
              if (!(i !== void 0 && i.length > 0)) {
                S.next = 35;
                break;
              }
              return P.error("sendFileMessage::private_chat_unsupported"), S.abrupt("return");
            case 35:
              if (_ = { userId: f(this, $e).userId, displayName: f(this, $e).name, type: Di.indexOf(
                "file"
                /* file */
              ), link: g, name: n.name, size: "size" in n ? n.size : 0, time: +new Date() }, this.roomJoined) {
                S.next = 39;
                break;
              }
              throw P.error("DyteChat.sendFileMessage.RoomNodeClientSocketUsed_WithoutRoomJoin"), new q("Can`t sendFileMessage without joining room");
            case 39:
              return S.next = 41, f(this, Ga).sendChatMessage(_);
            case 41:
              S.next = 46;
              break;
            case 43:
              throw S.prev = 43, S.t0 = S.catch(12), new q("Error sending file message.");
            case 46:
            case "end":
              return S.stop();
          }
      }, a, this, [[12, 43]]);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendTextMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendTextMessageInternal(n, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendImageMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendImageMessageInternal(n, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendFileMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendFileMessageInternal(n, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "sendMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return u.abrupt("return", this.sendMessageInternal(n, i));
            case 1:
            case "end":
              return u.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "editTextMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p;
      return d().wrap(function(v) {
        for (; ; )
          switch (v.prev = v.next) {
            case 0:
              if (f(this, Xr) === "socket-service") {
                v.next = 3;
                break;
              }
              return P.warn("editTextMessage::Coming soon!"), v.abrupt("return");
            case 3:
              if (((u = f(this, $e).permissions) === null || u === void 0 || (u = u.chatMessage) === null || u === void 0 ? void 0 : u.canEdit) !== "NONE") {
                v.next = 5;
                break;
              }
              throw new q("Not permitted to edit messages", "0501");
            case 5:
              if (!(!((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.canSend) || !((p = f(this, $e).permissions) !== null && p !== void 0 && (p = p.chatPublic) !== null && p !== void 0 && p.text))) {
                v.next = 8;
                break;
              }
              return P.error("editTextMessage::permission_denied"), v.abrupt("return");
            case 8:
              if (i) {
                v.next = 11;
                break;
              }
              return P.error("editTextMessage::message_can_not_be_empty"), v.abrupt("return");
            case 11:
              f(this, Yr).editMessage(n, i, wt.TEXT, s);
            case 12:
            case "end":
              return v.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "editImageMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h, v, m, g;
      return d().wrap(function(k) {
        for (; ; )
          switch (k.prev = k.next) {
            case 0:
              if (f(this, Xr) === "socket-service") {
                k.next = 3;
                break;
              }
              return P.warn("editImageMessage::Coming soon!"), k.abrupt("return");
            case 3:
              if (!(!((u = f(this, $e).permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.files))) {
                k.next = 6;
                break;
              }
              return P.error("editImageMessage::permission_denied"), k.abrupt("return");
            case 6:
              if (i) {
                k.next = 9;
                break;
              }
              return P.error("editImageMessage::required_argument_image_can_not_be_empty"), k.abrupt("return");
            case 9:
              if (p = ["image/gif", "image/jpeg", "image/png"], p.includes(i.type)) {
                k.next = 13;
                break;
              }
              return P.error("sendImageMessage::image_type_not_supported", { dyteChat: { imageType: i.type } }), k.abrupt("return");
            case 13:
              return k.prev = 13, h = Hr(), k.next = 17, h.getPresignedUrls(i.name, f(this, $e).config.viewType);
            case 17:
              return v = k.sent, m = v.getLocation, g = v.putLocation, k.next = 22, h.uploadFile(i, g);
            case 22:
              f(this, Yr).editMessage(n, m, wt.IMAGE, s), k.next = 28;
              break;
            case 25:
              throw k.prev = 25, k.t0 = k.catch(13), new q("Error editing image message.");
            case 28:
            case "end":
              return k.stop();
          }
      }, a, this, [[13, 25]]);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "editFileMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h, v, m;
      return d().wrap(function(w) {
        for (; ; )
          switch (w.prev = w.next) {
            case 0:
              if (f(this, Xr) === "socket-service") {
                w.next = 3;
                break;
              }
              return P.warn("editFileMessage::Coming soon!"), w.abrupt("return");
            case 3:
              if (!(!((u = f(this, $e).permissions) !== null && u !== void 0 && (u = u.chatPublic) !== null && u !== void 0 && u.canSend) || !((l = f(this, $e).permissions) !== null && l !== void 0 && (l = l.chatPublic) !== null && l !== void 0 && l.files))) {
                w.next = 6;
                break;
              }
              return P.error("sendFileMessage::permission_denied"), w.abrupt("return");
            case 6:
              if (i) {
                w.next = 9;
                break;
              }
              return P.error("sendFileMessage::required_argument_file_can_not_be_empty"), w.abrupt("return");
            case 9:
              return w.prev = 9, p = Hr(), w.next = 13, p.getPresignedUrls(i.name, f(this, $e).config.viewType);
            case 13:
              return h = w.sent, v = h.getLocation, m = h.putLocation, w.next = 18, p.uploadFile(i, m);
            case 18:
              f(this, Yr).editMessage(n, JSON.stringify({ link: v, name: i.name, size: "size" in i ? i.size : 0 }), wt.FILE, s), w.next = 24;
              break;
            case 21:
              throw w.prev = 21, w.t0 = w.catch(9), new q("Error editing file message.");
            case 24:
            case "end":
              return w.stop();
          }
      }, a, this, [[9, 21]]);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "editMessage", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (f(this, Xr) === "socket-service") {
                l.next = 3;
                break;
              }
              return P.warn("editMessage::Coming soon!"), l.abrupt("return");
            case 3:
              l.t0 = i.type, l.next = l.t0 === "text" ? 6 : l.t0 === "image" ? 8 : l.t0 === "file" ? 10 : 12;
              break;
            case 6:
              return this.editTextMessage(n, i.message, s), l.abrupt("break", 14);
            case 8:
              return this.editImageMessage(n, i.image, s), l.abrupt("break", 14);
            case 10:
              return this.editFileMessage(n, i.file, s), l.abrupt("break", 14);
            case 12:
              return P.error("editMessage::message_type_not_supported", { dyteChat: { messageType: i.type } }), l.abrupt("break", 14);
            case 14:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "deleteMessage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        var s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (f(this, Xr) === "socket-service") {
                  l.next = 3;
                  break;
                }
                return P.warn("editMessage::Coming soon!"), l.abrupt("return");
              case 3:
                if (((s = f(this, $e).permissions) === null || s === void 0 || (s = s.chatMessage) === null || s === void 0 ? void 0 : s.canDelete) !== "NONE") {
                  l.next = 5;
                  break;
                }
                throw new q("Not permitted to delete messages", "0501");
              case 5:
                f(this, Yr).deleteMessage(n, i);
              case 6:
              case "end":
                return l.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns an array of messages sent by a specific userId.
    * @param userId The user id of the user that sent the message.
    */
  }, {
    key: "getMessagesByUser",
    value: function(e) {
      return this.messages.filter(function(a) {
        return a.userId === e;
      });
    }
    /**
    * Returns an array of 'text', 'image' or 'file' messages.
    * @param type 'text', 'image', or 'file'.
    */
  }, {
    key: "getMessagesByType",
    value: function(e) {
      return this.messages.filter(function(a) {
        return a.type === e;
      });
    }
    /**
    * Pins a chat message
    * @param id ID of the message to be pinned
    */
  }, {
    key: "pin",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (f(this, Xr) !== "socket-service") {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                if (this.roomJoined) {
                  s.next = 4;
                  break;
                }
                throw new q("Can`t pin message without joining room");
              case 4:
                return s.next = 6, f(this, Ga).pinChatMessage({ id: n });
              case 6:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Unpins a chat message
    * @param id ID of the message to be unpinned
    */
  }, {
    key: "unpin",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (f(this, Xr) !== "socket-service") {
                  s.next = 2;
                  break;
                }
                return s.abrupt("return");
              case 2:
                if (this.roomJoined) {
                  s.next = 4;
                  break;
                }
                throw new q("Can`t unpin message without joining room");
              case 4:
                return s.next = 6, f(this, Ga).unpinChatMessage({ id: n });
              case 6:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Gets chat messages in a paginated manner
    */
  }, { key: "getMessages", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l, p, h = arguments;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return u = h.length > 3 && h[3] !== void 0 ? h[3] : 0, l = h.length > 4 && h[4] !== void 0 ? h[4] : void 0, m.next = 4, f(this, Yr).getChatMessagesPaginated(n, i, s, u, l);
            case 4:
              return p = m.sent, m.abrupt("return", { messages: p.messages.map(function(g) {
                return Ht.formatSocketServiceMessage(g);
              }), next: p.next });
            case 6:
            case "end":
              return m.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "createChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u, l, p, h, v = arguments;
      return d().wrap(function(g) {
        for (; ; )
          switch (g.prev = g.next) {
            case 0:
              if (u = v.length > 2 && v[2] !== void 0 ? v[2] : {}, l = (s = f(this, $e).permissions) === null || s === void 0 ? void 0 : s.chatChannel, !l) {
                g.next = 9;
                break;
              }
              if (l.canCreate !== "NONE") {
                g.next = 5;
                break;
              }
              throw new q("Not permitted to create channels", "0501");
            case 5:
              if (!(u.visibility === "public" && !(l.canCreate === "PUBLIC" || l.canCreate === "ALL"))) {
                g.next = 7;
                break;
              }
              throw new q("Not permitted to create public channels", "0501");
            case 7:
              if (!(u.visibility === "private" && !(l.canCreate === "PRIVATE" || l.canCreate === "ALL"))) {
                g.next = 9;
                break;
              }
              throw new q("Not permitted to create private channels", "0501");
            case 9:
              if (!(!n || n.trim().length === 0)) {
                g.next = 11;
                break;
              }
              throw new q("channel name cannot be empty.", "0510");
            case 11:
              return p = sr(/* @__PURE__ */ new Set([].concat(sr(i), [f(this, $e).userId]))), g.next = 14, f(this, ei).createChannel(n.trim(), p, u.displayPictureUrl, u.visibility, u.isDirectMessage);
            case 14:
              return h = g.sent, g.abrupt("return", h);
            case 16:
            case "end":
              return g.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "updateChannel", value: function(e, a) {
    var n, i, s, u, l, p = this.channels.find(function(m) {
      return m.id === e;
    }), h = (n = f(this, $e).permissions) === null || n === void 0 ? void 0 : n.chatChannel;
    if (h) {
      if (h.canUpdate === "NONE")
        throw new q("Not permitted to update channels", "0501");
      if (p.visibility === "public" && !(h.canUpdate === "PUBLIC" || h.canUpdate === "ALL"))
        throw new q("Not permitted to update public channels", "0501");
      if (p.visibility === "private" && !(h.canUpdate === "PRIVATE" || h.canUpdate === "ALL"))
        throw new q("Not permitted to update private channels", "0501");
    }
    var v = { memberIds: (i = a.memberIds) !== null && i !== void 0 ? i : p.memberIds, displayName: (s = a.displayName) !== null && s !== void 0 ? s : p.displayName, displayPictureUrl: (u = a.displayPictureUrl) !== null && u !== void 0 ? u : p.displayPictureUrl, visibility: (l = a.visibility) !== null && l !== void 0 ? l : p.visibility };
    return f(this, ei).updateChannel(e, v);
  } }, { key: "sendMessageToChannel", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = u.length > 2 && u[2] !== void 0 ? u[2] : {}, p.abrupt("return", this.sendMessageInternal(n, null, i, s));
            case 2:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "getChannelMembers", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.abrupt("return", f(this, ei).getChannelMembers(n));
            case 1:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "searchMessages", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (i = u.length > 1 && u[1] !== void 0 ? u[1] : {}, ue.hasFeature(de.FEAT_CHAT_SDK_SEARCH)) {
                p.next = 3;
                break;
              }
              throw new q("searchMessages is temporarily disabled!");
            case 3:
              return p.next = 5, f(this, Yr).searchMessages(n, i);
            case 5:
              return s = p.sent, p.abrupt("return", s.map(Ht.formatSocketServiceMessage));
            case 7:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "markLastReadMessage",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        var s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return p.next = 2, f(this, Yr).markLastReadMessage(n, i);
              case 2:
                s = this.channels.find(function(h) {
                  return h.id === n;
                }), s && (u = Q(Q({}, s), {}, { unreadCount: 0 }), this.channels = this.channels.map(function(h) {
                  return h.id === n ? u : h;
                }), this.emit("channelMessageUpdate", u));
              case 4:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Returns an array of pinned messages.
    */
  }, { key: "pinned", get: function() {
    return this.messages.filter(function(e) {
      return e.pinned;
    });
  } }]), r;
}(fr));
function vI() {
  return Mr();
}
Zr([A.trace("DyteChat.sendTextMessage")], qr.prototype, "sendTextMessage", 1);
Zr([A.trace("DyteChat.sendImageMessage")], qr.prototype, "sendImageMessage", 1);
Zr([A.trace("DyteChat.sendFileMessage")], qr.prototype, "sendFileMessage", 1);
Zr([A.trace("DyteChat.sendMessage")], qr.prototype, "sendMessage", 1);
Zr([A.trace("DyteChat.editTextMessage")], qr.prototype, "editTextMessage", 1);
Zr([A.trace("DyteChat.editImageMessage")], qr.prototype, "editImageMessage", 1);
Zr([A.trace("DyteChat.editFileMessage")], qr.prototype, "editFileMessage", 1);
Zr([A.trace("DyteChat.editMessage")], qr.prototype, "editMessage", 1);
Zr([A.trace("DyteChat.deleteMessage")], qr.prototype, "deleteMessage", 1);
Zr([A.trace("DyteChat.createChannel")], qr.prototype, "createChannel", 1);
Zr([A.trace("DyteChat.updateChannel")], qr.prototype, "updateChannel", 1);
Zr([A.trace("DyteChat.sendMessageToChannel")], qr.prototype, "sendMessageToChannel", 1);
Zr([A.trace("DyteChat.getChannelMembers")], qr.prototype, "getChannelMembers", 1);
Zr([A.trace("DyteChat.searchMessages")], qr.prototype, "searchMessages", 1);
Zr([A.trace("DyteChat.markLastReadMessage")], qr.prototype, "markLastReadMessage", 1);
qr = Zr([jr(function(o) {
  throw new q(o.message, "0500");
})], qr);
var fI = Object.defineProperty, mI = Object.getOwnPropertyDescriptor, gI = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? mI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && fI(r, t, a), a;
}, yI = (oo = /* @__PURE__ */ new K(), rs = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c, r, t, e, a) {
    I(this, o), z(this, oo, { get: kI, set: void 0 }), R(this, "chat", void 0), R(this, "chatSocketHandler", void 0), R(this, "chatChannelSocketHandler", void 0), R(this, "self", void 0), z(this, rs, { writable: !0, value: void 0 }), this.chatSocketHandler = c, this.chatChannelSocketHandler = r, V(this, rs, t), this.chat = new qr(c, r, t, e, a), this.self = e, this.setupEvents();
  }
  return D(o, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var r;
      return ((r = f(this, oo)) === null || r === void 0 ? void 0 : r.roomJoined) === !0;
    }
  ) }, { key: "getChatMessages", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!(this.self.config.viewType === "LIVESTREAM" || this.self.config.viewType === "CHAT" || ue.hasFeature(de.FEAT_PAGINATED_CHAT))) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              if (f(this, rs) !== "socket-service") {
                s.next = 11;
                break;
              }
              return s.next = 5, this.chatSocketHandler.getChatMessages();
            case 5:
              if (e = s.sent, e != null && e.payload) {
                s.next = 8;
                break;
              }
              return s.abrupt("return");
            case 8:
              return a = kv.fromBinary(e.payload).messages, this.chat.messages = a.map(function(u) {
                return o.formatSocketServiceMessage(u);
              }), s.abrupt("return");
            case 11:
              if (this.roomJoined) {
                s.next = 14;
                break;
              }
              return P.error("ChatController.getChatMessages.RoomNodeClientSocketUsed_WithoutRoomJoin"), s.abrupt("return");
            case 14:
              return s.next = 16, f(this, oo).getChatMessages();
            case 16:
              n = s.sent.payload.messages, this.chat.messages = n.filter(function(u) {
                return Di[u.type] !== "poll";
              }).map(o.formatMessage);
            case 18:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAllChannels", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (this.self.config.viewType === "CHAT") {
                a.next = 2;
                break;
              }
              return a.abrupt("return");
            case 2:
              return a.next = 4, this.chatSocketHandler.getAllChannels();
            case 4:
              this.chat.channels = a.sent, this.chat.emit("channelUpdate");
            case 6:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "setupEvents", value: function() {
    var r = this;
    f(this, rs) === "socket-service" ? $.onAsync(M.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return r.getChatMessages(), a.next = 3, r.getAllChannels();
            case 3:
            case "end":
              return a.stop();
          }
      }, t);
    }))) : $.onAsync(M.ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, r.getChatMessages();
            case 2:
            case "end":
              return a.stop();
          }
      }, t);
    }))), this.chatSocketHandler.on(Ar.sendMessageToRoom, function(t) {
      var e = o.formatSocketServiceMessage(t.message);
      if (!e.channelId)
        r.chat.messages = [].concat(sr(r.chat.messages), [e]);
      else {
        var a = r.chat.channels.find(function(n) {
          return n.id === e.channelId;
        });
        a && (a.latestMessage = e, a.unreadCount += 1, r.chat.emit("channelMessageUpdate", a));
      }
      r.chat.emit("chatUpdate", { action: "add", message: e, messages: r.chat.messages });
    }), this.chatSocketHandler.on(Ar.sendMessageToPeers, function(t) {
      var e = o.formatSocketServiceMessage(t.message);
      r.chat.messages = [].concat(sr(r.chat.messages), [e]), r.chat.emit("chatUpdate", { action: "add", message: e, messages: r.chat.messages });
    }), this.chatSocketHandler.on(Ar.editMessage, function(t) {
      var e = o.formatSocketServiceMessage(t.message);
      if (e.channelId) {
        r.chat.emit("chatUpdate", { action: "edit", message: e, messages: r.chat.messages });
        return;
      }
      var a = r.chat.messages.findIndex(function(n) {
        return n.id === e.id;
      });
      a !== -1 && (r.chat.messages[a] = e, r.chat.emit("chatUpdate", { action: "edit", message: e, messages: r.chat.messages }));
    }), this.chatSocketHandler.on(Ar.deleteMessage, function(t) {
      if (t.channelId) {
        r.chat.emit("chatUpdate", { action: "delete", message: { id: t.chatId, channelId: t.channelId }, messages: r.chat.messages });
        return;
      }
      var e = r.chat.messages.findIndex(function(s) {
        return s.id === t.chatId;
      });
      if (e !== -1) {
        var a = r.chat.messages.splice(e, 1), n = ar(a, 1), i = n[0];
        r.chat.emit("chatUpdate", { action: "delete", message: i, messages: r.chat.messages });
      }
    }), this.chatChannelSocketHandler.on(_n.createChatChannel, function(t) {
      var e = ar(t.chatChannels, 1), a = e[0], n = Fn.formatChannel(a);
      r.chat.channels.push(n), r.chat.emit("channelCreate", n);
    }), this.chatChannelSocketHandler.on(_n.updateChatChannel, function(t) {
      var e = ar(t.chatChannels, 1), a = e[0], n = Fn.formatChannel(a);
      r.chat.channels = r.chat.channels.map(function(i) {
        return i.id === n.id ? n : i;
      }), r.chat.emit("channelUpdate", n);
    }), $.on(M.NEW_CHAT_MESSAGE, function(t) {
      if (Di[t == null ? void 0 : t.type] !== "poll") {
        var e = o.formatMessage(t);
        r.chat.messages = [].concat(sr(r.chat.messages), [e]), r.chat.emit("chatUpdate", { action: "add", message: e, messages: r.chat.messages });
      }
    }), $.on(M.PIN_CHAT_MESSAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                n = o.formatMessage(a), i = r.chat.messages.findIndex(function(l) {
                  return l.id === n.id;
                }), r.chat.messages[i] = n, r.chat.emit("pinMessage", { message: n, messages: r.chat.messages });
              case 4:
              case "end":
                return u.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.UNPIN_CHAT_MESSAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                n = o.formatMessage(a), i = r.chat.messages.findIndex(function(l) {
                  return l.id === n.id;
                }), r.chat.messages[i] = n, r.chat.emit("unpinMessage", { message: n, messages: r.chat.messages });
              case 4:
              case "end":
                return u.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }());
  } }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i, s) {
      var u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return u = El(n.config.viewType, s) ? "socket-service" : "room-node", P.info("Using socket server :: ".concat(u, " for chat")), p.abrupt("return", new o(e, a, u, n, i));
            case 3:
            case "end":
              return p.stop();
          }
      }, t);
    }));
    function r(t, e, a, n, i) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "formatMessage",
    value: function(r) {
      return Q(Q({}, r), {}, { time: new Date(r.time), type: Di[r.type] });
    }
    /**
    * @access private
    * This function formates the chat message coming from
    * socket service. This is not meant for external use.
    */
  }, { key: "formatSocketServiceMessage", value: function(r) {
    var t = r.createdAt * 1e3, e = { displayName: r.displayName, id: r.chatId, time: t, timeMs: r.createdAtMs, type: r.payloadType, isEdited: r.isEdited, userId: r.userId, targetUserIds: r.targetUserIds, channelId: r.channelId, channelIndex: r.channelIndex, message: "", link: "", name: "", size: 0 };
    switch (e.type) {
      case wt.TEXT: {
        e.message = r.payload;
        break;
      }
      case wt.IMAGE: {
        e.link = r.payload;
        break;
      }
      case wt.FILE: {
        var a = JSON.parse(r.payload), n = a.link, i = a.name, s = a.size;
        e.link = n, e.name = i, e.size = s;
        break;
      }
    }
    return o.formatMessage(e);
  } }]), o;
}());
function kI() {
  return Mr();
}
var Ht = yI;
gI([A.trace("ChatController.setupEvents")], Ht.prototype, "setupEvents", 1);
var wI = Object.defineProperty, TI = Object.getOwnPropertyDescriptor, fu = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? TI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && wI(r, t, a), a;
}, bI = ($t = /* @__PURE__ */ new K(), ts = /* @__PURE__ */ new K(), as = /* @__PURE__ */ new K(), uo = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c, r, t, e) {
    I(this, o), z(this, uo, { get: SI, set: void 0 }), R(this, "plugins", void 0), z(this, $t, { writable: !0, value: void 0 }), z(this, ts, { writable: !0, value: void 0 }), z(this, as, { writable: !0, value: void 0 }), V(this, $t, c), V(this, as, r), V(this, ts, t), this.plugins = e, this.setupEvents();
  }
  return D(o, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var r;
      return ((r = f(this, uo)) === null || r === void 0 ? void 0 : r.roomJoined) === !0;
    }
  ) }, { key: "getRoomPlugins", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e = this, a, n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (f(this, ts) !== "socket-service") {
                l.next = 8;
                break;
              }
              return l.next = 3, f(this, $t).getActivePlugins();
            case 3:
              return a = l.sent, n = a.plugins, l.next = 7, Promise.all(n.map(function(p) {
                return e.enablePlugin({ id: p.pluginId, enabledBy: p.enabledBy });
              }));
            case 7:
              return l.abrupt("return");
            case 8:
              if (this.roomJoined) {
                l.next = 11;
                break;
              }
              return P.error("PluginController.getRoomPlugins.RoomNodeClientSocketUsed_WithoutRoomJoin"), l.abrupt("return");
            case 11:
              return l.next = 13, f(this, uo).getRoomState();
            case 13:
              return i = l.sent, s = i.payload, l.next = 17, Promise.all(s.roomState.plugins.map(function(p) {
                return e.enablePlugin(p);
              }));
            case 17:
            case "end":
              return l.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "enablePlugin", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (a = e.id, n = e.enabledBy, i = this.plugins.all.get(a), i) {
                u.next = 4;
                break;
              }
              return u.abrupt("return");
            case 4:
              return u.next = 6, i.activateForSelf();
            case 6:
              i.enabledBy = n;
            case 7:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disablePlugin", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = e.id, n = this.plugins.all.get(a), n) {
                s.next = 4;
                break;
              }
              return s.abrupt("return");
            case 4:
              n.deactivateForSelf();
            case 5:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "sendIframeEventOld", value: function(r, t) {
    var e = t.id, a = this.plugins.all.get(e);
    a && a.sendIframeEvent({ type: r, payload: t });
  } }, { key: "sendIframeEvent", value: function(r, t, e, a) {
    var n = this.plugins.all.get(t);
    t && n.sendIframeEvent({ type: r, uuid: e, payload: a });
  } }, { key: "broadcastIframeEventOld", value: function(r, t) {
    var e = this;
    this.plugins.active.forEach(function(a) {
      e.sendIframeEventOld(r, Q(Q({}, t), {}, { id: a.id }));
    });
  } }, { key: "broadcastIframeEvent", value: function(r, t) {
    var e = this;
    this.plugins.active.forEach(function(a) {
      e.sendIframeEvent(r, a.id, "", t);
    });
  } }, { key: "setupEvents", value: function() {
    var r = this;
    if (this.plugins.all.on("stateUpdate", function(t) {
      var e = t.active, a = t.id;
      if (e) {
        r.plugins.active.add(r.plugins.all.get(a));
        return;
      }
      r.plugins.active.delete(a);
    }), $.onAsync(M.ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.next = 2, r.getRoomPlugins();
            case 2:
              P.debug("[ROOM_JOINED] resolved request to fetch plugins.");
            case 3:
            case "end":
              return a.stop();
          }
      }, t);
    }))), f(this, ts) === "socket-service") {
      f(this, $t).on(Ee.addPlugin, /* @__PURE__ */ function() {
        var t = y(/* @__PURE__ */ d().mark(function e(a) {
          var n, i;
          return d().wrap(function(u) {
            for (; ; )
              switch (u.prev = u.next) {
                case 0:
                  if (i = a.pluginId, !((n = r.plugins.all.get(i)) !== null && n !== void 0 && n.active)) {
                    u.next = 3;
                    break;
                  }
                  return u.abrupt("return");
                case 3:
                  return u.next = 5, r.enablePlugin({ id: i, enabledBy: a.enabledBy });
                case 5:
                case "end":
                  return u.stop();
              }
          }, e);
        }));
        return function(e) {
          return t.apply(this, arguments);
        };
      }()), f(this, $t).on(Ee.removePlugin, /* @__PURE__ */ function() {
        var t = y(/* @__PURE__ */ d().mark(function e(a) {
          var n, i;
          return d().wrap(function(u) {
            for (; ; )
              switch (u.prev = u.next) {
                case 0:
                  if (i = a.pluginId, (n = r.plugins.all.get(i)) !== null && n !== void 0 && n.active) {
                    u.next = 3;
                    break;
                  }
                  return u.abrupt("return");
                case 3:
                  return u.next = 5, r.disablePlugin({ id: i });
                case 5:
                case "end":
                  return u.stop();
              }
          }, e);
        }));
        return function(e) {
          return t.apply(this, arguments);
        };
      }()), [Ee.enablePluginForPeers, Ee.enablePluginForRoom].forEach(function(t) {
        f(r, $t).on(t, /* @__PURE__ */ function() {
          var e = y(/* @__PURE__ */ d().mark(function a(n, i) {
            return d().wrap(function(u) {
              for (; ; )
                switch (u.prev = u.next) {
                  case 0:
                    r.sendIframeEvent(t, n.pluginId, i, { enabledBy: n.enabledBy });
                  case 1:
                  case "end":
                    return u.stop();
                }
            }, a);
          }));
          return function(a, n) {
            return e.apply(this, arguments);
          };
        }());
      }), [Ee.disablePluginForPeers, Ee.disablePluginForRoom].forEach(function(t) {
        f(r, $t).on(t, /* @__PURE__ */ function() {
          var e = y(/* @__PURE__ */ d().mark(function a(n, i) {
            return d().wrap(function(u) {
              for (; ; )
                switch (u.prev = u.next) {
                  case 0:
                    r.sendIframeEvent(t, n.pluginId, i, { disabledBy: n.disabledBy });
                  case 1:
                  case "end":
                    return u.stop();
                }
            }, a);
          }));
          return function(a, n) {
            return e.apply(this, arguments);
          };
        }());
      }), [Ee.customPluginEventToPeers, Ee.customPluginEventToRoom].forEach(function(t) {
        f(r, $t).on(t, /* @__PURE__ */ function() {
          var e = y(/* @__PURE__ */ d().mark(function a(n, i) {
            return d().wrap(function(u) {
              for (; ; )
                switch (u.prev = u.next) {
                  case 0:
                    r.sendIframeEvent(t, n.pluginId, i, { data: JSON.parse(new TextDecoder().decode(n.pluginData)) });
                  case 1:
                  case "end":
                    return u.stop();
                }
            }, a);
          }));
          return function(a, n) {
            return e.apply(this, arguments);
          };
        }());
      }), [Ee.storeInsertKeys, Ee.storeGetKeys, Ee.storeDeleteKeys].forEach(function(t) {
        f(r, $t).on(t, /* @__PURE__ */ function() {
          var e = y(/* @__PURE__ */ d().mark(function a(n, i) {
            var s, u;
            return d().wrap(function(p) {
              for (; ; )
                switch (p.prev = p.next) {
                  case 0:
                    u = (s = n.storeItems) === null || s === void 0 ? void 0 : s.map(function(h) {
                      var v;
                      return { timestamp: h.timestamp, peerId: h.peerId, payload: JSON.parse((v = h.payload) !== null && v !== void 0 && v.length ? new TextDecoder().decode(h.payload) : "{}"), key: h.storeKey };
                    }), r.sendIframeEvent(t, n.pluginId, i, { storeName: n.storeName, storeItems: u });
                  case 2:
                  case "end":
                    return p.stop();
                }
            }, a);
          }));
          return function(a, n) {
            return e.apply(this, arguments);
          };
        }());
      }), f(this, $t).on(Ee.storeDelete, /* @__PURE__ */ function() {
        var t = y(/* @__PURE__ */ d().mark(function e(a, n) {
          return d().wrap(function(s) {
            for (; ; )
              switch (s.prev = s.next) {
                case 0:
                  r.sendIframeEvent(Ee.storeDelete, a.pluginId, n, { storeName: a.storeName });
                case 1:
                case "end":
                  return s.stop();
              }
          }, e);
        }));
        return function(e, a) {
          return t.apply(this, arguments);
        };
      }()), f(this, as).on(Ar.sendMessageToPeers, function(t) {
        var e = Ht == null ? void 0 : Ht.formatSocketServiceMessage(t.message);
        r.broadcastIframeEvent(Dr.chatMessage, { message: e });
      }), f(this, as).on(Ar.sendMessageToRoom, function(t) {
        var e = Ht == null ? void 0 : Ht.formatSocketServiceMessage(t.message);
        r.broadcastIframeEvent(Dr.chatMessage, { message: e });
      }), $.on(M.PEER_JOINED, function(t) {
        r.broadcastIframeEvent(Dr.peerJoined, t);
      }), $.on(M.PEER_CLOSED, function(t) {
        r.broadcastIframeEvent(Dr.peerLeft, t);
      });
      return;
    }
    $.on(M.ENABLE_PLUGIN, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return n = a.id, i = a.enabledBy, u.next = 3, r.enablePlugin({ id: n, enabledBy: i });
              case 3:
              case "end":
                return u.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.DISABLE_PLUGIN, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return n = a.id, s.next = 3, r.disablePlugin({ id: n });
              case 3:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), [M.PLUGIN_DATA, M.PLUGIN_EVENT].forEach(function(t) {
      $.on(t, function(e) {
        r.sendIframeEventOld(t, e);
      });
    }), [M.PEER_JOINED, M.PEER_CLOSED, M.NEW_CHAT_MESSAGE].forEach(function(t) {
      $.on(t, function(e) {
        r.broadcastIframeEventOld(t, e);
      });
    });
  } }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n, i, s, u, l) {
      var p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return p = _l(s.config.viewType, l) ? "socket-service" : "room-node", P.info("Using socket server ".concat(p, " for plugin")), h = new Qc(), e.forEach(function(g) {
                var w = new Gs(g, a, p, s, u, i);
                h.all.add(w);
              }), s.config.isV2 === !1 && s.config.setDisabledPlugins(h.all.toArray().map(function(g) {
                return g.id;
              })), m.abrupt("return", new o(a, n, p, h));
            case 6:
            case "end":
              return m.stop();
          }
      }, t);
    }));
    function r(t, e, a, n, i, s, u) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}());
function SI() {
  return Mr();
}
var ro = bI;
fu([A.trace("PluginController.getRoomPlugins")], ro.prototype, "getRoomPlugins", 1);
fu([A.trace("PluginController.enableForSelf")], ro.prototype, "enablePlugin", 1);
fu([A.trace("PluginController.disableForSelf")], ro.prototype, "disablePlugin", 1);
fu([A.trace("PluginController.setupEvents")], ro.prototype, "setupEvents", 1);
function EI() {
  ze.isElectron() && window.dyteElectronGetDisplayMediaSource && (navigator.mediaDevices.getDisplayMedia = /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function o() {
    var c, r, t, e, a, n, i;
    return d().wrap(function(u) {
      for (; ; )
        switch (u.prev = u.next) {
          case 0:
            return u.next = 2, window.dyteElectronGetDisplayMediaSource({ types: ["window", "screen"] });
          case 2:
            if (t = u.sent, e = [], t && (Array.isArray(t) ? e = t : e = [t]), (c = e) !== null && c !== void 0 && c.length) {
              u.next = 7;
              break;
            }
            throw new Error("Couldn't find any media source for screen share.");
          case 7:
            return a = e.find(function(l) {
              var p;
              return (p = l.id) === null || p === void 0 ? void 0 : p.includes("screen");
            }), a = (r = a) !== null && r !== void 0 ? r : e[0], n = { audio: !1, video: { mandatory: { chromeMediaSource: "desktop", chromeMediaSourceId: a.id } } }, u.next = 12, navigator.mediaDevices.getUserMedia(n);
          case 12:
            return i = u.sent, u.abrupt("return", i);
          case 14:
          case "end":
            return u.stop();
        }
    }, o);
  })));
}
var _I = Object.defineProperty, RI = Object.getOwnPropertyDescriptor, PI = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? RI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && _I(r, t, a), a;
}, Yc = (ns = /* @__PURE__ */ new K(), Ba = /* @__PURE__ */ new K(), is = /* @__PURE__ */ new K(), ss = /* @__PURE__ */ new K(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a) {
    var n;
    return I(this, r), n = c.call(this), z(b(n), ns, { get: CI, set: void 0 }), R(b(n), "items", void 0), z(b(n), Ba, { writable: !0, value: void 0 }), z(b(n), is, { writable: !0, value: void 0 }), z(b(n), ss, { writable: !0, value: void 0 }), V(b(n), Ba, t), V(b(n), is, e), V(b(n), ss, a), n.items = [], n;
  }
  return D(r, [{ key: "roomJoined", get: (
    /**
    * Returns true if the local participant has joined the meeting.
    */
    function() {
      var e;
      return ((e = f(this, ns)) === null || e === void 0 ? void 0 : e.roomJoined) === !0;
    }
  ) }, {
    key: "create",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
        var s, u, l, p = arguments;
        return d().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (s = p.length > 2 && p[2] !== void 0 ? p[2] : !1, u = p.length > 3 && p[3] !== void 0 ? p[3] : !1, !(f(this, Ba).config.viewType !== "LIVESTREAM" && !this.roomJoined)) {
                  v.next = 4;
                  break;
                }
                throw new q("Can't create polls without joining room");
              case 4:
                if (f(this, Ba).permissions.polls.canCreate) {
                  v.next = 7;
                  break;
                }
                return P.error("DytePolls::create::permission_denied"), v.abrupt("return");
              case 7:
                if (!(!n || !i)) {
                  v.next = 10;
                  break;
                }
                return P.error("DytePolls::question_and_options_can_not_be_empty", { dytePolls: { hasQuestion: !!n, optionsLength: i == null ? void 0 : i.length } }), v.abrupt("return");
              case 10:
                if (!(i.length < 2)) {
                  v.next = 13;
                  break;
                }
                return P.error("DytePolls::there_must_be_at_least_two_options", { dytePolls: { hasQuestion: !!n, optionsLength: i.length } }), v.abrupt("return");
              case 13:
                if (f(this, ss) !== "socket-service") {
                  v.next = 17;
                  break;
                }
                return v.next = 16, f(this, is).createPoll(n, i, s, u);
              case 16:
                return v.abrupt("return");
              case 17:
                return l = { question: n, options: i, anonymous: s, hideVotes: u, createdBy: f(this, Ba).name, createdByUserId: f(this, Ba).userId }, v.next = 20, f(this, ns).newPoll(l);
              case 20:
              case "end":
                return v.stop();
            }
        }, a, this);
      }));
      function e(a, n) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Casts a vote on an existing poll.
    * @param pollId The ID of the poll that is to be voted on.
    * @param index The index of the option.
    */
  }, { key: "vote", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (f(this, Ba).permissions.polls.canVote) {
                l.next = 3;
                break;
              }
              return P.error("DytePolls::vote::permission_denied"), l.abrupt("return");
            case 3:
              if (f(this, ss) !== "socket-service") {
                l.next = 7;
                break;
              }
              return l.next = 6, f(this, is).votePoll(n, i);
            case 6:
              return l.abrupt("return");
            case 7:
              return s = { pollId: n, index: i }, l.next = 10, f(this, ns).votePoll(s);
            case 10:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr));
function CI() {
  return Mr();
}
Yc = PI([jr(function(o) {
  throw new q(o.message, "0700");
})], Yc);
var II = Object.defineProperty, DI = Object.getOwnPropertyDescriptor, AI = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? DI(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && II(r, t, a), a;
}, MI = (co = /* @__PURE__ */ new K(), hn = /* @__PURE__ */ new K(), os = /* @__PURE__ */ new K(), lo = /* @__PURE__ */ new K(), /* @__PURE__ */ function() {
  function o(c, r, t) {
    I(this, o), z(this, lo, { get: OI, set: void 0 }), R(this, "polls", void 0), z(this, co, { writable: !0, value: void 0 }), z(this, hn, { writable: !0, value: void 0 }), z(this, os, { writable: !0, value: void 0 }), this.polls = new Yc(c, r, t), V(this, co, c), V(this, hn, r), V(this, os, t), this.setupEvents();
  }
  return D(o, [{ key: "canViewPolls", value: function() {
    return f(this, co).permissions.polls.canView;
  } }, { key: "setupEvents", value: function() {
    var r = this;
    if (f(this, os) === "socket-service") {
      if (!this.canViewPolls())
        return;
      $.on(M.SOCKET_SERVICE_ROOM_JOINED, function() {
        r.getPolls();
      }), f(this, hn).on(Sa.createPoll, function(t) {
        t.poll && r.updatePoll(o.formatSocketServicePoll(t.poll));
      }), f(this, hn).on(Sa.updatePoll, function(t) {
        t.poll && r.updatePoll(o.formatSocketServicePoll(t.poll));
      }), f(this, hn).on(Sa.votePoll, function(t) {
        t.poll && r.updatePoll(o.formatSocketServicePoll(t.poll));
      });
    } else
      $.onAsync(M.ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
        return d().wrap(function(a) {
          for (; ; )
            switch (a.prev = a.next) {
              case 0:
                if (r.canViewPolls()) {
                  a.next = 2;
                  break;
                }
                return a.abrupt("return");
              case 2:
                r.getPolls();
              case 3:
              case "end":
                return a.stop();
            }
        }, t);
      })));
    $.on(M.UPDATE_POLL, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                n = a.poll, r.updatePoll(n);
              case 2:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }());
  } }, { key: "updatePoll", value: function(r) {
    if (this.canViewPolls()) {
      var t = this.polls.items.findIndex(function(a) {
        return a.id === r.id;
      });
      if (t > -1) {
        var e = JSON.stringify(this.polls.items[t]);
        this.polls.items[t] = r, e !== JSON.stringify(r) && this.polls.emit("pollsUpdate", { polls: this.polls.items, newPoll: !1 });
        return;
      }
      this.polls.items = [].concat(sr(this.polls.items), [r]), this.polls.emit("pollsUpdate", { polls: this.polls.items, newPoll: !0 });
    }
  } }, { key: "getPolls", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (f(this, os) !== "socket-service") {
                u.next = 9;
                break;
              }
              return u.next = 3, f(this, hn).getPolls();
            case 3:
              if (e = u.sent, e != null && e.payload) {
                u.next = 6;
                break;
              }
              return u.abrupt("return");
            case 6:
              return a = vP.fromBinary(e.payload), n = a.polls, this.polls.items = n.map(function(l) {
                return o.formatSocketServicePoll(l);
              }), u.abrupt("return");
            case 9:
              if (!(f(this, lo) instanceof qe)) {
                u.next = 14;
                break;
              }
              return u.next = 12, f(this, lo).getPolls();
            case 12:
              i = u.sent.payload.polls, this.polls.items = Object.values(i);
            case 14:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a, n) {
      var i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return i = _v(e.config.viewType, n) ? "socket-service" : "room-node", P.info("Using socket server ".concat(i, " for polls")), u.abrupt("return", new o(e, a, i));
            case 3:
            case "end":
              return u.stop();
          }
      }, t);
    }));
    function r(t, e, a) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "formatSocketServicePoll", value: function(r) {
    var t = r.options.map(function(e) {
      return { count: e.count, text: e.text, votes: e.votes.map(function(a) {
        return { id: a.userId, name: a.name };
      }) };
    });
    return { anonymous: r.anonymous, createdBy: r.createdBy, createdByUserId: r.createdByUserId, hideVotes: r.hideVotes, id: r.pollId, options: t, question: r.question, voted: r.votes };
  } }]), o;
}());
function OI() {
  return Mr();
}
var Qv = MI;
AI([A.trace("PollController.setupEvents")], Qv.prototype, "setupEvents", 1);
var jp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, { onAddEvent: "remoteRequestAdd", onDeleteEvent: "remoteRequestRemove" });
  }
  return D(r, [{ key: "add", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
    return Oe(Pe(r.prototype), "add", this).call(this, e, a);
  } }, { key: "delete", value: function(e) {
    var a = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
    return Oe(Pe(r.prototype), "delete", this).call(this, e, a, n);
  } }]), r;
}(Ol), vi = /* @__PURE__ */ new K(), Ss = /* @__PURE__ */ new K(), sc = /* @__PURE__ */ new K(), NI = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this), z(b(a), vi, { get: $I, set: void 0 }), R(b(a), "incomingRequests", void 0), R(b(a), "outgoingRequests", void 0), R(b(a), "active", void 0), z(b(a), Ss, { writable: !0, value: void 0 }), z(b(a), sc, { writable: !0, value: void 0 }), V(b(a), sc, e), V(b(a), Ss, t), a.incomingRequests = new jp(), a.outgoingRequests = new jp(), a.active = null, a.mouseEvent = a.mouseEvent.bind(b(a)), a.keyboardEvent = a.keyboardEvent.bind(b(a)), a;
  }
  return D(r, [{
    key: "requestControl",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s, u, l, p;
        return d().wrap(function(v) {
          for (; ; )
            switch (v.prev = v.next) {
              case 0:
                if (s = f(this, sc).joined.get(n), s) {
                  v.next = 3;
                  break;
                }
                throw new q("Invalid peer.");
              case 3:
                if (u = (i = this.outgoingRequests) === null || i === void 0 ? void 0 : i.toArray().find(function(m) {
                  return m.hostPeerId === n;
                }), !u) {
                  v.next = 6;
                  break;
                }
                return v.abrupt("return", u.id);
              case 6:
                return l = Bs(), p = new js({ requestId: l, hostPeerId: n, remotePeerId: f(this, Ss).id, state: Ii.PENDING }), this.outgoingRequests.add(p), v.next = 11, f(this, vi).requestRemoteControl(p);
              case 11:
                return this.emit("remoteUpdate", { payload: { request: { id: p.id, hostPeerId: p.hostPeerId, remotePeerId: p.remotePeerId } }, type: Da.REQUEST_SENT }), v.abrupt("return", l);
              case 13:
              case "end":
                return v.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Accepts a remote control request from a peer.
    * @param requestId The request identifier that needs to be accepted
    */
  }, {
    key: "acceptControl",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                if (((i = this.active) === null || i === void 0 ? void 0 : i.id) !== n) {
                  l.next = 2;
                  break;
                }
                return l.abrupt("return");
              case 2:
                if (s = this.incomingRequests.get(n), s) {
                  l.next = 5;
                  break;
                }
                throw new q("No request found.");
              case 5:
                s.state = Ii.ACCEPTED, this.endControl(), this.active = s, f(this, vi).acceptRemoteControl(s), this.emit("remoteUpdate", { payload: { request: { id: this.active.id, hostPeerId: this.active.hostPeerId, remotePeerId: this.active.remotePeerId } }, type: Da.INCOMING_REQUEST_ACCEPTED });
              case 10:
              case "end":
                return l.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * End an active remote control.
    */
  }, { key: "endControl", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (this.active) {
                s.next = 2;
                break;
              }
              return s.abrupt("return");
            case 2:
              n = Q({}, this.active), f(this, vi).terminateRemoteControl(this.active.hostPeerId === f(this, Ss).id ? this.active.remotePeerId : this.active.hostPeerId, this.active), this.active = null, this.emit("remoteUpdate", { payload: { request: { id: n.id, hostPeerId: n.hostPeerId, remotePeerId: n.remotePeerId } }, type: n.hostPeerId === f(this, Ss).id ? Da.INCOMING_REQUEST_ENDED : Da.OUTGOING_REQUEST_ENDED });
            case 6:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "keyboardEvent", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (this.active) {
                l.next = 2;
                break;
              }
              return l.abrupt("return");
            case 2:
              i = r.getFormattedKeyboardEvent(n), i && (s = { eventType: Hs.KEYBOARD, keyboardEvent: i }, f(this, vi).sendEventRemoteControl(this.active.hostPeerId, this.active.id, s));
            case 4:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "mouseEvent", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i) {
      var s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (this.active) {
                p.next = 2;
                break;
              }
              return p.abrupt("return");
            case 2:
              s = r.getFormattedRemoteMouseEvent(n, i), s && (u = { eventType: Hs.MOUSE, mouseEvent: s }, f(this, vi).sendEventRemoteControl(this.active.hostPeerId, this.active.id, u));
            case 4:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e(a, n) {
      return t.apply(this, arguments);
    }
    return e;
  }() }], [{ key: "getFormattedRemoteMouseEvent", value: function(e, a) {
    var n = a.getBoundingClientRect(), i = { type: e.type, position: { x: Math.floor(e.x - n.left), y: Math.floor(e.y - n.top) }, boundingRect: { width: n.width, height: n.height } };
    return i;
  } }, { key: "getFormattedKeyboardEvent", value: function(e) {
    if (e.type === "keydown") {
      var a = { type: e.type, key: e.key };
      return a;
    }
    return null;
  } }]), r;
}(fr);
function $I() {
  return Mr();
}
var oc = /* @__PURE__ */ new K(), Gp = /* @__PURE__ */ new K(), LI = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), R(this, "remote", void 0), R(this, "hostPeetId", void 0), R(this, "remotePeetId", void 0), R(this, "remoteRequestTokens", void 0), R(this, "activeRemoteToken", void 0), z(this, oc, { writable: !0, value: void 0 }), z(this, Gp, { writable: !0, value: void 0 }), V(this, oc, c), V(this, Gp, r), this.hostPeetId = c.id, this.remote = new NI(c, r), this.setupEvents();
  }
  return D(o, [{ key: "setupEvents", value: function() {
    var r = this;
    $.on(M.MESSAGE, function(t) {
      if (t.remoteRequestType === Ia.REQUEST && (r.remote.incomingRequests.add(new js({ requestId: t.remoteRequestId, hostPeerId: t.hostPeerId, remotePeerId: t.remotePeerId, state: Ii.PENDING })), r.remote.emit("remoteUpdate", { payload: { request: { id: t.remoteRequestId, hostPeerId: t.hostPeerId, remotePeerId: t.remotePeerId } }, type: Da.REQUEST_RECEIVED })), t.remoteRequestType === Ia.ACCEPT) {
        var e = r.remote.outgoingRequests.get(t.remoteRequestId);
        if (!e)
          throw new q("There is no pending remote control request to accept.");
        r.remote.endControl(), e.state = Ii.ACCEPTED, r.remote.active = new js({ requestId: t.remoteRequestId, hostPeerId: t.hostPeerId, remotePeerId: t.remotePeerId, state: Ii.ACCEPTED }), r.remote.emit("remoteUpdate", { payload: { request: { id: t.remoteRequestId, hostPeerId: t.hostPeerId, remotePeerId: t.remotePeerId } }, type: Da.OUTGOING_REQUEST_ACCEPTED });
      }
      if (t.remoteRequestType === Ia.END) {
        var a;
        ((a = r.remote.active) === null || a === void 0 ? void 0 : a.id) === t.remoteRequestId && (r.remote.active = null), r.remote.emit("remoteUpdate", { payload: { request: { id: t.remoteRequestId, hostPeerId: t.hostPeerId, remotePeerId: t.remotePeerId } }, type: t.hostPeerId === f(r, oc).id ? Da.INCOMING_REQUEST_ENDED : Da.OUTGOING_REQUEST_ENDED });
      }
      t.remoteRequestType === Ia.EVENT && r.remote.active && r.remote.active.id === t.remoteRequestId && window.DyteRobot && (t.remoteEvent.eventType === Hs.MOUSE ? o.executeMouseEvent(t.remoteEvent.mouseEvent) : t.remoteEvent.eventType === Hs.KEYBOARD && o.executeKeyboardEvent(t.remoteEvent.keyboardEvent));
    }), $.on(M.PEER_CLOSED, function(t) {
      var e, a, n, i, s = t.id;
      [(e = r.remote) === null || e === void 0 || (e = e.active) === null || e === void 0 ? void 0 : e.hostPeerId, (a = r.remote) === null || a === void 0 || (a = a.active) === null || a === void 0 ? void 0 : a.remotePeerId].includes(s) && r.remote.endControl(), (n = r.remote) === null || n === void 0 || (n = n.incomingRequests) === null || n === void 0 || n.toArray().forEach(function(u) {
        [u.hostPeerId, u.remotePeerId].includes(s) && r.remote.incomingRequests.delete(u.id);
      }), (i = r.remote) === null || i === void 0 || (i = i.outgoingRequests) === null || i === void 0 || i.toArray().forEach(function(u) {
        [u.hostPeerId, u.remotePeerId].includes(s) && r.remote.outgoingRequests.delete(u.id);
      });
    });
  } }], [{ key: "executeMouseEvent", value: function(r) {
    var t = window.screen.width * r.position.x / r.boundingRect.width, e = window.screen.height * r.position.y / r.boundingRect.height, a = { width: window.screen.width, height: window.screen.height };
    switch (r.type) {
      case Fo.LEFT_CLICK:
        window.DyteRobot.mouse.leftClick(t, e, a);
        break;
      case Fo.RIGHT_CLICK:
        window.DyteRobot.mouse.rightClick(t, e, a);
        break;
      case Fo.MOVE:
        window.DyteRobot.mouse.moveTo(t, e, a);
        break;
    }
  } }, { key: "executeKeyboardEvent", value: function(r) {
    switch (r.type) {
      case "keydown":
        window.DyteRobot.keyboard.press(r.key);
        break;
    }
  } }]), o;
}(), UI = Object.defineProperty, FI = Object.defineProperties, VI = Object.getOwnPropertyDescriptors, Bp = Object.getOwnPropertySymbols, HI = Object.prototype.hasOwnProperty, jI = Object.prototype.propertyIsEnumerable, Xc = function(c, r, t) {
  return r in c ? UI(c, r, { enumerable: !0, configurable: !0, writable: !0, value: t }) : c[r] = t;
}, GI = function(c, r) {
  for (var t in r || (r = {}))
    HI.call(r, t) && Xc(c, t, r[t]);
  if (Bp) {
    var e = ae(Bp(r)), a;
    try {
      for (e.s(); !(a = e.n()).done; ) {
        var t = a.value;
        jI.call(r, t) && Xc(c, t, r[t]);
      }
    } catch (n) {
      e.e(n);
    } finally {
      e.f();
    }
  }
  return c;
}, BI = function(c, r) {
  return FI(c, VI(r));
}, tr = function(c, r, t) {
  return Xc(c, ce(r) !== "symbol" ? r + "" : r, t), t;
}, mu = { exports: {} }, Ai = (typeof Reflect == "undefined" ? "undefined" : ce(Reflect)) === "object" ? Reflect : null, qp = Ai && typeof Ai.apply == "function" ? Ai.apply : function(c, r, t) {
  return Function.prototype.apply.call(c, r, t);
}, Vo;
Ai && typeof Ai.ownKeys == "function" ? Vo = Ai.ownKeys : Object.getOwnPropertySymbols ? Vo = function(c) {
  return Object.getOwnPropertyNames(c).concat(Object.getOwnPropertySymbols(c));
} : Vo = function(c) {
  return Object.getOwnPropertyNames(c);
};
function qI(o) {
  console && console.warn && console.warn(o);
}
var Yv = Number.isNaN || function(c) {
  return c !== c;
};
function ur() {
  ur.init.call(this);
}
mu.exports = ur;
mu.exports.once = zI;
ur.EventEmitter = ur;
ur.prototype._events = void 0;
ur.prototype._eventsCount = 0;
ur.prototype._maxListeners = void 0;
var Wp = 10;
function gu(o) {
  if (typeof o != "function")
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + ce(o));
}
Object.defineProperty(ur, "defaultMaxListeners", { enumerable: !0, get: function() {
  return Wp;
}, set: function(c) {
  if (typeof c != "number" || c < 0 || Yv(c))
    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + c + ".");
  Wp = c;
} });
ur.init = function() {
  (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
};
ur.prototype.setMaxListeners = function(c) {
  if (typeof c != "number" || c < 0 || Yv(c))
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + c + ".");
  return this._maxListeners = c, this;
};
function Xv(o) {
  return o._maxListeners === void 0 ? ur.defaultMaxListeners : o._maxListeners;
}
ur.prototype.getMaxListeners = function() {
  return Xv(this);
};
ur.prototype.emit = function(c) {
  for (var r = [], t = 1; t < arguments.length; t++)
    r.push(arguments[t]);
  var e = c === "error", a = this._events;
  if (a !== void 0)
    e = e && a.error === void 0;
  else if (!e)
    return !1;
  if (e) {
    var n;
    if (r.length > 0 && (n = r[0]), n instanceof Error)
      throw n;
    var i = new Error("Unhandled error." + (n ? " (" + n.message + ")" : ""));
    throw i.context = n, i;
  }
  var s = a[c];
  if (s === void 0)
    return !1;
  if (typeof s == "function")
    qp(s, this, r);
  else
    for (var u = s.length, l = tf(s, u), t = 0; t < u; ++t)
      qp(l[t], this, r);
  return !0;
};
function Zv(o, c, r, t) {
  var e, a, n;
  if (gu(r), a = o._events, a === void 0 ? (a = o._events = /* @__PURE__ */ Object.create(null), o._eventsCount = 0) : (a.newListener !== void 0 && (o.emit("newListener", c, r.listener ? r.listener : r), a = o._events), n = a[c]), n === void 0)
    n = a[c] = r, ++o._eventsCount;
  else if (typeof n == "function" ? n = a[c] = t ? [r, n] : [n, r] : t ? n.unshift(r) : n.push(r), e = Xv(o), e > 0 && n.length > e && !n.warned) {
    n.warned = !0;
    var i = new Error("Possible EventEmitter memory leak detected. " + n.length + " " + String(c) + " listeners added. Use emitter.setMaxListeners() to increase limit");
    i.name = "MaxListenersExceededWarning", i.emitter = o, i.type = c, i.count = n.length, qI(i);
  }
  return o;
}
ur.prototype.addListener = function(c, r) {
  return Zv(this, c, r, !1);
};
ur.prototype.on = ur.prototype.addListener;
ur.prototype.prependListener = function(c, r) {
  return Zv(this, c, r, !0);
};
function WI() {
  if (!this.fired)
    return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
}
function xv(o, c, r) {
  var t = { fired: !1, wrapFn: void 0, target: o, type: c, listener: r }, e = WI.bind(t);
  return e.listener = r, t.wrapFn = e, e;
}
ur.prototype.once = function(c, r) {
  return gu(r), this.on(c, xv(this, c, r)), this;
};
ur.prototype.prependOnceListener = function(c, r) {
  return gu(r), this.prependListener(c, xv(this, c, r)), this;
};
ur.prototype.removeListener = function(c, r) {
  var t, e, a, n, i;
  if (gu(r), e = this._events, e === void 0)
    return this;
  if (t = e[c], t === void 0)
    return this;
  if (t === r || t.listener === r)
    --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete e[c], e.removeListener && this.emit("removeListener", c, t.listener || r));
  else if (typeof t != "function") {
    for (a = -1, n = t.length - 1; n >= 0; n--)
      if (t[n] === r || t[n].listener === r) {
        i = t[n].listener, a = n;
        break;
      }
    if (a < 0)
      return this;
    a === 0 ? t.shift() : JI(t, a), t.length === 1 && (e[c] = t[0]), e.removeListener !== void 0 && this.emit("removeListener", c, i || r);
  }
  return this;
};
ur.prototype.off = ur.prototype.removeListener;
ur.prototype.removeAllListeners = function(c) {
  var r, t, e;
  if (t = this._events, t === void 0)
    return this;
  if (t.removeListener === void 0)
    return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : t[c] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete t[c]), this;
  if (arguments.length === 0) {
    var a = Object.keys(t), n;
    for (e = 0; e < a.length; ++e)
      n = a[e], n !== "removeListener" && this.removeAllListeners(n);
    return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
  }
  if (r = t[c], typeof r == "function")
    this.removeListener(c, r);
  else if (r !== void 0)
    for (e = r.length - 1; e >= 0; e--)
      this.removeListener(c, r[e]);
  return this;
};
function ef(o, c, r) {
  var t = o._events;
  if (t === void 0)
    return [];
  var e = t[c];
  return e === void 0 ? [] : typeof e == "function" ? r ? [e.listener || e] : [e] : r ? KI(e) : tf(e, e.length);
}
ur.prototype.listeners = function(c) {
  return ef(this, c, !0);
};
ur.prototype.rawListeners = function(c) {
  return ef(this, c, !1);
};
ur.listenerCount = function(o, c) {
  return typeof o.listenerCount == "function" ? o.listenerCount(c) : rf.call(o, c);
};
ur.prototype.listenerCount = rf;
function rf(o) {
  var c = this._events;
  if (c !== void 0) {
    var r = c[o];
    if (typeof r == "function")
      return 1;
    if (r !== void 0)
      return r.length;
  }
  return 0;
}
ur.prototype.eventNames = function() {
  return this._eventsCount > 0 ? Vo(this._events) : [];
};
function tf(o, c) {
  for (var r = new Array(c), t = 0; t < c; ++t)
    r[t] = o[t];
  return r;
}
function JI(o, c) {
  for (; c + 1 < o.length; c++)
    o[c] = o[c + 1];
  o.pop();
}
function KI(o) {
  for (var c = new Array(o.length), r = 0; r < c.length; ++r)
    c[r] = o[r].listener || o[r];
  return c;
}
function zI(o, c) {
  return new Promise(function(r, t) {
    function e(n) {
      o.removeListener(c, a), t(n);
    }
    function a() {
      typeof o.removeListener == "function" && o.removeListener("error", e), r([].slice.call(arguments));
    }
    af(o, c, a, { once: !0 }), c !== "error" && QI(o, e, { once: !0 });
  });
}
function QI(o, c, r) {
  typeof o.on == "function" && af(o, "error", c, r);
}
function af(o, c, r, t) {
  if (typeof o.on == "function")
    t.once ? o.once(c, r) : o.on(c, r);
  else if (typeof o.addEventListener == "function")
    o.addEventListener(c, function e(a) {
      t.once && o.removeEventListener(c, e), r(a);
    });
  else
    throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + ce(o));
}
var YI = mu.exports, XI = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "message.v1.SocketMessage", [{ no: 1, name: "event", kind: "scalar", T: 13 }, { no: 2, name: "id", kind: "scalar", opt: !0, T: 9 }, { no: 3, name: "payload", kind: "scalar", opt: !0, T: 12 }, { no: 4, name: "metadata", kind: "scalar", opt: !0, T: 12 }]);
  }
  return D(r);
}(W), Jp = new XI(), ZI = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "message.v1.OpenMessage", [{ no: 1, name: "sid", kind: "scalar", T: 9 }]);
  }
  return D(r);
}(W), xI = new ZI(), eD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "message.v1.CloseMessage", [{ no: 1, name: "sid", kind: "scalar", T: 9 }, { no: 2, name: "code", kind: "scalar", T: 13 }, { no: 3, name: "reason", kind: "scalar", T: 9 }]);
  }
  return D(r);
}(W), rD = new eD(), tD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    return I(this, r), c.call(this, "message.v1.ErrorMessage", [{ no: 1, name: "type", kind: "scalar", T: 13 }, { no: 2, name: "message", kind: "scalar", T: 9 }]);
  }
  return D(r);
}(W);
new tD();
var eu = /* @__PURE__ */ function() {
  function o() {
    I(this, o);
  }
  return D(o, null, [{ key: "encode", value: function(r) {
    return Jp.toBinary(r);
  } }, { key: "decode", value: function(r) {
    return Jp.fromBinary(new Uint8Array(r));
  } }, { key: "decodeOpenMessage", value: function(r) {
    return xI.fromBinary(new Uint8Array(r));
  } }, { key: "decodeCloseMessage", value: function(r) {
    return rD.fromBinary(new Uint8Array(r));
  } }]), o;
}();
function aD(o, c) {
  return Math.floor(Math.random() * (c - o + 1) + o);
}
var nD = /* @__PURE__ */ function() {
  function o() {
    var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    I(this, o), tr(this, "opts"), tr(this, "__attempts"), this.opts = { initialTimeout: c.initialTimeout || 1e3, maxTimeout: c.maxTimeout || 1e4, factor: c.factor || 2 }, this.__attempts = 0;
  }
  return D(o, [{ key: "wait", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return this.__attempts += 1, e = aD(0, Math.min(this.opts.maxTimeout, this.opts.initialTimeout * Math.pow(2, this.__attempts))), n.next = 4, new Promise(function(i) {
                setTimeout(i, e);
              });
            case 4:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "getAttempts", value: function() {
    return this.__attempts;
  } }, { key: "reset", value: function() {
    this.__attempts = 0;
  } }]), o;
}(), Ka = { debug: 0, info: 1, warn: 2, error: 3 }, iD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), tr(this, "__logger"), tr(this, "__level"), this.__logger = console, this.__level = c;
  }
  return D(o, [{ key: "debug", value: function() {
    var r;
    if (!(Ka[this.__level] > Ka.debug)) {
      for (var t = arguments.length, e = new Array(t), a = 0; a < t; a++)
        e[a] = arguments[a];
      (r = this.__logger).debug.apply(r, ["[Sockrates]:"].concat(e));
    }
  } }, { key: "info", value: function() {
    var r;
    if (!(Ka[this.__level] > Ka.info)) {
      for (var t = arguments.length, e = new Array(t), a = 0; a < t; a++)
        e[a] = arguments[a];
      (r = this.__logger).info.apply(r, ["[Sockrates]:"].concat(e));
    }
  } }, { key: "warn", value: function() {
    var r;
    if (!(Ka[this.__level] > Ka.warn)) {
      for (var t = arguments.length, e = new Array(t), a = 0; a < t; a++)
        e[a] = arguments[a];
      (r = this.__logger).warn.apply(r, ["[Sockrates]:"].concat(e));
    }
  } }, { key: "error", value: function() {
    var r;
    if (!(Ka[this.__level] > Ka.error)) {
      for (var t = arguments.length, e = new Array(t), a = 0; a < t; a++)
        e[a] = arguments[a];
      (r = this.__logger).error.apply(r, ["[Sockrates]:"].concat(e));
    }
  } }]), o;
}(), Kp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this, t), e.binaryType = "arraybuffer", e;
  }
  return D(r, [{ key: "name", get: function() {
    return "websocket";
  } }]), r;
}(/* @__PURE__ */ Bt(WebSocket)), sD = "X-Sockrates-Message-Type", oD = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), tr(this, "__fetch"), tr(this, "__logger"), tr(this, "__sid"), tr(this, "__baseURL"), tr(this, "abortController", new AbortController());
    var t = c.baseURL;
    this.__baseURL = t, this.__logger = r, this.__fetch = this._fetch.bind(this);
  }
  return D(o, [{ key: "_fetch", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i, s, u;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              return s = this.__baseURL + e.toString(), u = (s.includes("?") ? s.concat("&") : s.concat("?")).concat("transport=polling&sid=".concat(this.__sid)), p.abrupt("return", fetch(u, BI(GI({}, a), { mode: (n = a == null ? void 0 : a.mode) != null ? n : "cors", signal: (i = a == null ? void 0 : a.signal) != null ? i : this.abortController.signal })));
            case 3:
            case "end":
              return p.stop();
          }
      }, t, this);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "setSid", value: function(r) {
    this.__sid = r;
  } }, { key: "sendMessage", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (s.prev = 0, this.__sid) {
                s.next = 3;
                break;
              }
              throw new Error("Not Connected");
            case 3:
              return n = new Headers({ "Access-Control-Request-Headers": "X-Sockrates-Message-Type", "X-Sockrates-Message-Type": a != null ? a : "BINARY" }), s.next = 6, this.__fetch("", { method: "post", body: e, headers: n });
            case 6:
              s.next = 12;
              break;
            case 8:
              throw s.prev = 8, s.t0 = s.catch(0), this.__logger.error("xhr::axios::pollingclient::sendMessage", { error: s.t0 }), s.t0;
            case 12:
            case "end":
              return s.stop();
          }
      }, t, this, [[0, 8]]);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "poll", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.prev = 0, i.next = 3, this.__fetch("");
            case 3:
              if (e = i.sent, a = e.headers.get(sD), a) {
                i.next = 7;
                break;
              }
              return i.abrupt("return", void 0);
            case 7:
              return i.abrupt("return", { messageType: a, payload: e });
            case 10:
              return i.prev = 10, i.t0 = i.catch(0), this.__logger.error("xhr::axios::pollingclient::poll", { error: i.t0 }), i.abrupt("return", void 0);
            case 14:
            case "end":
              return i.stop();
          }
      }, t, this, [[0, 10]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), uD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e) {
    var a;
    return I(this, r), a = c.call(this), tr(b(a), "__readyState"), tr(b(a), "__logger"), tr(b(a), "__apiClient"), tr(b(a), "__polling", !1), tr(b(a), "__constructPollingURL", function(n) {
      if (n.startsWith("ws://"))
        return "http://".concat(n.substring(5));
      if (n.startsWith("wss://"))
        return "https://".concat(n.substring(6));
      throw new Error("Something went wrong! Invalid URL.");
    }), tr(b(a), "onclose"), tr(b(a), "onopen"), tr(b(a), "onerror"), tr(b(a), "onmessage"), a.__logger = e, a.__apiClient = new oD({ baseURL: a.__constructPollingURL(t) }, e), a.__readyState = Pa.CONNECTING, a.poll(), a;
  }
  return D(r, [{ key: "name", get: function() {
    return "polling";
  } }, { key: "readyState", get: function() {
    return this.__readyState;
  } }, { key: "polling", get: function() {
    return this.__polling;
  } }, { key: "close", value: function() {
    this.__readyState = Pa.CLOSED, this.__apiClient.abortController.abort(), this.onclose && this.onclose(new CloseEvent("close"));
  } }, { key: "send", value: function(e) {
    var a = e === sf ? "PONG" : void 0;
    this.__apiClient.sendMessage(e, a);
  } }, { key: "poll", value: function() {
    this.__logger.debug("polling"), this.__polling = !0, this.doPoll();
  } }, { key: "doPoll", value: function() {
    this.__logger.debug("xhr poll");
    var e = this.__apiClient.poll();
    this.onData(e);
  } }, { key: "onData", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return h.next = 2, n;
            case 2:
              i = h.sent, h.t0 = i.messageType, h.next = h.t0 === "OPEN" ? 6 : h.t0 === "CLOSE" ? 14 : h.t0 === "PING" ? 22 : 24;
              break;
            case 6:
              return h.t1 = eu, h.next = 9, i.payload.arrayBuffer();
            case 9:
              return h.t2 = h.sent, s = h.t1.decodeOpenMessage.call(h.t1, h.t2), u = s.sid, this.onOpen(u), h.abrupt("break", 34);
            case 14:
              return h.t3 = eu, h.next = 17, i.payload.arrayBuffer();
            case 17:
              return h.t4 = h.sent, l = h.t3.decodeCloseMessage.call(h.t3, h.t4), this.__logger.info("polling::close_message_received", { reason: l.reason, code: l.code }), this.close(), h.abrupt("break", 34);
            case 22:
              return this.onmessage(new MessageEvent(i.messageType, { data: nf })), h.abrupt("break", 34);
            case 24:
              return h.t5 = this, h.t6 = MessageEvent, h.t7 = i.messageType, h.next = 29, i.payload.arrayBuffer();
            case 29:
              return h.t8 = h.sent, h.t9 = { data: h.t8 }, h.t10 = new h.t6(h.t7, h.t9), h.t5.onmessage.call(h.t5, h.t10), h.abrupt("break", 34);
            case 34:
              this.readyState !== Pa.CLOSED && (this.__polling = !1, this.emit("pollComplete"), this.readyState === Pa.OPEN ? this.poll() : this.__logger.debug("polling:ignoring_poll", { readyState: this.readyState }));
            case 35:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "onOpen", value: function(e) {
    this.__readyState === Pa.OPEN && this.__logger.warn("polling::multiple_open_events"), this.__apiClient.setSid(e), this.__readyState = Pa.OPEN, this.onopen && this.onopen(new Event("open")), this.emit("open");
  } }]), r;
}(mu.exports.EventEmitter);
function cD(o, c) {
  return o = Math.ceil(o), c = Math.floor(c), Math.floor(Math.random() * (c - o + 1)) + o;
}
var Pa = /* @__PURE__ */ function(o) {
  return o[o.CONNECTING = 0] = "CONNECTING", o[o.OPEN = 1] = "OPEN", o[o.CLOSING = 2] = "CLOSING", o[o.CLOSED = 3] = "CLOSED", o;
}(Pa || {}), nf = "2", sf = "3", lD = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), tr(this, "__transport"), tr(this, "__url"), tr(this, "__config"), tr(this, "__logger"), tr(this, "__sendQueue"), tr(this, "__eventEmitter"), tr(this, "__shouldConnect"), tr(this, "__reconnecting"), tr(this, "__pingTimeout"), tr(this, "__backoff"), tr(this, "__transports"), tr(this, "__upgradeAttempts");
    var t, e, a, n, i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C;
    this.__url = c, this.__sendQueue = [], this.__eventEmitter = new YI(), this.__shouldConnect = !0, this.__reconnecting = !1, this.__config = r != null ? r : {}, (e = (t = this.__config).autoReconnect) != null || (t.autoReconnect = !0), (n = (a = this.__config).retryConnectionInterval) != null || (a.retryConnectionInterval = 1e3), (s = (i = this.__config).pingTimeout) != null || (i.pingTimeout = 3e4), (l = (u = this.__config).connectionTimeout) != null || (u.connectionTimeout = 5e3), (h = (p = this.__config).debug) != null || (p.debug = !0), (m = (v = this.__config).maxReconnectionAttempts) != null || (v.maxReconnectionAttempts = 10), (w = (g = this.__config).disconnectOnPingTimeout) != null || (g.disconnectOnPingTimeout = !0), (T = (k = this.__config).queueOnDisconnect) != null || (k.queueOnDisconnect = !1), (E = (_ = this.__config).flushOnReconnect) != null || (_.flushOnReconnect = !1), this.__upgradeAttempts = 5, this.__logger = (S = this.__config.logger) != null ? S : new iD(this.__config.debug ? "debug" : "info"), this.__backoff = new nD(), this.__transports = (C = this.__config.transports) != null ? C : ["websocket"];
  }
  return D(o, [{ key: "readyState", get: function() {
    var r;
    return (r = this.__transport) == null ? void 0 : r.readyState;
  } }, { key: "url", get: function() {
    return this.__url;
  } }, { key: "config", get: function() {
    return this.__config;
  } }, { key: "sendQueue", get: function() {
    return this.__sendQueue;
  } }, { key: "flush", value: function() {
    var r = this;
    if (!this.__config.queueOnDisconnect)
      return !1;
    var t = [];
    return this.__sendQueue.forEach(function(e) {
      var a = r.send(e.event, e.id, e.payload, e.metadata);
      a || t.push(e);
    }), this.__sendQueue = t, this.__sendQueue;
  } }, { key: "__constructWebSocketAddress", value: function(r) {
    if (r.startsWith("ws://") || r.startsWith("wss://"))
      return r;
    if (r.startsWith("https://"))
      return "wss://".concat(r.substring(8));
    if (r.startsWith("http://"))
      return "ws://".concat(r.substring(7));
    throw new Error("Invalid URL. URL must start with http(s):// or ws(s)://.");
  } }, { key: "__handleErrors", value: function(r, t) {
    this.__logger.error("Error:", r), this.__eventEmitter.emit("errored", { error: r }), t == null || t(r);
  } }, { key: "__onMessage", value: function(r) {
    if (r.data === nf) {
      this.__logger.debug("Received ping from server"), this.__resetPingTimeout(), this.__send(sf);
      return;
    }
    this.__logger.debug("Received data:", r.data);
    var t = eu.decode(r.data), e = t.id, a = t.payload;
    this.__eventEmitter.emit(t.event.toString(), { id: e, payload: a });
  } }, { key: "__isConnected", value: function() {
    return this.__transport.readyState === 1;
  } }, { key: "__reconnect", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a = arguments;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (e = a.length > 0 && a[0] !== void 0 ? a[0] : !0, !(e && this.__reconnecting)) {
                i.next = 4;
                break;
              }
              return this.__logger.debug("Reconnect called when already in a reconnect loop. Ignoring."), i.abrupt("return");
            case 4:
              if (this.__reconnecting || this.__backoff.reset(), !(this.__config.maxReconnectionAttempts !== null && this.__backoff.getAttempts() >= this.__config.maxReconnectionAttempts)) {
                i.next = 9;
                break;
              }
              return this.__eventEmitter.emit("failed"), this.__reconnecting = !1, i.abrupt("return");
            case 9:
              return this.__reconnecting = !0, this.__cleanUpSocket(), this.__clearPingTimeout(), i.prev = 12, i.next = 15, this.__backoff.wait();
            case 15:
              if (this.__shouldConnect !== !1) {
                i.next = 17;
                break;
              }
              return i.abrupt("return");
            case 17:
              return this.__logger.debug("Reconnection attempt ".concat(this.__backoff.getAttempts())), this.__eventEmitter.emit("reconnectAttempt", { attempt: this.__backoff.getAttempts() }), i.next = 21, this.connect();
            case 21:
              if (this.__isConnected()) {
                i.next = 23;
                break;
              }
              throw Error("Reconnect Failed");
            case 23:
              this.__reconnecting = !1, this.__eventEmitter.emit("reconnected"), i.next = 32;
              break;
            case 27:
              i.prev = 27, i.t0 = i.catch(12), this.__logger.debug("Failed to reconnect."), this.__eventEmitter.emit("reconnectFailure", { attempt: this.__backoff.getAttempts() }), this.__reconnect(!1);
            case 32:
            case "end":
              return i.stop();
          }
      }, t, this, [[12, 27]]);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "__setTransportEvents", value: function(r) {
    var t = this;
    this.__transport.onclose = function(e) {
      try {
        var a = e.code, n = e.reason;
        if (r && r(n), t.__logger.debug("Socket closed. Close event:", e), t.__logger.debug("Connection closed code:", a), t.__logger.debug("Connection closed reason:", n), t.__shouldConnect && a !== 1e3 && t.__config.autoReconnect && !t.__reconnecting) {
          t.__eventEmitter.emit("reconnecting"), t.__reconnect();
          return;
        }
        t.__reconnecting || t.__eventEmitter.emit("disconnected", { code: a, reason: n });
      } catch (i) {
        t.__handleErrors(i);
      }
    }, this.__transport.onerror = function(e) {
      t.__handleErrors(e);
    }, this.__transport.onmessage = function(e) {
      return t.__onMessage(e);
    };
  } }, { key: "__attemptUpgrade", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e = this, a, n, i = arguments;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (a = i.length > 0 && i[0] !== void 0 ? i[0] : 0, !(a > this.__upgradeAttempts)) {
                u.next = 3;
                break;
              }
              return u.abrupt("return");
            case 3:
              return u.next = 5, new Promise(function(l) {
                var p = a === 0 ? 7500 : cD(2500, 5500);
                setTimeout(function() {
                  return l();
                }, p);
              });
            case 5:
              n = new Promise(function(l, p) {
                var h = new Kp(e.__constructWebSocketAddress(e.__url));
                e.__logger.debug("Connecting to", e.__url);
                var v = setTimeout(function() {
                  e.__logger.debug("Connection timeout while attempting upgrade. Closing socket"), h.close(3001, "Connection Timeout"), p();
                }, e.__config.connectionTimeout);
                h.onopen = function() {
                  e.__logger.debug("Upgrade Success! Ready State: ".concat(Pa[e.__transport.readyState])), v && clearTimeout(v);
                  var m = e.__transport;
                  e.__transport = h, e.__setTransportEvents(), e.__resetPingTimeout(), m && (m.onopen = void 0, m.onerror = void 0, m.onmessage = void 0, m.onclose = void 0, m.close()), e.__eventEmitter.emit("upgraded"), l();
                };
              }), n.then(function() {
                e.__logger.debug("Attempted Upgrade Successful");
              }).catch(function() {
                e.__logger.debug("Failed to upgrade transport, attempting again"), e.__attemptUpgrade();
              });
            case 7:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "connect", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e = this, a, n = arguments;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (a = n.length > 0 && n[0] !== void 0 ? n[0] : !1, !(!a && [0, 1].includes(this.readyState))) {
                s.next = 4;
                break;
              }
              return this.__logger.debug("Websocket was already connecting or connected."), s.abrupt("return");
            case 4:
              if (this.__shouldConnect !== !1) {
                s.next = 6;
                break;
              }
              return s.abrupt("return");
            case 6:
              return s.abrupt("return", new Promise(function(u, l) {
                e.__clearPingTimeout(), e.__cleanUpSocket();
                try {
                  e.__transport = e.__transports.includes("polling") ? new uD(e.__constructWebSocketAddress(e.__url), e.__logger) : new Kp(e.__constructWebSocketAddress(e.__constructWebSocketAddress(e.__url))), e.__logger.debug("Connecting to", e.__url);
                  var p = setTimeout(function() {
                    e.__logger.debug("Connection timeout. Closing socket"), e.__shouldConnect = !0, e.__cleanUpSocket(), e.__transport.close(3001, "Connection Timeout"), e.__config.autoReconnect && !e.__reconnecting && (e.__eventEmitter.emit("reconnecting"), e.__reconnect()), l(new Error("Connection timed out!"));
                  }, e.__config.connectionTimeout);
                  e.__transport.onopen = function() {
                    e.__logger.debug("Ready State: ".concat(Pa[e.__transport.readyState])), p && clearTimeout(p), e.__resetPingTimeout(), e.__eventEmitter.emit("connected"), e.__config.flushOnReconnect && e.flush(), e.__transport.name === "polling" && e.__transports.includes("websocket") && e.__attemptUpgrade(), u();
                  };
                  var h = function(m) {
                    p && clearTimeout(p), l(m);
                  };
                  e.__setTransportEvents(h);
                } catch (v) {
                  e.__handleErrors(v, l);
                }
              }));
            case 7:
            case "end":
              return s.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "__send", value: function(r) {
    try {
      return this.__transport.send(r), !0;
    } catch (t) {
      return this.__logger.error(t.message), !1;
    }
  } }, { key: "send", value: function(r, t, e, a) {
    var n = { event: r, id: t, payload: e, metadata: a };
    if (this.__config.queueOnDisconnect && (!this.__transport || this.__transport.readyState !== 1))
      return this.__logger.debug("Queuing message since socket is not connected!", n), this.__sendQueue.push(n), !1;
    var i = eu.encode(n);
    return this.__send(i);
  } }, { key: "emit", value: function(r, t, e, a) {
    return this.send(r, t, e, a);
  } }, { key: "sendRaw", value: function(r) {
    return this.__send(r);
  } }, { key: "receive", value: function(r, t) {
    return this.__eventEmitter.on(r.toString(), t);
  } }, { key: "on", value: function(r, t) {
    if (typeof r == "string" && (r === "connected" || r === "disconnected" || r === "errored" || r === "reconnected" || r === "reconnecting" || r === "reconnectAttempt" || r === "reconnectFailure" || r === "failed" || r === "upgraded")) {
      this.__eventEmitter.on(r, t);
      return;
    }
    this.receive(r, t);
  } }, { key: "__resetPingTimeout", value: function() {
    var r = this;
    this.config.disconnectOnPingTimeout && (this.__logger.debug("Resetting ping timeout"), this.__clearPingTimeout(), this.__pingTimeout = setTimeout(function() {
      var t;
      r.__logger.debug("Disconnecting the socket due to ping timeout"), r.__shouldConnect = !0;
      var e = 3002, a = "Ping timeout";
      (t = r.__transport) == null || t.close(e, a), r.__eventEmitter.emit("disconnected", { code: e, reason: a }), r.__config.autoReconnect && !r.__reconnecting && (r.__logger.debug("Triggering reconnection due to ping timeout"), r.__eventEmitter.emit("reconnecting"), r.__reconnect());
    }, this.__config.pingTimeout));
  } }, { key: "__clearPingTimeout", value: function() {
    this.__pingTimeout && (clearTimeout(this.__pingTimeout), this.__pingTimeout = void 0);
  } }, { key: "removeAllListeners", value: function() {
    this.__eventEmitter.removeAllListeners();
  } }, { key: "removeReceiver", value: function(r, t) {
    this.removeListener(r, t);
  } }, { key: "removeListener", value: function(r, t) {
    this.__eventEmitter.removeListener(r.toString(), t);
  } }, { key: "removeReceivers", value: function(r) {
    this.removeListeners(r);
  } }, { key: "removeListeners", value: function(r) {
    var t = this;
    this.__eventEmitter.listeners(r.toString()).map(function(e) {
      return t.removeListener(r, e);
    });
  } }, { key: "__cleanUpSocket", value: function() {
    this.__transport && (this.__transport.onopen = void 0, this.__transport.onerror = void 0, this.__transport.onmessage = void 0, this.__transport.onclose = void 0);
  } }, { key: "disconnect", value: function() {
    this.__shouldConnect = !1, this.__clearPingTimeout(), this.removeAllListeners(), this.__transport.close(1e3, "Sockrates disconnect method called.");
  } }]), o;
}(), dD = Object.defineProperty, pD = Object.getOwnPropertyDescriptor, yu = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? pD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && dD(r, t, a), a;
}, zp = 65535, hD = (us = /* @__PURE__ */ new K(), Wr = /* @__PURE__ */ new K(), Io = /* @__PURE__ */ new K(), po = /* @__PURE__ */ new WeakSet(), /* @__PURE__ */ function() {
  function o(c) {
    var r, t = c.peerId, e = c.roomName, a = c.authToken, n = c.capabilities;
    if (I(this, o), Or(this, po), z(this, us, { writable: !0, value: void 0 }), z(this, Wr, { writable: !0, value: void 0 }), z(this, Io, { writable: !0, value: void 0 }), R(this, "roomName", void 0), R(this, "peerId", void 0), R(this, "authToken", void 0), R(this, "capabilities", void 0), !t || !e || !a)
      throw new q("peerId, roomName, or authToken can not be empty");
    var i = fe.apiBase, s = fe.baseURI, u = o.getSocketEdgeDomain(i, s);
    typeof Dc("socket_server_base") == "string" && (u = Dc("socket_server_base"));
    var l = "wss://".concat(u);
    this.roomName = e, this.peerId = t, this.authToken = a, this.capabilities = n;
    var p = new URL("".concat(l, "/ws")), h = { roomID: e, peerID: t, authToken: a, useMediaV2: n.includes("HIVE"), ping: n.includes("PING"), capabilities: n.map(function(v) {
      return xo[v];
    }).join(" ") };
    Object.entries(h).forEach(function(v) {
      var m = ar(v, 2), g = m[0], w = m[1];
      p.searchParams.append(g, w.toString());
    }), V(this, us, p.href), V(this, Io, t), V(this, Wr, new lD(f(this, us), { autoReconnect: !0, disconnectOnPingTimeout: (r = n.includes("PING")) !== null && r !== void 0 ? r : !1, queueOnDisconnect: !0, flushOnReconnect: !1, logger: P }));
  }
  return D(o, [{ key: "url", get: function() {
    return f(this, us);
  } }, { key: "connect", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return e = function() {
                P.info("SocketService::connect::Connected to socket-edge"), $.emit(M.SOCKET_SERVICE_CONNECTED);
              }, this.onStateEvent("connected", e), a = function(m) {
                var g = m.reason, w = m.code;
                P.info("SocketService::connect::Disconnected from socket-edge", { error: { code: w, reason: g } }), $.emit(M.SOCKET_SERVICE_DISCONNECTED), !(w < 4e3 || w > 4002) && (w === 4e3 ? P.error("SocketService::connect::Bad Request", { error: { code: w, reason: g } }) : w === 4001 ? P.error("SocketService::connect::Unauthorized", { error: { code: w, reason: g } }) : w === 4002 ? P.error("SocketService::connect::Internal Error", { error: { code: w, reason: g } }) : P.error("SocketService::connect::Unknown Error", { error: { code: w, reason: g } }));
              }, this.onStateEvent("disconnected", a), n = function() {
                P.info("SocketService::connect::Reconnecting to socket-edge"), $.emit(M.SOCKET_SERVICE_RECONNECTING);
              }, this.onStateEvent("reconnecting", n), i = function(m) {
                var g = m.attempt;
                P.info("SocketService::connect::Attempting reconnect to socket-edge"), $.emit(M.SOCKET_SERVICE_RECONNECTION_ATTEMPT, { attempt: g });
              }, this.onStateEvent("reconnectAttempt", i), s = function(m) {
                var g = m.attempt;
                P.info("SocketService::connect::Reconnect attempt failed"), $.emit(M.SOCKET_SERVICE_RECONNECT_FAILURE, { attempt: g });
              }, this.onStateEvent("reconnectFailure", s), u = function() {
                P.info("SocketService::connect::Reconnected to socket-edge"), $.emit(M.SOCKET_SERVICE_RECONNECTED);
              }, this.onStateEvent("reconnected", u), l = function() {
                P.info("SocketService::connect::Socket-edge reconnects failed"), $.emit(M.SOCKET_SERVICE_FAILED);
              }, this.onStateEvent("failed", l), h.next = 16, f(this, Wr).connect();
            case 16:
            case "end":
              return h.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disconnect", value: function() {
    return f(this, Wr).disconnect();
  } }, { key: "isConnected", get: function() {
    try {
      return f(this, Wr).readyState === 1;
    } catch (r) {
      return !1;
    }
  } }, { key: "sendMessage", value: function(r, t, e) {
    var a = {};
    return A.injectContext(a), f(this, Wr).send(r, e != null ? e : Ne(this, po, Qp).call(this), t, new TextEncoder().encode(JSON.stringify(a)));
  } }, { key: "sendMessagePromise", value: function(r, t, e) {
    var a = parseInt({}.SOCKET_SERVICE_MESSAGE_REQUEST_TIMEOUT, 10) || 2e4;
    return this.sendMessagePromiseWithTimeout({ event: r, timeout: a, protobuf: t, messageId: e });
  } }, { key: "sendMessagePromiseWithTimeout", value: function(r) {
    var t = this, e = r.event, a = r.timeout, n = r.protobuf, i = r.messageId;
    return new Promise(function(s, u) {
      var l = function(w, k) {
        f(t, Wr).removeListener(e, w), f(t, Wr).removeListener(zp, k), f(t, Wr).removeListener(Xe.errorResponse, k);
      }, p = i != null ? i : Ne(t, po, Qp).call(t), h = {};
      A.injectContext(h);
      var v = function g(w) {
        var k = w.id, T = w.payload;
        if (p === k) {
          var _;
          try {
            var E = US.fromBinary(T);
            _ = new Error(E.errorMessage);
          } catch (C) {
            _ = new Error("failed to parse error message", { cause: C });
          }
          try {
            var S = GE.fromBinary(T);
            _ = new Error(S.message);
          } catch (C) {
            _ = new Error("failed to parse error message", { cause: C });
          }
          u(_), l(m, g);
        }
      }, m = function g(w) {
        var k = w.id, T = w.payload;
        p === k && (s({ id: k, payload: T }), l(g, v));
      };
      f(t, Wr).on(e, m), f(t, Wr).on(zp, v), f(t, Wr).on(Xe.errorResponse, v), setTimeout(function() {
        l(m, v), u(new Error("request timeout for callback"));
      }, a), f(t, Wr).send(e, p, n, new TextEncoder().encode(JSON.stringify(h)));
    });
  } }, { key: "on", value: function(r, t) {
    f(this, Wr).on(r, t);
  } }, { key: "onStateEvent", value: function(r, t) {
    f(this, Wr).on(r, t);
  } }, { key: "flush", value: function() {
    return f(this, Wr).flush();
  } }], [{ key: "getSocketEdgeDomain", value: function(r, t) {
    return Ci({ servicePrefix: "socket-edge", apiBase: r, baseURI: t });
  } }]), o;
}());
function Qp() {
  return "".concat(f(this, Io), "-").concat((Math.random() + 1).toString(36).substring(7));
}
var to = hD;
yu([A.trace("SocketService.connect")], to.prototype, "connect", 1);
yu([A.trace("SocketService.disconnect")], to.prototype, "disconnect", 1);
yu([A.trace("SocketService.sendMessagePromise")], to.prototype, "sendMessagePromise", 1);
yu([A.trace("SocketService.sendMessagePromiseWithTimeout")], to.prototype, "sendMessagePromiseWithTimeout", 1);
var Kr = /* @__PURE__ */ new K(), vD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, Kr, { writable: !0, value: void 0 }), V(this, Kr, c);
  }
  return D(o, [{ key: "addPlugin", value: function(r, t) {
    f(this, Kr).sendMessage(Ee.addPlugin, m0.toBinary({ pluginId: r, staggered: t }));
  } }, { key: "removePlugin", value: function(r) {
    f(this, Kr).sendMessage(Ee.removePlugin, y0.toBinary({ pluginId: r, staggered: !1 }));
  } }, { key: "getActivePlugins", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Kr).sendMessagePromise(Ee.getPlugins);
            case 2:
              return e = i.sent, a = e.payload, i.abrupt("return", a ? j0.fromBinary(a) : { plugins: [] });
            case 5:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "customPluginEventToRoom", value: function(r, t, e) {
    var a = { pluginId: r, pluginData: new TextEncoder().encode(JSON.stringify(t)) };
    f(this, Kr).sendMessage(Ee.customPluginEventToRoom, C0.toBinary(a), e);
  } }, { key: "customPluginEventToPeers", value: function(r, t, e, a) {
    var n = { pluginId: r, peerIds: t, pluginData: new TextEncoder().encode(JSON.stringify(e)) };
    f(this, Kr).sendMessage(Ee.customPluginEventToPeers, D0.toBinary(n), a);
  } }, { key: "enablePluginForRoom", value: function(r, t) {
    f(this, Kr).sendMessage(Ee.enablePluginForRoom, w0.toBinary({ pluginId: r }), t);
  } }, { key: "enablePluginForPeers", value: function(r, t, e) {
    f(this, Kr).sendMessage(Ee.enablePluginForPeers, E0.toBinary({ pluginId: r, peerIds: t }), e);
  } }, { key: "disablePluginForRoom", value: function(r, t) {
    f(this, Kr).sendMessage(Ee.disablePluginForRoom, b0.toBinary({ pluginId: r }), t);
  } }, { key: "disablePluginForPeers", value: function(r, t, e) {
    f(this, Kr).sendMessage(Ee.disablePluginForPeers, R0.toBinary({ pluginId: r, peerIds: t }), e);
  } }, { key: "storeInsertKeys", value: function(r, t, e, a) {
    var n = { pluginId: r, storeName: t, insertKeys: e.map(function(i) {
      return { storeKey: i.key, payload: new TextEncoder().encode(JSON.stringify(i.payload)) };
    }) };
    f(this, Kr).sendMessage(Ee.storeInsertKeys, mp.toBinary(n), a);
  } }, { key: "storeGetKeys", value: function(r, t, e, a) {
    var n = { pluginId: r, storeName: t, getKeys: e.map(function(i) {
      return { storeKey: i.key };
    }) };
    f(this, Kr).sendMessage(Ee.storeGetKeys, N0.toBinary(n), a);
  } }, { key: "storeDeleteKeys", value: function(r, t, e, a) {
    var n = { pluginId: r, storeName: t, deleteKeys: e.map(function(i) {
      return { storeKey: i.key };
    }) };
    f(this, Kr).sendMessage(Ee.storeDeleteKeys, L0.toBinary(n), a);
  } }, {
    key: "storeDelete",
    value: function(r, t, e) {
      f(this, Kr).sendMessage(Ee.storeDelete, F0.toBinary({ pluginId: r, storeName: t }), e);
    }
    /**
    * @deprecated
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "getPluginDataOld",
    value: function(r, t) {
      P.info("getPluginDataOld", { plugin: { id: r, storeName: t } });
    }
    /**
    * @deprecated
    */
  }, { key: "storePluginDataOld", value: function(r, t, e) {
    var a = { pluginId: r, storeName: t, insertKeys: [{ storeKey: e.key, payload: new TextEncoder().encode(JSON.stringify(e)) }] };
    f(this, Kr).sendMessage(Ee.storeInsertKeys, mp.toBinary(a));
  } }, { key: "on", value: function(r, t) {
    var e;
    switch (r) {
      case Ee.addPlugin:
      case Ee.enablePluginForPeers:
      case Ee.enablePluginForRoom: {
        e = Pc.fromBinary.bind(Pc);
        break;
      }
      case Ee.removePlugin:
      case Ee.disablePluginForPeers:
      case Ee.disablePluginForRoom: {
        e = gp.fromBinary.bind(gp);
        break;
      }
      case Ee.customPluginEventToPeers:
      case Ee.customPluginEventToRoom: {
        e = kp.fromBinary.bind(kp);
        break;
      }
      case Ee.storeInsertKeys:
      case Ee.storeGetKeys:
      case Ee.storeDeleteKeys:
      case Ee.storeDelete: {
        e = yp.fromBinary.bind(yp);
        break;
      }
    }
    f(this, Kr).on(r, function(a) {
      var n = a.payload, i = a.id, s = e(n);
      return t(s, i);
    });
  } }]), o;
}(), fD = Object.defineProperty, mD = Object.getOwnPropertyDescriptor, ao = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? mD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && fD(r, t, a), a;
}, Vn = (Ps = /* @__PURE__ */ new K(), cs = /* @__PURE__ */ new WeakSet(), /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), Or(b(e), cs), z(b(e), Ps, { writable: !0, value: void 0 }), R(b(e), "recordings", []), V(b(e), Ps, t), e;
  }
  return D(r, [{ key: "recordingState", get: function() {
    return this.recordings.some(function(e) {
      return e.state === "RECORDING";
    }) ? "RECORDING" : this.recordings.some(function(e) {
      return e.state === "PAUSED";
    }) ? "PAUSED" : this.recordings.some(function(e) {
      return e.state === "STARTING";
    }) ? "STARTING" : this.recordings.some(function(e) {
      return e.state === "STOPPING";
    }) ? "STOPPING" : "IDLE";
  } }, { key: "updateRecordings", value: function(e) {
    this.recordings = e, this.emit("recordingUpdate", this.recordingState);
  } }, { key: "start", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      var i, s, u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              if (f(this, Ps).permissions.canRecord) {
                h.next = 3;
                break;
              }
              throw P.error("DyteRecording::start::permission_denied"), new q("User does not have permission to start recording");
            case 3:
              if (!((n == null ? void 0 : n.allowMultiple) !== !0 && (this.recordingState === "STARTING" || this.recordingState === "RECORDING" || this.recordingState === "STOPPING"))) {
                h.next = 6;
                break;
              }
              throw P.error("DyteRecording::start::recording_in_progress", { recording: { state: this.recordingState } }), new q("Cant start recording, recordingState irregular: ".concat(this.recordingState));
            case 6:
              return h.prev = 6, i = Hr(), s = fe.defaults.recording, u = s === void 0 ? {} : s, h.next = 11, i.startRecording(u, n == null ? void 0 : n.allowMultiple);
            case 11:
              l = h.sent, this.updateRecordings([].concat(sr(this.recordings), [{ id: l, state: "STARTING" }])), h.next = 19;
              break;
            case 15:
              throw h.prev = 15, h.t0 = h.catch(6), P.error("DyteRecording::stop::recording_failed_to_start", { error: h.t0 }), new q("Error while starting recording");
            case 19:
            case "end":
              return h.stop();
          }
      }, a, this, [[6, 15]]);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stop", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, Ne(this, cs, uc).call(this, "stop", ["RECORDING", "PAUSED"], n);
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "pause", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, Ne(this, cs, uc).call(this, "pause", ["RECORDING"], n);
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "resume", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.next = 2, Ne(this, cs, uc).call(this, "resume", ["PAUSED"], n);
            case 2:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr));
function uc(o, c, r) {
  return Zc.apply(this, arguments);
}
function Zc() {
  return Zc = y(/* @__PURE__ */ d().mark(function o(c, r, t) {
    var e, a;
    return d().wrap(function(i) {
      for (; ; )
        switch (i.prev = i.next) {
          case 0:
            if (f(this, Ps).permissions.canRecord) {
              i.next = 3;
              break;
            }
            throw P.error("DyteRecording::stop::permission_denied"), new q("User does not have permission to stop recording");
          case 3:
            if (e = [], t === void 0) {
              i.next = 14;
              break;
            }
            if (a = this.recordings.find(function(s) {
              return s.id === t;
            }), a !== void 0) {
              i.next = 8;
              break;
            }
            throw new q("Could not find the specified recording");
          case 8:
            if (!r.includes(a.state)) {
              i.next = 11;
              break;
            }
            return P.error("DyteRecording::stop::recording_not_in_expected_state", { recording: { state: a.state } }), i.abrupt("return");
          case 11:
            e.push(a), i.next = 15;
            break;
          case 14:
            e = this.recordings.filter(function(s) {
              return r.includes(s.state);
            });
          case 15:
            e.forEach(/* @__PURE__ */ function() {
              var s = y(/* @__PURE__ */ d().mark(function u(l) {
                var p, h;
                return d().wrap(function(m) {
                  for (; ; )
                    switch (m.prev = m.next) {
                      case 0:
                        return p = l.state, c === "stop" && (l.state = "STOPPING"), m.prev = 2, h = Hr(), m.next = 6, h.updateRecording(l.id, c);
                      case 6:
                        m.next = 13;
                        break;
                      case 8:
                        throw m.prev = 8, m.t0 = m.catch(2), P.error("DyteRecording::stop::recording_failed_to_stop", { error: m.t0 }), l.state = p, new q("Error while stopping recording");
                      case 13:
                      case "end":
                        return m.stop();
                    }
                }, u, null, [[2, 8]]);
              }));
              return function(u) {
                return s.apply(this, arguments);
              };
            }());
          case 16:
          case "end":
            return i.stop();
        }
    }, o, this);
  })), Zc.apply(this, arguments);
}
ao([A.trace("DyteRecording.start")], Vn.prototype, "start", 1);
ao([A.trace("DyteRecording.stop")], Vn.prototype, "stop", 1);
ao([A.trace("DyteRecording.stop")], Vn.prototype, "pause", 1);
ao([A.trace("DyteRecording.stop")], Vn.prototype, "resume", 1);
Vn = ao([jr(function(o) {
  throw new q(o.message, "1000");
})], Vn);
var gD = Object.defineProperty, yD = Object.getOwnPropertyDescriptor, kD = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? yD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && gD(r, t, a), a;
}, of = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), R(this, "recording", void 0), R(this, "room", void 0), this.recording = new Vn(c), this.room = r, this.setupEvents();
  }
  return D(o, [{ key: "setupEvents", value: function() {
    var r = this;
    $.on(M.ROOM_STATE, function(t) {
      r.recording.recordings = t.activeRecordings.map(function(e) {
        return { id: e.recordingId, state: e.recordingStatus };
      });
    }), this.room.on(le.recordingStarted, function(t) {
      var e = !1, a = sr(r.recording.recordings);
      a.forEach(function(n) {
        n.id === t.recordingId && (e = !0, n.state = "RECORDING");
      }), e === !1 && a.push({ id: t.recordingId, state: "RECORDING" }), r.recording.updateRecordings(a);
    }), this.room.on(le.recordingPaused, function(t) {
      var e = sr(r.recording.recordings);
      e.forEach(function(a) {
        a.id === t.recordingId && (a.state = "PAUSED");
      }), r.recording.updateRecordings(e);
    }), this.room.on(le.recordingStopped, function(t) {
      var e = sr(r.recording.recordings.filter(function(a) {
        return a.id !== t.recordingId;
      }));
      r.recording.updateRecordings(e);
    });
  } }]), o;
}();
kD([A.trace("RecordingController.setupEvents")], of.prototype, "setupEvents", 1);
function wD(o) {
  var c = 0, r, t;
  if (!o)
    return c;
  for (r = 0; r < o.length; r += 1)
    t = o.charCodeAt(r), c = (c << 5) - c + t, c |= 0;
  return Math.abs(c) % 100 + 1;
}
var TD = /* @__PURE__ */ function() {
  function o() {
    I(this, o);
  }
  return D(o, null, [{ key: "hasFeature", value: function(r) {
    var t;
    return (t = ue.hasFeature(r)) !== null && t !== void 0 ? t : !1;
  } }, { key: "getFeatureValue", value: function(r) {
    return ue.getValue(r);
  } }, { key: "getAllFeatures", value: function() {
    return ue.getAllFlags();
  } }]), o;
}(), bD = /* @__PURE__ */ function() {
  function o(c, r, t) {
    I(this, o), R(this, "logger", void 0), R(this, "features", void 0), R(this, "browserSpecs", void 0), R(this, "callStats", void 0), this.logger = c, this.features = r, this.browserSpecs = ze, this.callStats = t;
  }
  return D(o, null, [{ key: "init", value: function(r) {
    return new o(P, TD, r);
  } }]), o;
}(), SD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), R(this, "internals", void 0), this.internals = c;
  }
  return D(o, null, [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return e = bD.init(se), n.abrupt("return", new o(e));
            case 2:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), ED = Object.defineProperty, _D = Object.getOwnPropertyDescriptor, uf = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? _D(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && ED(r, t, a), a;
}, _o = /* @__PURE__ */ new K(), Ll = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), z(b(e), _o, { writable: !0, value: void 0 }), R(b(e), "state", "IDLE"), R(b(e), "playbackUrl", void 0), R(b(e), "viewerCount", void 0), V(b(e), _o, t), e.viewerCount = 0, e;
  }
  return D(r, [{ key: "setLivestreamState", value: function(e) {
    var a = this.state;
    this.state = e, a !== e && this.emitCurrentLivestreamState();
  } }, { key: "emitCurrentLivestreamState", value: function() {
    this.emit("livestreamUpdate", this.state);
  } }, { key: "start", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              if (f(this, _o).permissions.canLivestream) {
                u.next = 3;
                break;
              }
              throw P.error("DyteLivestream::start::permission_denied"), new q("User does not have permission to start livestreaming");
            case 3:
              return this.setLivestreamState("STARTING"), u.prev = 4, n = Hr(), u.next = 8, n.startLivestreaming();
            case 8:
              i = u.sent, this.playbackUrl = i, u.next = 17;
              break;
            case 12:
              throw u.prev = 12, u.t0 = u.catch(4), P.error("DyteRecording::stop::livestream_failed_to_start", { error: u.t0 }), this.setLivestreamState("IDLE"), new q("Error while starting livestream");
            case 17:
            case "end":
              return u.stop();
          }
      }, a, this, [[4, 12]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stop", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (f(this, _o).permissions.canLivestream) {
                s.next = 3;
                break;
              }
              throw P.error("DyteLivestream::stop::permission_denied"), new q("User does not have permission to stop livestreaming");
            case 3:
              if (this.state === "LIVESTREAMING") {
                s.next = 6;
                break;
              }
              throw P.error("DyteLivestream::stop::inconsistent_state"), new q("Livestream not started yet");
            case 6:
              return s.prev = 6, this.setLivestreamState("STOPPING"), n = Hr(), s.next = 11, n.stopLivestreaming();
            case 11:
              s.next = 18;
              break;
            case 13:
              throw s.prev = 13, s.t0 = s.catch(6), P.error("DyteLivestream::stop::livestream_failed_to_stop", { error: s.t0 }), this.setLivestreamState("STOPPING"), new q("Error while stopping livestream");
            case 18:
            case "end":
              return s.stop();
          }
      }, a, this, [[6, 13]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr);
uf([A.trace("livestream.start")], Ll.prototype, "start", 1);
uf([A.trace("livestream.stop")], Ll.prototype, "stop", 1);
var RD = Object.defineProperty, PD = Object.getOwnPropertyDescriptor, CD = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? PD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && RD(r, t, a), a;
}, fi = /* @__PURE__ */ new K(), mi = /* @__PURE__ */ new K(), cf = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), R(this, "livestream", void 0), z(this, fi, { writable: !0, value: void 0 }), z(this, mi, { writable: !0, value: void 0 }), this.livestream = new Ll(c), V(this, mi, r), this.setupEvents();
  }
  return D(o, [{ key: "fetchInitialLivestreamingState", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a, n, i;
      return d().wrap(function(u) {
        for (; ; )
          switch (u.prev = u.next) {
            case 0:
              return e = Hr(), u.next = 3, e.getActiveLivestream();
            case 3:
              a = u.sent, n = a.status, i = a.playbackUrl, this.livestream.playbackUrl = i, n === "LIVE" && this.livestream.setLivestreamState("LIVESTREAMING");
            case 8:
            case "end":
              return u.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "setupEvents", value: function() {
    var r = this;
    f(this, mi).on(le.startedLivestream, function(t) {
      r.livestream.playbackUrl = t.playbackUrl, r.livestream.setLivestreamState("LIVESTREAMING");
    }), f(this, mi).on(le.stoppedLivestream, function() {
      r.livestream.setLivestreamState("IDLE"), r.livestream.playbackUrl = void 0;
    }), f(this, mi).on(le.erroredLivestream, function() {
      r.livestream.setLivestreamState("IDLE"), r.livestream.playbackUrl = void 0;
    }), f(this, mi).on(le.roomPeerCount, function(t) {
      r.livestream.viewerCount = t.count, r.livestream.emit("viewerCountUpdate", t.count);
    }), $.on(M.PEER_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                ((n = a.flags) === null || n === void 0 ? void 0 : n.hiddenParticipant) === !0 && a.recorderType === "LIVESTREAMER" && (V(r, fi, a.id), r.livestream.setLivestreamState("LIVESTREAMING"));
              case 1:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.PEER_CLOSED, function(t) {
      t.id === f(r, fi) && (V(r, fi, void 0), r.livestream.setLivestreamState("IDLE"));
    }), $.onAsync(M.ROOM_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i, s;
        return d().wrap(function(l) {
          for (; ; )
            switch (l.prev = l.next) {
              case 0:
                P.debug("[ROOM_JOINED] resolved request to fetch livestream."), i = (n = a.peers) === null || n === void 0 ? void 0 : n.filter(function(p) {
                  var h;
                  return ((h = p.flags) === null || h === void 0 ? void 0 : h.hiddenParticipant) === !0 && p.recorderType === "LIVESTREAMER";
                }), i.length ? (V(r, fi, i && ((s = i[0]) === null || s === void 0 ? void 0 : s.id)), r.livestream.setLivestreamState("LIVESTREAMING")) : (V(r, fi, void 0), r.livestream.setLivestreamState("IDLE"));
              case 3:
              case "end":
                return l.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.LEAVE_MEDIA_ROOM, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (!r.livestream.playbackUrl) {
                a.next = 2;
                break;
              }
              return a.abrupt("return");
            case 2:
              return P.info("Fetching livestreaming state on leave stage"), a.prev = 3, a.next = 6, r.fetchInitialLivestreamingState();
            case 6:
              a.next = 10;
              break;
            case 8:
              a.prev = 8, a.t0 = a.catch(3);
            case 10:
            case "end":
              return a.stop();
          }
      }, t, null, [[3, 8]]);
    }))), $.onAsync(M.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.prev = 0, a.next = 3, r.fetchInitialLivestreamingState();
            case 3:
              a.next = 7;
              break;
            case 5:
              a.prev = 5, a.t0 = a.catch(0);
            case 7:
            case "end":
              return a.stop();
          }
      }, t, null, [[0, 5]]);
    })));
  } }]), o;
}();
CD([A.trace("LivestreamController.setupEvents")], cf.prototype, "setupEvents", 1);
var hr = Dt(ml().permissions), me = /* @__PURE__ */ new K(), Ro = /* @__PURE__ */ new K(), cc = /* @__PURE__ */ new K(), ct = /* @__PURE__ */ new K(), Yp = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a) {
    var n, i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
    if (I(this, r), n = c.call(this), z(b(n), me, { writable: !0, value: void 0 }), z(b(n), Ro, { writable: !0, value: void 0 }), z(b(n), cc, { writable: !0, value: void 0 }), z(b(n), ct, { writable: !0, value: void 0 }), !t)
      throw P.error("DytePermissionsPreset::load_preset_permissions_failed"), new q("Could not load preset permissions.");
    return V(b(n), cc, a), V(b(n), Ro, e), V(b(n), me, t), i && n.setupEvents(), n;
  }
  return D(r, [{ key: "setupEvents", value: function() {
    function e(n) {
      return a.apply(this, arguments);
    }
    function a() {
      return a = y(/* @__PURE__ */ d().mark(function n(i) {
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                V(this, ct, i), this.stageStatus = i;
              case 2:
              case "end":
                return u.stop();
            }
        }, n, this);
      })), a.apply(this, arguments);
    }
    $.onAsync(M.SET_STAGE_STATUS, e.bind(this));
  } }, {
    key: "mediaRoomType",
    get: function() {
      return f(this, cc) ? "HIVE" : "ROOM_NODE";
    }
    /**
    * The `stageEnabled` property returns a boolean value.
    * If `true`, stage management is available for the participant.
    */
  }, { key: "stageEnabled", get: function() {
    var e;
    return ((e = f(this, me)) === null || e === void 0 ? void 0 : e.stageEnabled) || f(this, Ro) === Rr.Webinar || f(this, Ro) === Rr.Livestream;
  } }, {
    key: "acceptStageRequests",
    get: function() {
      var e, a;
      return ((e = f(this, me)) === null || e === void 0 ? void 0 : e.acceptStageRequests) || ((a = f(this, me)) === null || a === void 0 ? void 0 : a.canAcceptProductionRequests);
    }
    /**
    * The `stageAccess` property dictactes how a user interacts with the stage.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`;
    */
  }, {
    key: "stageAccess",
    get: function() {
      var e, a, n;
      return ((e = f(this, me)) === null || e === void 0 ? void 0 : e.stageAccess) === ge.NotAllowed ? ge.NotAllowed : ((a = f(this, me)) === null || a === void 0 ? void 0 : a.stageAccess) === ge.CanRequest ? ge.CanRequest : ((n = f(this, me)) === null || n === void 0 ? void 0 : n.stageAccess) === ge.Allowed || f(this, me).media.audio.canProduce === ge.Allowed || f(this, me).media.video.canProduce === ge.Allowed || f(this, me).media.screenshare.canProduce === ge.Allowed ? ge.Allowed : f(this, me).media.audio.canProduce === ge.CanRequest || f(this, me).media.video.canProduce === ge.CanRequest || f(this, me).media.screenshare.canProduce === ge.CanRequest ? ge.CanRequest : ge.NotAllowed;
    }
    /**
    * The `acceptWaitingRequests` returns boolean value.
    * If `true`, participant can accept the request of waiting participant.
    */
  }, {
    key: "acceptWaitingRequests",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.acceptWaitingRequests) !== null && e !== void 0 ? e : hr.acceptWaitingRequests;
    }
    /**
    * The `requestProduceVideo` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing video.
    */
  }, {
    key: "requestProduceVideo",
    get: function() {
      var e;
      return ((e = f(this, me)) === null || e === void 0 || (e = e.media) === null || e === void 0 || (e = e.video) === null || e === void 0 ? void 0 : e.canProduce) === ge.CanRequest;
    }
    /**
    * The `requestProduceAudio` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio.
    */
  }, {
    key: "requestProduceAudio",
    get: function() {
      var e;
      return ((e = f(this, me)) === null || e === void 0 || (e = e.media) === null || e === void 0 || (e = e.audio) === null || e === void 0 ? void 0 : e.canProduce) === ge.CanRequest;
    }
    /**
    * The `requestProduceScreenshare` returns boolean value.
    * If `true`, participant can send request to participants
    * about sharing screen.
    */
  }, {
    key: "requestProduceScreenshare",
    get: function() {
      var e;
      return ((e = f(this, me)) === null || e === void 0 || (e = e.media) === null || e === void 0 || (e = e.screenshare) === null || e === void 0 ? void 0 : e.canProduce) === ge.CanRequest;
    }
    /**
    * The `canAllowParticipantAudio` returns boolean value.
    * If `true`, participant can enable other participants` audio.
    */
  }, {
    key: "canAllowParticipantAudio",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.disableParticipantAudio) !== null && e !== void 0 ? e : hr.disableParticipantAudio;
    }
    /**
    * The `canAllowParticipantScreensharing` returns boolean value.
    * If `true`, participant can enable other participants` screen share.
    */
  }, {
    key: "canAllowParticipantScreensharing",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.canAcceptProductionRequests) !== null && e !== void 0 ? e : hr.canAcceptProductionRequests;
    }
    /**
    * The `canAllowParticipantVideo` returns boolean value.
    * If `true`, participant can enable other participants` video.
    */
  }, {
    key: "canAllowParticipantVideo",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.disableParticipantVideo) !== null && e !== void 0 ? e : hr.disableParticipantVideo;
    }
    /**
    * If `true`, a participant can disable other participants` audio.
    */
  }, {
    key: "canDisableParticipantAudio",
    get: function() {
      return this.canAllowParticipantAudio;
    }
    /**
    * If `true`, a participant can disable other participants` video.
    */
  }, {
    key: "canDisableParticipantVideo",
    get: function() {
      return this.canAllowParticipantVideo;
    }
    /**
    * The `kickParticipant` returns boolean value.
    * If `true`, participant can remove other participants from the meeting.
    */
  }, {
    key: "kickParticipant",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.kickParticipant) !== null && e !== void 0 ? e : hr.kickParticipant;
    }
    /**
    * The `pinParticipant` returns boolean value.
    * If `true`, participant can pin a participant in the meeting.
    */
  }, {
    key: "pinParticipant",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.pinParticipant) !== null && e !== void 0 ? e : hr.pinParticipant;
    }
    /**
    * The `canRecord` returns boolean value.
    * If `true`, participant can record the meeting.
    */
  }, {
    key: "canRecord",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.canRecord) !== null && e !== void 0 ? e : hr.canRecord;
    }
    /**
    * @deprecated in favour of `waitingRoomBehaviour`.
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP`, `ON_PRIVILEGED_USER_ENTRY`, `SKIP_ON_ACCEPT`
    */
  }, {
    key: "waitingRoomType",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.waitingRoomType) !== null && e !== void 0 ? e : hr.waitingRoomType;
    }
    /**
    * The `waitingRoomType` returns string value.
    * type of waiting room behavior
    * possible values are `SKIP`, `ON_PRIVILEGED_USER_ENTRY`, `SKIP_ON_ACCEPT`
    */
  }, {
    key: "waitingRoomBehaviour",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.waitingRoomType) !== null && e !== void 0 ? e : hr.waitingRoomType;
    }
    /**
    * The `plugins` tells if the participant can act on plugins
    * there are 2 permissions with boolean values, `canStart` and `canClose`.
    */
  }, {
    key: "plugins",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.plugins) !== null && e !== void 0 ? e : hr.plugins;
    }
    /**
    * The `polls` tells if the participant can use polls.
    * There are 3 permissions with boolean values, `canCreate`, `canVote`, `canViewResults`
    */
  }, {
    key: "polls",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.polls) !== null && e !== void 0 ? e : hr.polls;
    }
    /**
    * @deprecated in favour of `canProduceVideo`
    * The `produceVideo` shows permissions for enabling video.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceVideo",
    get: function() {
      return this.canProduceVideo;
    }
    /**
    * @deprecated
    * The `requestProduce` returns boolean value.
    * If `true`, participant can send request to participants
    * about producing audio, video or screenshare.
    */
  }, {
    key: "requestProduce",
    get: function() {
      return f(this, me).media.audio.canProduce === ge.CanRequest || f(this, me).media.video.canProduce === ge.CanRequest || f(this, me).media.screenshare.canProduce === ge.CanRequest;
    }
    /**
    * The `canProduceVideo` shows permissions for enabling video.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceVideo",
    get: function() {
      var e, a = (e = f(this, me).media.video.canProduce) !== null && e !== void 0 ? e : hr.media.video.canProduce;
      return this.stageEnabled && (f(this, ct) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ct) === "ON_STAGE") && a === ge.CanRequest ? ge.Allowed : this.stageEnabled && (f(this, ct) === "OFF_STAGE" || f(this, ct) === "REQUESTED_TO_JOIN_STAGE") && a === ge.Allowed ? ge.NotAllowed : a;
    }
    /**
    * @deprecated in favour of `canProduceScreenshare`
    * The `produceVideo` shows permissions for sharing screen.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceScreenshare",
    get: function() {
      return this.canProduceScreenshare;
    }
    /**
    * The `canProduceScreenshare` shows permissions for sharing screen.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceScreenshare",
    get: function() {
      var e, a = (e = f(this, me).media.screenshare.canProduce) !== null && e !== void 0 ? e : hr.media.screenshare.canProduce;
      return this.stageEnabled && (f(this, ct) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ct) === "ON_STAGE") && a === ge.CanRequest ? ge.Allowed : this.stageEnabled && (f(this, ct) === "OFF_STAGE" || f(this, ct) === "REQUESTED_TO_JOIN_STAGE") && a === ge.Allowed ? ge.NotAllowed : a;
    }
    /**
    * @deprecated in favour of `canProduceAudio`
    * The `produceAudio` shows permissions for enabling audio.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "produceAudio",
    get: function() {
      return this.canProduceAudio;
    }
    /**
    * The `canProduceAudio` shows permissions for enabling audio.
    * There possible values are `ALLOWED`, `NOT_ALLOWED`, `CAN_REQUEST`
    */
  }, {
    key: "canProduceAudio",
    get: function() {
      var e, a = (e = f(this, me).media.audio.canProduce) !== null && e !== void 0 ? e : hr.media.audio.canProduce;
      return this.stageEnabled && (f(this, ct) === "ACCEPTED_TO_JOIN_STAGE" || f(this, ct) === "ON_STAGE") && a === ge.CanRequest ? ge.Allowed : this.stageEnabled && (f(this, ct) === "OFF_STAGE" || f(this, ct) === "REQUESTED_TO_JOIN_STAGE") && a === ge.Allowed ? ge.NotAllowed : a;
    }
    /**
    * The `chatPublic` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send chat
    * `text` - if true, the participant can send text
    * `files` - if true, the participant can send files
    */
  }, {
    key: "chatPublic",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 || (a = a.chat) === null || a === void 0 ? void 0 : a.public) !== null && e !== void 0 ? e : hr.chat.public;
    }
    /**
    * The `chatPrivate` shows permissions for public chat
    * there are 4 permissions
    * `canSend` - if true, the participant can send private chat
    * `text` - if true, the participant can send text as private chat
    * `files` - if true, the participant can send files as private chat
    * `canReceive` - (optional) if true, the participant can receive private chat
    */
  }, { key: "chatPrivate", get: function() {
    var e, a;
    return (e = (a = f(this, me)) === null || a === void 0 || (a = a.chat) === null || a === void 0 ? void 0 : a.private) !== null && e !== void 0 ? e : hr.chat.private;
  } }, { key: "chatChannel", get: function() {
    var e, a;
    return (e = (a = f(this, me)) === null || a === void 0 || (a = a.chat) === null || a === void 0 ? void 0 : a.channel) !== null && e !== void 0 ? e : hr.chat.channel;
  } }, { key: "chatMessage", get: function() {
    var e, a;
    return (e = (a = f(this, me)) === null || a === void 0 || (a = a.chat) === null || a === void 0 ? void 0 : a.message) !== null && e !== void 0 ? e : hr.chat.message;
  } }, {
    key: "connectedMeetings",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.connectedMeetings) !== null && e !== void 0 ? e : hr == null ? void 0 : hr.connectedMeetings;
    }
    /**
    * The `hiddenParticipant` returns boolean value.
    * If `true`, participant is hidden.
    */
  }, {
    key: "hiddenParticipant",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.hiddenParticipant) !== null && e !== void 0 ? e : hr.hiddenParticipant;
    }
    /**
    * The `showParticipantList` returns boolean value.
    * If `true`, participant list can be shown to the participant.
    */
  }, {
    key: "showParticipantList",
    get: function() {
      var e;
      return (e = f(this, me).showParticipantList) !== null && e !== void 0 ? e : hr.showParticipantList;
    }
    /**
    * @deprecated in favour of `canChangeParticipantPermissions`
    * The `canChangeParticipantRole` returns boolean value.
    * If `true`, allow changing the participants' role.
    */
  }, {
    key: "canChangeParticipantRole",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.canChangeParticipantPermissions) !== null && e !== void 0 ? e : hr.canChangeParticipantPermissions;
    }
    /**
    * The `canChangeParticipantPermissions` returns boolean value.
    * If `true`, allow changing the participants' permissions.
    */
  }, {
    key: "canChangeParticipantPermissions",
    get: function() {
      var e, a;
      return (e = (a = f(this, me)) === null || a === void 0 ? void 0 : a.canChangeParticipantPermissions) !== null && e !== void 0 ? e : hr.canChangeParticipantPermissions;
    }
    /**
    * @deprecated
    * The `canChangeTheme` returns boolean value.
    * If `true`, the participant can change the meeting theme.
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "canChangeTheme",
    get: function() {
      return !1;
    }
    /**
    * @deprecated in favour of individual production settings
    * The `canPresent` returns boolean value.
    * If `true`, the participant can become a presentor.
    */
  }, { key: "canPresent", get: function() {
    return f(this, me).media.audio.canProduce === ge.Allowed || f(this, me).media.video.canProduce === ge.Allowed || f(this, me).media.screenshare.canProduce === ge.Allowed;
  } }, { key: "acceptPresentRequests", get: function() {
    return f(this, me).canAcceptProductionRequests;
  } }, {
    key: "canEditDisplayName",
    get: function() {
      var e;
      return (e = f(this, me).canEditDisplayName) !== null && e !== void 0 ? e : !1;
    }
    /**
    * @deprecated DyteSelf.config.maxScreenShareCount
    */
    // eslint-disable-next-line class-methods-use-this
  }, {
    key: "maxScreenShareCount",
    get: function() {
      return 1;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "isRecorder", get: function() {
    return f(this, me).isRecorder;
  } }, {
    key: "canSpotlight",
    get: function() {
      return f(this, me).canSpotlight;
    }
    /** Livestream */
  }, { key: "canLivestream", get: function() {
    return f(this, me).canLivestream;
  } }, {
    key: "transcriptionEnabled",
    get: function() {
      return f(this, me).transcriptionEnabled;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "isV2", get: function() {
    return !0;
  } }], [{ key: "fromResponse", value: function(e, a, n) {
    return new r(e, a, n, !0);
  } }, { key: "default", value: function(e, a) {
    return new r(hr, e, a);
  } }]), r;
}(fr), ID = Dt(ml()), ya = /* @__PURE__ */ new K(), Es = /* @__PURE__ */ new K(), Po = /* @__PURE__ */ new K(), Xp = /* @__PURE__ */ function() {
  function o(c) {
    if (I(this, o), z(this, ya, { writable: !0, value: void 0 }), z(this, Es, { writable: !0, value: void 0 }), z(this, Po, { writable: !0, value: void 0 }), !c)
      throw new q("Could not load preset.");
    V(this, ya, c.config), V(this, Es, c.ui || Dt(ml().ui)), V(this, Po, c.permissions.plugins.config);
  }
  return D(o, [{
    key: "setupScreen",
    get: (
      /**
      * @deprecated
      * The `setupScreen` represents the setup screen for the meeting.
      */
      function() {
        return { isEnabled: !0 };
      }
    )
    /**
    * @deprecated
    * The `waitingRoom` contains the properties to show a layout when
    * the participant is in waiting to join the meeting.
    */
  }, {
    key: "waitingRoom",
    get: function() {
      return { isEnabled: !0 };
    }
    /**
    * @deprecated
    * The `controlBar` contains the properties to show the meeting control bar with
    * various action buttons for the meeting.
    * The `elements` key contains the various action buttons.
    */
  }, {
    key: "controlBar",
    get: function() {
      return { isEnabled: !0, elements: { chat: !0, fullscreen: !0, invite: !1, layout: !1, participants: !0, plugins: !0, polls: !0, reactions: !1, screenshare: !0 } };
    }
    /**
    * @deprecated
    * The `header` contains the properties to show the meeting header with various elements.
    * The `elements` key contains the following properties
    * `logo` - string value representing the public URL for the logo
    * `timer` - boolean value suggesting if the timer should be shown
    * `title` - boolean value suggesting if the meeting title should be shown
    * `participantCount` - boolean value suggesting if the participant count shuld be shown
    * `changeLayout` - boolean value suggesting if the participant can change layout
    */
  }, {
    key: "header",
    get: function() {
      return { isEnabled: !0, elements: { logo: f(this, Es).designTokens.logo, timer: !0, title: !0, participantCount: !0, changeLayout: !1 } };
    }
    /**
    * @deprecated
    * The `pipMode` property returns a boolean value
    * If true, picture-in-picture mode is enabled for the participant.
    */
  }, {
    key: "pipMode",
    get: function() {
      return !0;
    }
    /**
    * The `viewType` tells the type of the meeting
    * possible values are: GROUP_CALL| LIVESTREAM | CHAT | AUDIO_ROOM
    */
  }, {
    key: "viewType",
    get: function() {
      return f(this, ya).viewType;
    }
    /**
    * The `maxVideoStreams` contains the maximum video
    * streams for mobile and desktop
    */
  }, {
    key: "maxVideoStreams",
    get: function() {
      return f(this, ya).maxVideoStreams;
    }
    /**
    * The `maxScreenShareCount` contains the maximum
    * possible concurrent screen shares
    */
  }, {
    key: "maxScreenShareCount",
    get: function() {
      return f(this, ya).maxScreenshareCount;
    }
    /**
    * @deprecated in favour of permissions.plugins.config
    */
  }, {
    key: "plugins",
    get: function() {
      return [];
    }
    /**
    * The `disabledPlugins` property returns id of all disabled plugins
    */
  }, { key: "disabledPlugins", get: function() {
    var r = this;
    return Object.keys(f(this, Po)).filter(function(t) {
      var e = f(r, Po)[t];
      return e.disabled;
    });
  } }, { key: "designTokens", get: function() {
    return f(this, Es).designTokens;
  } }, { key: "configDiff", get: function() {
    return f(this, Es).configDiff;
  } }, { key: "mediaConstraints", get: function() {
    var r, t, e, a, n, i, s, u;
    return { video: { quality: (r = (t = f(this, ya)) === null || t === void 0 || (t = t.media) === null || t === void 0 || (t = t.video) === null || t === void 0 ? void 0 : t.quality) !== null && r !== void 0 ? r : dt.video.quality, frameRate: (e = (a = f(this, ya)) === null || a === void 0 || (a = a.media) === null || a === void 0 || (a = a.video) === null || a === void 0 ? void 0 : a.frameRate) !== null && e !== void 0 ? e : dt.video.frameRate }, screenshare: { quality: (n = (i = f(this, ya)) === null || i === void 0 || (i = i.media) === null || i === void 0 || (i = i.screenshare) === null || i === void 0 ? void 0 : i.quality) !== null && n !== void 0 ? n : dt.screenshare.quality, frameRate: (s = (u = f(this, ya)) === null || u === void 0 || (u = u.media) === null || u === void 0 || (u = u.screenshare) === null || u === void 0 ? void 0 : u.frameRate) !== null && s !== void 0 ? s : dt.screenshare.frameRate } };
  } }, { key: "isV2", get: function() {
    return !0;
  } }], [{ key: "fromResponse", value: function(r) {
    return new o(r);
  } }, { key: "default", value: function() {
    return new o(ID);
  } }]), o;
}(), lc = /* @__PURE__ */ new K(), DD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, lc, { writable: !0, value: void 0 }), V(this, lc, c);
  }
  return D(o, [{ key: "on", value: function(r, t) {
    var e;
    r === le.roomPeerCount ? e = cp.fromBinary.bind(cp) : e = wp.fromBinary.bind(wp), f(this, lc).on(r, function(a) {
      var n = a.payload, i = e(n);
      return t(i);
    });
  } }]), o;
}(), Ut = /* @__PURE__ */ new K(), AD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, Ut, { writable: !0, value: void 0 }), V(this, Ut, c);
  }
  return D(o, [{ key: "getStageRequests", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.next = 2, f(this, Ut).sendMessagePromise(le.getStageRequests);
            case 2:
              return e = i.sent, a = e.payload, i.abrupt("return", a ? ju.fromBinary(a) : { stageRequests: [] });
            case 5:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "requestAccess", value: function() {
    f(this, Ut).sendMessage(le.requestStageAccess);
  } }, { key: "cancelRequestAccess", value: function() {
    f(this, Ut).sendMessage(le.cancelStageRequest);
  } }, { key: "grantAccess", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return a = { userIds: e }, i.next = 3, f(this, Ut).sendMessagePromise(le.grantStageAccess, x0.toBinary(a));
            case 3:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "denyAccess", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return a = { userIds: e }, i.next = 3, f(this, Ut).sendMessagePromise(le.denyStageAccess, rP.toBinary(a));
            case 3:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "joinStage", value: function() {
    return f(this, Ut).sendMessage(le.joinStage);
  } }, { key: "leaveStage", value: function(r) {
    var t = { userIds: [r] };
    return f(this, Ut).sendMessage(le.leaveStage, bp.toBinary(t));
  } }, { key: "kick", value: function(r) {
    var t = { userIds: r };
    return f(this, Ut).sendMessagePromise(le.leaveStage, bp.toBinary(t));
  } }, { key: "on", value: function(r, t) {
    var e;
    switch (r) {
      case le.grantStageAccess:
      case le.denyStageAccess: {
        e = void 0;
        break;
      }
      case le.getStagePeers: {
        e = Tp.fromBinary.bind(Tp);
        break;
      }
      case le.getStageRequests:
      case le.requestStageAccess:
      case le.cancelStageRequest: {
        e = ju.fromBinary.bind(ju);
        break;
      }
      case le.peerStageStatusUpdate: {
        e = up.fromBinary.bind(up);
        break;
      }
    }
    f(this, Ut).on(r, function(a) {
      var n = a.payload, i = a.id;
      if (!n || !e)
        return t(void 0, i);
      var s = e(n);
      return t(s, i);
    });
  } }]), o;
}(), MD = Object.defineProperty, OD = Object.getOwnPropertyDescriptor, Jn = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? OD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && MD(r, t, a), a;
}, aa = /* @__PURE__ */ new K(), Ke = /* @__PURE__ */ new K(), dc = /* @__PURE__ */ new K(), xc = /* @__PURE__ */ new K(), ka = /* @__PURE__ */ new K(), na = /* @__PURE__ */ new WeakSet(), wa = /* @__PURE__ */ new WeakSet(), sn = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t, e, a, n, i) {
    var s;
    return I(this, r), s = c.call(this), Or(b(s), wa), Or(b(s), na), z(b(s), aa, { writable: !0, value: void 0 }), z(b(s), Ke, { writable: !0, value: void 0 }), z(b(s), dc, { writable: !0, value: void 0 }), z(b(s), xc, { writable: !0, value: void 0 }), z(b(s), ka, { writable: !0, value: void 0 }), R(b(s), "status", void 0), V(b(s), aa, a), V(b(s), Ke, t), V(b(s), dc, e), V(b(s), ka, i), V(b(s), xc, n), s;
  }
  return D(r, [{ key: "getAccessRequests", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (f(this, Ke).permissions.stageEnabled) {
                l.next = 3;
                break;
              }
              throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
            case 3:
              if (f(this, Ke).permissions.acceptStageRequests) {
                l.next = 6;
                break;
              }
              throw P.error("DyteStage::get_access_request::permission_denied"), new q("You do not have permission to perform this action/");
            case 6:
              if (!Ne(this, wa, za).call(this)) {
                l.next = 12;
                break;
              }
              return l.next = 9, f(this, aa).getStageRequests();
            case 9:
              return n = l.sent, i = n.stageRequests, l.abrupt("return", { stageRequests: i });
            case 12:
              return s = f(this, dc).joined.toArray().filter(function(p) {
                return p.stageStatus === Tr.REQUESTED_TO_JOIN_STAGE;
              }).map(function(p) {
                return { displayName: p.name, userId: p.userId, peerId: p.id };
              }), l.abrupt("return", { stageRequests: s });
            case 14:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "requestAccess", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (f(this, Ke).permissions.stageEnabled) {
                i.next = 3;
                break;
              }
              throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
            case 3:
              if (this.status === "OFF_STAGE") {
                i.next = 5;
                break;
              }
              throw new q("Unable to request access you are currently ".concat(this.status));
            case 5:
              if (!Ne(this, wa, za).call(this)) {
                i.next = 13;
                break;
              }
              if (f(this, Ke).permissions.stageAccess !== ge.Allowed) {
                i.next = 9;
                break;
              }
              return Ne(this, na, Ta).call(this, "ACCEPTED_TO_JOIN_STAGE"), i.abrupt("return");
            case 9:
              f(this, aa).requestAccess(), Ne(this, na, Ta).call(this, "REQUESTED_TO_JOIN_STAGE"), i.next = 32;
              break;
            case 13:
              if (f(this, Ke).roomJoined) {
                i.next = 15;
                break;
              }
              throw new q("Can`t request to join stage without joining room");
            case 15:
              if (f(this, Ke).permissions.stageAccess !== ge.Allowed) {
                i.next = 18;
                break;
              }
              return Ne(this, na, Ta).call(this, "ACCEPTED_TO_JOIN_STAGE"), i.abrupt("return");
            case 18:
              if (f(this, Ke).permissions.stageAccess !== ge.NotAllowed) {
                i.next = 21;
                break;
              }
              throw P.error("DyteStage::requestGoToStage::permission_denied"), new q("User does not have permission to go on stage");
            case 21:
              if (this.status === "OFF_STAGE") {
                i.next = 23;
                break;
              }
              return i.abrupt("return");
            case 23:
              return i.prev = 23, Ne(this, na, Ta).call(this, "REQUESTED_TO_JOIN_STAGE"), i.next = 27, f(this, ka).requestToJoinStage(Nv.PRESENT);
            case 27:
              i.next = 32;
              break;
            case 29:
              i.prev = 29, i.t0 = i.catch(23), Ne(this, na, Ta).call(this, "OFF_STAGE");
            case 32:
            case "end":
              return i.stop();
          }
      }, a, this, [[23, 29]]);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "cancelRequestAccess", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (f(this, Ke).permissions.stageEnabled) {
                i.next = 3;
                break;
              }
              throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
            case 3:
              if (!Ne(this, wa, za).call(this)) {
                i.next = 7;
                break;
              }
              f(this, aa).cancelRequestAccess(), i.next = 13;
              break;
            case 7:
              if (f(this, Ke).roomJoined) {
                i.next = 9;
                break;
              }
              throw new q("Can`t request to join stage without joining room");
            case 9:
              if (f(this, Ke).stageStatus === Tr.REQUESTED_TO_JOIN_STAGE) {
                i.next = 11;
                break;
              }
              return i.abrupt("return");
            case 11:
              return i.next = 13, f(this, ka).withdrawRequestToJoinStage();
            case 13:
              Ne(this, na, Ta).call(this, "OFF_STAGE");
            case 14:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "grantAccess", value: function(e) {
    if (!f(this, Ke).permissions.stageEnabled)
      throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
    if (!f(this, Ke).permissions.acceptStageRequests)
      throw P.error("DyteStage::grant_access::permission_denied"), new q("You do not have permission to perform this action/");
    if (Ne(this, wa, za).call(this))
      return f(this, aa).grantAccess(e);
    if (!f(this, Ke).roomJoined)
      throw new q("Can`t rejectRequestToJoinStage for participant without joining room");
    return f(this, ka).grantStageAccess(e);
  } }, { key: "denyAccess", value: function(e) {
    if (!f(this, Ke).permissions.stageEnabled)
      throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
    if (!f(this, Ke).permissions.acceptStageRequests)
      throw P.error("DyteStage::deny_access::permission_denied"), new q("You do not have permission to perform this action/");
    if (Ne(this, wa, za).call(this))
      return f(this, aa).denyAccess(e);
    if (!f(this, Ke).roomJoined)
      throw new q("Can`t rejectRequestToJoinStage for participant without joining room");
    return f(this, ka).denyStageAccess(e);
  } }, { key: "join", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (this.status !== "ON_STAGE") {
                i.next = 2;
                break;
              }
              throw new q("You are already on stage.");
            case 2:
              if (!(f(this, Ke).permissions.stageAccess !== ge.Allowed && this.status !== "ACCEPTED_TO_JOIN_STAGE")) {
                i.next = 4;
                break;
              }
              throw new q("Unable to join stage you are currently ".concat(this.status));
            case 4:
              if (!Ne(this, wa, za).call(this)) {
                i.next = 10;
                break;
              }
              return f(this, aa).joinStage(), i.next = 8, $.emitAsync(M.JOIN_MEDIA_ROOM);
            case 8:
              i.next = 16;
              break;
            case 10:
              if (f(this, Ke).roomJoined) {
                i.next = 12;
                break;
              }
              throw new q("Can`t join stage without joining room");
            case 12:
              return i.next = 14, f(this, ka).startPresenting();
            case 14:
              f(this, Ke).emit("stageJoined"), Ne(this, na, Ta).call(this, "ON_STAGE");
            case 16:
            case "end":
              return i.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, {
    key: "leave",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (f(this, Ke).permissions.stageEnabled) {
                  s.next = 3;
                  break;
                }
                throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
              case 3:
                if (!Ne(this, wa, za).call(this)) {
                  s.next = 27;
                  break;
                }
                if (this.status === "ON_STAGE" || this.status === "ACCEPTED_TO_JOIN_STAGE") {
                  s.next = 6;
                  break;
                }
                throw new q("Unable to leave stage you are currently ".concat(this.status));
              case 6:
                if (f(this, Ke).setIsPinned(!1), Ne(this, na, Ta).call(this, "OFF_STAGE"), !((n = Mr()) !== null && n !== void 0 && n.roomJoined)) {
                  s.next = 11;
                  break;
                }
                return s.next = 11, $.emitAsync(M.LEAVE_MEDIA_ROOM);
              case 11:
                return s.prev = 11, s.next = 14, f(this, Ke).disableScreenShare();
              case 14:
                return s.next = 16, f(this, Ke).disableVideo();
              case 16:
                return s.next = 18, f(this, Ke).disableAudio();
              case 18:
                f(this, Ke).destructMediaHandler(), s.next = 24;
                break;
              case 21:
                s.prev = 21, s.t0 = s.catch(11), P.error("DyteStage.leaveStage.DisableMediaError", { error: s.t0 });
              case 24:
                f(this, aa).leaveStage(f(this, Ke).userId), s.next = 38;
                break;
              case 27:
                if (f(this, Ke).roomJoined) {
                  s.next = 29;
                  break;
                }
                throw new q("Can`t leave stage without joining room");
              case 29:
                return s.next = 31, f(this, Ke).disableScreenShare();
              case 31:
                return s.next = 33, f(this, Ke).disableAudio();
              case 33:
                return s.next = 35, f(this, Ke).disableVideo();
              case 35:
                return s.next = 37, f(this, ka).stopPresenting();
              case 37:
                Ne(this, na, Ta).call(this, "OFF_STAGE");
              case 38:
              case "end":
                return s.stop();
            }
        }, a, this, [[11, 21]]);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Method to kick a user off the stage
    *
    * `permissions.acceptStageRequests` privilege required
    */
  }, { key: "kick", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n) {
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (f(this, Ke).permissions.stageEnabled) {
                s.next = 3;
                break;
              }
              throw P.error("DyteStage::stage_disabled"), new q("Stage is disabled");
            case 3:
              if (f(this, Ke).permissions.acceptStageRequests) {
                s.next = 6;
                break;
              }
              throw P.error("DyteStage::kick::permission_denied"), new q("You do not have permissions for kick");
            case 6:
              if (!Ne(this, wa, za).call(this)) {
                s.next = 8;
                break;
              }
              return s.abrupt("return", f(this, aa).kick(n));
            case 8:
              if (f(this, Ke).roomJoined) {
                s.next = 10;
                break;
              }
              throw new q("Can`t kick participant without joining room");
            case 10:
              return s.abrupt("return", f(this, ka).kickPeerFromStage(n));
            case 11:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e(a) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr);
function Ta(o) {
  return el.apply(this, arguments);
}
function el() {
  return el = y(/* @__PURE__ */ d().mark(function o(c) {
    return d().wrap(function(t) {
      for (; ; )
        switch (t.prev = t.next) {
          case 0:
            if (this.status !== c) {
              t.next = 2;
              break;
            }
            return t.abrupt("return");
          case 2:
            return this.status = c, t.next = 5, $.emitAsync(M.SET_STAGE_STATUS, c);
          case 5:
            this.emit("stageStatusUpdate", c);
          case 6:
          case "end":
            return t.stop();
        }
    }, o, this);
  })), el.apply(this, arguments);
}
function za() {
  return f(this, xc) === Rr.Livestream || f(this, Ke).permissions.mediaRoomType === "HIVE";
}
Jn([A.trace("DyteStage.getStageRequests")], sn.prototype, "getAccessRequests", 1);
Jn([A.trace("DyteStage.requestAccess")], sn.prototype, "requestAccess", 1);
Jn([A.trace("DyteStage.cancelRequestAccess")], sn.prototype, "cancelRequestAccess", 1);
Jn([A.trace("DyteStage.grantAccess")], sn.prototype, "grantAccess", 1);
Jn([A.trace("DyteStage.denyAccess")], sn.prototype, "denyAccess", 1);
Jn([A.trace("DyteStage.joinStage")], sn.prototype, "join", 1);
Jn([A.trace("DyteStage.leaveStage")], sn.prototype, "leave", 1);
var ND = Object.defineProperty, $D = Object.getOwnPropertyDescriptor, LD = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? $D(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && ND(r, t, a), a;
}, dr = /* @__PURE__ */ new K(), gi = /* @__PURE__ */ new K(), wn = /* @__PURE__ */ new K(), pc = /* @__PURE__ */ new K(), Co = /* @__PURE__ */ new K(), lf = /* @__PURE__ */ function() {
  function o(c, r, t, e, a) {
    I(this, o), R(this, "stage", void 0), z(this, dr, { writable: !0, value: void 0 }), z(this, gi, { writable: !0, value: void 0 }), z(this, wn, { writable: !0, value: void 0 }), z(this, pc, { writable: !0, value: 0 }), z(this, Co, { writable: !0, value: void 0 }), this.stage = new sn(r, t, c, e, a), V(this, wn, c), V(this, Co, e), V(this, dr, r), V(this, Co, e), V(this, gi, t), this.setupEvents(), this.setupWebinarMigrationEvents();
  }
  return D(o, [{ key: "setupEvents", value: function() {
    var r = this;
    f(this, wn).on(le.grantStageAccess, function() {
      f(r, dr).permissions.stageAccess !== ge.Allowed && (r.stage.emit("stageRequestApproved"), r.setStageStatus("ACCEPTED_TO_JOIN_STAGE"));
    }), f(this, wn).on(le.peerStageStatusUpdate, function(t) {
      if (t !== void 0) {
        var e = f(r, gi).joined.get(t.peerId);
        switch (t.stageType) {
          case 1:
            e.setStageStatus("ON_STAGE");
            break;
          case 2:
            e.setStageStatus("ACCEPTED_TO_JOIN_STAGE");
            break;
          case 3:
            e.setStageStatus("REQUESTED_TO_JOIN_STAGE");
            break;
          case 0:
          case 4:
          default:
            e.setStageStatus("OFF_STAGE");
            break;
        }
      }
    }), f(this, wn).on(le.denyStageAccess, function() {
      f(r, dr).permissions.stageAccess !== ge.Allowed && (r.stage.emit("stageRequestRejected"), r.setStageStatus("OFF_STAGE"));
    }), f(this, wn).on(le.getStagePeers, function(t) {
      r.stage.status === "ON_STAGE" && !t.stagePeers.includes(f(r, dr).userId) && r.stage.leave();
    }), f(this, wn).on(le.getStageRequests, function(t) {
      var e;
      if (f(r, dr).permissions.stageAccess === ge.Allowed) {
        var a = (e = t == null ? void 0 : t.stageRequests) !== null && e !== void 0 ? e : [];
        f(r, pc) < a.length && a.length > 0 && r.stage.emit("newStageRequest", { count: a.length }), V(r, pc, a.length), r.stage.emit("stageAccessRequestUpdate", a);
      }
    }), $.onAsync(M.SOCKET_SERVICE_ROOM_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                s.t0 = (n = a.peer) === null || n === void 0 ? void 0 : n.stageType, s.next = s.t0 === bt.OFF_STAGE ? 3 : s.t0 === bt.ON_STAGE ? 5 : s.t0 === bt.APPROVED_STAGE ? 10 : s.t0 === bt.REQUESTED_STAGE ? 13 : 15;
                break;
              case 3:
                return r.setStageStatus("OFF_STAGE"), s.abrupt("break", 16);
              case 5:
                if (f(r, dr).config.viewType !== "LIVESTREAM") {
                  s.next = 8;
                  break;
                }
                return s.next = 8, $.emitAsync(M.JOIN_MEDIA_ROOM);
              case 8:
                return f(r, dr).permissions.mediaRoomType === "HIVE" && r.setStageStatus("ON_STAGE"), s.abrupt("break", 16);
              case 10:
                return r.stage.emit("stageRequestApproved"), r.setStageStatus("ACCEPTED_TO_JOIN_STAGE"), s.abrupt("break", 16);
              case 13:
                return r.setStageStatus("REQUESTED_TO_JOIN_STAGE"), s.abrupt("break", 16);
              case 15:
                r.setStageStatus("OFF_STAGE");
              case 16:
                f(r, dr).emit("socketServiceRoomJoined");
              case 17:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.ROOM_JOINED, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (a.stageStatus) {
                  i.next = 2;
                  break;
                }
                return i.abrupt("return");
              case 2:
                r.setStageStatus(a.stageStatus);
              case 3:
              case "end":
                return i.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.SELF_ROOM_JOINED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              if (f(r, Co) !== Rr.Livestream) {
                a.next = 3;
                break;
              }
              return r.setStageStatus("ON_STAGE"), a.abrupt("return");
            case 3:
              if (!(f(r, dr).permissions.stageEnabled && f(r, dr).permissions.stageAccess === ge.Allowed && r.stage.status !== "ON_STAGE")) {
                a.next = 6;
                break;
              }
              return a.next = 6, r.stage.join();
            case 6:
              f(r, dr).roomState = "joined", f(r, dr).emit("roomJoined");
            case 8:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.on(M.REQUEST_TO_JOIN_STAGE_ACCEPTED, function() {
      r.stage.emit("stageRequestApproved"), r.setStageStatus("ACCEPTED_TO_JOIN_STAGE"), f(r, dr).emit("joinStageRequestAccepted");
    }), $.on(M.REQUEST_TO_JOIN_STAGE_REJECTED, function() {
      r.stage.emit("stageRequestRejected"), r.setStageStatus("OFF_STAGE"), f(r, dr).emit("joinStageRequestRejected");
    }), $.on(M.PEER_REJECTED_TO_JOIN_STAGE, function(t) {
      var e = t.id;
      !e || e === f(r, dr).id || $.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: e, status: Tr.OFF_STAGE });
    }), $.on(M.PEER_ADDED_TO_STAGE, function(t) {
      var e = t.id;
      !e || e === f(r, dr).id || ($.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: e, status: Tr.ACCEPTED_TO_JOIN_STAGE }), r.stage.emit("stageAccessRequestUpdate"));
    }), $.on(M.PEER_STARTED_PRESENTING, function(t) {
      var e = t.id;
      !e || e === f(r, dr).id || $.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: e, status: Tr.ON_STAGE });
    }), $.on(M.PEER_REMOVED_FROM_STAGE, function(t) {
      var e = t.id;
      !e || e === f(r, dr).id || ($.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: e, status: Tr.OFF_STAGE }), f(r, gi).pinned.delete(e));
    }), $.on(M.PEER_STOPPED_PRESENTING, function(t) {
      var e = t.id;
      !e || e === f(r, dr).id || ($.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: e, status: Tr.OFF_STAGE }), f(r, gi).pinned.delete(e));
    }), $.on(M.PEER_REQUESTED_TO_JOIN_STAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (n = a.id, !(!n || n === f(r, dr).id)) {
                  s.next = 3;
                  break;
                }
                return s.abrupt("return");
              case 3:
                return s.next = 5, $.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: n, status: Tr.REQUESTED_TO_JOIN_STAGE });
              case 5:
                r.stage.emit("stageAccessRequestUpdate");
              case 6:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.STAGE_REQUESTS_UPDATED, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              r.stage.emit("stageAccessRequestUpdate");
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.on(M.PEER_WITHDRAWN_REQUEST_TO_JOIN_STAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                if (n = a.id, !(!n || n === f(r, dr).id)) {
                  s.next = 3;
                  break;
                }
                return s.abrupt("return");
              case 3:
                return s.next = 5, $.emitAsync(M.UPDATE_PEER_STAGE_STATUS, { id: n, status: Tr.OFF_STAGE });
              case 5:
                r.stage.emit("stageAccessRequestUpdate");
              case 6:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.on(M.REMOVED_FROM_STAGE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return r.setStageStatus("OFF_STAGE"), a.next = 3, f(r, dr).disableScreenShare();
            case 3:
              return a.next = 5, f(r, dr).disableVideo();
            case 5:
              return a.next = 7, f(r, dr).disableAudio();
            case 7:
              f(r, dr).destructMediaHandler(), f(r, dr).emit("removedFromStage");
            case 9:
            case "end":
              return a.stop();
          }
      }, t);
    })));
  } }, { key: "setupWebinarMigrationEvents", value: function() {
    var r = this;
    $.on(M.SET_WEBINAR_STAGE_STATUS, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        return d().wrap(function(i) {
          for (; ; )
            switch (i.prev = i.next) {
              case 0:
                if (r.stage.status !== a) {
                  i.next = 2;
                  break;
                }
                return i.abrupt("return");
              case 2:
                return r.stage.status = a, i.next = 5, $.emitAsync(M.SET_STAGE_STATUS, a);
              case 5:
                r.stage.emit("stageStatusUpdate", a);
              case 6:
              case "end":
                return i.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.REQUEST_TO_JOIN_STAGE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", r.stage.requestAccess());
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.onAsync(M.WITHDRAW_REQUEST_TO_JOIN_STAGE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", r.stage.cancelRequestAccess());
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.onAsync(M.LEAVE_STAGE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", r.stage.leave());
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.onAsync(M.JOIN_STAGE, /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", r.stage.join());
            case 1:
            case "end":
              return a.stop();
          }
      }, t);
    }))), $.onAsync(M.ACCEPT_JOIN_STAGE_REQUEST, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return n = a.userId, s.abrupt("return", r.stage.grantAccess([n]));
              case 2:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.REMOVE_FROM_STAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                n = a.userId, r.stage.kick([n]);
              case 2:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.REJECT_REQUEST_TO_JOIN_STAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return n = a.userId, s.abrupt("return", r.stage.denyAccess([n]));
              case 2:
              case "end":
                return s.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }()), $.onAsync(M.ACCEPT_ALL_REQUESTS_TO_JOIN_STAGE, /* @__PURE__ */ function() {
      var t = y(/* @__PURE__ */ d().mark(function e(a) {
        var n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                n = a.data, i = n.map(function(l) {
                  var p = l.id;
                  return f(r, gi).joined.get(p).userId;
                }), r.stage.grantAccess(i);
              case 3:
              case "end":
                return u.stop();
            }
        }, e);
      }));
      return function(e) {
        return t.apply(this, arguments);
      };
    }());
  } }, { key: "setStageStatus", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              if (this.stage.status !== e) {
                n.next = 2;
                break;
              }
              return n.abrupt("return");
            case 2:
              return this.stage.status = e, n.next = 5, $.emitAsync(M.SET_STAGE_STATUS, e);
            case 5:
              this.stage.emit("stageStatusUpdate", e);
            case 6:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}();
LD([A.trace("DyteStage.setupEvents")], lf.prototype, "setupEvents", 1);
var UD = Object.defineProperty, FD = Object.getOwnPropertyDescriptor, Ul = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? FD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && UD(r, t, a), a;
}, yi = /* @__PURE__ */ new K(), ku = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, yi, { writable: !0, value: void 0 }), V(this, yi, c);
  }
  return D(o, [{ key: "getPolls", value: function() {
    return f(this, yi).sendMessagePromise(Sa.getPolls);
  } }, { key: "createPoll", value: function(r, t) {
    var e = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1, a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1, n = { anonymous: e, hideVotes: a, question: r, options: t };
    return f(this, yi).sendMessage(Sa.createPoll, cP.toBinary(n));
  } }, { key: "votePoll", value: function(r, t) {
    var e = { index: t, pollId: r };
    return f(this, yi).sendMessage(Sa.votePoll, dP.toBinary(e));
  } }, { key: "on", value: function(r, t) {
    var e, a;
    switch (r) {
      case Sa.updatePoll:
      case Sa.createPoll:
      case Sa.votePoll: {
        e = Gu.fromBinary.bind(Gu), a = Gu.create();
        break;
      }
    }
    f(this, yi).on(r, function(n) {
      var i = n.payload, s = a;
      try {
        s = e(i);
      } catch (u) {
        P.error("pollSocketHandler::on::binary_decode_error", { error: u });
      }
      return t(s);
    });
  } }]), o;
}();
Ul([A.trace("PollSocketHandler.getPolls")], ku.prototype, "getPolls", 1);
Ul([A.trace("PollSocketHandler.createPoll")], ku.prototype, "createPoll", 1);
Ul([A.trace("PollSocketHandler.votePoll")], ku.prototype, "votePoll", 1);
var VD = /* @__PURE__ */ D(function o() {
  var c = this;
  I(this, o), R(this, "battery", void 0), R(this, "init", /* @__PURE__ */ y(/* @__PURE__ */ d().mark(function r() {
    return d().wrap(function(e) {
      for (; ; )
        switch (e.prev = e.next) {
          case 0:
            if (e.prev = 0, !("getBattery" in navigator)) {
              e.next = 9;
              break;
            }
            return e.next = 4, navigator.getBattery();
          case 4:
            c.battery = e.sent, c.battery.addEventListener("chargingchange", c.updateChargeInfo), c.battery.addEventListener("levelchange", c.updateLevelInfo), c.updateLevelInfo(), c.updateChargeInfo();
          case 9:
            e.next = 14;
            break;
          case 11:
            e.prev = 11, e.t0 = e.catch(0), P.error("Error getting battery", e.t0);
          case 14:
          case "end":
            return e.stop();
        }
    }, r, null, [[0, 11]]);
  }))), R(this, "updateChargeInfo", function() {
    var r;
    P.log("Battery charging? ".concat((r = c.battery) !== null && r !== void 0 && r.charging ? "Yes" : "No"));
  }), R(this, "updateLevelInfo", function() {
    if (!c.battery) {
      P.log("Battery level: Not known");
      return;
    }
    P.log("Battery level: ".concat(c.battery.level * 100, "%"));
  }), R(this, "cleanup", function() {
    if ("getBattery" in navigator) {
      var r, t;
      (r = c.battery) === null || r === void 0 || r.removeEventListener("chargingchange", c.updateChargeInfo), (t = c.battery) === null || t === void 0 || t.removeEventListener("levelchange", c.updateLevelInfo);
    }
  });
}), Zp = new VD(), Dn = /* @__PURE__ */ new K(), Tn = /* @__PURE__ */ new K(), hc = /* @__PURE__ */ new WeakSet(), HD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), Or(b(e), hc), z(b(e), Dn, { writable: !0, value: void 0 }), z(b(e), Tn, { writable: !0, value: void 0 }), V(b(e), Dn, t), V(b(e), Tn, !1), e;
  }
  return D(r, [{ key: "mediaPermission", get: function() {
    return f(this, Dn).mediaPermissions.audio;
  } }, { key: "getTrackMetadata", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s = arguments;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (n = s.length > 0 && s[0] !== void 0 ? s[0] : !1, ia.track) {
                l.next = 8;
                break;
              }
              if (n) {
                l.next = 4;
                break;
              }
              return l.abrupt("return", null);
            case 4:
              return l.next = 6, Ne(this, hc, xp).call(this);
            case 6:
              i = l.sent, ia.setTrack(i);
            case 8:
              return l.abrupt("return", ia.getTrackMetadata());
            case 9:
            case "end":
              return l.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "startTrackAnalysis", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (n = u.length > 0 && u[0] !== void 0 ? u[0] : !1, !f(this, Tn)) {
                p.next = 3;
                break;
              }
              return p.abrupt("return", !0);
            case 3:
              return V(this, Tn, !0), p.next = 6, ia.startTrackAnalysis();
            case 6:
              if (i = p.sent, !(!i && n)) {
                p.next = 15;
                break;
              }
              return p.next = 10, Ne(this, hc, xp).call(this);
            case 10:
              return s = p.sent, ia.setTrack(s), p.next = 14, ia.startTrackAnalysis();
            case 14:
              i = p.sent;
            case 15:
              return i || V(this, Tn, !1), p.abrupt("return", i);
            case 17:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopTrackAnalysis", value: function() {
    return f(this, Tn) && (V(this, Tn, !1), ia.stopTrackAnalysis()), !0;
  } }]), r;
}(fr);
function xp() {
  return rl.apply(this, arguments);
}
function rl() {
  return rl = y(/* @__PURE__ */ d().mark(function o() {
    var c, r, t, e, a, n;
    return d().wrap(function(s) {
      for (; ; )
        switch (s.prev = s.next) {
          case 0:
            return s.prev = 0, r = f(this, Dn).getCurrentDevices(), t = r == null || (c = r.audio) === null || c === void 0 ? void 0 : c.deviceId, e = { audio: !0 }, t && (e = wr.getAudioConstraints({ audioDeviceId: t })), s.next = 7, wr.getAudioTrack(e);
          case 7:
            return a = s.sent, f(this, Dn).mediaPermissions.audio = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: f(this, Dn).mediaPermissions.audio, kind: "audio" }), s.abrupt("return", a);
          case 13:
            throw s.prev = 13, s.t0 = s.catch(0), n = hu("audio", s.t0.name, s.t0.message), f(this, Dn).mediaPermissions.audio = n, $.emit(M.MEDIA_PERMISSION_ERROR, { message: n, constraints: s.t0.constraints, kind: "audio" }), new q("Failed to fetch audio track", "1700");
          case 19:
          case "end":
            return s.stop();
        }
    }, o, this, [[0, 13]]);
  })), rl.apply(this, arguments);
}
var ki = /* @__PURE__ */ new K(), jD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r() {
    var t;
    return I(this, r), t = c.call(this), z(b(t), ki, { writable: !0, value: void 0 }), V(b(t), ki, !1), t;
  }
  return D(r, [{ key: "getNetworkMetadata", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return i.abrupt("return", new Promise(function(s) {
                se.onSafeInitialization(function() {
                  se.onPreCallTestResults(function(u) {
                    s(u.connectionInfo);
                  }), se.startPreCallTest();
                });
              }));
            case 1:
            case "end":
              return i.stop();
          }
      }, a);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "startNetworkAnalysis", value: function() {
    return V(this, ki, Xa.collectSendTransportStats() && Xa.collectRecvTransportStats()), f(this, ki);
  } }, { key: "stopNetworkAnalysis", value: function() {
    return V(this, ki, !(Xa.stopStatsCollection("send") && Xa.stopStatsCollection("receive"))), f(this, ki);
  } }]), r;
}(fr), _s = /* @__PURE__ */ new K(), Ct = /* @__PURE__ */ new K(), GD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), z(b(e), _s, { writable: !0, value: void 0 }), z(b(e), Ct, { writable: !0, value: void 0 }), V(b(e), _s, t), V(b(e), Ct, { audio: !1, video: !1 }), e;
  }
  return D(r, [{ key: "mediaPermission", get: function() {
    return f(this, _s).mediaPermissions.screenshare;
  } }, { key: "getAudioTrackMetaData", value: function() {
    var e;
    return (e = f(this, _s).screenShareTracks) !== null && e !== void 0 && e.audio ? On.getTrackMetadata() : null;
  } }, { key: "getVideoTrackMetaData", value: function() {
    var e;
    return (e = f(this, _s).screenShareTracks) !== null && e !== void 0 && e.video ? xa.getTrackMetadata() : null;
  } }, { key: "startAudioTrackAnalysis", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!f(this, Ct).audio) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", !0);
            case 2:
              return s.next = 4, On.startTrackAnalysis();
            case 4:
              return n = s.sent, f(this, Ct).audio = n, s.abrupt("return", f(this, Ct).audio);
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "startVideoTrackAnalysis", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (!f(this, Ct).video) {
                s.next = 2;
                break;
              }
              return s.abrupt("return", !0);
            case 2:
              return s.next = 4, xa.startTrackAnalysis();
            case 4:
              return n = s.sent, f(this, Ct).video = n, s.abrupt("return", f(this, Ct).video);
            case 7:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopAudioTrackAnalysis", value: function() {
    return f(this, Ct) && (f(this, Ct).audio = !1, On.stopTrackAnalysis()), !0;
  } }, { key: "stopVideoTrackAnalysis", value: function() {
    return f(this, Ct) && (f(this, Ct).video = !1, xa.stopTrackAnalysis()), !0;
  } }]), r;
}(fr), Za = /* @__PURE__ */ new K(), Qa = /* @__PURE__ */ new K(), bn = /* @__PURE__ */ new K(), eh = /* @__PURE__ */ new WeakSet(), BD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), Or(b(e), eh), z(b(e), Za, { writable: !0, value: void 0 }), z(b(e), Qa, { writable: !0, value: void 0 }), z(b(e), bn, { writable: !0, value: void 0 }), R(b(e), "preview", void 0), V(b(e), Za, t), V(b(e), Qa, !1), V(b(e), bn, !1), e;
  }
  return D(r, [{ key: "mediaPermission", get: function() {
    return f(this, Za).mediaPermissions.video;
  } }, { key: "getTrackMetadata", value: function() {
    return f(this, Za).videoTrack ? null : kt.getTrackMetadata();
  } }, { key: "startTrackAnalysis", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n, i, s, u = arguments;
      return d().wrap(function(p) {
        for (; ; )
          switch (p.prev = p.next) {
            case 0:
              if (n = u.length > 0 && u[0] !== void 0 ? u[0] : { preview: !1 }, i = n.preview, !f(this, Qa)) {
                p.next = 3;
                break;
              }
              return p.abrupt("return", !0);
            case 3:
              return p.next = 5, kt.startTrackAnalysis();
            case 5:
              if (s = p.sent, s) {
                p.next = 8;
                break;
              }
              return p.abrupt("return", !1);
            case 8:
              return (i || this.preview) && V(this, bn, !0), V(this, Qa, !0), p.abrupt("return", !0);
            case 11:
            case "end":
              return p.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopTrackAnalysis", value: function() {
    f(this, Qa) && (kt.stopTrackAnalysis(), V(this, Qa, !1), f(this, bn) && V(this, bn, !1));
  } }, { key: "startPreview", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a() {
      var n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              if (n = kt.track, n) {
                s.next = 5;
                break;
              }
              return s.next = 4, Ne(this, eh, qD).call(this);
            case 4:
              n = s.sent;
            case 5:
              if (!this.preview) {
                s.next = 7;
                break;
              }
              return s.abrupt("return", n);
            case 7:
              return kt.setTrack(n), this.preview = !0, kt.preview = !0, s.abrupt("return", n);
            case 11:
            case "end":
              return s.stop();
          }
      }, a, this);
    }));
    function e() {
      return t.apply(this, arguments);
    }
    return e;
  }() }, { key: "stopPreview", value: function() {
    f(this, Qa) && f(this, bn) && this.stopTrackAnalysis(), this.preview = !1, kt.preview = !1, kt.cleanup();
  } }, { key: "cleanup", value: function() {
    f(this, Qa) && f(this, bn) && this.stopTrackAnalysis(), this.preview = !1, kt.preview = !1;
  } }]), r;
}(fr);
function qD() {
  return tl.apply(this, arguments);
}
function tl() {
  return tl = y(/* @__PURE__ */ d().mark(function o() {
    var c, r, t, e, a, n;
    return d().wrap(function(s) {
      for (; ; )
        switch (s.prev = s.next) {
          case 0:
            return s.prev = 0, r = f(this, Za).getCurrentDevices(), t = r == null || (c = r.video) === null || c === void 0 ? void 0 : c.deviceId, e = { video: { width: { ideal: 1280 }, height: { ideal: 720 } } }, t && (e = wr.getVideoConstraints({ videoDeviceId: t })), s.next = 7, wr.getVideoTrack(e);
          case 7:
            return a = s.sent, f(this, Za).mediaPermissions.video = "ACCEPTED", $.emit(M.MEDIA_PERMISSION_UPDATE, { message: f(this, Za).mediaPermissions.video, kind: "video" }), s.abrupt("return", a);
          case 13:
            throw s.prev = 13, s.t0 = s.catch(0), n = hu("video", s.t0.name, s.t0.message), f(this, Za).mediaPermissions.video = n, $.emit(M.MEDIA_PERMISSION_ERROR, { message: n, constraints: s.t0.constraints, kind: "video" }), new q("Failed to fetch video track", "1700");
          case 19:
          case "end":
            return s.stop();
        }
    }, o, this, [[0, 13]]);
  })), tl.apply(this, arguments);
}
var WD = /* @__PURE__ */ D(function o(c) {
  I(this, o), R(this, "audio", void 0), R(this, "video", void 0), R(this, "screenshare", void 0), R(this, "network", void 0), this.audio = new HD(c), this.video = new BD(c), this.screenshare = new GD(c), this.network = new jD();
}), vc = function(c) {
  var r = c.type, t = c.id, e = c.transport, a = c.timestamp, n = c.currentRoundTripTime, i = c.bytesSent, s = c.bytesReceived, u = c.kind, l = c.jitter, p = c.packetsLost, h = c.packetSendDelay;
  switch (r) {
    case "candidate-pair": {
      var v = { type: r, id: t, transport: e, timestamp: a, rtt: n, bytesSent: i, bytesReceived: s };
      return v;
    }
    case "inbound-rtp": {
      var m = { type: r, id: t, transport: e, timestamp: a, kind: u, jitter: l, packetsLost: p, bytesReceived: s };
      return m;
    }
    default: {
      var g = { type: r, id: t, transport: e, timestamp: a, kind: u, packetSendDelay: h, bytesSent: i };
      return g;
    }
  }
}, JD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), R(this, "troubleshooter", void 0), R(this, "self", void 0), this.troubleshooter = new WD(c), this.self = c, this.setupEvents();
  }
  return D(o, [{ key: "setupEvents", value: function() {
    var r = this;
    $.on(M.AUDIO_TRACK_CHANGED, function() {
      var t;
      r.self.audioTrack && (t = r.self.audioTrack) !== null && t !== void 0 && t.enabled && ia.setTrack(r.self.audioTrack);
    }), $.on(M.VIDEO_TRACK_CHANGED, function() {
      if (r.self.videoTrack) {
        var t;
        kt.setTrack((t = r.self.videoTrack) === null || t === void 0 ? void 0 : t.clone());
      }
    }), $.on(M.SCREENSHARE_TRACK_CHANGED, function() {
      var t, e;
      if ((t = r.self.screenShareTracks) !== null && t !== void 0 && t.audio && r.self.screenShareTracks.audio.enabled) {
        var a;
        On.setTrack((a = r.self.screenShareTracks) === null || a === void 0 ? void 0 : a.audio);
      } else
        On.cleanup();
      if ((e = r.self.screenShareTracks) !== null && e !== void 0 && e.video) {
        var n;
        xa.setTrack((n = r.self.screenShareTracks) === null || n === void 0 || (n = n.video) === null || n === void 0 ? void 0 : n.clone());
      } else
        xa.cleanup();
    }), $.on(M.AUDIO_TRACK_ANALYSIS, function(t) {
      r.troubleshooter.audio.emit("audioTrackStats", t);
    }), $.on(M.AUDIO_TRACK_CLOSED, function() {
      r.troubleshooter.audio.emit("audioTrackUpdate", { status: "ended" });
    }), $.on(M.AUDIO_TRACK_CREATED, function() {
      r.troubleshooter.audio.emit("audioTrackUpdate", { status: "live" });
    }), $.on(M.SCREENSHARE_AUDIO_TRACK_ANALYSIS, function(t) {
      r.troubleshooter.screenshare.emit("audioTrackStats", t);
    }), $.on(M.SCREENSHARE_AUDIO_TRACK_CLOSED, function() {
      r.troubleshooter.screenshare.emit("audioTrackUpdate", { status: "ended" });
    }), $.on(M.SCREENSHARE_AUDIO_TRACK_CREATED, function() {
      r.troubleshooter.screenshare.emit("audioTrackUpdate", { status: "live" });
    }), $.on(M.SCREENSHARE_VIDEO_TRACK_ANALYSIS, function(t) {
      r.troubleshooter.screenshare.emit("videoTrackStats", t);
    }), $.on(M.SCREENSHARE_VIDEO_TRACK_ANALYSIS_ERROR, function() {
      r.troubleshooter.screenshare.stopVideoTrackAnalysis(), xa.cleanup();
    }), $.on(M.SCREENSHARE_VIDEO_TRACK_CLOSED, function() {
      r.troubleshooter.screenshare.emit("videoTrackUpdate", { status: "ended" });
    }), $.on(M.SCREENSHARE_VIDEO_TRACK_CREATED, function() {
      r.troubleshooter.screenshare.emit("videoTrackUpdate", { status: "live" });
    }), $.on(M.VIDEO_TRACK_ANALYSIS, function(t) {
      r.troubleshooter.video.emit("videoTrackStats", t);
    }), $.on(M.VIDEO_TRACK_ANALYSIS_ERROR, function() {
      r.troubleshooter.video.stopTrackAnalysis(), r.troubleshooter.video.startTrackAnalysis(), r.troubleshooter.video.stopPreview();
    }), $.on(M.VIDEO_TRACK_CLOSED, function() {
      r.troubleshooter.video.cleanup(), r.troubleshooter.video.emit("videoTrackUpdate", { status: "ended" });
    }), $.on(M.VIDEO_TRACK_CREATED, function() {
      r.troubleshooter.video.emit("videoTrackUpdate", { status: "live" });
    }), $.on(M.CANDIDATE_PEER_UPDATE, function(t) {
      r.troubleshooter.network.emit("connectionDelayStats", vc(t));
    }), $.on(M.INBOUND_RTP_UPDATE, function(t) {
      r.troubleshooter.audio.emit("audioConsumptionStats", vc(t));
    }), $.on(M.OUTBOUND_RTP_UPDATE, function(t) {
      r.troubleshooter.audio.emit("audioProductionStats", vc(t));
    }), $.on(M.SEND_TRANSPORT_CLOSED, function() {
      r.troubleshooter.audio.emit("connectionUpdate", { transport: "send", status: "ended" });
    }), $.on(M.RECV_TRANSPORT_CLOSED, function() {
      r.troubleshooter.audio.emit("connectionUpdate", { transport: "receive", status: "ended" });
    }), $.on(M.SEND_TRANSPORT_CREATED, function() {
      r.troubleshooter.audio.emit("connectionUpdate", { transport: "send", status: "live" });
    }), $.on(M.RECV_TRANSPORT_CREATED, function() {
      r.troubleshooter.audio.emit("connectionUpdate", { transport: "receive", status: "live" });
    });
  } }]), o;
}(), _r = /* @__PURE__ */ function() {
  function o() {
    I(this, o);
  }
  return D(o, null, [{ key: "handleConnectedRoomsDumpRaw", value: function(r) {
    var t, e = r.payload, a = PR.fromBinary(e), n = a.meetings.map(function(s) {
      var u;
      return { id: s.id, title: s.title, participants: (u = s.participants) !== null && u !== void 0 ? u : [] };
    }), i = { id: a.parentMeeting.id, title: a.parentMeeting.title, participants: (t = a.parentMeeting.participants) !== null && t !== void 0 ? t : [] };
    return { parentMeeting: i, meetings: n };
  } }, { key: "handleTransferPeerRaw", value: function(r) {
    var t = r.payload, e = xR.fromBinary(t);
    return { authToken: e.authToken, meetingId: e.meetingId };
  } }, { key: "handleMovedPeerRaw", value: function(r) {
    var t = r.payload, e = Tv.fromBinary(t);
    return { meetingId: e.meetingId, customParticipantId: e.customParticipantId };
  } }, { key: "handleConnectedRoomsUpdatedRaw", value: function(r) {
    var t = r.payload, e = pp.fromBinary(t);
    return e.payloads.map(function(a) {
      return { id: a.id, title: a.title };
    });
  } }, { key: "handleConnectedRoomsDeletedRaw", value: function(r) {
    var t = r.payload, e = BR.fromBinary(t);
    return e.payloads;
  } }, { key: "getConnectedRoomsDump", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e;
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.next = 2, o.socketService.sendMessagePromise(le.getConnectedRoomsDump);
            case 2:
              return e = n.sent, n.abrupt("return", o.handleConnectedRoomsDumpRaw(e));
            case 4:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "createConnectedRooms",
    value: function() {
      var c = y(/* @__PURE__ */ d().mark(function t(e) {
        var a, n, i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return u.next = 2, o.socketService.sendMessagePromise(le.createConnectedRooms, AR.toBinary({ payloads: e }));
              case 2:
                return a = u.sent, n = a.payload, i = pp.fromBinary(n).payloads, u.abrupt("return", i.map(function(l) {
                  return { id: l.id, title: l.title };
                }));
              case 6:
              case "end":
                return u.stop();
            }
        }, t);
      }));
      function r(t) {
        return c.apply(this, arguments);
      }
      return r;
    }()
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
  }, { key: "updateConnectedRooms", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
            case "end":
              return n.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "disableConnectedRooms", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return a = e.map(function(u) {
                return { id: u };
              }), s.next = 3, o.socketService.sendMessagePromise(le.deleteConnectedRooms, jR.toBinary({ payloads: a }));
            case 3:
              return n = s.sent, s.abrupt("return", o.handleConnectedRoomsDeletedRaw(n));
            case 5:
            case "end":
              return s.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "movePeersBetweenRooms", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n;
      return d().wrap(function(s) {
        for (; ; )
          switch (s.prev = s.next) {
            case 0:
              return s.prev = 0, s.next = 3, o.socketService.sendMessagePromise(le.movePeers, QR.toBinary({ sourceMeetingId: e.sourceMeetingId, destinationMeetingId: e.destinationMeetingId, participants: e.participants }));
            case 3:
              if (a = s.sent, n = new TextDecoder().decode(a.payload), !n.includes("error")) {
                s.next = 7;
                break;
              }
              return s.abrupt("return", { success: !1, error: "failed to move participants" });
            case 7:
              return s.abrupt("return", { success: !0 });
            case 10:
              return s.prev = 10, s.t0 = s.catch(0), s.abrupt("return", { success: !1, error: s.t0 });
            case 13:
            case "end":
              return s.stop();
          }
      }, t, null, [[0, 10]]);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}();
R(_r, "socketService", void 0);
R(_r, "currentMeetingId", void 0);
var KD = { codecs: [{ kind: "audio", mimeType: "audio/opus", clockRate: 48e3, channels: 2, rtcpFeedback: [{ type: "transport-cc", parameter: "" }], parameters: {}, preferredPayloadType: 100 }, { kind: "video", mimeType: "video/VP8", clockRate: 9e4, rtcpFeedback: [{ type: "nack", parameter: "" }, { type: "nack", parameter: "pli" }, { type: "ccm", parameter: "fir" }, { type: "goog-remb", parameter: "" }, { type: "transport-cc", parameter: "" }], parameters: { "x-google-start-bitrate": 1e3 }, preferredPayloadType: 101 }, { kind: "video", mimeType: "video/rtx", preferredPayloadType: 102, clockRate: 9e4, parameters: { apt: 101 }, rtcpFeedback: [] }, { kind: "video", mimeType: "video/VP9", clockRate: 9e4, rtcpFeedback: [{ type: "nack", parameter: "" }, { type: "nack", parameter: "pli" }, { type: "ccm", parameter: "fir" }, { type: "goog-remb", parameter: "" }, { type: "transport-cc", parameter: "" }], parameters: { "profile-id": 0, "x-google-start-bitrate": 1e3 }, preferredPayloadType: 103 }, { kind: "video", mimeType: "video/rtx", preferredPayloadType: 104, clockRate: 9e4, parameters: { apt: 103 }, rtcpFeedback: [] }, { kind: "video", mimeType: "video/H264", clockRate: 9e4, parameters: { "level-asymmetry-allowed": 1, "packetization-mode": 1, "profile-level-id": "42e01f", "x-google-start-bitrate": 1e3 }, rtcpFeedback: [{ type: "nack", parameter: "" }, { type: "nack", parameter: "pli" }, { type: "ccm", parameter: "fir" }, { type: "goog-remb", parameter: "" }, { type: "transport-cc", parameter: "" }], preferredPayloadType: 105 }, { kind: "video", mimeType: "video/rtx", preferredPayloadType: 106, clockRate: 9e4, parameters: { apt: 105 }, rtcpFeedback: [] }], headerExtensions: [
  { kind: "audio", uri: "urn:ietf:params:rtp-hdrext:sdes:mid", preferredId: 1, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "urn:ietf:params:rtp-hdrext:sdes:mid", preferredId: 1, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "urn:ietf:params:rtp-hdrext:sdes:rtp-stream-id", preferredId: 2, preferredEncrypt: !1, direction: "recvonly" },
  { kind: "video", uri: "urn:ietf:params:rtp-hdrext:sdes:repaired-rtp-stream-id", preferredId: 3, preferredEncrypt: !1, direction: "recvonly" },
  { kind: "audio", uri: "http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time", preferredId: 4, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time", preferredId: 4, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "audio", uri: "http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01", preferredId: 5, preferredEncrypt: !1, direction: "recvonly" },
  { kind: "video", uri: "http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01", preferredId: 5, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "http://tools.ietf.org/html/draft-ietf-avtext-framemarking-07", preferredId: 6, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "urn:ietf:params:rtp-hdrext:framemarking", preferredId: 7, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "audio", uri: "urn:ietf:params:rtp-hdrext:ssrc-audio-level", preferredId: 10, preferredEncrypt: !1, direction: "sendrecv" },
  // {
  // eslint-disable-next-line max-len
  //		 kind: 'video', uri: 'urn:3gpp:video-orientation', preferredId: 11, preferredEncrypt: false, direction: 'sendrecv',
  // },
  { kind: "video", uri: "urn:ietf:params:rtp-hdrext:toffset", preferredId: 12, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "video", uri: "http://www.webrtc.org/experiments/rtp-hdrext/abs-capture-time", preferredId: 13, preferredEncrypt: !1, direction: "sendrecv" },
  { kind: "audio", uri: "http://www.webrtc.org/experiments/rtp-hdrext/abs-capture-time", preferredId: 13, preferredEncrypt: !1, direction: "sendrecv" }
] }, fc = /* @__PURE__ */ new K(), zD = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), z(this, fc, { writable: !0, value: void 0 }), V(this, fc, c);
  }
  return D(o, [{ key: "on", value: function(r, t) {
    var e, a;
    switch (r) {
      case le.transcript: {
        e = Fu.fromBinary.bind(Fu), a = Fu.create();
        break;
      }
      default: {
        P.debug("AISocketHandler switch case hit default, event not accounted for.");
        break;
      }
    }
    f(this, fc).on(r, function(n) {
      var i = n.payload, s = a;
      try {
        s = e(i);
      } catch (u) {
        P.error("chatSocketHandler::on::binary_decode_error", { error: u });
      }
      return t(s);
    });
  } }]), o;
}(), QD = Object.defineProperty, YD = Object.getOwnPropertyDescriptor, no = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? YD(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && QD(r, t, a), a;
}, XD = /* @__PURE__ */ function() {
  function o(c, r, t, e, a, n, i, s, u, l, p, h, v) {
    I(this, o), R(this, "apiBase", void 0), R(this, "chatController", void 0), R(this, "metaController", void 0), R(this, "participantController", void 0), R(this, "pluginController", void 0), R(this, "pollController", void 0), R(this, "remoteController", void 0), R(this, "selfController", void 0), R(this, "recordingController", void 0), R(this, "livestreamController", void 0), R(this, "internalsController", void 0), R(this, "stageController", void 0), R(this, "troubleshooterController", void 0), this.apiBase = c, this.metaController = r, this.selfController = t, this.pluginController = e, this.participantController = a, this.chatController = n, this.pollController = i, this.remoteController = s, this.recordingController = u, this.livestreamController = p, this.internalsController = l, this.stageController = h, this.troubleshooterController = v;
  }
  return D(o, [{ key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", this.selfController.joinRoom());
            case 1:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      var e, a = arguments;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              return e = a.length > 0 && a[0] !== void 0 ? a[0] : "left", Zp.cleanup(), i.abrupt("return", this.selfController.leaveRoom(e));
            case 3:
            case "end":
              return i.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e, a) {
      var n, i, s, u, l, p, h, v, m, g, w, k, T, _, E, S, C, L, G, j, ee, Y, Z, F, x, ie, B, H, U, J, X, re, pe, Ge, oe, te, Ue, xe, Ve, nr, ke, He, Qr, it, Rt, Bi, qi, cr, Tu, Hl, jl, Gl, Bl, ql, Wl, bu, Jl, Kl, zl, Ql, Yl, Xl, io, Zl, xl, ed, Su, rd;
      return d().wrap(function(he) {
        for (; ; )
          switch (he.prev = he.next) {
            case 0:
              return _ = e.authToken, E = "https://api.dyte.io", e.apiBase && (E = e.apiBase), e.baseURI && (E = "https://api.".concat(e.baseURI)), S = Q({ chat: !0, participant: !0, plugin: !0, poll: !0, self: !0, meta: !0, permissions: !0, theme: !0, tracing: !0, devTools: { logs: !1 }, internals: !0, stage: !0 }, e == null ? void 0 : e.modules), Jd(Q(Q({}, e), {}, { modules: S, apiBase: E })), $.reset(), Uv(), Jc.cleanup(), C = FP({ authToken: _, baseURL: E }), C.setHeader("dyte-tracing-id", a), C.setPeerId(a), C.setRoomName(e.roomName), L = e.roomName, G = Le.isV2AuthToken ? Le.meetingId : L, j = new Yh(), ee = j.load({ routerRtpCapabilities: KD }), Y = C.getRoomNodeData({ roomName: G, peerId: a }), Z = Le.isV2AuthToken ? void 0 : C.getUserPreset(L), he.next = 21, C.getUserDetails();
            case 21:
              return F = he.sent, x = Le.isV2AuthToken ? F.participant.organizationId : F.organizationId, A.meetingMetadata.userId = Le.isV2AuthToken ? F.participant.id : F.id, A.meetingMetadata.organizationId = x, ie = wD(G), B = (n = e.overrides) !== null && n !== void 0 && n.whitelabelled_flags_endpoint ? Ci({
                // creates flags.dyte.io, flags.devel.dyte.io
                servicePrefix: "flags",
                apiBase: E,
                baseURI: e.baseURI
              }) : "edge.api.flagsmith.com", he.next = 29, ue.identify(
                "".concat(Rc.PEER, "_").concat(a),
                JSON.parse(JSON.stringify(Q({ entity: Rc.PEER, clientId: x, isAnonUser: !x, sdkVersion: Ys, meetingHash: ie, roomName: G }, ze.getDeviceInfo()))),
                !1,
                // force evaluate
                5e3,
                // timeout
                B
              );
            case 29:
              return EI(), P.info("flagsmith::allFlags", { flags: JSON.stringify(ue.getAllFlags()) }, !0), he.next = 33, Y;
            case 33:
              return H = he.sent, U = H.roomNodeUrl, J = H.meetingTitle, X = H.useHiveMedia, he.next = 39, ee;
            case 39:
              if (Zp.init(), re = Le.isV2AuthToken ? Xp.default() : Kc.default(), pe = Le.isV2AuthToken ? Yp.default(re.viewType, X) : sp.default(X), Ge = Le.isV2AuthToken ? F.preset.name : void 0, Jd(Q(Q({}, e), {}, { modules: S, apiBase: E, organizationId: x, viewType: re.viewType })), !(S.permissions || S.theme)) {
                he.next = 51;
                break;
              }
              return he.next = 47, Z;
            case 47:
              oe = he.sent, oe && (Ge = oe.presetName), S.theme && (re = Le.isV2AuthToken ? Xp.fromResponse(F.preset) : Kc.fromResponse(oe.theme), Le.isV2AuthToken || re.configFromPermissions(oe.permissions)), S.permissions && (pe = Le.isV2AuthToken ? Yp.fromResponse(F.preset.permissions, re.viewType, X) : sp.fromResponse(oe.permissions, X));
            case 51:
              return te = Jv(re), Ue = ue.hasFeature(de.CUSTOM_PING_PONG), xe = [], X && xe.push("HIVE"), Ue && xe.push("PING"), Ve = _l(re.viewType, xe), nr = C.getPlugins(Ve), ke = re.viewType !== Rr.Chat, Sv(Q(Q({}, e), {}, { roomName: G, peerId: a, meetingTitle: J, roomNodeUrl: U, device: j, useHiveMedia: X })), he.next = 62, o.createSocketServiceAndRoomNodeClient(Q(Q({}, e), {}, { roomName: G, peerId: a, meetingTitle: J, roomNodeUrl: U, capabilities: xe, shouldInitializeRoomNode: te, viewType: re.viewType, device: j }));
            case 62:
              if (He = he.sent, Qr = Mr(), bu = new Nt(He), Jl = new Fn(He), Kl = new ku(He), zl = new vD(He), Ql = new DD(He), Yl = new AD(He), Xl = new zD(He), _r.socketService = He, io = Jc.create(He), !(!((i = S.self) !== null && i !== void 0) || i)) {
                he.next = 82;
                break;
              }
              return he.next = 76, Promise.all([Hi.init(He, io, F, pe, re, Ge), Qr instanceof qe ? Qr.setupTransports() : null]);
            case 76:
              Zl = he.sent, xl = ar(Zl, 1), cr = xl[0], C.setOrganizationId(cr.self.organizationId), he.next = 85;
              break;
            case 82:
              if (!(Qr instanceof qe)) {
                he.next = 85;
                break;
              }
              return he.next = 85, Qr.setupTransports();
            case 85:
              if (ed = ue.hasFeature(de.TROUBLESHOOTING), cr && ed && (Wl = new JD(cr.self)), !(!((s = S.participant) !== null && s !== void 0) || s)) {
                he.next = 91;
                break;
              }
              if (cr) {
                he.next = 90;
                break;
              }
              throw new q("The participant module cannot be initialized without the `self` module");
            case 90:
              Rt = new pa(cr.self, io, xe);
            case 91:
              if (!(!((u = S.chat) !== null && u !== void 0) || u)) {
                he.next = 97;
                break;
              }
              if (cr) {
                he.next = 94;
                break;
              }
              throw new q("The chat module cannot be initialized without the `self` module");
            case 94:
              return he.next = 96, Ht.init(bu, Jl, cr.self, Rt.participants, xe);
            case 96:
              it = he.sent;
            case 97:
              if (!(ke && (!((l = S.plugin) !== null && l !== void 0) || l))) {
                he.next = 108;
                break;
              }
              if (cr) {
                he.next = 100;
                break;
              }
              throw new q("The plugin module cannot be initialized without the `self` module");
            case 100:
              if (Rt) {
                he.next = 102;
                break;
              }
              throw new q("The plugin module cannot be initialized without the `participant` module");
            case 102:
              return he.next = 104, nr;
            case 104:
              return rd = he.sent, he.next = 107, ro.init(rd, zl, bu, (Su = it) === null || Su === void 0 ? void 0 : Su.chat, cr.self, Rt.participants, xe);
            case 107:
              Bi = he.sent;
            case 108:
              if (!(ke && (!((p = S.poll) !== null && p !== void 0) || p))) {
                he.next = 114;
                break;
              }
              if (cr) {
                he.next = 111;
                break;
              }
              throw new q("The poll cannot be initialized without the `self` module");
            case 111:
              return he.next = 113, Qv.init(cr.self, Kl, xe);
            case 113:
              qi = he.sent;
            case 114:
              if (!(!((h = S.meta) !== null && h !== void 0) || h)) {
                he.next = 118;
                break;
              }
              if (cr) {
                he.next = 117;
                break;
              }
              throw new q("The meta module cannot be initialized without the `self` module");
            case 117:
              Tu = new zv(cr.self, He, Xl, J);
            case 118:
              if (!(!((v = S.remoteControl) !== null && v !== void 0) || v)) {
                he.next = 122;
                break;
              }
              if (cr) {
                he.next = 121;
                break;
              }
              throw new q("The remote controller cannot be initialized without the `self` module");
            case 121:
              Hl = new LI(cr.self, Rt.participants);
            case 122:
              if (!(ke && (!((m = S.recording) !== null && m !== void 0) || m))) {
                he.next = 126;
                break;
              }
              if (cr) {
                he.next = 125;
                break;
              }
              throw new q("The recording controller cannot be initialized without the `self` module");
            case 125:
              jl = new of(cr.self, io);
            case 126:
              if (!(!((g = S.internals) !== null && g !== void 0) || g)) {
                he.next = 130;
                break;
              }
              return he.next = 129, SD.init();
            case 129:
              Bl = he.sent;
            case 130:
              if (!(re.viewType === Rr.Livestream && (!((w = S.livestream) !== null && w !== void 0) || w))) {
                he.next = 134;
                break;
              }
              if (cr) {
                he.next = 133;
                break;
              }
              throw new q("The livestream controller cannot be initialized without the `self` module");
            case 133:
              ue.hasFeature(de.LIVESTREAM) && (Gl = new cf(cr.self, Ql));
            case 134:
              if (!(ke && (!((k = S.stage) !== null && k !== void 0) || k))) {
                he.next = 138;
                break;
              }
              if (cr) {
                he.next = 137;
                break;
              }
              throw new q("The stage client cannot be initialized without the `self` module");
            case 137:
              ql = new lf(Yl, cr.self, Rt.participants, Tu.meta.viewType, Qr);
            case 138:
              if (!(Rv(re.viewType, xe) || ((T = e.overrides) === null || T === void 0 ? void 0 : T.chat_socket_server) === "socket-service")) {
                he.next = 147;
                break;
              }
              return he.prev = 139, he.next = 142, He.connect();
            case 142:
              he.next = 147;
              break;
            case 144:
              he.prev = 144, he.t0 = he.catch(139), P.error("[Socket Service] Failed to connect to socket server:", { error: he.t0 });
            case 147:
              return he.abrupt("return", new o(E, Tu, cr, Bi, Rt, it, qi, Hl, jl, Bl, Gl, ql, Wl));
            case 148:
            case "end":
              return he.stop();
          }
      }, t, null, [[139, 144]]);
    }));
    function r(t, e) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "createSocketServiceAndRoomNodeClient", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a;
      return d().wrap(function(i) {
        for (; ; )
          switch (i.prev = i.next) {
            case 0:
              if (a = o.createSocketService(e), e.shouldInitializeRoomNode) {
                i.next = 3;
                break;
              }
              return i.abrupt("return", a);
            case 3:
              if (!e.capabilities.includes("HIVE")) {
                i.next = 7;
                break;
              }
              return i.next = 6, $v(Q(Q({}, e), {}, { roomName: e.roomName, peerId: e.peerId, socket: a }));
            case 6:
              return i.abrupt("return", a);
            case 7:
              return i.next = 9, Lv(Q(Q({}, e), {}, { roomName: e.roomName, peerId: e.peerId }));
            case 9:
              return i.abrupt("return", a);
            case 10:
            case "end":
              return i.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "createSocketService", value: function(r) {
    var t = r.peerId, e = r.roomName, a = r.authToken, n = r.capabilities, i = new to({ peerId: t, roomName: e, authToken: a, capabilities: n });
    return i;
  } }]), o;
}(), ji = XD;
no([A.trace("Controller.joinRoom")], ji.prototype, "joinRoom", 1);
no([A.trace("Controller.leaveRoom")], ji.prototype, "leaveRoom", 1);
no([A.trace("Controller.init")], ji, "init", 1);
no([A.trace("Controller.createSocketServiceAndRoomNodeClient")], ji, "createSocketServiceAndRoomNodeClient", 1);
no([A.trace("Controller.createSocketService")], ji, "createSocketService", 1);
var mc = /* @__PURE__ */ new K(), ZD = /* @__PURE__ */ function(o) {
  O(r, o);
  var c = N(r);
  function r(t) {
    var e;
    return I(this, r), e = c.call(this), z(b(e), mc, { writable: !0, value: void 0 }), R(b(e), "meetings", []), R(b(e), "parentMeeting", null), V(b(e), mc, t.self), e;
  }
  return D(r, [{ key: "supportsConnectedMeetings", get: function() {
    return f(this, mc).id !== "" && Le.isV2AuthToken && ue.hasFeature(de.CONNECTED_MEETINGS);
  } }, {
    key: "isActive",
    get: function() {
      return this.meetings.length !== 0;
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "currentMeetingId", get: function() {
    return _r.currentMeetingId;
  } }, {
    key: "validateConnectedMeetingsAction",
    value: function() {
      if (!this.supportsConnectedMeetings)
        throw new Error(`You are not allowed to perform this action.
						Please connect with Dyte team to move you to V2 APIs & to enable connected meetings.`);
    }
    /**
    * get connected meeting state
    */
  }, {
    key: "getConnectedMeetings",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a() {
        var n;
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return this.validateConnectedMeetingsAction(), s.next = 3, _r.getConnectedRoomsDump();
              case 3:
                return n = s.sent, s.abrupt("return", n);
              case 5:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e() {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * create connected meetings
    */
  }, {
    key: "createMeetings",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i;
        return d().wrap(function(u) {
          for (; ; )
            switch (u.prev = u.next) {
              case 0:
                return this.validateConnectedMeetingsAction(), u.next = 3, _r.createConnectedRooms(n);
              case 3:
                return i = u.sent, u.abrupt("return", i.map(function(l) {
                  return { id: l.id, title: l.title };
                }));
              case 5:
              case "end":
                return u.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * update meeting title
    */
  }, {
    key: "updateMeetings",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        return d().wrap(function(s) {
          for (; ; )
            switch (s.prev = s.next) {
              case 0:
                return this.validateConnectedMeetingsAction(), s.next = 3, _r.updateConnectedRooms(n.map(function(u) {
                  return { meetingId: u.id, title: u.title };
                }));
              case 3:
              case "end":
                return s.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * delete connected meetings
    */
  }, {
    key: "deleteMeetings",
    value: function() {
      var t = y(/* @__PURE__ */ d().mark(function a(n) {
        var i = this, s, u;
        return d().wrap(function(p) {
          for (; ; )
            switch (p.prev = p.next) {
              case 0:
                return this.validateConnectedMeetingsAction(), s = this.meetings.map(function(h) {
                  return n.includes(h.id) && h.participants.length !== 0 ? i.moveParticipants(h.id, i.parentMeeting.id, h.participants.map(function(v) {
                    return v.id;
                  })) : Promise.resolve();
                }), p.next = 4, Promise.all(s);
              case 4:
                return p.next = 6, _r.disableConnectedRooms(n);
              case 6:
                return u = p.sent, p.abrupt("return", u);
              case 8:
              case "end":
                return p.stop();
            }
        }, a, this);
      }));
      function e(a) {
        return t.apply(this, arguments);
      }
      return e;
    }()
    /**
    * Trigger event to move participants
    *
    * @param {string} sourceMeetingId - id of source meeting
    * @param {string} destinationMeetingId - id of destination meeting
    * @param {string[]} participantIds - list of id of the participants
    */
  }, { key: "moveParticipants", value: function() {
    var t = y(/* @__PURE__ */ d().mark(function a(n, i, s) {
      var u, l;
      return d().wrap(function(h) {
        for (; ; )
          switch (h.prev = h.next) {
            case 0:
              return this.validateConnectedMeetingsAction(), u = /* @__PURE__ */ new Map(), [].concat(sr(this.parentMeeting.participants), sr(this.meetings.flatMap(function(v) {
                return v.participants;
              }))).forEach(function(v) {
                return u.set(v.id, v);
              }), h.next = 5, _r.movePeersBetweenRooms({ sourceMeetingId: n, destinationMeetingId: i, participants: s.map(function(v) {
                return { id: v };
              }) });
            case 5:
              return l = h.sent, l.success && (i === this.parentMeeting.id && (this.parentMeeting.participants = this.parentMeeting.participants.concat(s.map(function(v) {
                return u.get(v);
              }))), n === this.parentMeeting.id && (this.parentMeeting.participants = this.parentMeeting.participants.filter(function(v) {
                return !s.includes(v.id);
              })), this.meetings = this.meetings.map(function(v) {
                if (i === v.id) {
                  var m = v.participants.concat(s.map(function(w) {
                    return u.get(w);
                  }));
                  return Q(Q({}, v), {}, { participants: m });
                }
                if (n === v.id) {
                  var g = v.participants.filter(function(w) {
                    return !s.includes(w.id);
                  });
                  return Q(Q({}, v), {}, { participants: g });
                }
                return v;
              })), h.abrupt("return", l);
            case 8:
            case "end":
              return h.stop();
          }
      }, a, this);
    }));
    function e(a, n, i) {
      return t.apply(this, arguments);
    }
    return e;
  }() }]), r;
}(fr), xD = Object.defineProperty, eA = Object.getOwnPropertyDescriptor, Fl = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? eA(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && xD(r, t, a), a;
}, rA = (ri = /* @__PURE__ */ new K(), ls = /* @__PURE__ */ new K(), Eu = /* @__PURE__ */ function() {
  function o(c, r) {
    I(this, o), R(this, "connectedMeetings", void 0), z(this, ri, { writable: !0, value: void 0 }), z(this, ls, { writable: !0, value: void 0 }), V(this, ri, r), this.connectedMeetings = new ZD(c), this.setCurrentMeeting(c);
  }
  return D(o, [{ key: "setCurrentMeeting", value: function(r) {
    V(this, ls, r), _r.currentMeetingId = r.meta.roomName;
  } }, { key: "getConnectedMeetings", value: function() {
    this.connectedMeetings.getConnectedMeetings();
  } }, {
    key: "setupEvents",
    value: function() {
      _r.socketService && (_r.socketService.on(le.getConnectedRoomsDump, this.handleConnectedRoomsDump.bind(this)), _r.socketService.on(le.transferPeer, this.handleTransferPeer.bind(this)), _r.socketService.on(le.movedPeer, this.handleMovedPeer.bind(this)), _r.socketService.on(le.connectedRoomsUpdated, this.handleConnectedRoomsUpdated.bind(this)), _r.socketService.on(le.connectedRoomsDeleted, this.handleConnectedRoomsDeleted.bind(this)));
    }
    // event handlers
  }, { key: "handleTransferPeer", value: function(r) {
    var t = _r.handleTransferPeerRaw(r);
    return this.switchMeeting(t);
  } }, { key: "switchMeeting", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s;
      return d().wrap(function(l) {
        for (; ; )
          switch (l.prev = l.next) {
            case 0:
              if (a = e.authToken, n = e.meetingId, this.connectedMeetings.supportsConnectedMeetings) {
                l.next = 3;
                break;
              }
              throw new Error(`You are not allowed to perform this action.
								Please connect with Dyte team to move you to V2 APIs & to enable connected meetings.`);
            case 3:
              return this.connectedMeetings.emit("changingMeeting", n), i = f(this, ls).self.videoEnabled, l.next = 7, f(this, ls).leaveRoom("connected-meeting");
            case 7:
              return _r.socketService = void 0, l.next = 10, iA.init({ authToken: a, apiBase: f(this, ri).apiBase, defaults: Q(Q({}, f(this, ri).defaults), {}, { video: i, audio: !1 }), modules: f(this, ri).modules });
            case 10:
              return s = l.sent, this.connectedMeetings.emit("meetingChanged", s), this.setCurrentMeeting(s), l.abrupt("return", s);
            case 14:
            case "end":
              return l.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "handleConnectedRoomsDump",
    value: function(r) {
      var t = _r.handleConnectedRoomsDumpRaw(r);
      this.connectedMeetings.meetings = t.meetings.map(function(e) {
        return { id: e.id, title: e.title, participants: e.participants || [] };
      }), this.connectedMeetings.parentMeeting = { id: t.parentMeeting.id, title: t.parentMeeting.title, participants: t.parentMeeting.participants }, this.emitStateUpdate();
    }
    // eslint-disable-next-line class-methods-use-this
  }, { key: "handleMovedPeer", value: function(r) {
    var t = _r.handleMovedPeerRaw(r);
    return t;
  } }, { key: "handleConnectedRoomsUpdated", value: function(r) {
    var t = _r.handleConnectedRoomsUpdatedRaw(r), e = /* @__PURE__ */ new Map();
    this.connectedMeetings.meetings.forEach(function(a) {
      e.set(a.id, a);
    }), t.forEach(function(a) {
      e.has(a.id) ? e.get(a.id).title = a.title : e.set(a.id, Q(Q({}, a), {}, { participants: [] }));
    }), this.connectedMeetings.meetings = Array.from(e.values()), this.emitStateUpdate();
  } }, { key: "handleConnectedRoomsDeleted", value: function(r) {
    var t = _r.handleConnectedRoomsDeletedRaw(r), e = t.map(function(a) {
      return a.id;
    });
    this.connectedMeetings.meetings = this.connectedMeetings.meetings.filter(function(a) {
      return !e.includes(a.id);
    });
  } }, { key: "emitStateUpdate", value: function() {
    this.connectedMeetings.emit("stateUpdate", { meetings: this.connectedMeetings.meetings, parentMeeting: this.connectedMeetings.parentMeeting });
  } }], [{ key: "init", value: function(r, t) {
    return o.instance || (o.instance = new o(r, t)), o.instance.connectedMeetings.supportsConnectedMeetings && (o.instance.setupEvents(), r.self.once("roomJoined", function() {
      return o.instance.getConnectedMeetings();
    })), o.instance;
  } }]), o;
}(), R(Eu, "instance", void 0), Eu), wu = rA;
Fl([A.trace("ConnectedMeetingsController.getConnectedMeetings")], wu.prototype, "getConnectedMeetings", 1);
Fl([A.trace("ConnectedMeetingsController.setupEvents")], wu.prototype, "setupEvents", 1);
Fl([A.trace("ConnectedMeetingsController.switchMeeting")], wu.prototype, "switchMeeting", 1);
var Rs = {}, Vl = {
  /**
  * Lock a method to prevent concurrency
  * @param config - configuration for the lock
  * @param config.methodName - config.methodName Name of method to expose in logs
  *	and to the user (if necessary).
  * @param config.lockName - Unique string to differentiate the method from others.
  * @param config.timeout - Release lock in given milliseconds if method doesn't get resolved.
  *
  *	Do not use common function names such as joinRoom as the lockName,
  *	instead use filename.functionname, if a suitable name couldn't be found.
  * @returns locked instance.
  *
  * It will throw error with name `UnsupportedConcurrentMethodExecution`,
  *	if lock couldn't be acquired.
  *
  * Note:
  *	Make sure that the methodName is explanatory on its own, if exposed to end users.
  * Eg: `meeting.joinRoom` is a much better choice than `joinRoom`.
  */
  executeWithLock: function(c) {
    var r = c.methodName, t = c.lockName, e = c.timeout;
    return function(a, n, i) {
      var s = i.value;
      return i.value = function() {
        if (Rs[t]) {
          var l = new Error("Unsupported concurrent calls on Dyte method: ".concat(r, "."));
          throw l.name = "UnsupportedConcurrentMethodExecution", P.error("DyteLocker::UnsupportedConcurrentMethodExecution", { error: { stack: l.stack }, dyteLocker: { methodName: r, lockName: t } }), l;
        }
        Rs[t] = !0;
        for (var p = setTimeout(function() {
          return delete Rs[t];
        }, e), h = arguments.length, v = new Array(h), m = 0; m < h; m++)
          v[m] = arguments[m];
        var g = s.apply(this, v);
        return Promise.resolve(g).then(function() {
          delete Rs[t], clearTimeout(p);
        }).catch(function() {
          delete Rs[t], clearTimeout(p);
        }), g;
      }, i;
    };
  }
}, tA = Object.defineProperty, aA = Object.getOwnPropertyDescriptor, Gi = function(c, r, t, e) {
  for (var a = e > 1 ? void 0 : e ? aA(r, t) : r, n = c.length - 1, i; n >= 0; n--)
    (i = c[n]) && (a = (e ? i(r, t, a) : i(a)) || a);
  return e && a && tA(r, t, a), a;
}, Oa = (Cr = /* @__PURE__ */ new K(), Do = /* @__PURE__ */ new K(), Ru = /* @__PURE__ */ new WeakSet(), _u = /* @__PURE__ */ function() {
  function o(c) {
    I(this, o), Or(this, Ru), z(this, Cr, { writable: !0, value: void 0 }), z(this, Do, { writable: !0, value: void 0 }), V(this, Cr, c);
  }
  return D(o, [{ key: "joinRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", f(this, Cr).joinRoom());
            case 1:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leaveRoom", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.abrupt("return", f(this, Cr).leaveRoom(e));
            case 1:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "join", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t() {
      return d().wrap(function(a) {
        for (; ; )
          switch (a.prev = a.next) {
            case 0:
              return a.abrupt("return", f(this, Cr).joinRoom());
            case 1:
            case "end":
              return a.stop();
          }
      }, t, this);
    }));
    function r() {
      return c.apply(this, arguments);
    }
    return r;
  }() }, { key: "leave", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      return d().wrap(function(n) {
        for (; ; )
          switch (n.prev = n.next) {
            case 0:
              return n.abrupt("return", f(this, Cr).leaveRoom(e));
            case 1:
            case "end":
              return n.stop();
          }
      }, t, this);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }, {
    key: "participants",
    get: (
      /**
      * The `participants` object consists of 4 maps of participants,
      * `waitlisted`, `joined`, `active`, `pinned`. The maps are indexed by
      * `peerId`s, and the values are the corresponding participant objects.
      */
      function() {
        var r;
        return (r = f(this, Cr).participantController) === null || r === void 0 ? void 0 : r.participants;
      }
    )
    /**
    * The `self` object can be used to manipulate audio and video settings,
    * and other configurations for the local participant. This exposes methods
    * to enable and disable media tracks, share the user's screen, etc.
    */
  }, {
    key: "self",
    get: function() {
      var r;
      return (r = f(this, Cr).selfController) === null || r === void 0 ? void 0 : r.self;
    }
    /**
    * The `room` object stores information about the current meeting, such
    * as chat messages, polls, room name, etc.
    */
  }, {
    key: "meta",
    get: function() {
      var r;
      return (r = f(this, Cr).metaController) === null || r === void 0 ? void 0 : r.meta;
    }
    /**
    * The `ai` object is used to interface with Dyte's AI features.
    * You can obtain the live meeting transcript and use other meeting AI
    * features such as summary, and agenda using this object.
    */
  }, {
    key: "ai",
    get: function() {
      var r;
      return (r = f(this, Cr).metaController) === null || r === void 0 ? void 0 : r.ai;
    }
    /**
    * The `plugins` object stores information about the plugins available in
    * the current meeting. It exposes methods to activate and deactivate them.
    */
  }, {
    key: "plugins",
    get: function() {
      var r;
      return (r = f(this, Cr).pluginController) === null || r === void 0 ? void 0 : r.plugins;
    }
    /**
    * The chat object stores the chat messages that were sent in the meeting.
    * This includes text messages, images, and files.
    */
  }, {
    key: "chat",
    get: function() {
      var r;
      return (r = f(this, Cr).chatController) === null || r === void 0 ? void 0 : r.chat;
    }
    /**
    * The polls object stores the polls that were initiated in the meeting.
    * It exposes methods to create and vote on polls.
    */
  }, {
    key: "polls",
    get: function() {
      var r;
      return (r = f(this, Cr).pollController) === null || r === void 0 ? void 0 : r.polls;
    }
    /**
    * The remote object stores the remote control requests for the meeting.
    * It exposes methods to request, accept and end the remote control.
    */
  }, {
    key: "remote",
    get: function() {
      var r;
      return (r = f(this, Cr).remoteController) === null || r === void 0 ? void 0 : r.remote;
    }
    /**
    * The connectedMeetings object stores the connected meetings states.
    * It exposes methods to create/read/update/delete methods for connected meetings.
    */
  }, {
    key: "connectedMeetings",
    get: function() {
      var r;
      return (r = f(this, Do)) === null || r === void 0 ? void 0 : r.connectedMeetings;
    }
    /*
    * The recording object stores the recording state of the meeting.
    * It exposes methods to start and stop recording.
    */
  }, { key: "recording", get: function() {
    var r;
    return (r = f(this, Cr).recordingController) === null || r === void 0 ? void 0 : r.recording;
  } }, { key: "livestream", get: function() {
    var r;
    return (r = f(this, Cr).livestreamController) === null || r === void 0 ? void 0 : r.livestream;
  } }, { key: "stage", get: function() {
    var r;
    return (r = f(this, Cr).stageController) === null || r === void 0 ? void 0 : r.stage;
  } }, {
    key: "troubleshoot",
    get: function() {
      var r;
      return (r = f(this, Cr).troubleshooterController) === null || r === void 0 ? void 0 : r.troubleshooter;
    }
    /**
    * The __internals__ object exposes the internal tools & utilities such as features and logger
    * so that client can utilise the same to build their own feature based UI.
    * DyteLogger (__internals__.logger) can be used to send logs to Dyte's servers
    *	to inform Dyte of issues, if any, proactively.
    */
  }, { key: "__internals__", get: function() {
    var r;
    return (r = f(this, Cr).internalsController) === null || r === void 0 ? void 0 : r.internals;
  } }], [{ key: "init", value: function() {
    var c = y(/* @__PURE__ */ d().mark(function t(e) {
      var a, n, i, s, u, l, p, h;
      return d().wrap(function(m) {
        for (; ; )
          switch (m.prev = m.next) {
            case 0:
              return PP((a = e.overrides) !== null && a !== void 0 ? a : {}), ze.init(), l = Bs(), window.__zone_symbol__DISABLE_WRAPPING_UNCAUGHT_PROMISE_REJECTION = !0, A.init(l, (n = (i = e.modules) === null || i === void 0 ? void 0 : i.tracing) !== null && n !== void 0 ? n : !0), P.info("DyteClient::init::options", { dyteClientInitOptions: Q(Q({}, e), {}, {
                // Storing only first and last 10 chars of authToken
                authToken: "".concat((s = e.authToken) === null || s === void 0 ? void 0 : s.slice(0, 10), "...").concat((u = e.authToken) === null || u === void 0 ? void 0 : u.slice(-10))
              }) }), !navigator.isReactNative && typeof window != "undefined" && (window.addEventListener("error", function(g) {
                var w;
                !((w = g.filename) !== null && w !== void 0 && w.includes("localhost")) && g.lineno !== 0 && P.error("window::error", { error: g.error }, !0);
              }), window.addEventListener("unhandledrejection", function(g) {
                var w, k, T, _, E;
                P.error("window::unhandledrejection", {
                  error: g == null ? void 0 : g.reason,
                  /**
                  * NOTE(ravindra-dyte):
                  * Network calls fail a lot for clients,
                  *	tracking more info to see where
                  *	*/
                  networkCall: { url: g == null || (w = g.reason) === null || w === void 0 || (w = w.config) === null || w === void 0 ? void 0 : w.url, baseURL: g == null || (k = g.reason) === null || k === void 0 || (k = k.config) === null || k === void 0 ? void 0 : k.baseURL, method: g == null || (T = g.reason) === null || T === void 0 || (T = T.config) === null || T === void 0 ? void 0 : T.method, status: g == null || (_ = g.reason) === null || _ === void 0 ? void 0 : _.status, statusText: g == null || (E = g.reason) === null || E === void 0 ? void 0 : E.statusText }
                }, !0);
              }), window.addEventListener("offline", function() {
                P.info("window::offline");
              }), window.addEventListener("online", function() {
                P.info("window::online");
              })), RP(e.authToken, e.roomName), A.meetingMetadata.roomName = Le.isV2AuthToken ? Le.meetingId : e.roomName, m.next = 11, ji.init(e, l);
            case 11:
              return p = m.sent, h = new Oa(p), Ne(h, Ru, nA).call(h, e), m.abrupt("return", h);
            case 15:
            case "end":
              return m.stop();
          }
      }, t);
    }));
    function r(t) {
      return c.apply(this, arguments);
    }
    return r;
  }() }]), o;
}(), R(_u, "DyteSelfMedia", Gv), _u);
function nA(o) {
  V(this, Do, wu.init(this, o));
}
Gi([jr(function(o) {
  throw new q(o.message, "0002");
}), Vl.executeWithLock({ methodName: "meeting.joinRoom", lockName: "DyteClient.joinRoom", timeout: 3e3 })], Oa.prototype, "joinRoom", 1);
Gi([jr(function(o) {
  throw new q(o.message, "0003");
})], Oa.prototype, "leaveRoom", 1);
Gi([jr(function(o) {
  throw new q(o.message, "0002");
}), Vl.executeWithLock({ methodName: "meeting.join", lockName: "DyteClient.join", timeout: 3e3 })], Oa.prototype, "join", 1);
Gi([jr(function(o) {
  throw new q(o.message, "0003");
})], Oa.prototype, "leave", 1);
Gi([jr(function(o) {
  throw new q(o.message, "0001");
}), Vl.executeWithLock({ methodName: "DyteClient.init", lockName: "DyteClient.init", timeout: 3e3 })], Oa, "init", 1);
Oa = Gi([jr(function(o) {
  throw new q(o.message, "0000");
})], Oa);
var iA = Oa;
export {
  iA as default
};
