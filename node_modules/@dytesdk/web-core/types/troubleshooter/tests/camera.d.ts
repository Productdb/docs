export declare type CameraMetadata = {
    label?: string;
    resolution?: number[];
};
export declare type CamTestConfig = {
    nonBlackPixelLumaThreshold?: number;
    identicalFrameSsimThreshold?: number;
    media?: 'screenshare' | 'video';
};
export declare const defaultTestConfig: CamTestConfig;
export declare class CameraTest {
    #private;
    metadata: CameraMetadata;
    video: HTMLVideoElement | undefined;
    canvas: HTMLCanvasElement | undefined;
    nonBlackPixelLumaThreshold: number;
    identicalFrameSsimThreshold: number;
    previousFrame: Uint8ClampedArray;
    track: MediaStreamTrack | undefined;
    analysing: boolean;
    preview: boolean;
    constructor(testConfig?: CamTestConfig);
    setTrack(videoTrack: MediaStreamTrack | undefined): void;
    getTrackMetadata(): CameraMetadata;
    startTrackAnalysis(): Promise<boolean>;
    stopTrackAnalysis(): void;
    cleanup(): void;
}
declare const camTest: CameraTest;
export declare const screenshareCamTest: CameraTest;
export default camTest;
