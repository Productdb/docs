declare const NavigatorMock: import("@vitest/spy").Mock<[], {
    mediaDevices: {
        getUserMedia: import("@vitest/spy").Mock<[], Promise<unknown>>;
    };
    vendorSub: import("@vitest/spy").Mock<any[], any>;
    productSub: import("@vitest/spy").Mock<any[], any>;
    vendor: import("@vitest/spy").Mock<any[], any>;
    maxTouchPoints: import("@vitest/spy").Mock<any[], any>;
    scheduling: import("@vitest/spy").Mock<any[], any>;
    userActivation: import("@vitest/spy").Mock<any[], any>;
    doNotTrack: import("@vitest/spy").Mock<any[], any>;
    geolocation: import("@vitest/spy").Mock<any[], any>;
    connection: import("@vitest/spy").Mock<any[], any>;
    plugins: import("@vitest/spy").Mock<any[], any>;
    mimeTypes: import("@vitest/spy").Mock<any[], any>;
    pdfViewerEnabled: import("@vitest/spy").Mock<any[], any>;
    webkitTemporaryStorage: import("@vitest/spy").Mock<any[], any>;
    webkitPersistentStorage: import("@vitest/spy").Mock<any[], any>;
    hardwareConcurrency: import("@vitest/spy").Mock<any[], any>;
    cookieEnabled: import("@vitest/spy").Mock<any[], any>;
    appCodeName: import("@vitest/spy").Mock<any[], any>;
    appName: import("@vitest/spy").Mock<any[], any>;
    appVersion: import("@vitest/spy").Mock<any[], any>;
    platform: import("@vitest/spy").Mock<any[], any>;
    product: import("@vitest/spy").Mock<any[], any>;
    userAgent: import("@vitest/spy").Mock<any[], any>;
    language: import("@vitest/spy").Mock<any[], any>;
    languages: import("@vitest/spy").Mock<any[], any>;
    onLine: import("@vitest/spy").Mock<any[], any>;
    webdriver: import("@vitest/spy").Mock<any[], any>;
    getGamepads: import("@vitest/spy").Mock<any[], any>;
    javaEnabled: import("@vitest/spy").Mock<any[], any>;
    sendBeacon: import("@vitest/spy").Mock<any[], any>;
    vibrate: import("@vitest/spy").Mock<any[], any>;
    constructor: import("@vitest/spy").Mock<any[], any>;
    clipboard: import("@vitest/spy").Mock<any[], any>;
    credentials: import("@vitest/spy").Mock<any[], any>;
    keyboard: import("@vitest/spy").Mock<any[], any>;
    managed: import("@vitest/spy").Mock<any[], any>;
    storage: import("@vitest/spy").Mock<any[], any>;
    serviceWorker: import("@vitest/spy").Mock<any[], any>;
    virtualKeyboard: import("@vitest/spy").Mock<any[], any>;
    wakeLock: import("@vitest/spy").Mock<any[], any>;
    deviceMemory: import("@vitest/spy").Mock<any[], any>;
    ink: import("@vitest/spy").Mock<any[], any>;
    hid: import("@vitest/spy").Mock<any[], any>;
    locks: import("@vitest/spy").Mock<any[], any>;
    mediaCapabilities: import("@vitest/spy").Mock<any[], any>;
    mediaSession: import("@vitest/spy").Mock<any[], any>;
    permissions: import("@vitest/spy").Mock<any[], any>;
    presentation: import("@vitest/spy").Mock<any[], any>;
    serial: import("@vitest/spy").Mock<any[], any>;
    usb: import("@vitest/spy").Mock<any[], any>;
    windowControlsOverlay: import("@vitest/spy").Mock<any[], any>;
    xr: import("@vitest/spy").Mock<any[], any>;
    userAgentData: import("@vitest/spy").Mock<any[], any>;
    clearAppBadge: import("@vitest/spy").Mock<any[], any>;
    getBattery: import("@vitest/spy").Mock<any[], any>;
    getUserMedia: import("@vitest/spy").Mock<any[], any>;
    requestMIDIAccess: import("@vitest/spy").Mock<any[], any>;
    requestMediaKeySystemAccess: import("@vitest/spy").Mock<any[], any>;
    setAppBadge: import("@vitest/spy").Mock<any[], any>;
    webkitGetUserMedia: import("@vitest/spy").Mock<any[], any>;
    getInstalledRelatedApps: import("@vitest/spy").Mock<any[], any>;
    registerProtocolHandler: import("@vitest/spy").Mock<any[], any>;
    unregisterProtocolHandler: import("@vitest/spy").Mock<any[], any>;
}>;
export default NavigatorMock;
