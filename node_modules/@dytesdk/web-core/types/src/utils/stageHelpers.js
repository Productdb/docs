import { MediaProductionPermissionType, globalFlagsmith as flagsmith } from '@dyteinternals/utils';
import constants from './constants';
import { FlagsmithFeatureFlags } from './flags';
export function isStageHost(permissions) {
    if (!constants.isV2AuthToken)
        return false;
    const p = permissions;
    return [p.canProduceAudio, p.canProduceScreenshare, p.canProduceVideo]
        .includes(MediaProductionPermissionType.Allowed);
}
export function getStageStatusForPreset(permissions, theme) {
    switch (theme.viewType) {
        case 'GROUP_CALL': return 'ON_STAGE';
        case 'WEBINAR': return permissions.canPresent ? 'ON_STAGE' : 'OFF_STAGE';
        case 'AUDIO_ROOM': return 'ON_STAGE';
        case 'LIVESTREAM': {
            return isStageHost(permissions) ? 'ON_STAGE' : 'OFF_STAGE';
        }
        default: return 'OFF_STAGE';
    }
}
export function useRoomNodeClient(theme) {
    if (!flagsmith.hasFeature(FlagsmithFeatureFlags.LIVESTREAM))
        return true;
    return theme.viewType !== 'LIVESTREAM';
}
