type PermissionEnum = any; 
import { browserSpecs } from '../browser/BrowserCapabilities';
export var MediaPermission;
(function (MediaPermission) {
    MediaPermission[MediaPermission["NOT_REQUESTED"] = 0] = "NOT_REQUESTED";
    MediaPermission[MediaPermission["ACCEPTED"] = 1] = "ACCEPTED";
    MediaPermission[MediaPermission["DENIED"] = 2] = "DENIED";
    MediaPermission[MediaPermission["SYSTEM_DENIED"] = 3] = "SYSTEM_DENIED";
    MediaPermission[MediaPermission["COULD_NOT_START"] = 4] = "COULD_NOT_START";
})(MediaPermission || (MediaPermission = {}));
export var MediaErrorName;
(function (MediaErrorName) {
    MediaErrorName["NotAllowedError"] = "NotAllowedError";
    MediaErrorName["NotReadableError"] = "NotReadableError";
    MediaErrorName["NotFoundError"] = "NotFoundError";
    MediaErrorName["AbortError"] = "AbortError";
})(MediaErrorName || (MediaErrorName = {}));
export function resolveMediaPermissionError(errorName, errorMessage) {
    if (browserSpecs.isChromiumBased()) {
        if (errorName === MediaErrorName.NotAllowedError) {
            if (errorMessage.indexOf('by system') > 0) {
                return 'SYSTEM_DENIED';
            }
            return 'DENIED';
        }
        if (errorName === MediaErrorName.NotReadableError) {
            return 'COULD_NOT_START';
        }
    }
    else if (browserSpecs.isSafari()) {
        if (errorName === MediaErrorName.NotAllowedError) {
            return 'DENIED';
        }
    }
    else if (browserSpecs.isFirefox()) {
        if (errorName === MediaErrorName.NotFoundError
            || errorName === MediaErrorName.NotReadableError) {
            return 'SYSTEM_DENIED';
        }
        if (errorName === MediaErrorName.NotAllowedError) {
            return 'DENIED';
        }
        if (errorName === MediaErrorName.AbortError) {
            return 'COULD_NOT_START';
        }
    }
    return 'COULD_NOT_START';
}
export function mediaErrorToCallStatEnum(error) {
    if (error === MediaPermission.DENIED.toString()) {
        return PermissionEnum.DENIED;
    }
    if (error === MediaPermission.SYSTEM_DENIED.toString()) {
        return PermissionEnum.SYS_DENIED;
    }
    if (error === MediaPermission.ACCEPTED.toString()) {
        return PermissionEnum.ACCEPTED;
    }
    return PermissionEnum.FAILED;
}
