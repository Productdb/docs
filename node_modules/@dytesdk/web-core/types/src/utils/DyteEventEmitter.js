import { EventEmitter } from 'events';
export default class DyteEventEmitter extends EventEmitter {
    emit(event, ...args) {
        super.emit('*', event, ...args);
        return super.emit(event, ...args);
    }
    on(event, callback) {
        return super.on(event, callback);
    }
    addListener(event, callback) {
        return super.addListener(event, callback);
    }
    off(event, callback) {
        return super.off(event, callback);
    }
    once(event, callback) {
        return super.once(event, callback);
    }
    prependListener(event, callback) {
        return super.prependListener(event, callback);
    }
    prependOnceListener(event, callback) {
        return super.prependOnceListener(event, callback);
    }
    removeListener(event, callback) {
        return super.removeListener(event, callback);
    }
    removeAllListeners(event) {
        return super.removeAllListeners(event);
    }
    listeners(event) {
        return super.listeners(event);
    }
    listenerCount(event) {
        return super.listenerCount(event);
    }
}
