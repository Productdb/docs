type ChatMessage = any; 
import DyteChat, { Message } from '../client/DyteChat';
import DyteParticipants from '../client/DyteParticipants';
import DyteSelf from '../client/DyteSelf';
import ChatSocketHandler from '../socketService/ChatSocketHandler';
import { SocketServiceCapabilities } from '../socketService/SocketService';
export declare type ChatSocketServerName = 'socket-service' | 'room-node';
export default class ChatController {
    #private;
    readonly chat: DyteChat;
    readonly chatSocketHandler: ChatSocketHandler;
    readonly self: DyteSelf;
    private get roomJoined();
    constructor(chatSocketHandler: ChatSocketHandler, socketServerName: ChatSocketServerName, self: DyteSelf, participants: DyteParticipants);
    static init(chatSocketHandler: ChatSocketHandler, self: DyteSelf, participants: DyteParticipants, capabilities: SocketServiceCapabilities): Promise<ChatController>;
    private static formatMessage;
    static formatSocketServiceMessage(sockMessage: ChatMessage): Message;
    private getChatMessages;
    private setupEvents;
}
