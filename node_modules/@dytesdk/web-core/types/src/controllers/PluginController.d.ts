import DytePlugins from '../client/DytePlugins';
import DyteSelf from '../client/DyteSelf';
import PluginSocketHandler from '../socketService/PluginSocketHandler';
import DyteParticipants from '../client/DyteParticipants';
import { DyteChat } from '..';
import ChatSocketHandler from '../socketService/ChatSocketHandler';
import { SocketServiceCapabilities } from '../socketService/SocketService';
export declare type PluginSocketServerName = 'socket-service' | 'room-node';
export default class PluginController {
    #private;
    readonly plugins: DytePlugins;
    private get roomJoined();
    constructor(pluginSocketHandler: PluginSocketHandler, chatSocketHandler: ChatSocketHandler, socketServerName: PluginSocketServerName, plugins: DytePlugins);
    static init(pluginSocketHandler: PluginSocketHandler, chatSocketHandler: ChatSocketHandler, chat: DyteChat, self: DyteSelf, participants: DyteParticipants, capabilities: SocketServiceCapabilities): Promise<PluginController>;
    private getRoomPlugins;
    private enablePlugin;
    private disablePlugin;
    private sendIframeEventOld;
    private sendIframeEvent;
    private broadcastIframeEventOld;
    private broadcastIframeEvent;
    private setupEvents;
}
