import DyteError from '../../client/DyteError';
import WebMediaInterface from '../interface/web/WebMediaInterface';
class AudioOutputMediaHandler {
    #mediaInterface;
    currentDevice;
    constructor(mediaInterface) {
        this.#mediaInterface = mediaInterface;
    }
    async setupSpeaker(speakerDevice) {
        if (!(this.#mediaInterface instanceof WebMediaInterface)) {
            return;
        }
        let device = speakerDevice;
        if (!speakerDevice) {
            [device] = (await this.#mediaInterface.getAvailableDevicesByKind('audiooutput'));
        }
        if (!device) {
            throw new DyteError('No speaker found');
        }
        if (this.currentDevice?.deviceId === device.deviceId)
            return;
        this.currentDevice ??= device;
        document.querySelectorAll('audio').forEach(async (audioElem) => {
            if (typeof audioElem.sinkId !== 'undefined'
                && this.currentDevice.deviceId
                && audioElem.sinkId !== this.currentDevice.deviceId) {
                try {
                    await audioElem.setSinkId(this.currentDevice.deviceId);
                }
                catch {
                }
            }
        });
    }
}
export default AudioOutputMediaHandler;
