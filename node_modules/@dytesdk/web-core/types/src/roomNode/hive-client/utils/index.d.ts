export declare function clone(data: any, defaultValue: any): any;
export declare const REASON_TRANSPORT_CLOSED = "transport closed";
export declare const sleep: (duration: number) => Promise<unknown>;
export declare class DytePromise<T> extends Promise<T> {
    constructor(executor: (resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void, timeout: number, message?: any, onTimeout?: () => void);
    static withTimeout<T>(promise: DytePromise<T> | Promise<T>, timeout: number, msg?: any, onTimeout?: () => void): DytePromise<T>;
    static all<T>(promises: DytePromise<T>[] | Promise<T>[], ignoreError?: boolean): Promise<any[]>;
}
