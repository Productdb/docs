/// <reference types="node" />
import EventEmitter from 'events';
import { SocketState } from './SocketState';
export declare type WebsocketMessage = {
    type: string;
    payload?: any;
    metadata?: {
        [key: string]: any;
    };
};
declare type SocketCallbackHandler = (message: WebsocketMessage) => any;
export default class SocketClient extends EventEmitter {
    private socket;
    socketState: SocketState;
    private callbackHandler;
    constructor(options: {
        callbackHandler?: SocketCallbackHandler;
    });
    connect(url: string): void;
    disconnect(): void;
    reconnect(): void;
    private setupSocket;
    sendMessage(message: WebsocketMessage): Promise<WebsocketMessage>;
}
export {};
