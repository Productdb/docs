const roomMessageBase = 0;
const chatMessageBase = 1;
const pluginMessageBase = 2;
const pollMessageBase = 3;
const roomEventSlugs = {
    getPeerInfo: 0,
    updatePeerInfo: 1,
    getRoomPeersInfo: 2,
    joinRoom: 3,
    leaveRoom: 4,
    getRoomInfo: 5,
    updateRoomInfo: 6,
    closeRoom: 7,
    startedLivestream: 8,
    stoppedLivestream: 9,
    erroredLivestream: 10,
    getStagePeers: 11,
    getStageRequests: 12,
    requestStageAccess: 13,
    cancelStageRequest: 14,
    grantStageAccess: 15,
    denyStageAccess: 16,
    roomPeerCount: 17,
    joinStage: 18,
    leaveStage: 19,
    getConnectedRoomsDump: 20,
    createConnectedRooms: 21,
    deleteConnectedRooms: 22,
    movePeers: 23,
    transferPeer: 24,
    movedPeer: 25,
    connectedRoomsUpdated: 26,
    connectedRoomsDeleted: 27,
};
const chatEventSlugs = {
    getMessages: 0,
    sendMessageToRoom: 1,
    sendMessageToPeers: 2,
    editMessage: 3,
    deleteMessage: 4,
    getPaginatedMessages: 5,
};
const pluginEventSlugs = {
    getPlugins: 0,
    addPlugin: 1,
    enablePluginForRoom: 2,
    disablePluginForPeers: 3,
    enablePluginForPeers: 4,
    disablePluginForRoom: 5,
    removePlugin: 6,
    customPluginEventToRoom: 7,
    customPluginEventToPeers: 8,
    storeInsertKeys: 9,
    storeGetKeys: 10,
    storeDeleteKeys: 11,
    storeDelete: 12,
};
const pollEventSlugs = {
    createPoll: 0,
    getPolls: 1,
    votePoll: 2,
    updatePoll: 3,
};
const mediaEventSlugs = {
    unknown: 0,
    createWebRTCTransport: 1,
    produce: 2,
    consume: 3,
    toggleProducer: 4,
    toggleConsumer: 5,
    closeProducer: 6,
    closeConsumer: 7,
    joinRoom: 16,
    leaveRoom: 17,
    selectedPeer: 18,
    globalPinPeer: 19,
    selfJoinComplete: 20,
    peerJoinedBroadcast: 25,
    peerLeaveBroadcast: 26,
    peerProducerCreateBroadcast: 27,
    peerProducerToggleBroadcast: 28,
    peerProducerCloseBroadcast: 29,
    globalPeerPinBroadcast: 30,
    recordingStartedBroadcast: 31,
    recordingStoppedBroadcast: 32,
    peerDisplayNameEditBroadcast: 33,
    selectedPeerDiff: 40,
    renegotiateSessionDescription: 50,
    kickPeer: 90,
    kickAll: 91,
    changeDisplayName: 92,
    hostControlPeer: 93,
    hostControlAllPeers: 94,
};
function generateSocketEvents(base, slugs) {
    return Object.keys(slugs).reduce((acc, key) => {
        acc[key] = (base << 16) + slugs[key];
        return acc;
    }, {});
}
function generateMediaEvents(slugs) {
    return Object.keys(slugs).reduce((acc, key) => {
        acc[key] = (0x01000000 | slugs[key]);
        return acc;
    }, {});
}
export const roomEvents = generateSocketEvents(roomMessageBase, roomEventSlugs);
export const chatEvents = generateSocketEvents(chatMessageBase, chatEventSlugs);
export const pluginEvents = generateSocketEvents(pluginMessageBase, pluginEventSlugs);
export const pollEvents = generateSocketEvents(pollMessageBase, pollEventSlugs);
export const mediaEvents = generateMediaEvents(mediaEventSlugs);
