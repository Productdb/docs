import { MediaProductionPermissionType, getDefaultPresetV2, } from '@dyteinternals/utils';
import { objectToCamelCase } from '../utils/sanitizer';
import DyteError from './DyteError';
import DyteLogger from './internals/DyteLogger';
export const DEFAULT_PERMISSIONS_CAMEL_CASED = objectToCamelCase(getDefaultPresetV2().permissions);
export default class DytePermissionsPreset {
    #permissions;
    constructor(userPresetResponse) {
        if (!userPresetResponse) {
            DyteLogger.error('DytePermissionsPreset::load_preset_permissions_failed');
            throw new DyteError('Could not load preset permissions.');
        }
        this.#permissions = userPresetResponse;
    }
    static fromResponse(response) {
        return new DytePermissionsPreset(response);
    }
    static default() {
        return new DytePermissionsPreset(DEFAULT_PERMISSIONS_CAMEL_CASED);
    }
    get acceptWaitingRequests() {
        return (this.#permissions?.acceptWaitingRequests
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.acceptWaitingRequests);
    }
    get requestProduceVideo() {
        return (this.#permissions?.media?.video?.canProduce
            === MediaProductionPermissionType.CanRequest);
    }
    get requestProduceAudio() {
        return (this.#permissions?.media?.audio?.canProduce
            === MediaProductionPermissionType.CanRequest);
    }
    get requestProduceScreenshare() {
        return (this.#permissions?.media?.screenshare?.canProduce
            === MediaProductionPermissionType.CanRequest);
    }
    get canAllowParticipantAudio() {
        return (this.#permissions?.canAcceptProductionRequests
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canAcceptProductionRequests);
    }
    get canAllowParticipantScreensharing() {
        return (this.#permissions?.canAcceptProductionRequests
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canAcceptProductionRequests);
    }
    get canAllowParticipantVideo() {
        return (this.#permissions?.canAcceptProductionRequests
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canAcceptProductionRequests);
    }
    get canDisableParticipantAudio() {
        return (this.#permissions?.disableParticipantAudio
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.disableParticipantAudio);
    }
    get canDisableParticipantVideo() {
        return (this.#permissions?.disableParticipantVideo
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.disableParticipantVideo);
    }
    get kickParticipant() {
        return (this.#permissions?.kickParticipant
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.kickParticipant);
    }
    get pinParticipant() {
        return (this.#permissions?.pinParticipant
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.pinParticipant);
    }
    get canRecord() {
        return (this.#permissions?.canRecord
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canRecord);
    }
    get waitingRoomType() {
        return (this.#permissions?.waitingRoomType
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.waitingRoomType);
    }
    get waitingRoomBehaviour() {
        return (this.#permissions?.waitingRoomType
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.waitingRoomType);
    }
    get plugins() {
        return (this.#permissions?.plugins
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.plugins);
    }
    get polls() {
        return (this.#permissions?.polls ?? DEFAULT_PERMISSIONS_CAMEL_CASED.polls);
    }
    get produceVideo() {
        return (this.#permissions?.media?.video?.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.video.canProduce);
    }
    get requestProduce() {
        return (this.#permissions.media.audio.canProduce
            === MediaProductionPermissionType.CanRequest
            || this.#permissions.media.video.canProduce
                === MediaProductionPermissionType.CanRequest
            || this.#permissions.media.screenshare.canProduce
                === MediaProductionPermissionType.CanRequest);
    }
    get canProduceVideo() {
        return (this.#permissions?.media?.video?.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.video.canProduce);
    }
    get produceScreenshare() {
        return (this.#permissions?.media?.screenshare?.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.screenshare.canProduce);
    }
    get canProduceScreenshare() {
        return (this.#permissions?.media?.screenshare?.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.screenshare.canProduce);
    }
    get produceAudio() {
        return (this.#permissions.media.audio.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.audio.canProduce);
    }
    get canProduceAudio() {
        return (this.#permissions.media.audio.canProduce
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.media.audio.canProduce);
    }
    get chatPublic() {
        return (this.#permissions?.chat?.public
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.chat.public);
    }
    get chatPrivate() {
        return (this.#permissions?.chat?.private
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.chat.private);
    }
    get connectedMeetings() {
        return (this.#permissions?.connectedMeetings
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED?.connectedMeetings);
    }
    get hiddenParticipant() {
        return (this.#permissions?.hiddenParticipant
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.hiddenParticipant);
    }
    get showParticipantList() {
        return (this.#permissions.showParticipantList
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.showParticipantList);
    }
    get canChangeParticipantRole() {
        return (this.#permissions?.canChangeParticipantPermissions
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canChangeParticipantPermissions);
    }
    get canChangeParticipantPermissions() {
        return (this.#permissions?.canChangeParticipantPermissions
            ?? DEFAULT_PERMISSIONS_CAMEL_CASED.canChangeParticipantPermissions);
    }
    get canChangeTheme() {
        return false;
    }
    get canPresent() {
        return (this.#permissions.media.audio.canProduce
            === MediaProductionPermissionType.Allowed
            || this.#permissions.media.video.canProduce
                === MediaProductionPermissionType.Allowed
            || this.#permissions.media.screenshare.canProduce
                === MediaProductionPermissionType.Allowed);
    }
    get acceptPresentRequests() {
        return this.#permissions.canAcceptProductionRequests;
    }
    get canEditDisplayName() {
        return this.#permissions.canEditDisplayName ?? false;
    }
    get maxScreenShareCount() {
        return 1;
    }
    get isRecorder() {
        return this.#permissions.isRecorder;
    }
    get canSpotlight() {
        return this.#permissions.canSpotlight;
    }
    get canLivestream() {
        return this.#permissions.canLivestream;
    }
    get isV2() {
        return true;
    }
}
