import DyteEventEmitter from '../../utils/DyteEventEmitter';
import DyteMap, { DyteMapEvents } from './DyteMap';
import DyteParticipant from '../DyteParticipant';
import { ParticipantEvents, ParticipantMapEvents } from '../../utils/DyteEvents';
export default class DyteParticipantMap<T extends Pick<DyteParticipant, 'id' | keyof DyteEventEmitter<ParticipantEvents>> = DyteParticipant> extends DyteMap<ParticipantEvents, T, ParticipantMapEvents> {
    constructor(options?: DyteMapEvents<ParticipantMapEvents>);
    add(participant: T, emitEvent?: boolean): this;
    clear(emitEvent?: boolean, removeListeners?: boolean): void;
    delete(participantId: string, emitEvent?: boolean, removeListeners?: boolean): boolean;
}
