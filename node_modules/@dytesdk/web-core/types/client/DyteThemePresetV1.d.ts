import { ViewType } from '@dyteinternals/utils';
import { PresetMediaConstraints } from '../media-new/interface/web/ConstraintBuilder';
import { PresetPermissionsV1 } from './DytePermissionsPresetV1';
import { MaxVideoStreams } from './DyteThemePreset';
export interface EnabledInner {
    isEnabled: boolean;
}
export interface PresetThemeV1 {
    setupScreen: EnabledInner;
    aloneHere: EnabledInner;
    waitingRoom: {
        isEnabled: boolean;
        enablePreview: boolean;
    };
    controlBar: {
        isEnabled: boolean;
        elements: {
            plugins: boolean;
            screenshare: boolean;
            invite: boolean;
            participants: boolean;
            chat: boolean;
            reactions: boolean;
            polls: boolean;
            fullscreen: boolean;
            layout: boolean;
        };
    };
    header: {
        isEnabled: boolean;
        elements: {
            logo: string;
            timer: boolean;
            title: boolean;
            participantCount: boolean;
            changeLayout: boolean;
        };
    };
    pipMode: boolean;
    autoTune: boolean;
    grid: {
        multi: {
            maxVideoCount: number;
            videoFit: string;
        };
        single: {
            maxVideoCount: number;
            videoFit: string;
        };
        defaultView: string;
    };
    colors: {
        primary: string;
        secondary: string;
        text: string;
        background: string;
        textPrimary: string;
        videoBackground: string;
    };
    controls: {
        pipToggle: boolean;
    };
    plugins: string[];
}
export declare const DEFAULT_THEME_CAMEL_CASED: {
    setupScreen: {
        isEnabled: boolean;
    };
    aloneHere: {
        isEnabled: boolean;
    };
    waitingRoom: {
        isEnabled: boolean;
        enablePreview: boolean;
    };
    controlBar: {
        isEnabled: boolean;
        elements: {
            plugins: boolean;
            screenshare: boolean;
            invite: boolean;
            participants: boolean;
            chat: boolean;
            reactions: boolean;
            polls: boolean;
            fullscreen: boolean;
            layout: boolean;
        };
    };
    header: {
        isEnabled: boolean;
        elements: {
            logo: string;
            timer: boolean;
            title: boolean;
            participantCount: boolean;
            changeLayout: boolean;
        };
    };
    pipMode: boolean;
    autoTune: boolean;
    grid: {
        multi: {
            maxVideoCount: number;
            videoFit: string;
        };
        single: {
            maxVideoCount: number;
            videoFit: string;
        };
        defaultView: string;
    };
    colors: {
        primary: string;
        secondary: string;
        text: string;
        background: string;
        textPrimary: string;
        videoBackground: string;
    };
    controls: {
        pipToggle: boolean;
    };
    plugins: string[];
};
export default class DyteThemePresetV1 {
    #private;
    private constructor();
    static fromResponse(theme: PresetThemeV1): DyteThemePresetV1;
    static default(): DyteThemePresetV1;
    configFromPermissions(permissions: PresetPermissionsV1): void;
    setDisabledPlugins(allPluginIds: string[]): void;
    get setupScreen(): Readonly<EnabledInner>;
    get aloneHere(): Readonly<EnabledInner>;
    get waitingRoom(): Readonly<{
        isEnabled: boolean;
        enablePreview: boolean;
    }>;
    get controlBar(): Readonly<{
        isEnabled: boolean;
        elements: {
            plugins: boolean;
            screenshare: boolean;
            invite: boolean;
            participants: boolean;
            chat: boolean;
            reactions: boolean;
            polls: boolean;
            fullscreen: boolean;
            layout: boolean;
        };
    }>;
    get header(): Readonly<{
        isEnabled: boolean;
        elements: {
            logo: string;
            timer: boolean;
            title: boolean;
            participantCount: boolean;
            changeLayout: boolean;
        };
    }>;
    get pipMode(): Readonly<boolean>;
    get viewType(): Readonly<ViewType>;
    get autoTune(): Readonly<boolean>;
    get grid(): Readonly<{
        multi: {
            maxVideoCount: number;
            videoFit: string;
        };
        single: {
            maxVideoCount: number;
            videoFit: string;
        };
        defaultView: string;
    }>;
    get maxVideoStreams(): Readonly<MaxVideoStreams>;
    get maxScreenShareCount(): Readonly<number>;
    get colors(): Readonly<{
        primary: string;
        secondary: string;
        text: string;
        background: string;
        textPrimary: string;
        videoBackground: string;
    }>;
    get controls(): Readonly<{
        pipToggle: boolean;
    }>;
    get plugins(): Readonly<string[]>;
    get disabledPlugins(): Readonly<string[]>;
    get mediaConstraints(): Readonly<PresetMediaConstraints>;
    get isV2(): false;
}
