export declare class TimedPromise<T> extends Promise<T> {
    static withTimeout<T>(promise: TimedPromise<T> | Promise<T>, timeout: number, msg?: string | Error, onTimeout?: () => void): Promise<T>;
    static all<T>(promises: Array<TimedPromise<T>> | Array<Promise<T>>, ignoreError?: boolean): Promise<unknown[]>;
    constructor(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void, timeout: number, message?: string | Error, onTimeout?: () => void);
}
export default TimedPromise;
