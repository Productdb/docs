import { opentelemetryProto } from './export-types';
import { ExportResult, OTLPExporterConfigBase, OTLPExporterError, ReadableSpan } from './types';
export declare class OTLPTraceExporter {
    protected _headers: Record<string, string>;
    readonly url: string;
    readonly hostname: string | undefined;
    protected _isShutdown: boolean;
    private _shuttingDownPromise;
    protected _sendingPromises: Promise<unknown>[];
    constructor(config: OTLPExporterConfigBase);
    onInit(): void;
    onShutdown(): void;
    shutdown(): Promise<void>;
    convert(spans: ReadableSpan[]): opentelemetryProto.collector.trace.v1.ExportTraceServiceRequest;
    getDefaultUrl(config: OTLPExporterConfigBase): string;
    send(items: ReadableSpan[], onSuccess: () => void, onError: (error: OTLPExporterError) => void): void;
    export(items: ReadableSpan[], resultCallback: (result: ExportResult) => void): void;
    private _export;
}
