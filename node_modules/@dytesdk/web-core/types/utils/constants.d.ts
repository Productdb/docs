import { Device } from '@dyteinternals/mediasoup-client';
import { ViewType } from '@dyteinternals/utils';
import { DytePluginResponse } from '../client/DytePlugin';
import { ControllerOptions } from '../controllers/Controller';
import { SocketServiceCapabilities } from '../socketService/SocketService';
interface ConstantsType {
    isV2AuthToken: boolean;
    meetingId: string | null;
    overrides: {
        [key: string]: string | boolean;
    };
    roomNodeOptions: ControllerOptions & {
        meetingTitle: string;
        roomNodeUrl: string;
    };
}
declare const constants: ConstantsType;
export declare const sampleLocalhostPlugin: DytePluginResponse;
export declare function setIsV2AuthToken(authToken: string, roomName?: string): void;
export declare function setOverrides(overrides: {
    [key: string]: boolean | string;
}): void;
export declare function getOverride(key: string): string | boolean;
export declare function setRoomNodeOptions(options: ControllerOptions & {
    meetingTitle: string;
    roomNodeUrl: string;
    device?: Device;
}): void;
export declare function isSocketServiceChat(viewType: ViewType, capabilities: SocketServiceCapabilities): boolean;
export declare function isSocketServicePolls(viewType: ViewType, capabilities: SocketServiceCapabilities): boolean;
export declare function isSocketServicePlugins(viewType: ViewType, capabilities: SocketServiceCapabilities): boolean;
export declare function shouldConnectToSocketService(viewType: ViewType, capabilities: SocketServiceCapabilities): boolean;
export default constants;
