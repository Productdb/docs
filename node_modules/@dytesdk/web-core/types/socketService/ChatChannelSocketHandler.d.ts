import { GetChatChannelResponse } from '@dyte-in/proto-entities';
import SocketService from './SocketService';
import { Message } from '../client/DyteChat';
declare type ChatChannelSocketMessage = GetChatChannelResponse;
export interface ChatChannel {
    id: string;
    displayName: string;
    displayPictureUrl?: string;
    visibility?: string;
    isDirectMessage?: boolean;
    latestMessage?: Message;
    unreadCount: number;
}
export interface ChannelMember {
    id: string;
    customParticipantId: string;
    name?: string;
    picture?: string;
}
export interface UpdateChannelRequestPayload {
    memberUserIds: string[];
    displayName: string;
    displayPictureUrl: string;
    visibility: string;
}
export default class ChatChannelSocketHandler {
    #private;
    constructor(socketService: SocketService);
    createChannel(displayName: string, targetUserIds: string[], displayPictureUrl?: string, visibility?: string, isDirectMessage?: boolean): Promise<ChatChannel>;
    updateChannel(channelId: string, payload: UpdateChannelRequestPayload): Promise<ChatChannel[]>;
    private static formatChannel;
    getAllChannels(): Promise<ChatChannel[]>;
    getChannelMembers(channelId: string): Promise<ChannelMember[]>;
    on(event: number, handler: (socketMessage: ChatChannelSocketMessage) => void): void;
}
export {};
