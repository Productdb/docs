export declare const roomEvents: {
    getPeerInfo: number;
    updatePeerInfo: number;
    getRoomPeersInfo: number;
    joinRoom: number;
    leaveRoom: number;
    getRoomInfo: number;
    updateRoomInfo: number;
    closeRoom: number;
    startedLivestream: number;
    stoppedLivestream: number;
    erroredLivestream: number;
    getStagePeers: number;
    getStageRequests: number;
    requestStageAccess: number;
    cancelStageRequest: number;
    grantStageAccess: number;
    denyStageAccess: number;
    roomPeerCount: number;
    joinStage: number;
    leaveStage: number;
    getConnectedRoomsDump: number;
    createConnectedRooms: number;
    deleteConnectedRooms: number;
    movePeers: number;
    transferPeer: number;
    movedPeer: number;
    connectedRoomsUpdated: number;
    connectedRoomsDeleted: number;
    getAllAddedParticipants: number;
};
export declare const chatEvents: {
    getMessages: number;
    sendMessageToRoom: number;
    sendMessageToPeers: number;
    editMessage: number;
    deleteMessage: number;
    getPaginatedMessages: number;
    sendMessageToChannel: number;
    searchChannelMessages: number;
    getLatestMessageAndUnreadCounts: number;
};
export declare const pluginEvents: {
    getPlugins: number;
    addPlugin: number;
    enablePluginForRoom: number;
    disablePluginForPeers: number;
    enablePluginForPeers: number;
    disablePluginForRoom: number;
    removePlugin: number;
    customPluginEventToRoom: number;
    customPluginEventToPeers: number;
    storeInsertKeys: number;
    storeGetKeys: number;
    storeDeleteKeys: number;
    storeDelete: number;
};
export declare const pollEvents: {
    createPoll: number;
    getPolls: number;
    votePoll: number;
    updatePoll: number;
};
export declare const chatChannelEvents: {
    createChatChannel: number;
    getChatChannel: number;
    getAllChatChannels: number;
    getChannelMembers: number;
    updateChatChannel: number;
};
export declare const mediaEvents: {
    unknown: number;
    createWebRTCTransport: number;
    produce: number;
    consume: number;
    toggleProducer: number;
    toggleConsumer: number;
    closeProducer: number;
    closeConsumer: number;
    joinRoom: number;
    leaveRoom: number;
    selectedPeer: number;
    globalPinPeer: number;
    selfJoinComplete: number;
    peerJoinedBroadcast: number;
    peerLeaveBroadcast: number;
    peerProducerCreateBroadcast: number;
    peerProducerToggleBroadcast: number;
    peerProducerCloseBroadcast: number;
    globalPeerPinBroadcast: number;
    recordingStartedBroadcast: number;
    recordingStoppedBroadcast: number;
    peerDisplayNameEditBroadcast: number;
    selectedPeerDiff: number;
    renegotiateSessionDescription: number;
    errorResponse: number;
    kickPeer: number;
    kickAll: number;
    changeDisplayName: number;
    hostControlPeer: number;
    hostControlAllPeers: number;
};
export declare const isMediaEvent: (event: number) => number;
