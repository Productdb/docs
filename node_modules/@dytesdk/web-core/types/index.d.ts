import DyteClient from './client/DyteClient';
import type { ControllerOptions } from './controllers/Controller';
import type IDyteParticipant from './client/DyteParticipant';
import type IDyteParticipants from './client/DyteParticipants';
import type IDyteParticipantMap from './client/map/DyteParticipantMap';
import type IDytePlugin from './client/DytePlugin';
import type IDytePlugins from './client/DytePlugins';
import type IDytePluginMap from './client/map/DytePluginMap';
import type IDyteMeta from './client/DyteMeta';
import type IDyteSelf from './client/DyteSelf';
import type IDyteChat from './client/DyteChat';
import type IDytePolls from './client/DytePolls';
import type IDyteRecording from './client/DyteRecording';
import type IDyteSpotlight from './client/DyteSpotlight';
import type IDyteLivestream from './client/DyteLivestream';
import type IDytePermissionsPresetV1 from './client/DytePermissionsPresetV1';
import type IDytePermissionsPreset from './client/DytePermissionsPreset';
import type { MicMetadata as IMicMetadata } from './troubleshooter/tests/mic';
import DyteTelemetry from './utils/opentelemetry';
export declare type DyteConfigOptions = Omit<ControllerOptions, 'peerId'>;
export type { MediaPermission } from './utils/media';
export type { WebinarStageStatus } from './client/DyteSelf';
export declare type DyteParticipant = Readonly<IDyteParticipant>;
export declare type DyteParticipants = Readonly<IDyteParticipants>;
export declare type DyteParticipantMap = Readonly<IDyteParticipantMap>;
export declare type DytePlugin = Readonly<IDytePlugin>;
export declare type DytePlugins = Readonly<IDytePlugins>;
export declare type DytePluginMap = Readonly<IDytePluginMap>;
export declare type DyteMeta = Readonly<IDyteMeta>;
export declare type DyteSelf = Readonly<IDyteSelf>;
export declare type DyteChat = Readonly<IDyteChat>;
export declare type DytePolls = Readonly<IDytePolls>;
export declare type DyteRecording = Readonly<IDyteRecording>;
export declare type DyteSpotlight = Readonly<IDyteSpotlight>;
export declare type DyteLivestream = Readonly<IDyteLivestream>;
export declare type DytePermissionsPresetV1 = Readonly<IDytePermissionsPresetV1>;
export declare type DytePermissionsPreset = Readonly<IDytePermissionsPreset>;
export declare type MicMetadata = Readonly<IMicMetadata>;
declare type DyteType = {
    callStats?: unknown;
    DyteTelemetry?: typeof DyteTelemetry;
};
declare global {
    interface Navigator {
        RNLocalMediaHandlerImpl?: any;
        isReactNative?: boolean;
    }
    interface Window {
        Dyte?: DyteType;
        MediaStreamTrackProcessor?: any;
        MediaStreamTrackGenerator?: any;
        TransformStream?: any;
    }
}
export default DyteClient;
