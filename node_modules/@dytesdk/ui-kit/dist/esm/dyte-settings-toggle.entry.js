import { r as registerInstance, c as createEvent, h, H as Host } from './index-926e26e8.js';
import { d as defaultIconPack } from './default-icon-pack-307ffa7c.js';
import { u as useLanguage } from './index-7b89c939.js';
import { s as state } from './store-8f4d7acc.js';
import './user-prefs-47572e95.js';

const dyteSettingsToggleCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}";

const DyteSettingsToggle = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.variant = 'button';
    this.states = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  toggleSettings() {
    var _a;
    this.stateUpdate.emit({
      activeSettings: !((_a = this.states) === null || _a === void 0 ? void 0 : _a.activeSettings),
      activeMoreMenu: false,
    });
    state.activeSettings = !state.activeSettings;
    state.activeMoreMenu = false;
  }
  render() {
    const text = this.t('settings');
    return (h(Host, { title: text }, h("dyte-controlbar-button", { part: "controlbar-button", size: this.size, iconPack: this.iconPack, t: this.t, onClick: () => this.toggleSettings(), icon: this.iconPack.settings, label: text, variant: this.variant })));
  }
};
DyteSettingsToggle.style = dyteSettingsToggleCss;

export { DyteSettingsToggle as dyte_settings_toggle };
