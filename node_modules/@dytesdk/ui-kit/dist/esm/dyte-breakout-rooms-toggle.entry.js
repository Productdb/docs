import { r as registerInstance, c as createEvent, h, H as Host } from './index-926e26e8.js';
import { d as defaultIconPack } from './default-icon-pack-307ffa7c.js';
import { u as useLanguage } from './index-7b89c939.js';
import { s as state } from './store-8f4d7acc.js';
import { a as canToggleBreakout } from './breakout-rooms-dea0806e.js';
import './user-prefs-47572e95.js';
import './flags-f14ed3df.js';
import './livestream-1a40fc8d.js';

const dyteBreakoutRoomsToggleCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}";

const DyteBreakoutRoomsToggle = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.breakoutRoomToggle = () => {
      var _a, _b, _c;
      const mode = this.meeting.connectedMeetings.isActive ? 'view' : 'create';
      this.stateUpdate.emit({
        activeBreakoutRoomsManager: {
          active: !((_b = (_a = this.states) === null || _a === void 0 ? void 0 : _a.activeBreakoutRoomsManager) === null || _b === void 0 ? void 0 : _b.active),
          mode,
        },
      });
      state.activeBreakoutRoomsManager = {
        active: !((_c = state.activeBreakoutRoomsManager) === null || _c === void 0 ? void 0 : _c.active),
        mode,
      };
    };
    this.variant = 'button';
    this.meeting = undefined;
    this.states = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  render() {
    if (!canToggleBreakout(this.meeting))
      return;
    return (h(Host, { title: this.t('breakout_rooms') }, h("dyte-controlbar-button", { part: "controlbar-button", size: this.size, iconPack: this.iconPack, t: this.t, onClick: this.breakoutRoomToggle, icon: this.iconPack.breakout_rooms, label: this.t('breakout_rooms'), variant: this.variant })));
  }
};
DyteBreakoutRoomsToggle.style = dyteBreakoutRoomsToggleCss;

export { DyteBreakoutRoomsToggle as dyte_breakout_rooms_toggle };
