import { r as registerInstance, c as createEvent, h, H as Host } from './index-926e26e8.js';
import { d as defaultConfig } from './default-ui-config-f87e0ba7.js';
import { d as defaultIconPack } from './default-icon-pack-307ffa7c.js';
import { u as useLanguage } from './index-7b89c939.js';
import { R as Render } from './index-9bb85c23.js';
import { s as state } from './store-8f4d7acc.js';
import './user-prefs-47572e95.js';

const dyteJoinStageCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.scrollbar{scrollbar-width:thin;scrollbar-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))\n    var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar{height:var(--dyte-space-1\\.5, 6px);width:var(--dyte-space-1\\.5, 6px);border-radius:9999px;background-color:var(--dyte-scrollbar-background, transparent)}.scrollbar::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--dyte-scrollbar-color, rgb(var(--dyte-colors-background-600, 60 60 60)))}:host::-webkit-scrollbar{width:var(--dyte-space-1\\.5, 6px);border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity))}:host::-webkit-scrollbar-thumb{border-radius:var(--dyte-border-radius-md, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity))}:host(.stage){box-sizing:border-box;display:block;width:512px;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));padding:var(--dyte-space-6, 24px);-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:auto;border-radius:var(--dyte-border-radius-md, 8px);line-height:1.25}:host(.stage) dyte-participant-setup{display:flex;flex:1 1 0%;align-items:center;justify-content:space-around;margin-left:auto;margin-right:auto}:host(.stage) .container dyte-button{flex-grow:1;padding:var(--dyte-space-1, 4px);width:50%}:host(.stage) .container dyte-button:nth-child(1){margin-right:var(--dyte-space-1\\.5, 6px)}:host(.stage) .container dyte-button:nth-child(2){margin-left:var(--dyte-space-1\\.5, 6px)}:host(.stage) h2{font-size:24px;font-weight:500;color:rgb(var(--dyte-colors-text-1000, 255 255 255))}:host(.stage) header{padding-left:var(--dyte-space-4, 16px);padding-right:var(--dyte-space-4, 16px)}:host(.stage) .summary{padding:var(--dyte-space-4, 16px)}.deny-access{--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity))}.container{width:100%;max-width:1080px;display:flex;flex:1 1 0%;align-items:center;justify-content:space-around}header{display:flex;align-items:center;justify-content:space-between}";

const DyteJoinStage = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.joinStage = createEvent(this, "dyteJoinStage", 7);
    this.leaveStage = createEvent(this, "dyteLeaveStage", 7);
    this.meeting = undefined;
    this.config = defaultConfig;
    this.states = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.dataConfig = {
      title: this.t('stage.join_title'),
      label: {
        accept: this.t('stage.join_confirm'),
        reject: this.t('stage.join_cancel'),
      },
      description: this.t('stage.join_summary'),
    };
    this.isLoading = false;
  }
  render() {
    var _a, _b;
    const defaults = {
      meeting: this.meeting,
      size: this.size,
      states: this.states || state,
      config: this.config,
      iconPack: this.iconPack,
      t: this.t,
    };
    return (h(Host, { class: { stage: true } }, h("header", null, h("h2", null, this.dataConfig.title)), h(Render, { element: "dyte-participant-setup", defaults: defaults, props: { participant: (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self, size: 'md' }, childProps: { participant: (_b = this.meeting) === null || _b === void 0 ? void 0 : _b.self, size: 'md' }, deepProps: true }), h("div", { class: "summary" }, this.dataConfig.description), h("div", { class: "container" }, h("dyte-button", { variant: "secondary", onClick: () => this.leaveStage.emit(), title: this.dataConfig.label.reject, iconPack: this.iconPack, t: this.t }, this.dataConfig.label.reject), h("dyte-button", { onClick: () => {
        if (this.isLoading)
          return;
        this.isLoading = true;
        this.joinStage.emit();
      }, title: this.dataConfig.label.accept, iconPack: this.iconPack, t: this.t }, this.isLoading ? (h("dyte-icon", { icon: this.iconPack.spinner })) : (this.dataConfig.label.accept)))));
  }
};
DyteJoinStage.style = dyteJoinStageCss;

const dyteOverlayModalCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;height:100%;width:100%;flex-direction:column;align-items:center;justify-content:center;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / 0.6);position:fixed;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);z-index:50}dyte-icon{height:var(--dyte-space-20, 80px)}h2{margin:var(--dyte-space-2, 8px);font-weight:500}p{margin:var(--dyte-space-0, 0px);font-size:16px}";

const DyteOverlayModal = class {
  constructor(hostRef) {
    registerInstance(this, hostRef);
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.meeting = undefined;
    this.states = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  connectedCallback() {
    if (this.states.activeOverlayModal.timeout) {
      setTimeout(() => {
        this.stateUpdate.emit({ activeOverlayModal: { active: false } });
        state.activeOverlayModal = { active: false };
      }, this.states.activeOverlayModal.timeout);
    }
  }
  componentDidLoad() { }
  disconnectedCallback() { }
  render() {
    return (h(Host, null, h("dyte-icon", { icon: this.states.activeOverlayModal.icon, iconPack: this.iconPack, t: this.t }), h("h2", null, this.states.activeOverlayModal.title), h("p", null, this.states.activeOverlayModal.description)));
  }
};
DyteOverlayModal.style = dyteOverlayModalCss;

export { DyteJoinStage as dyte_join_stage, DyteOverlayModal as dyte_overlay_modal };
