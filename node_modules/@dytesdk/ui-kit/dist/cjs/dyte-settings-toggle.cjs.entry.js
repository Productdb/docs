'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-f5ba2db8.js');
const defaultIconPack = require('./default-icon-pack-ddb6b86f.js');
const index$1 = require('./index-d63f2c88.js');
const store = require('./store-7f623fdb.js');
require('./user-prefs-cefc791a.js');

const dyteSettingsToggleCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block}";

const DyteSettingsToggle = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.stateUpdate = index.createEvent(this, "dyteStateUpdate", 7);
    this.variant = 'button';
    this.states = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack.defaultIconPack;
    this.t = index$1.useLanguage();
  }
  toggleSettings() {
    var _a;
    this.stateUpdate.emit({
      activeSettings: !((_a = this.states) === null || _a === void 0 ? void 0 : _a.activeSettings),
      activeMoreMenu: false,
    });
    store.state.activeSettings = !store.state.activeSettings;
    store.state.activeMoreMenu = false;
  }
  render() {
    const text = this.t('settings');
    return (index.h(index.Host, { title: text }, index.h("dyte-controlbar-button", { part: "controlbar-button", size: this.size, iconPack: this.iconPack, t: this.t, onClick: () => this.toggleSettings(), icon: this.iconPack.settings, label: text, variant: this.variant })));
  }
};
DyteSettingsToggle.style = dyteSettingsToggleCss;

exports.dyte_settings_toggle = DyteSettingsToggle;
