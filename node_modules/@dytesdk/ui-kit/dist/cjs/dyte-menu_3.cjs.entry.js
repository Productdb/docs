'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-f5ba2db8.js');
const floatingUi_dom_esm = require('./floating-ui.dom.esm-171ae816.js');
const defaultIconPack = require('./default-icon-pack-ddb6b86f.js');
const index$1 = require('./index-d63f2c88.js');

const dyteMenuCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{position:relative;display:inline-block;color:rgb(var(--dyte-colors-text-1000, 255 255 255))}#menu-list{position:absolute;z-index:20;display:none}";

const DyteMenu = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.clickedThis = false;
    this.handleOutsideClick = () => {
      // handles clicking on other menu triggers
      if (!this.clickedThis) {
        // if other trigger is clicked, hide this menu-list
        this.menuListEl.style.display = 'none';
      }
      // reset the value
      this.clickedThis = false;
    };
    this.size = undefined;
    this.placement = 'bottom-end';
    this.offset = 10;
    this.iconPack = defaultIconPack.defaultIconPack;
    this.t = index$1.useLanguage();
  }
  componentDidLoad() {
    document.addEventListener('click', this.handleOutsideClick);
    this.update();
  }
  disconnectedCallback() {
    document.removeEventListener('click', this.handleOutsideClick);
  }
  update() {
    floatingUi_dom_esm.computePosition(this.triggerEl, this.menuListEl, {
      placement: this.placement,
      middleware: [floatingUi_dom_esm.offset(this.offset), floatingUi_dom_esm.flip(), floatingUi_dom_esm.shift({ padding: 5 })],
    }).then(({ x, y }) => {
      Object.assign(this.menuListEl.style, {
        left: `${x}px`,
        top: `${y}px`,
      });
    });
  }
  render() {
    return (index.h(index.Host, null, index.h("span", { id: "trigger", ref: (el) => (this.triggerEl = el), onClick: () => {
        this.clickedThis = true;
        if (this.menuListEl.style.display !== 'block') {
          this.menuListEl.style.display = 'block';
          this.update();
        }
        else {
          this.menuListEl.style.display = 'none';
        }
      } }, index.h("slot", { name: "trigger" })), index.h("span", { part: "menu-list", id: "menu-list", ref: (el) => (this.menuListEl = el) }, index.h("slot", null))));
  }
};
DyteMenu.style = dyteMenuCss;

const dyteMenuItemCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;align-items:center;padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);cursor:pointer;transition-property:color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms;color:rgb(var(--dyte-colors-text-1000, 255 255 255));font-size:14px}::slotted([slot='start']){margin-right:var(--dyte-space-2, 8px)}::slotted([slot='end']){margin-left:var(--dyte-space-2, 8px)}:host(:hover){--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity))}:host(.red){--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}";

const DyteMenuItem = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.size = undefined;
    this.iconPack = defaultIconPack.defaultIconPack;
    this.t = index$1.useLanguage();
  }
  render() {
    return (index.h(index.Host, null, index.h("slot", { name: "start" }), index.h("slot", null), index.h("slot", { name: "end" })));
  }
};
DyteMenuItem.style = dyteMenuItemCss;

const dyteMenuListCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;width:-moz-max-content;width:max-content;flex-direction:column;padding-top:var(--dyte-space-2, 8px);padding-bottom:var(--dyte-space-2, 8px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255));overflow:hidden;border-radius:var(--dyte-border-radius-sm, 4px);--tw-shadow:0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)}";

const DyteMenuList = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.iconPack = defaultIconPack.defaultIconPack;
    this.t = index$1.useLanguage();
  }
  render() {
    return (index.h(index.Host, null, index.h("slot", null)));
  }
};
DyteMenuList.style = dyteMenuListCss;

exports.dyte_menu = DyteMenu;
exports.dyte_menu_item = DyteMenuItem;
exports.dyte_menu_list = DyteMenuList;
