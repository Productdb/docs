'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-f5ba2db8.js');
const defaultIconPack = require('./default-icon-pack-ddb6b86f.js');
const index$1 = require('./index-d63f2c88.js');
const store = require('./store-7f623fdb.js');
require('./user-prefs-cefc791a.js');

const dyteAiToggleCss = ":host{display:block}";

const DyteAiToggle = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.stateUpdate = index.createEvent(this, "dyteStateUpdate", 7);
    this.variant = 'button';
    this.states = undefined;
    this.meeting = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack.defaultIconPack;
    this.t = index$1.useLanguage();
    this.aiActive = false;
  }
  statesChanged(s) {
    const states = s || store.state;
    this.aiActive = states.activeAI;
  }
  toggleAI() {
    const states = this.states || store.state;
    this.aiActive = !(states === null || states === void 0 ? void 0 : states.activeAI);
    this.stateUpdate.emit({
      activeAI: this.aiActive,
      activeMoreMenu: false,
      activeSidebar: false,
    });
    store.state.activeAI = this.aiActive;
    store.state.activeMoreMenu = false;
    store.state.activeSidebar = false;
  }
  render() {
    var _a, _b;
    const text = this.t('ai.meeting_ai');
    if (!((_b = (_a = this.meeting) === null || _a === void 0 ? void 0 : _a.self) === null || _b === void 0 ? void 0 : _b.permissions).transcriptionEnabled) {
      return null;
    }
    return (index.h(index.Host, { title: text }, index.h("dyte-controlbar-button", { part: "controlbar-button", size: this.size, iconPack: this.iconPack, t: this.t, class: { active: this.aiActive }, onClick: () => this.toggleAI(), icon: this.iconPack.meeting_ai, label: text, variant: this.variant, brandIcon: true })));
  }
  static get watchers() { return {
    "states": ["statesChanged"]
  }; }
};
DyteAiToggle.style = dyteAiToggleCss;

exports.dyte_ai_toggle = DyteAiToggle;
