import { Host, h } from '@stencil/core';
import { elapsedDuration, formatDateTime } from '../../utils/date';
import { defaultIconPack } from '../../exports';
export class DyteMessageView {
  constructor() {
    this.actions = [];
    this.variant = 'bubble';
    this.viewType = 'outgoing';
    this.avatarUrl = undefined;
    this.hideAvatar = false;
    this.authorName = undefined;
    this.hideAuthorName = false;
    this.hideMetadata = false;
    this.time = undefined;
    this.iconPack = defaultIconPack;
  }
  renderActions() {
    return (h("dyte-menu", { placement: "top-end", offset: 1 }, h("button", { slot: "trigger", class: "actions" }, h("dyte-icon", { icon: this.iconPack.chevron_down })), h("dyte-menu-list", null, this.actions.map((action) => (h("dyte-menu-item", { onClick: () => this.onAction.emit(action.id) }, action.icon && h("dyte-icon", { icon: action.icon, slot: "start" }), action.label))))));
  }
  render() {
    return (h(Host, null, h("div", { class: { 'message-wrapper': true, [this.viewType]: true } }, !this.hideAvatar && (h("aside", { class: "avatar", part: "avatar" }, h("dyte-avatar", { participant: { name: this.authorName, picture: this.avatarUrl }, size: "sm" }))), h("div", { class: "message", part: "message" }, !this.hideAuthorName && h("div", { class: "header" }, this.authorName), h("div", { class: { body: true, bubble: this.variant === 'bubble' } }, h("slot", null), !this.hideMetadata && !!this.time && (h("div", { class: "metadata", title: formatDateTime(this.time) }, elapsedDuration(this.time, new Date(Date.now())))), this.actions.length !== 0 && this.renderActions())))));
  }
  static get is() { return "dyte-message-view"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() {
    return {
      "$": ["dyte-message-view.css"]
    };
  }
  static get styleUrls() {
    return {
      "$": ["dyte-message-view.css"]
    };
  }
  static get properties() {
    return {
      "actions": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "MessageAction[]",
          "resolved": "MessageAction[]",
          "references": {
            "MessageAction": {
              "location": "local"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "List of actions to show in menu"
        },
        "defaultValue": "[]"
      },
      "variant": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'plain' | 'bubble'",
          "resolved": "\"bubble\" | \"plain\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Appearance"
        },
        "attribute": "variant",
        "reflect": false,
        "defaultValue": "'bubble'"
      },
      "viewType": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "'incoming' | 'outgoing'",
          "resolved": "\"incoming\" | \"outgoing\"",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Render"
        },
        "attribute": "view-type",
        "reflect": false,
        "defaultValue": "'outgoing'"
      },
      "avatarUrl": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Avatar image url"
        },
        "attribute": "avatar-url",
        "reflect": false
      },
      "hideAvatar": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Hides avatar"
        },
        "attribute": "hide-avatar",
        "reflect": false,
        "defaultValue": "false"
      },
      "authorName": {
        "type": "string",
        "mutable": false,
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Author display label"
        },
        "attribute": "author-name",
        "reflect": false
      },
      "hideAuthorName": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Hides author display label"
        },
        "attribute": "hide-author-name",
        "reflect": false,
        "defaultValue": "false"
      },
      "hideMetadata": {
        "type": "boolean",
        "mutable": false,
        "complexType": {
          "original": "boolean",
          "resolved": "boolean",
          "references": {}
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Hides metadata (time)"
        },
        "attribute": "hide-metadata",
        "reflect": false,
        "defaultValue": "false"
      },
      "time": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "Date",
          "resolved": "Date",
          "references": {
            "Date": {
              "location": "global"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Time when message was sent"
        }
      },
      "iconPack": {
        "type": "unknown",
        "mutable": false,
        "complexType": {
          "original": "IconPack",
          "resolved": "{ people: string; people_checked: string; chat: string; poll: string; participants: string; rocket: string; call_end: string; share: string; mic_on: string; mic_off: string; video_on: string; video_off: string; share_screen_start: string; share_screen_stop: string; share_screen_person: string; clock: string; dismiss: string; send: string; search: string; more_vertical: string; chevron_down: string; chevron_up: string; chevron_left: string; chevron_right: string; settings: string; wifi: string; speaker: string; speaker_off: string; download: string; full_screen_maximize: string; full_screen_minimize: string; copy: string; attach: string; image: string; emoji_multiple: string; image_off: string; disconnected: string; wand: string; recording: string; subtract: string; stop_recording: string; warning: string; pin: string; pin_off: string; spinner: string; breakout_rooms: string; add: string; shuffle: string; edit: string; delete: string; back: string; save: string; web: string; checkmark: string; spotlight: string; join_stage: string; leave_stage: string; pip_off: string; pip_on: string; signal_1: string; signal_2: string; signal_3: string; signal_4: string; signal_5: string; start_livestream: string; stop_livestream: string; viewers: string; debug: string; info: string; devices: string; horizontal_dots: string; ai_sparkle: string; meeting_ai: string; create_channel: string; create_channel_illustration: string; captionsOn: string; captionsOff: string; }",
          "references": {
            "IconPack": {
              "location": "import",
              "path": "../../exports"
            }
          }
        },
        "required": false,
        "optional": false,
        "docs": {
          "tags": [],
          "text": "Icon pack"
        },
        "defaultValue": "defaultIconPack"
      }
    };
  }
  static get events() {
    return [{
        "method": "onAction",
        "name": "action",
        "bubbles": true,
        "cancelable": true,
        "composed": true,
        "docs": {
          "tags": [],
          "text": "action event"
        },
        "complexType": {
          "original": "string",
          "resolved": "string",
          "references": {}
        }
      }];
  }
}
