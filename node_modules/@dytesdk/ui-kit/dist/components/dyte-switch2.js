import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';

const dyteSwitchCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{box-sizing:border-box;display:inline-flex;height:var(--dyte-space-6, 24px);width:var(--dyte-space-10, 40px);align-items:center;padding:var(--dyte-space-1, 4px);border-radius:9999px;background-color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52));cursor:pointer}.switch{box-sizing:border-box;height:var(--dyte-space-4, 16px);width:var(--dyte-space-4, 16px);background-color:rgb(var(--dyte-colors-text-on-brand-1000, var(--dyte-colors-text-1000, 255 255 255)));border-radius:9999px;transition-property:var(--dyte-transition-property, all);transition-duration:200ms}:host(.checked){--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-bg-opacity))}:host(.checked) .switch{transform:translateX(100%)}:host([readonly]),:host([disabled]){cursor:not-allowed;opacity:0.6}";

const DyteSwitch = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.dyteChange = createEvent(this, "dyteChange", 4);
    this.onClick = () => {
      if (!this.readonly && !this.disabled) {
        this.checked = !this.checked;
      }
    };
    this.onKeyPress = (e) => {
      if (this.readonly)
        return;
      switch (e.key) {
        // Enter or Space
        case 'Enter':
        case ' ':
          this.checked = !this.checked;
          break;
      }
    };
    this.checked = false;
    this.readonly = false;
    this.disabled = false;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  connectedCallback() {
    this.checkedChange(this.checked);
  }
  checkedChange(checked) {
    this.checked = checked;
    this.dyteChange.emit(checked);
  }
  render() {
    return (h(Host, { role: "switch", tabIndex: this.disabled && 0, "aria-readonly": this.readonly, "aria-checked": this.checked, "aria-disabled": this.disabled, class: { checked: this.checked }, onClick: this.onClick, onKeyPress: this.onKeyPress }, h("div", { class: "switch", part: "switch" })));
  }
  static get watchers() { return {
    "checked": ["checkedChange"]
  }; }
  static get style() { return dyteSwitchCss; }
}, [1, "dyte-switch", {
    "checked": [1028],
    "readonly": [4],
    "disabled": [516],
    "iconPack": [16],
    "t": [16]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-switch"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-switch":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteSwitch);
      }
      break;
  } });
}

export { DyteSwitch as D, defineCustomElement as d };
