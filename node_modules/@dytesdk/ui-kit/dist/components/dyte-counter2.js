import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import './store.js';
import './breakout-rooms-manager.js';
import './livestream.js';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';
import './user-prefs.js';
import { d as defineCustomElement$2 } from './dyte-button2.js';
import { d as defineCustomElement$1 } from './dyte-icon2.js';

const dyteCounterCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:flex;flex-direction:row;align-items:center;justify-content:center;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));width:-moz-fit-content;width:fit-content;border-radius:var(--dyte-border-radius-sm, 4px);padding:var(--dyte-space-1, 4px)}p{margin:var(--dyte-space-0, 0px);padding-left:var(--dyte-space-2, 8px);padding-right:var(--dyte-space-2, 8px)}input{margin:var(--dyte-space-0, 0px);width:var(--dyte-space-6, 24px);padding:var(--dyte-space-2, 8px);border-width:var(--dyte-border-width-sm, 1px);border-style:solid;border-color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity));text-align:center;color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88));border-radius:var(--dyte-border-radius-sm, 4px);font-size:16px;outline:2px solid transparent;outline-offset:2px;transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{margin:var(--dyte-space-0, 0px);appearance:none;-webkit-appearance:none}input[type='number']{-moz-appearance:textfield}";

const DyteCounter = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.onChange = createEvent(this, "valueChange", 7);
    this.input = '1';
    this.size = undefined;
    this.value = undefined;
    this.minValue = 0;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  connectedCallback() {
    this.watchStateHandler(this.input);
    this.input = this.value.toString();
  }
  watchStateHandler(input) {
    this.onChange.emit(input);
  }
  increment() {
    this.input = Math.max(parseInt(this.input) + 1, this.minValue).toString();
  }
  decrement() {
    this.input = Math.max(this.minValue, parseInt(this.input) - 1).toString();
  }
  render() {
    return (h(Host, null, h("dyte-button", { kind: "icon", variant: "ghost", onClick: () => this.decrement(), iconPack: this.iconPack, t: this.t }, h("dyte-icon", { icon: this.iconPack.subtract, iconPack: this.iconPack, t: this.t })), h("input", { type: "number", value: this.input, min: this.minValue, onInput: (e) => {
        const val = parseInt(e.target.value, 10);
        if (isNaN(val) || val < this.minValue) {
          this.input = this.minValue.toString();
        }
        else {
          this.input = val.toString();
        }
      } }), h("dyte-button", { kind: "icon", variant: "ghost", onClick: () => this.increment(), iconPack: this.iconPack, t: this.t }, h("dyte-icon", { icon: this.iconPack.add, iconPack: this.iconPack, t: this.t }))));
  }
  static get watchers() { return {
    "input": ["watchStateHandler"]
  }; }
  static get style() { return dyteCounterCss; }
}, [1, "dyte-counter", {
    "size": [513],
    "value": [2],
    "minValue": [2, "min-value"],
    "iconPack": [16],
    "t": [16],
    "input": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-counter", "dyte-button", "dyte-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-counter":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteCounter);
      }
      break;
    case "dyte-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "dyte-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { DyteCounter as D, defineCustomElement as d };
