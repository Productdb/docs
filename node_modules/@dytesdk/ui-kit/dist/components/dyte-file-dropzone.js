import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import './store.js';
import './breakout-rooms-manager.js';
import './livestream.js';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';
import './user-prefs.js';
import { d as defineCustomElement$2 } from './dyte-icon2.js';

const dyteFileDropzoneCss = "#dropzone{position:absolute;top:var(--dyte-space-0, 0px);right:var(--dyte-space-0, 0px);bottom:var(--dyte-space-0, 0px);left:var(--dyte-space-0, 0px);z-index:10;display:none;flex-direction:column;align-items:center;justify-content:center;--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-800, 30 30 30) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}#dropzone.active{display:flex;animation:0.2s slide-up ease-in}";

const DyteFileDropzone$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.onDropCallback = createEvent(this, "dropCallback", 7);
    this.hostEl = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.dropzoneActivated = false;
  }
  connectedCallback() {
    if (!this.hostEl)
      throw new Error('hostEl prop is required');
    this.hostEl.addEventListener('dragover', (e) => {
      e.preventDefault();
      this.dropzoneActivated = true;
    });
    this.hostEl.addEventListener('dragleave', () => {
      this.dropzoneActivated = false;
    });
    this.hostEl.addEventListener('drop', (e) => {
      e.preventDefault();
      this.dropzoneActivated = false;
      this.onDropCallback.emit(e);
    });
  }
  render() {
    return (h(Host, null, h("div", { id: "dropzone", class: { active: this.dropzoneActivated }, part: "dropzone" }, h("dyte-icon", { icon: this.iconPack.attach, iconPack: this.iconPack, t: this.t }), h("p", null, this.t('chat.send_attachment')))));
  }
  static get style() { return dyteFileDropzoneCss; }
}, [1, "dyte-file-dropzone", {
    "hostEl": [16],
    "iconPack": [16],
    "t": [16],
    "dropzoneActivated": [32]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-file-dropzone", "dyte-icon"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-file-dropzone":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteFileDropzone$1);
      }
      break;
    case "dyte-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
  } });
}

const DyteFileDropzone = DyteFileDropzone$1;
const defineCustomElement = defineCustomElement$1;

export { DyteFileDropzone, defineCustomElement };
