import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';
import './store.js';
import './breakout-rooms-manager.js';
import './livestream.js';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';
import './user-prefs.js';
import { i as issueList } from './troubleshooter.js';
import { d as defineCustomElement$1 } from './dyte-button2.js';

const dyteDebuggerIssuesUiCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}.dyte-select{--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-700, 44 44 44) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-1000, 255 255 255))}.dyte-select:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000)}.dyte-select{display:block;border-radius:var(--dyte-border-radius-sm, 4px);border-width:var(--dyte-border-width-none, 0);border-style:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:var(--dyte-space-3, 12px);font-size:16px;--icon-size:var(--dyte-select-chevron-size, var(--dyte-space-6, 24px));--icon-right-position:var(--dyte-select-chevron-right-position, var(--dyte-space-2, 8px));background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e\");background-position:right var(--icon-right-position) center;background-repeat:no-repeat;background-size:var(--icon-size) var(--icon-size);padding-right:calc(var(--icon-right-position) * 5)}:host{display:flex;width:100%;flex-direction:column;align-items:flex-start;justify-content:flex-start}.section{margin-top:var(--dyte-space-4, 16px);margin-bottom:var(--dyte-space-4, 16px);display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start}.title{display:flex;width:-moz-fit-content;width:fit-content;flex-direction:row;align-items:center;justify-content:center;font-size:16px;font-weight:700;color:rgb(var(--dyte-colors-text-1000, 255 255 255))}.title dyte-icon{margin-right:var(--dyte-space-2, 8px)}.sub-title{margin-top:var(--dyte-space-2, 8px);margin-bottom:var(--dyte-space-2, 8px);font-size:14px;font-weight:600;color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88));letter-spacing:0.5px}.text{margin-top:var(--dyte-space-1, 4px);margin-bottom:var(--dyte-space-1, 4px);font-size:14px;font-weight:100 !important;color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.recommendation{margin-top:var(--dyte-space-1, 4px);margin-bottom:var(--dyte-space-1, 4px);display:flex;flex-direction:row;align-items:flex-start;justify-content:flex-start;font-size:12px;color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}.recommendation div{margin-right:var(--dyte-space-2, 8px)}.device{margin-top:var(--dyte-space-4, 16px);border-radius:var(--dyte-border-radius-sm, 4px);--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-600, 60 60 60) / var(--tw-bg-opacity));padding:var(--dyte-space-2, 8px);font-size:12px}select{margin-top:var(--dyte-space-2, 8px);margin-bottom:var(--dyte-space-2, 8px);border-width:var(--dyte-border-width-none, 0) !important;border-style:none !important;outline:2px solid transparent !important;outline-offset:2px !important}.dyte-select{width:100%;max-width:100%;font-size:14px}.disabled{color:rgb(var(--dyte-colors-text-600, 255 255 255 / 0.52))}.report-link{margin-bottom:var(--dyte-space-2, 8px);margin-top:var(--dyte-space-6, 24px);cursor:pointer;font-size:12px;--tw-text-opacity:1 !important;color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-text-opacity)) !important;-webkit-text-decoration-line:underline;text-decoration-line:underline}.report-issue{margin-top:var(--dyte-space-2, 8px)}";

const DyteDebuggerAudio = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.meeting = undefined;
    this.states = undefined;
    this.size = undefined;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.mediaType = undefined;
    this.issueIndex = 0;
    this.reported = true;
  }
  selectIssue(val) {
    this.issueIndex = parseInt(val);
    this.reported = false;
    setTimeout(() => {
      var _a;
      (_a = this.reportEl) === null || _a === void 0 ? void 0 : _a.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });
    }, 100);
  }
  // TODO: (ishita1805) Send surrounding data for issues in phase 3.
  reportIssue() {
    const { value } = issueList[this.mediaType][this.issueIndex];
    this.meeting.__internals__.logger.info('dyteTroubleshooting::issue', {
      issue: value,
    });
    this.reported = true;
    setTimeout(() => {
      this.reported = false;
    }, 3000);
  }
  render() {
    var _a, _b, _c, _d, _e, _f, _g;
    const issues = (_a = issueList[this.mediaType]) !== null && _a !== void 0 ? _a : [];
    return (h(Host, null, h("div", { class: "text" }, this.t('Please select a prompt that best describes your issue')), h("select", { class: `dyte-select ${this.issueIndex === 0 ? 'disabled' : ''}`, onChange: (e) => this.selectIssue(e.target.value) }, issues.map((issue) => (h("option", { value: issue.index }, h("span", null, issue.value))))), ((_c = (_b = issues[this.issueIndex]) === null || _b === void 0 ? void 0 : _b.steps) === null || _c === void 0 ? void 0 : _c.length) > 0 && (h("div", { class: "sub-title" }, this.t('How to fix this:'))), (_e = (_d = issues[this.issueIndex]) === null || _d === void 0 ? void 0 : _d.steps) === null || _e === void 0 ? void 0 :
      _e.map((step) => (h("div", { class: "recommendation" }, h("div", null, "\u2022"), this.t(step)))), ((_g = (_f = issues[this.issueIndex]) === null || _f === void 0 ? void 0 : _f.steps) === null || _g === void 0 ? void 0 : _g.length) > 0 &&
      (this.reported ? (h("p", { class: "report-link" }, this.t('Your issue has been reported.'))) : (h("div", { class: "report-issue" }, h("p", { class: "recommendation", ref: (el) => (this.reportEl = el) }, this.t('Still facing the issue?')), h("dyte-button", { size: "sm", variant: "secondary", onClick: () => this.reportIssue() }, this.t('Report Now')))))));
  }
  static get style() { return dyteDebuggerIssuesUiCss; }
}, [1, "dyte-debugger-issues-ui", {
    "meeting": [16],
    "states": [16],
    "size": [513],
    "iconPack": [16],
    "t": [16],
    "mediaType": [1, "media-type"],
    "issueIndex": [32],
    "reported": [32]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-debugger-issues-ui", "dyte-button"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-debugger-issues-ui":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteDebuggerAudio);
      }
      break;
    case "dyte-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { DyteDebuggerAudio as D, defineCustomElement as d };
