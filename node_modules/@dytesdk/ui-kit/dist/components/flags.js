import { s as showLivestream } from './livestream.js';

const FlagsmithFeatureFlags = {
  PLAY_PARTICIPANT_TILE_VIDEO_ON_PAUSE: 'play_participant_tile_video_on_pause',
  DISABLE_EMOJI_PICKER: 'disable_emoji_picker',
  FEAT_PAGINATED_CHAT: 'feat_paginated_chat',
  LOG_PLAYING_FAILURES: 'log_playing_failures',
  FEAT_CHANNEL_CHAT: 'feat_channel_chat',
  FEAT_PARTICIPANT_LIST: 'feat_participant_list',
  DISABLE_KICKING: 'disable_kicking',
  ADMIN_CANTREMOVE_ADMIN: 'admin_cantremove_admin',
  CANTINVITE_VIEWER: 'cantinvite_viewer',
  PINNED_MESSAGES: 'pinned_msgs',
};
const isBreakoutRoomsEnabled = (meeting) => meeting.connectedMeetings.supportsConnectedMeetings;
const usePaginatedChat = (meeting) => {
  var _a;
  return (meeting === null || meeting === void 0 ? void 0 : meeting.meta.viewType) === 'CHAT' ||
    showLivestream(meeting) ||
    ((_a = meeting === null || meeting === void 0 ? void 0 : meeting.__internals__) === null || _a === void 0 ? void 0 : _a.features.hasFeature('feat_paginated_chat'));
};
const disableSettingSinkId = (meeting) => {
  var _a, _b;
  return ((_a = meeting === null || meeting === void 0 ? void 0 : meeting.__internals__) === null || _a === void 0 ? void 0 : _a.browserSpecs.isFirefox()) &&
    ((_b = meeting === null || meeting === void 0 ? void 0 : meeting.__internals__) === null || _b === void 0 ? void 0 : _b.features.hasFeature('disable_firefox_setting_sink_id'));
};

export { FlagsmithFeatureFlags as F, disableSettingSinkId as d, isBreakoutRoomsEnabled as i, usePaginatedChat as u };
