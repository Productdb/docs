import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';

const dyteStageCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}:host{display:block;position:relative;overflow:hidden}";

const DyteStage$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
  static get style() { return dyteStageCss; }
}, [1, "dyte-stage", {
    "iconPack": [16],
    "t": [16]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-stage"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-stage":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteStage$1);
      }
      break;
  } });
}

const DyteStage = DyteStage$1;
const defineCustomElement = defineCustomElement$1;

export { DyteStage, defineCustomElement };
