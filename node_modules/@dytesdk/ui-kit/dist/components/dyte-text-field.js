import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';
import { s as state } from './store.js';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';

const dyteTextFieldCss = ":host{line-height:initial;font-family:var(--dyte-font-family, sans-serif);font-feature-settings:normal;font-variation-settings:normal}p{margin:var(--dyte-space-0, 0px);padding:var(--dyte-space-0, 0px)}input{display:block;height:var(--dyte-space-10, 40px);padding-left:var(--dyte-space-3, 12px);padding-right:var(--dyte-space-3, 12px);font-size:14px;border-width:var(--dyte-border-width-md, 2px);border-style:solid;border-color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64));--tw-bg-opacity:1;background-color:rgba(var(--dyte-colors-background-1000, 8 8 8) / var(--tw-bg-opacity));color:rgb(var(--dyte-colors-text-900, 255 255 255 / 0.88))}input::-moz-placeholder{color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}input::placeholder{color:rgb(var(--dyte-colors-text-700, 255 255 255 / 0.64))}input:focus{color:rgb(var(--dyte-colors-text-1000, 255 255 255))}input{border-radius:var(--dyte-border-radius-sm, 4px);outline:2px solid transparent;outline-offset:2px;transition-property:color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;transition-property:color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);transition-duration:150ms}input:focus{--tw-border-opacity:1;border-color:rgba(var(--dyte-colors-brand-500, 33 96 253) / var(--tw-border-opacity))}input:disabled{cursor:not-allowed}";

const DyteTextField$1 = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.stateUpdate = createEvent(this, "dyteStateUpdate", 7);
    this.type = 'text';
    this.placeholder = '';
    this.disabled = false;
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
  }
  connectedCallback() {
    this.stateUpdate.emit({ abc: false });
    state.abc = false;
  }
  get value() {
    return this.input.value;
  }
  render() {
    return (h(Host, null, h("input", { ref: (el) => (this.input = el), type: this.type, placeholder: this.placeholder, disabled: this.disabled })));
  }
  static get style() { return dyteTextFieldCss; }
}, [1, "dyte-text-field", {
    "type": [1],
    "placeholder": [1],
    "disabled": [4],
    "iconPack": [16],
    "t": [16]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-text-field"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-text-field":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteTextField$1);
      }
      break;
  } });
}

const DyteTextField = DyteTextField$1;
const defineCustomElement = defineCustomElement$1;

export { DyteTextField, defineCustomElement };
