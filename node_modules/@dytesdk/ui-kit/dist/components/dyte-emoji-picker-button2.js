import { proxyCustomElement, HTMLElement, h } from '@stencil/core/internal/client';
import './store.js';
import './breakout-rooms-manager.js';
import './livestream.js';
import { d as defaultIconPack } from './default-icon-pack.js';
import { u as useLanguage } from './index2.js';
import './user-prefs.js';
import { d as defineCustomElement$3 } from './dyte-button2.js';
import { d as defineCustomElement$2 } from './dyte-icon2.js';
import { d as defineCustomElement$1 } from './dyte-tooltip2.js';

const dyteEmojiPickerButtonCss = ":host{}";

const DyteEmojiPickerButton = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.iconPack = defaultIconPack;
    this.t = useLanguage();
    this.isActive = undefined;
  }
  render() {
    const uiProps = { iconPack: this.iconPack, t: this.t };
    return (h("dyte-tooltip", Object.assign({ label: this.t('chat.send_emoji') }, uiProps), h("dyte-button", { variant: "ghost", kind: "icon", class: { active: this.isActive }, title: this.t('chat.send_emoji'), iconPack: this.iconPack, t: this.t }, h("dyte-icon", { icon: this.iconPack.emoji_multiple }))));
  }
  static get style() { return dyteEmojiPickerButtonCss; }
}, [1, "dyte-emoji-picker-button", {
    "iconPack": [16],
    "t": [16],
    "isActive": [4, "is-active"]
  }]);
function defineCustomElement() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["dyte-emoji-picker-button", "dyte-button", "dyte-icon", "dyte-tooltip"];
  components.forEach(tagName => { switch (tagName) {
    case "dyte-emoji-picker-button":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, DyteEmojiPickerButton);
      }
      break;
    case "dyte-button":
      if (!customElements.get(tagName)) {
        defineCustomElement$3();
      }
      break;
    case "dyte-icon":
      if (!customElements.get(tagName)) {
        defineCustomElement$2();
      }
      break;
    case "dyte-tooltip":
      if (!customElements.get(tagName)) {
        defineCustomElement$1();
      }
      break;
  } });
}

export { DyteEmojiPickerButton as D, defineCustomElement as d };
