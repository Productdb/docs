import type { DyteThemePresetV1, DyteThemePreset } from '@dytesdk/web-core';
import { UIConfig } from '../types/ui-config';
import { Meeting } from '../types/dyte-client';
/**
 * Extend the default UI Config with your own
 * @param config Your extended UI Config
 * @returns New extended UI Config object
 */
export declare const extendConfig: (config: UIConfig, baseConfig?: UIConfig) => UIConfig;
declare type ConfigData = {
  showSetupScreen: boolean;
};
declare type ConfigOptions = {
  grid_pagination?: boolean;
  settings_toggle?: boolean;
};
/**
 * Generates a config with older theme value.
 * @param oldConfig Theme object
 * @param toExtend UI Config object to extend the generated config
 * @param options Options for toggling components
 * @returns
 */
export declare const generateConfig: (oldConfig: Partial<DyteThemePresetV1 | DyteThemePreset>, meeting: Meeting, toExtend?: UIConfig, options?: ConfigOptions) => {
  config: UIConfig;
  data: ConfigData;
};
export {};
