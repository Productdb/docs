import { EventEmitter } from '../../stencil-public-runtime';
import { Meeting } from '../../types/dyte-client';
import type { Size, States } from '../../types/props';
import { UIConfig } from '../../types/ui-config';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
export declare type AIView = 'default' | 'sidebar' | 'full-screen';
export declare type AISection = 'home' | 'transcriptions' | 'personal';
export declare class DyteAi {
  private keydownListener;
  /** Default section */
  defaultSection: AISection;
  /** Meeting object */
  meeting: Meeting;
  /** States object */
  states: States;
  /** Config */
  config: UIConfig;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Size */
  size: Size;
  /** View type */
  view: AIView;
  tab: AISection;
  newTranscriptionAvailable: boolean;
  newAiMessageAvailable: boolean;
  /** Emits updated state data */
  stateUpdate: EventEmitter<States>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  viewChanged(view: AIView): void;
  tabChanged(tab: AISection): void;
  private viewSection;
  private close;
  private transcriptionHandler;
  render(): any;
}
