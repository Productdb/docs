import { IconPack } from '../../lib/icons';
import { Meeting, Peer } from '../../types/dyte-client';
import { Size } from '../../types/props';
import { UIConfig } from '../../types/ui-config';
import { DyteI18n } from '../../lib/lang';
import { ParticipantsViewMode } from '../dyte-participants/dyte-participants';
/**
 * A component which lists all participants, with ability to
 * run privileged actions on each participant according to your permissions.
 */
export declare class DyteParticipants {
  private participantJoinedListener;
  private participantLeftListener;
  /** Meeting object */
  meeting: Meeting;
  /** Config */
  config: UIConfig;
  /** Size */
  size: Size;
  /** Icon pack */
  iconPack: IconPack;
  /** View mode for participants list */
  view: ParticipantsViewMode;
  /** Language */
  t: DyteI18n;
  /** Search */
  search: string;
  participants: Peer[];
  showStageList: boolean;
  connectedCallback(): void;
  disconnectedCallback(): void;
  meetingChanged(meeting: Meeting): void;
  searchChanged(search: string): void;
  private getParticipants;
  private updateStageList;
  render(): any;
}
