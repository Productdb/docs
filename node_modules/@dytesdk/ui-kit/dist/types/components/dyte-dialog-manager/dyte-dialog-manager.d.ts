import { EventEmitter } from '../../stencil-public-runtime';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
import { Meeting } from '../../types/dyte-client';
import { Size, States } from '../../types/props';
import { UIConfig } from '../../types/ui-config';
/**
 * A component which handles all dialog elements in a component such as:
 *
 * - dyte-settings
 * - dyte-leave-meeting
 * - dyte-permissions-message
 * - dyte-image-viewer
 * - dyte-remote-access-manager
 * - dyte-breakout-rooms-manager
 *
 * This components depends on the values from `states` object.
 */
export declare class DyteDialogManager {
  /** Meeting object */
  meeting: Meeting;
  /** UI Config */
  config: UIConfig;
  /** States object */
  states: States;
  /** Size */
  size: Size;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Emits updated state data */
  stateUpdate: EventEmitter<States>;
  connectedCallback(): void;
  disconnectedCallback(): void;
  meetingChanged(meeting: Meeting): void;
  private updateStoreState;
  private cancelJoinStage;
  private joinStage;
  private stageStatusUpdateListener;
  render(): any;
}
