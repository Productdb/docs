import type { Message } from '@dytesdk/web-core';
import { EventEmitter } from '../../stencil-public-runtime';
import { IconPack, Size } from '../../exports';
import { DyteI18n } from '../../lib/lang';
import { Chat, ChatMessage, States } from '../../types/props';
export declare class DyteChatMessagesUi {
  private $chat;
  private intersectionObserver;
  private lastReadTimestamp;
  private observingEl;
  private request;
  private timeout;
  private autoScrollEnabled;
  /** Selected group key */
  selectedGroup: string;
  /** Chat Messages */
  messages: Chat[];
  /** User ID of self user */
  selfUserId: string;
  /** Can current user pin/unpin messages */
  canPinMessages: boolean;
  /** Size */
  size: Size;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Event emitted when a message is pinned or unpinned */
  onPinMessage: EventEmitter<Message>;
  /** Emits updated state data */
  stateUpdate: EventEmitter<States>;
  now: Date;
  showLatestMessageButton: boolean;
  connectedCallback(): void;
  componentDidLoad(): void;
  componentDidRender(): void;
  chatChanged(messages: ChatMessage[]): void;
  selectedBucketChanged(): void;
  disconnectedCallback(): void;
  private onScroll;
  private scrollToBottom;
  private observeMessage;
  private getMessageActions;
  private onMessageActionHandler;
  render(): any;
}
