import { IconPack } from '../../lib/icons';
import { Meeting } from '../../types/dyte-client';
import { EventEmitter } from '../../stencil-public-runtime';
import { DyteI18n } from '../../lib/lang';
import type { DyteConnectedMeetings } from '@dytesdk/web-core';
declare type ConnectedPeer = DyteConnectedMeetings['parentMeeting']['participants'][number];
/**
 * A component which lists all participants, with ability to
 * run privileged actions on each participant according to your permissions.
 */
export declare class DyteBreakoutRoomParticipants {
  /** Meeting object */
  meeting: Meeting;
  /** Participant ids */
  participantIds: string[];
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  search: string;
  participantsToShow: ConnectedPeer[];
  /** Emits an event when selected participants are updated */
  onSelectedParticipantsUpdate: EventEmitter<string[]>;
  /** Emits an event when all participants are selected or deselected */
  onAllToggled: EventEmitter<string[]>;
  /** Emits an event when participants are dragged */
  onParticipantsDragging: EventEmitter<boolean>;
  /** selected participants */
  selectedParticipantIds: string[];
  isDragging: boolean;
  connectedCallback(): void;
  disconnectedCallback(): void;
  private updateSelectedParticipants;
  meetingChanged(meeting: Meeting): void;
  participantsChanged(): void;
  searchChanged(search: string): void;
  private getParticipants;
  private onSearchInput;
  private onDragStart;
  private onDragEnd;
  private onClick;
  private onToggleAll;
  private renderPeer;
  render(): any;
}
export {};
