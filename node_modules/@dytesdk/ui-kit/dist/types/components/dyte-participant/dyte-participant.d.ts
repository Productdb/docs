import { EventEmitter } from '../../stencil-public-runtime';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
import { Meeting, Peer } from '../../types/dyte-client';
import { UIConfig } from '../../exports';
export declare type ParticipantViewMode = 'sidebar';
/**
 * A participant entry component used inside `dyte-participants` which shows data like:
 * name, picture and media device status.
 *
 * You can perform privileged actions on the participant too.
 */
export declare class DyteParticipant {
  private audioUpdateListener;
  private videoUpdateListener;
  private pinnedListener;
  private stageListener;
  host: HTMLDyteParticipantElement;
  /** Meeting object */
  meeting: Meeting;
  /** Show participant summary */
  view: ParticipantViewMode;
  /** Participant object */
  participant: Peer;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Config object */
  config: UIConfig;
  /**
   * Emit dyte notifications
   */
  dyteSendNotification: EventEmitter<{
    trace: string;
    message: string;
  }>;
  audioEnabled: boolean;
  videoEnabled: boolean;
  isPinned: boolean;
  isOnStage: boolean;
  canDisableParticipantAudio: boolean;
  canDisableParticipantVideo: boolean;
  canKickParticipant: boolean;
  canPinParticipant: boolean;
  canAllowParticipantOnStage: boolean;
  menuOpen: boolean;
  connectedCallback(): void;
  disconnectedCallback(): void;
  meetingChanged(meeting: Meeting): void;
  participantChanged(participant: Peer): void;
  private inviteToStageToggle;
  componentDidLoad(): void;
  private handleOutsideClick;
  private clickedThis;
  private update;
  private onMenuToggle;
  render(): any;
}
