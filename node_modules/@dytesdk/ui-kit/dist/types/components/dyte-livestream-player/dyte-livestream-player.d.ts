import type { LivestreamState } from '@dytesdk/web-core';
import { EventEmitter } from '../../stencil-public-runtime';
import { Size, DyteI18n, IconPack } from '../../exports';
import { Meeting } from '../../types/dyte-client';
import { PlayerEventType, PlayerState } from '../../utils/livestream';
export declare class DyteLivestreamPlayer {
  private player;
  private ivsPlayer;
  private showLatencyIndicator;
  private updateLatency;
  private sendLatencyToCallStats;
  /** Meeting object */
  meeting: Meeting;
  /** Size */
  size: Size;
  /** Language */
  t: DyteI18n;
  /** Icon pack */
  iconPack: IconPack;
  playbackUrl: string;
  isSupported: boolean;
  playerState: PlayerState | PlayerEventType;
  livestreamState: LivestreamState;
  playerError: any;
  latency: number;
  audioPlaybackError: boolean;
  /**
   * Emit API error events
   */
  dyteAPIError: EventEmitter<{
    trace: string;
    message: string;
  }>;
  private AddPlayerListeners;
  private LoadPlayer;
  private getPlaybackUrl;
  private livestreamUpdateListener;
  private onPlayerRef;
  private getLoadingState;
  private getErrorState;
  private fetchLatency;
  connectedCallback(): void;
  disconnectedCallback(): void;
  componentDidLoad(): Promise<void>;
  meetingChanged(meeting: any): void;
  render(): any;
}
