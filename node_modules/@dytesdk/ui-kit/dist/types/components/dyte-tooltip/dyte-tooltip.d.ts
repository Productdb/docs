import { EventEmitter } from '../../stencil-public-runtime';
import { Size } from '../../types/props';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
import { Placement } from '../../types/floating-ui';
export declare type TooltipVariant = 'primary' | 'secondary';
export declare type TooltipKind = 'inline' | 'block';
/**
 * Tooltip component which follows Dyte's Design System.
 *
 * @slot - Default slot for trigger
 * @slot tooltip - Slot for content inside the tooltip
 */
export declare class DyteMenu {
  private triggerEl;
  private tooltipEl;
  private arrowEl;
  /** Tooltip label */
  label: string;
  /** Tooltip variant */
  variant: TooltipVariant;
  /** Disabled */
  disabled: boolean;
  /** Open */
  open: boolean;
  /** Tooltip kind */
  kind: TooltipKind;
  /** Size */
  size: Size;
  /** Placement of menu */
  placement: Placement;
  /** Delay before showing the tooltip */
  delay: number;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  isInFocus: boolean;
  /** Event handler called when the open state of the tooltip changes. */
  dyteOpenChange: EventEmitter<boolean>;
  componentDidLoad(): void;
  disconnectedCallback(): void;
  openChanged(open: boolean): void;
  private update;
  private showMenu;
  private hideMenu;
  render(): any;
}
