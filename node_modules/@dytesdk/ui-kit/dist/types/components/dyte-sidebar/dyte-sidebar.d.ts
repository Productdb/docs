import { EventEmitter } from '../../stencil-public-runtime';
import { Meeting } from '../../types/dyte-client';
import { Size, States } from '../../types/props';
import { UIConfig } from '../../types/ui-config';
import { IconPack } from '../../lib/icons';
import { DyteI18n } from '../../lib/lang';
import { DyteSidebarTab, DyteSidebarView } from '../dyte-sidebar-ui/dyte-sidebar-ui';
export declare type DyteSidebarSection = 'chat' | 'polls' | 'participants' | 'plugins';
/**
 * A component which handles the sidebar and
 * you can customize which sections you want, and which section you want as the default.
 */
export declare class DyteSidebar {
  private keydownListener;
  private onStageStatusUpdate;
  /** Enabled sections in sidebar */
  enabledSections: DyteSidebarTab[];
  /** Default section */
  defaultSection: DyteSidebarSection;
  /** Meeting object */
  meeting: Meeting;
  /** States object */
  states: States;
  /** Config */
  config: UIConfig;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Size */
  size: Size;
  /** View type */
  view: DyteSidebarView;
  currentTab: DyteSidebarSection;
  /** Emits updated state data */
  stateUpdate: EventEmitter<States>;
  isFloating: boolean;
  enablePinning: boolean;
  connectedCallback(): void;
  disconnectedCallback(): void;
  meetingChanged(meeting: Meeting): void;
  statesChanged(s?: States): void;
  viewChanged(view: DyteSidebarView): void;
  private getTabs;
  private viewSection;
  private close;
  private updateEnabledSections;
  private toggleFloating;
  render(): any;
}
