import { EventEmitter } from '../../stencil-public-runtime';
import { States, Size, IconPack, DyteI18n } from '../../exports';
import { MediaPermission, Meeting } from '../../types/dyte-client';
interface VideoTrackStats {
  isBlackFrame: boolean;
  isFrozenFrame: boolean;
  timestamp: number;
  videoScore: number;
}
declare type CameraMetadata = {
  label?: string;
  resolution?: number[];
};
export declare class DyteDebuggerAudio {
  private videoEl;
  private blackFramesCount;
  /** Meeting object */
  meeting: Meeting;
  /** States object */
  states: States;
  /** Size */
  size: Size;
  /** Icon pack */
  iconPack: IconPack;
  /** Language */
  t: DyteI18n;
  /** Test Progress Event */
  testProgress: EventEmitter<number>;
  activeTab: 'Troubleshoot' | 'Report' | 'none';
  stage: number;
  mediaPermission: MediaPermission;
  videoPreview: boolean;
  videoMetadata: CameraMetadata;
  videoTrackStats: VideoTrackStats;
  connectedCallback(): void;
  disconnectedCallback(): void;
  meetingChanged(meeting: any): Promise<void>;
  private mediaPermissionUpdateListener;
  private deviceUpdateListner;
  private videoTrackUpdateListener;
  private setActiveTab;
  private toggleVideoTest;
  private getTrackInfo;
  private getAnalysisStatus;
  private changeStage;
  private updateProgress;
  private formatLabel;
  private boolToStr;
  private normalizeVideoScore;
  render(): any;
}
export {};
