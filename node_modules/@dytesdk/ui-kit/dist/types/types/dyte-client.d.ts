import type Meeting from '@dytesdk/web-core';
import type { DyteSelf as Self, DyteParticipant as Participant, leaveRoomState } from '@dytesdk/web-core';
declare type WaitlistedParticipant = Readonly<Omit<Participant, 'audioTrack' | 'videoTrack' | 'screenShareTracks'>>;
declare type Peer = Self | Participant;
export type { Meeting, Peer, Self, Participant, WaitlistedParticipant };
export declare type RoomLeftState = leaveRoomState;
export declare type MediaPermission = 'NOT_REQUESTED' | 'ACCEPTED' | 'DENIED' | 'SYSTEM_DENIED' | 'COULD_NOT_START' | 'CANCELED';
export type { RemoteUpdatePayload } from '@dytesdk/web-core';
export declare enum RemoteUpdateType {
  REQUEST_RECEIVED = "REQUEST_RECEIVED",
  REQUEST_SENT = "REQUEST_SENT",
  INCOMING_REQUEST_ACCEPTED = "INCOMING_REQUEST_ACCEPTED",
  OUTGOING_REQUEST_ACCEPTED = "OUTGOING_REQUEST_ACCEPTED",
  INCOMING_REQUEST_ENDED = "INCOMING_REQUEST_ENDED",
  OUTGOING_REQUEST_ENDED = "OUTGOING_REQUEST_ENDED"
}
