declare type flagsType = Record<string, Record<'enabled' | 'value', any>>;
declare class Flagsmith {
    flags: flagsType;
    environmentKey: string;
    constructor(environmentKey?: string);
    identify(uniqueIdentifier: string, traitsObj?: Record<string, any>, forceEvaluate?: boolean, timeout?: number, flagsEndpoint?: string): Promise<flagsType>;
    getValue(featureFlagName: string): string | undefined;
    hasFeature(featureFlagName: string): boolean;
    getAllFlags(): flagsType;
}
declare const globalFlagsmith: Flagsmith;
declare function createNewFlagsmithInstance(environmentKey?: string): Flagsmith;
export { globalFlagsmith, createNewFlagsmithInstance, };
