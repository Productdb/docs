"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[43819],{7947:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var t=o(74848),i=o(28453);const l={title:"Introduction",description:"Learn the fundamentals of integrating polls into your iOS application with ProductDB's Polls Introduction guide.",sidebar_position:1,tags:["ios-core","polls"]},s="Introduction",r={id:"polls/introduction",title:"Introduction",description:"Learn the fundamentals of integrating polls into your iOS application with ProductDB's Polls Introduction guide.",source:"@site/docs/ios-core/polls/introduction.mdx",sourceDirName:"polls",slug:"/polls/introduction",permalink:"/ios-core/polls/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios-core/polls/introduction.mdx",tags:[{label:"ios-core",permalink:"/ios-core/tags/ios-core"},{label:"polls",permalink:"/ios-core/tags/polls"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Learn the fundamentals of integrating polls into your iOS application with ProductDB's Polls Introduction guide.",sidebar_position:1,tags:["ios-core","polls"]},sidebar:"tutorialSidebar",previous:{title:"Livestreaming",permalink:"/ios-core/livestreaming"},next:{title:"Creating a poll",permalink:"/ios-core/polls/creating-a-poll"}},c={},d=[{value:"Listening to new polls in a meeting",id:"listening-to-new-polls-in-a-meeting",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["The meetings polls object can be accessed using ",(0,t.jsx)(n.code,{children:"meeting.polls"}),". It provides\nmethods to create polls, vote, and more."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where\neach element is an object of type ",(0,t.jsx)(n.code,{children:"ProductDBPollMessage"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"class ProductDBPollMessage{\n  let id: String\n  let question: String\n  let anonymous: Bool\n  let hideVotes: Bool\n  let createdBy: String\n  let options: [ProductDBPollOption]\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The type ",(0,t.jsx)(n.code,{children:"ProductDBPollMessage"})," is the main class for any poll in ProductDB. It also\ncontains list of ",(0,t.jsx)(n.code,{children:"ProductDBPollOption"})," which are options for a given poll. And every\n",(0,t.jsx)(n.code,{children:"ProductDBPollOption"})," has list of votes inside of it. Votes are objects of class\n",(0,t.jsx)(n.code,{children:"ProductDBPollVote"})," which internally has id and name of the vote."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"class ProductDBPollOption{\n  let text: String\n  let votes: [ProductDBPollVote]\n  let count: Int\n}\n\nclass ProductDBPollVote{\n  let id: String\n  let name: String\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["One can easily create, vote and view polls by listening to callbacks on\n",(0,t.jsx)(n.code,{children:"meeting"})," object."]}),"\n",(0,t.jsx)(n.h2,{id:"listening-to-new-polls-in-a-meeting",children:"Listening to new polls in a meeting"}),"\n",(0,t.jsxs)(n.p,{children:["To be able to receive new poll messages you need to implement a method\n",(0,t.jsx)(n.code,{children:"onPollUpdates()"})," method from callback ",(0,t.jsx)(n.code,{children:"ProductDBMeetingRoomEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,t.jsx)(n.code,{children:"meeting.addMeetingEventsListener(meetingViewModel)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-swift",children:"extension MeetingViewModel: ProductDBMeetingRoomEventsListener {\n  func onNewPoll(poll: ProductDBPollMessage) {\n    // code to handle new poll\n  }\n\n  func onPollUpdates(pollMessages: [ProductDBPollMessage]) {\n    // code to handle polls and their vote updates.\n  }\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(96540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);