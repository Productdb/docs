"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[87198],{54986:(t,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var e=i(74848),a=i(28453);const r={title:"Prebuilt",sidebar_position:3},s="Manage Participants",o={id:"participants/prebuilt",title:"Prebuilt",description:"This section explains how to list and manage participants in your ProductDB app.",source:"@site/docs/android/participants/prebuilt.mdx",sourceDirName:"participants",slug:"/participants/prebuilt",permalink:"/android/participants/prebuilt",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/android/participants/prebuilt.mdx",tags:[],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:3,frontMatter:{title:"Prebuilt",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Types",permalink:"/android/participants/introduction"},next:{title:"Introduction",permalink:"/android/plugins/introduction"}},c={},p=[{value:"Listing Participants",id:"listing-participants",level:2},{value:"Host Controls",id:"host-controls",level:2}];function l(t){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...t.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"manage-participants",children:"Manage Participants"}),"\n",(0,e.jsx)(n.p,{children:"This section explains how to list and manage participants in your ProductDB app."}),"\n",(0,e.jsx)(n.h2,{id:"listing-participants",children:"Listing Participants"}),"\n",(0,e.jsxs)(n.p,{children:["To show the list of participants in your app, you can use the ",(0,e.jsx)(n.code,{children:"ProductDBParticipantsFragment"})," class."]}),"\n",(0,e.jsx)(n.p,{children:"You can create an instance of this class and call the show method to display the list of current participants as shown below:"}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-kotlin",children:'val dyteParticipantsFragment = ProductDBParticipantsFragment()\ndyteParticipantsFragment.show(\n  fragmentManager,\n  "SOME_TAG_HERE"\n)\n'})}),"\n",(0,e.jsx)(n.p,{children:"It should show something like below, with the list of participants in the room:"}),"\n",(0,e.jsx)("img",{src:"/static/android-ui-kit/participants-list.png",style:{width:400}}),"\n",(0,e.jsx)(n.h2,{id:"host-controls",children:"Host Controls"}),"\n",(0,e.jsxs)(n.p,{children:["If you are the host of the room, you will see the ",(0,e.jsx)(n.strong,{children:"host controls"})," when you click the ",(0,e.jsx)(n.strong,{children:"three-dot menu"})," on the top right corner of the participants list. The host controls allow you to manage the participants in the room."]}),"\n",(0,e.jsx)(n.p,{children:"The host controls include the following options:"}),"\n",(0,e.jsxs)(n.ul,{children:["\n",(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:"Mute/Unmute"}),": Mute or unmute a participant."]}),"\n",(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:"Kick"}),": Kick a participant from the room."]}),"\n",(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:"Pin"}),": Pin a participant's video."]}),"\n",(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.strong,{children:"Turn off video"}),": Turn off a participant's video."]}),"\n"]}),"\n",(0,e.jsx)("img",{src:"/static/android-ui-kit/host-controls.png",style:{width:400}}),"\n",(0,e.jsx)("br",{}),"\n",(0,e.jsx)(n.p,{children:"You can also use these methods from our participant object to\nperform these actions programmatically."}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\n\nparticipant?.let { pcpt ->\n  // To disable a participant's video stream\n  pcpt.disableVideo();\n\n  // To disable a participant's audio stream\n  pcpt.disableAudio();\n\n  // To kick a participant from the meeting\n  pcpt.kick();\n}\n"})}),"\n",(0,e.jsxs)(n.p,{children:["You can also ",(0,e.jsx)(n.code,{children:"pin"})," or ",(0,e.jsx)(n.code,{children:"unpin"}),' a participant in the meeting. All "pinned"\nparticipants are added to the ',(0,e.jsx)(n.code,{children:"meeting.participants.pinned"})," map."]}),"\n",(0,e.jsx)(n.pre,{children:(0,e.jsx)(n.code,{className:"language-kotlin",children:"val participant = meeting.participants.joined.firstOrNull { it.id == participantId }\n\nparticipant?.let { pcpt ->\n  // To pin a participant\n  pcpt.pin();\n\n  // To unpin a participant\n  pcpt.unpin();\n}\n"})})]})}function d(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,e.jsx)(n,{...t,children:(0,e.jsx)(l,{...t})}):l(t)}},28453:(t,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var e=i(96540);const a={},r=e.createContext(a);function s(t){const n=e.useContext(r);return e.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function o(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:s(t.components),e.createElement(r.Provider,{value:n},t.children)}}}]);