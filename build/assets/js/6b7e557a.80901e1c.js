"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[37281],{37184:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(74848),t=n(28453);const r={},o="Handling Device Permissions",a={id:"pre-call/handling-permissions",title:"Handling Device Permissions",description:"Before allowing users to interact with their camera and microphone, it's important to check if the necessary permissions are",source:"@site/docs/ios-core/pre-call/2-handling-permissions.mdx",sourceDirName:"pre-call",slug:"/pre-call/handling-permissions",permalink:"/ios-core/pre-call/handling-permissions",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios-core/pre-call/2-handling-permissions.mdx",tags:[],version:"current",lastUpdatedAt:1723750666,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Media Preview",permalink:"/ios-core/pre-call/media-preview"},next:{title:"Meeting Metadata",permalink:"/ios-core/pre-call/meeting-meta"}},c={},d=[{value:"Checking Permissions",id:"checking-permissions",level:3},{value:"Automatic Permission Request",id:"automatic-permission-request",level:3}];function l(e){const i={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"handling-device-permissions",children:"Handling Device Permissions"}),"\n",(0,s.jsx)(i.p,{children:"Before allowing users to interact with their camera and microphone, it's important to check if the necessary permissions are\ngranted on their iOS device. ProductDB's iOS Core SDK provides easy-to-use APIs to check the status of these permissions."}),"\n",(0,s.jsx)(i.h3,{id:"checking-permissions",children:"Checking Permissions"}),"\n",(0,s.jsx)(i.p,{children:"Use the following APIs to check if the camera and microphone permissions are granted:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"// Check if CAMERA permission is granted\nlet cameraPermissionGranted = meeting.localUser.isCameraPermissionGranted\n\n// Check if RECORD_AUDIO (microphone) permission is granted\nlet micPermissionGranted = meeting.localUser.isMicrophonePermissionGranted\n"})}),"\n",(0,s.jsx)(i.p,{children:"Alternatively, you can also use standard way to check if these permissions are granted:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-swift",children:"if AVCaptureDevice.authorizationStatusForMediaType(AVMediaTypeVideo) ==  AVAuthorizationStatus.Authorized {\n    // Already Authorized\n} else {\n    AVCaptureDevice.requestAccessForMediaType(AVMediaTypeVideo, completionHandler: { (granted: Bool) -> Void in\n       if granted == true {\n           // User granted\n       } else {\n           // User rejected\n       }\n   })\n}\n"})}),"\n",(0,s.jsxs)(i.p,{children:["Refer to the ",(0,s.jsx)(i.a,{href:"https://developer.apple.com/documentation/avfoundation/capture_setup/requesting_authorization_to_capture_and_save_media",children:"iOS official documentation"}),"\nfor more information on checking permissions."]}),"\n",(0,s.jsx)(i.p,{children:"You can use the permission status to enable or disable camera and microphone buttons in the pre-call UI, or provide visual\nfeedback to indicate the availability of these media devices."}),"\n",(0,s.jsx)(i.h3,{id:"automatic-permission-request",children:"Automatic Permission Request"}),"\n",(0,s.jsx)(i.p,{children:"When the ProductDB SDK is initialised, it automatically checks for the required media permissions. If the permissions are not granted,\nthe SDK requests them on behalf of the developers."})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var s=n(96540);const t={},r=s.createContext(t);function o(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);