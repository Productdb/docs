"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[7738],{91131:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>s});var i=n(74848),a=n(28453);const r={title:"Participant Object",description:"Understand the participant object and its integration in Flutter. Follow ProductDB's documentation for effective implementation in your app.",sidebar_position:2,tags:["flutter-core","participants","participant"]},o="The Participant object",c={id:"participants/participant-object",title:"Participant Object",description:"Understand the participant object and its integration in Flutter. Follow ProductDB's documentation for effective implementation in your app.",source:"@site/docs/flutter-core/participants/participant-object.mdx",sourceDirName:"participants",slug:"/participants/participant-object",permalink:"/flutter-core/participants/participant-object",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/flutter-core/participants/participant-object.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"participants",permalink:"/flutter-core/tags/participants"},{label:"participant",permalink:"/flutter-core/tags/participant"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:2,frontMatter:{title:"Participant Object",description:"Understand the participant object and its integration in Flutter. Follow ProductDB's documentation for effective implementation in your app.",sidebar_position:2,tags:["flutter-core","participants","participant"]},sidebar:"tutorialSidebar",previous:{title:"Participant Types",permalink:"/flutter-core/participants/"},next:{title:"Participant Events",permalink:"/flutter-core/participants/events"}},d={},s=[{value:"Audio/Video updates for participant",id:"audiovideo-updates-for-participant",level:2},{value:"Host controls methods",id:"host-controls-methods",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...t.components},{Head:n}=e;return n||function(t,e){throw new Error("Expected "+(e?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"the-participant-object",children:"The Participant object"}),"\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"ProductDBMeetingParticipant"})," object consists of all the information related to a\nparticular participant. For instance, it contains a participants\nvideo/audio/screenshare stream, and the participant's name. It also contains\nstate variables that indicate whether a participant's camera is on or off, and\nwhether they are muted or unmuted."]}),"\n",(0,i.jsx)(e.p,{children:"The participant object has the following properties."}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"id"}),": The ",(0,i.jsx)(e.code,{children:"participantId"})," of the participant (aka ",(0,i.jsx)(e.code,{children:"peerId"}),")."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"userId"}),": The ",(0,i.jsx)(e.code,{children:"userId"})," of the participant."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"name"}),": Contains participant's name."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"picture"}),": Contains participant's picture (if any)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"isHost"}),": Boolean value indicating whether this user is host of current\nmeeting or not."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"clientSpecificId"}),": Arbitrary ID that can be set to identify the participant."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"videoEnabled"}),": Set to true if the participant's camera is on."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"audioEnabled"}),": Set to true if the participant is unmuted."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"You can subscribe to various participants events. For subscribing:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Implement ",(0,i.jsx)(e.code,{children:"ProductDBParticipantEventsListener"})," to a class say\n",(0,i.jsx)(e.code,{children:"ParticipantEventListener"}),", and listen to event from\n",(0,i.jsx)(e.code,{children:"ProductDBParticipantEventsListener"})," by overriding them. This class can be user to\nmanage your state in the application."]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-dart",children:"class ParticipantEventListener extends ProductDBParticipantEventsListener {\n\n  @override\n  void onAudioUpdate({\n    required bool audioEnabled,\n    required ProductDBJoinedMeetingParticipant participant,\n  }) {\n    /// handle audioUpdate of `ProductDBJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onActiveSpeakerChanged(ProductDBJoinedMeetingParticipant participant) {\n    /// handle active speaker changing to `ProductDBJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onNoActiveSpeaker() {\n    /// handle no active speaker\n  }\n\n  @override\n  void onParticipantPinned(ProductDBJoinedMeetingParticipant participant) {\n    /// handle pinning of `ProductDBJoinedMeetingParticipant` participant\n  }\n\n\n  @override\n  void onParticipantUnpinned(ProductDBJoinedMeetingParticipant participant) {\n    /// handle unpinning the pinned participant\n  }\n\n  @override\n  void onScreenShareStarted(ProductDBJoinedMeetingParticipant participant) {\n    /// handle screen share started of `ProductDBJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onScreenShareEnded(ProductDBJoinedMeetingParticipant participant) {\n    /// handle screen share ended of `ProductDBJoinedMeetingParticipant` participant\n  }\n\n  @override\n  void onVideoUpdate({\n    required bool videoEnabled,\n    required ProductDBJoinedMeetingParticipant participant,\n  }) {\n    /// handle videoUpdate of `ProductDBJoinedMeetingParticipant` participant\n  }\n\n}\n"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["Now to subscribe, pass the instance of ",(0,i.jsx)(e.code,{children:"ProductDBParticipantEventsListener"})," class\ncreated above to ",(0,i.jsx)(e.code,{children:"addParticipantEventsListener()"})," method of ",(0,i.jsx)(e.code,{children:"dyteClient"}),"\ninstance as follows:"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-dart",metastring:"{2}",children:"dyteClient.addParticipantEventsListener(ParticipantEventListener());\n"})}),"\n",(0,i.jsx)(e.h2,{id:"audiovideo-updates-for-participant",children:"Audio/Video updates for participant"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-dart",children:"\n...\n\n@override\nvoid onVideoUpdate(bool videoEnabled) {\n  if (videoEnabled) {\n      // video is enabled, and other participants in room can see local user\n    } else {\n      // video is disabled, and other participants in room can not see local user.\n    }\n}\n\n@override\nvoid onAudioUpdate({\n  required bool audioEnabled,\n  required ProductDBJoinedMeetingParticipant participant,\n}) {\n    if (audioEnabled) {\n      // audio is enabled, and other participants in room can hear local user\n    } else {\n      // audio is disabled, and other participants in room can not hear local user.\n    }\n}\n\n...\n\n"})}),"\n",(0,i.jsx)(e.h2,{id:"host-controls-methods",children:"Host controls methods"}),"\n",(0,i.jsx)(e.p,{children:"If you (the local user) have the relevant permissions in the meeting, you can\ndisable a participant's video/audio streams, or even remove them from the\nmeeting."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-dart",children:"final participant = meeting.participants.joined.first;\n\n// To disable a participant's video stream\nparticipant.disableVideo();\n\n// To disable a participant's audio stream\nparticipant.disableAudio();\n\n// To kick a participant from the meeting\nparticipant.kick();\n\n// to pin a participant in a meeting\nparticipant.pin();\n\n"})}),"\n",(0,i.jsxs)(n,{children:[(0,i.jsx)("title",{children:"Flutter Core The participant object"}),(0,i.jsx)("meta",{name:"description",content:"Understand the participant object and its integration in Flutter. Follow ProductDB's documentation for effective implementation in your app."})]})]})}function l(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(p,{...t})}):p(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>c});var i=n(96540);const a={},r=i.createContext(a);function o(t){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:o(t.components),i.createElement(r.Provider,{value:e},t.children)}}}]);