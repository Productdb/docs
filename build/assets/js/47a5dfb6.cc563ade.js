"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[53488],{45705:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=n(74848),s=n(28453);const o={image:"/static/ui-kit/1.x.x/components/productdb-chat.svg",sidebar_position:1,description:"Learn how to use and customize the ProductDBChatViewController component in ProductDB's iOS UiKit with our detailed documentation."},r="Pre-built Chat Screen",a={id:"chat/pre-built-chat-screen",title:"Pre-built Chat Screen",description:"Learn how to use and customize the ProductDBChatViewController component in ProductDB's iOS UiKit with our detailed documentation.",source:"@site/docs/ios/chat/pre-built-chat-screen.mdx",sourceDirName:"chat",slug:"/chat/pre-built-chat-screen",permalink:"/ios/chat/pre-built-chat-screen",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios/chat/pre-built-chat-screen.mdx",tags:[],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:1,frontMatter:{image:"/static/ui-kit/1.x.x/components/productdb-chat.svg",sidebar_position:1,description:"Learn how to use and customize the ProductDBChatViewController component in ProductDB's iOS UiKit with our detailed documentation."},sidebar:"tutorialSidebar",previous:{title:"Pre-built Settings screen",permalink:"/ios/Pre-Built-Settings_Guides/Settings"},next:{title:"Chat Components",permalink:"/ios/chat/components-in-chat"}},c={},l=[{value:"Introduction to Chat in ProductDB Meetings",id:"introduction-to-chat-in-productdb-meetings",level:2},{value:"ProductDB&#39;s Prebuilt Chat Screen",id:"productdbs-prebuilt-chat-screen",level:2},{value:"Topics:",id:"topics",level:3},{value:"Parameters:",id:"parameters",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"pre-built-chat-screen",children:"Pre-built Chat Screen"}),"\n",(0,i.jsx)(t.h2,{id:"introduction-to-chat-in-productdb-meetings",children:"Introduction to Chat in ProductDB Meetings"}),"\n",(0,i.jsxs)(t.p,{children:["In ProductDB meetings, participants can also engage in real-time communication by sending chat messages.\nThese messages can be text, images, or files, depending on the ",(0,i.jsx)(t.a,{href:"/guides/livestream/advanced/configuring-permissions#chat",children:"chat permissions"}),"\nset in their preset."]}),"\n",(0,i.jsx)(t.h2,{id:"productdbs-prebuilt-chat-screen",children:"ProductDB's Prebuilt Chat Screen"}),"\n",(0,i.jsx)(t.p,{children:"ProductDB's iOS UiKit includes prebuilt Chat screen that handle the complete chat logic and offer\na range of features to enhance the chat experience in ProductDB meetings:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Display Messages"}),": Displays all chat messages, including text, images, and files, in a clear and organized manner"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Image Preview"}),": Allows users to tap on an image message to view it in full screen"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"File Download"}),": Enables users to download files sent in chat messages with a simple tap"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Message Composer"}),": Provides a user-friendly interface for composing messages, supporting text,\nimage, and file messages. It automatically adjusts the UI based on the user's chat permissions,\nhiding or disabling options that are not permitted"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Auto-Scroll"}),": Auto-scrolls to new messages as they are received but stops auto-scrolling if the user\nhas scrolled up to read an old message"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Device Permissions"}),": Handles device permissions elegantly on all supported Android versions for sending images, files,\nand downloading files to the device. This saves developers effort, allowing them to focus on building their apps"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"topics",children:"Topics:"}),"\n",(0,i.jsx)(t.p,{children:"Creating a chat screen."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:" let chatView = ChatViewController(dyteMobileClient: self.meeting)\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Add this ",(0,i.jsx)(t.code,{children:"chatView"})," to your View hierarchy. In case you need to add this to a ",(0,i.jsx)(t.code,{children:"ViewController"})," you can\nadd it inside a view of sub ",(0,i.jsx)(t.code,{children:"ViewController"}),", following example shows how to show chat screen on tap of button."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-swift",children:"private var splitContentViewController: UIViewController?\nprivate let splitContentBaseView = UIView()\n\nfunc chatClick(button: ProductDBControlBarButton) {\n    if button.isSelected {\n        let controller = ChatViewController(dyteMobileClient: self.meeting)\n        self.splitContentBaseView.addSubview(controller.view)\n        controller.view.set(.fillSuperView(self.splitContentBaseView))\n        self.splitContentViewController = controller\n    }\n}\n"})}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,i.jsx)(t.p,{children:"meeting: Current ongoing meeting object."}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)("title",{children:"iOS ProductDBChatViewController"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);