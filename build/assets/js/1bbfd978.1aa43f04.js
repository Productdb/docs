"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[84866],{28096:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var i=t(74848),o=t(28453);const s={image:"/static/ui-kit/1.x.x/components/more-menu.svg",sidebar_position:4,description:'Learn how to create and use a "More" menu for host control in your iOS app with our detailed documentation.'},r="Host Controls",a={id:"participants/host-controls",title:"Host Controls",description:'Learn how to create and use a "More" menu for host control in your iOS app with our detailed documentation.',source:"@site/docs/ios/participants/host-controls.mdx",sourceDirName:"participants",slug:"/participants/host-controls",permalink:"/ios/participants/host-controls",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios/participants/host-controls.mdx",tags:[],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:4,frontMatter:{image:"/static/ui-kit/1.x.x/components/more-menu.svg",sidebar_position:4,description:'Learn how to create and use a "More" menu for host control in your iOS app with our detailed documentation.'},sidebar:"tutorialSidebar",previous:{title:"Participant Types",permalink:"/ios/participants/type-of-participants"},next:{title:"Pre-built create poll Scren",permalink:"/ios/Pre-Built-Polls_Guides/Polls"}},c={},p=[];function u(n){const e={code:"code",h1:"h1",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"host-controls",children:"Host Controls"}),"\n",(0,i.jsx)(e.p,{children:'This documentation explains how to create and utilize a "More" menu for host control in your iOS app.'}),"\n",(0,i.jsx)(e.p,{children:"To create the More menu, use the following code:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-swift",children:'private func createMoreMenu(participantListener: ProductDBParticipantUpdateEventListener, indexPath: IndexPath) -> Bool {\n    var menus = [MenuType]()\n    let participant = participantListener.participant\n    let hostPermission = self.viewModel.mobileClient.localUser.permissions.host\n\n    if hostPermission.canPinParticipant {\n        if !participant.isPinned {\n            menus.append(.pin)\n        } else {\n            menus.append(.unPin)\n        }\n    }\n\n    if hostPermission.canMuteAudio && participant.audioEnabled {\n        menus.append(.muteAudio)\n    }\n\n    if hostPermission.canMuteVideo && participant.videoEnabled {\n        menus.append(.muteVideo)\n    }\n\n    if hostPermission.canKickParticipant && participant != self.viewModel.mobileClient.localUser {\n        menus.append(.kick)\n    }\n\n    if menus.isEmpty {\n        return false\n    }\n    menus.append(contentsOf: [.cancel])\n\n    let moreMenu = ProductDBMoreMenu(title: participant.name, features: menus, onSelect: { [weak self] menuType in\n        guard let self = self else { return }\n        switch menuType {\n        case .pin:\n            try? participant.pin()\n        case .unPin:\n            try? participant.unpin()\n        case .muteAudio:\n            try? participant.disableAudio()\n        case .muteVideo:\n            try? participant.disableVideo()\n        case .kick:\n            try? participant.kick()\n        case .cancel:\n            print("Operation cancelled")\n        default:\n            print("No action needed")\n        }\n    })\n    moreMenu.show(on: self.view)\n    return true\n}\n'})}),"\n",(0,i.jsx)(e.p,{children:"This code creates a \"More\" menu with various options based on the host's permissions and\nthe participant's current state. The menu allows the host to perform actions like pinning/unpinning\na participant, muting their audio or video, and kicking them from the session."})]})}function d(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var i=t(96540);const o={},s=i.createContext(o);function r(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);