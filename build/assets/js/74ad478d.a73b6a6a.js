"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[31214],{96903:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>m,frontMatter:()=>n,metadata:()=>r,toc:()=>d});var i=t(74848),a=t(28453);const n={title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",sidebar_position:3,tags:["web-core","local-user","self","self events"]},c="Manage Media Devices",r={id:"local-user/manage-media-devices",title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",source:"@site/docs/react-web-core/local-user/manage-media-devices.mdx",sourceDirName:"local-user",slug:"/local-user/manage-media-devices",permalink:"/react-web-core/local-user/manage-media-devices",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/react-web-core/local-user/manage-media-devices.mdx",tags:[{label:"web-core",permalink:"/react-web-core/tags/web-core"},{label:"local-user",permalink:"/react-web-core/tags/local-user"},{label:"self",permalink:"/react-web-core/tags/self"},{label:"self events",permalink:"/react-web-core/tags/self-events"}],version:"current",lastUpdatedAt:1721134929,formattedLastUpdatedAt:"Jul 16, 2024",sidebarPosition:3,frontMatter:{title:"Manage Media Devices",description:"Local user media guide to manage media permissions.",sidebar_position:3,tags:["web-core","local-user","self","self events"]},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/react-web-core/local-user/events"},next:{title:"Media Permission Errors",permalink:"/react-web-core/local-user/media-permission-errors"}},o={},d=[{value:"Set device",id:"set-device",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"manage-media-devices",children:"Manage Media Devices"}),"\n",(0,i.jsx)(s.p,{children:"Media devices represents the hardware for the camera, microphone and speaker\ndevices. To get the list of media devices that are currently being used, you can\nuse the following methods:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:"// Get all media devices\nconst devices = meeting.self.getAllDevices();\n\n// Get all audio devices\nconst audioDevices = meeting.self.getAudioDevices();\n\n// Get all video devices\nconst videoDevices = meeting.self.getVideoDevices();\n\n// Get all speakers\nconst speakerDevices = meeting.self.getSpeakerDevices();\n\n// Get device by ID\nconst device = meeting.self.getDeviceById('12345', 'audio');\n\n// Fetch current media devices being used\nconst currentDevices = meeting.self.getCurrentDevices();\n"})}),"\n",(0,i.jsx)(s.h2,{id:"set-device",children:"Set device"}),"\n",(0,i.jsxs)(s.p,{children:["To set a device as an active device, you can call ",(0,i.jsx)(s.code,{children:"setDevice"})," method. This takes\na ",(0,i.jsx)(s.code,{children:"MediaDeviceInfo"})," object, and replaces the same ",(0,i.jsx)(s.code,{children:"kind"})," device."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:"meeting.self.setDevice(device);\n"})}),"\n",(0,i.jsx)(t,{children:(0,i.jsx)("title",{children:"React Web Core Manage Media Devices"})})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>r});var i=t(96540);const a={},n=i.createContext(a);function c(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);