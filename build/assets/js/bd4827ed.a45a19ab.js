"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[53947],{21786:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var d=t(74848),n=t(28453);const r={title:"Using ProductDBGridView",sidebar_position:1},o=void 0,a={id:"render-participant-videos/using-productdbgrid",title:"Using ProductDBGridView",description:"The ProductDBGridView is a custom Android View provided by ProductDB's Android UI Kit, designed to simplify",source:"@site/docs/android/render-participant-videos/using-productdbgrid.mdx",sourceDirName:"render-participant-videos",slug:"/render-participant-videos/using-productdbgrid",permalink:"/android/render-participant-videos/using-productdbgrid",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/android/render-participant-videos/using-productdbgrid.mdx",tags:[],version:"current",lastUpdatedAt:1723760454,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:1,frontMatter:{title:"Using ProductDBGridView",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Audio/video - Device Selection",permalink:"/android/build-pre-call-ui/build-your-own/add-audio-video-device"},next:{title:"Building Your Own UI",permalink:"/android/render-participant-videos/custom-ui"}},s={},c=[{value:"Building Your Own UI",id:"building-your-own-ui",level:2}];function u(i){const e={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...i.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(e.p,{children:["The ",(0,d.jsx)(e.a,{href:"/android/components/productdb-grid",children:"ProductDBGridView"})," is a custom Android View provided by ProductDB's Android UI Kit, designed to simplify\nthe rendering of participant videos in a meeting. It abstracts the grid handling logic, making it easy to\ndisplay videos in a grid layout."]}),"\n",(0,d.jsxs)(e.p,{children:["To render participant videos using ",(0,d.jsx)(e.code,{children:"ProductDBGridView"}),", follow these steps:"]}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"Add ProductDBGridView to your layout"}),":"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-xml",children:'<dyte.io.uikit.view.dytegrid.ProductDBGridViewV2\n        android:id="@+id/dyte_grid_view"\n        android:layout_width="match_parent"\n        android:layout_height="match_parent"\n        />\n'})}),"\n",(0,d.jsxs)(e.ol,{start:"2",children:["\n",(0,d.jsxs)(e.li,{children:[(0,d.jsx)(e.strong,{children:"Activate ProductDBGridView"}),": In your fragment or activity class, activate the ",(0,d.jsx)(e.code,{children:"ProductDBGridViewV2"})," by calling the\n",(0,d.jsx)(e.code,{children:"activate"})," method with an instance of ",(0,d.jsx)(e.code,{children:"ProductDBMobileClient"}),"."]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-kotlin",children:"import dyte.io.uikit.view.dytegrid.ProductDBGridViewV2\nimport io.productdb.core.ProductDBMobileClient\n\nclass MeetingFragment : Fragment() {\n    private lateinit var gridView: ProductDBGridViewV2\n    private val meeting: ProductDBMobileClient by lazy { ProductDBUIKitBuilder.meeting }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        gridView = view.findViewById(R.id.dyte_grid_view)\n        gridView.activate(meeting)\n    }\n}\n"})}),"\n",(0,d.jsx)(e.p,{children:"After activation, the ProductDBGridView will automatically render the videos of the participants present in the meeting."}),"\n",(0,d.jsx)("img",{src:"/static/android-ui-kit/render-participant-videos/render-videos-dytegrid.png",width:"252",height:"560",alt:"Render Participant videos using ProductDBGridView",className:"mb-10"}),"\n",(0,d.jsx)(e.h2,{id:"building-your-own-ui",children:"Building Your Own UI"}),"\n",(0,d.jsx)(e.p,{children:"While ProductDBGridView provides a convenient way to render participant videos, you may want to customize the UI further.\nIn the next section, we will explore how to build your own UI to render participant videos according to your application's specific requirements."})]})}function l(i={}){const{wrapper:e}={...(0,n.R)(),...i.components};return e?(0,d.jsx)(e,{...i,children:(0,d.jsx)(u,{...i})}):u(i)}},28453:(i,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var d=t(96540);const n={},r=d.createContext(n);function o(i){const e=d.useContext(r);return d.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function a(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(n):i.components||n:o(i.components),d.createElement(r.Provider,{value:e},i.children)}}}]);