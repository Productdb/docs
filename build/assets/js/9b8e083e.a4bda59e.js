"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[9035],{90947:(n,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var e=i(74848),r=i(28453);const s={title:"Introduction",description:"Manage plugins in a meeting.",sidebar_position:1,tags:["android-ui-kit","plugins"]},o="Introduction",d={id:"plugins/introduction",title:"Introduction",description:"Manage plugins in a meeting.",source:"@site/docs/android/plugins/introduction.mdx",sourceDirName:"plugins",slug:"/plugins/introduction",permalink:"/android/plugins/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/android/plugins/introduction.mdx",tags:[{label:"android-ui-kit",permalink:"/android/tags/android-ui-kit"},{label:"plugins",permalink:"/android/tags/plugins"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Manage plugins in a meeting.",sidebar_position:1,tags:["android-ui-kit","plugins"]},sidebar:"tutorialSidebar",previous:{title:"Prebuilt",permalink:"/android/participants/prebuilt"},next:{title:"Prebuilt",permalink:"/android/plugins/prebuilt"}},l={},a=[];function c(n){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,e.jsxs)(t.p,{children:["Plugins are one-click add-ons that can make your meetings more immersive and collaborative. ProductDB provides a bunch of inbuilt plugins to choose from, you can also build your own plugins using the ",(0,e.jsx)(t.a,{href:"../../plugin-sdk/",children:"Plugin SDK"}),"."]}),"\n",(0,e.jsxs)(t.p,{children:["The meeting plugins can be accessed from the ",(0,e.jsx)(t.code,{children:"meeting.plugins"})," object, it exposes the following."]}),"\n",(0,e.jsxs)(t.table,{children:[(0,e.jsx)(t.thead,{children:(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.th,{children:"Property"}),(0,e.jsx)(t.th,{children:"Type"}),(0,e.jsx)(t.th,{children:"Description"})]})}),(0,e.jsxs)(t.tbody,{children:[(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:"active"}),(0,e.jsx)(t.td,{children:"List"}),(0,e.jsx)(t.td,{children:"All plugins that are currently in use."})]}),(0,e.jsxs)(t.tr,{children:[(0,e.jsx)(t.td,{children:"all"}),(0,e.jsx)(t.td,{children:"List"}),(0,e.jsx)(t.td,{children:"All plugins the meeting has access to."})]})]})]}),"\n",(0,e.jsxs)(t.p,{children:["Each plugin in the list is of type ",(0,e.jsx)(t.code,{children:"ProductDBPlugin"})," which has the following public fields and methods:"]}),"\n",(0,e.jsx)(t.pre,{children:(0,e.jsx)(t.code,{className:"language-kotlin",children:"class ProductDBPlugin {\n    val id: String\n    val name: String\n    val description: String\n    val picture: String\n    val isPrivate: Boolean\n    val staggered: Boolean\n    val baseURL: String\n    val config: PluginConfig\n    val isActive: Boolean\n    val enabledBy: String?\n\n    fun activate()\n    fun deactivate()\n    fun getPluginView(): WebView\n    fun uploadFile(file: ProductDBPluginFile)\n    fun sendData(eventName: String, data: Any?)\n}\n"})})]})}function u(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,e.jsx)(t,{...n,children:(0,e.jsx)(c,{...n})}):c(n)}},28453:(n,t,i)=>{i.d(t,{R:()=>o,x:()=>d});var e=i(96540);const r={},s=e.createContext(r);function o(n){const t=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function d(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),e.createElement(s.Provider,{value:t},n.children)}}}]);