"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[5061],{97290:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=s(74848),a=s(28453);const r={title:"Receiving chat messages",description:"Understand how to receive chat messages in your Flutter app using ProductDB's features. Follow our documentation for effective implementation.",sidebar_position:3,tags:["flutter-core","chat"]},o="Receive a Chat Message",i={id:"chat/receiving-chat-messages",title:"Receiving chat messages",description:"Understand how to receive chat messages in your Flutter app using ProductDB's features. Follow our documentation for effective implementation.",source:"@site/docs/flutter-core/chat/receiving-chat-messages.mdx",sourceDirName:"chat",slug:"/chat/receiving-chat-messages",permalink:"/flutter-core/chat/receiving-chat-messages",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/flutter-core/chat/receiving-chat-messages.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"chat",permalink:"/flutter-core/tags/chat"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:3,frontMatter:{title:"Receiving chat messages",description:"Understand how to receive chat messages in your Flutter app using ProductDB's features. Follow our documentation for effective implementation.",sidebar_position:3,tags:["flutter-core","chat"]},sidebar:"tutorialSidebar",previous:{title:"Sending a chat message",permalink:"/flutter-core/chat/sending-a-chat-message"},next:{title:"Livestreaming",permalink:"/flutter-core/livestream"}},c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"receive-a-chat-message",children:"Receive a Chat Message"}),"\n",(0,n.jsxs)(t.p,{children:["To receive chat messages, implement the ",(0,n.jsx)(t.code,{children:"onChatUpdates(...)"})," method from callback ",(0,n.jsx)(t.code,{children:"ProductDBChatEventsListener"}),". You can subscribe to these events by calling the following:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"\nclass ChatEventsListener with ProductDBChatEventsListener {\n\n  ...\n\n  @override\n  void onChatUpdates(List<ProductDBChatMessage> messages) {\n    messages.map((msg) {\n      switch (msg.type) {\n        case ProductDBMessageType.text:\n          print((msg as ProductDBTextMessage).displayName);\n          print((msg).message);\n\n          // Show message/return state to show text message UI.\n\n          break;\n        case ProductDBMessageType.image:\n          print((msg as ProductDBImageMessage).displayName);\n          print((msg).link);\n\n          // Show message/return state to show image message UI.\n          break;\n        case ProductDBMessageType.file:\n          print((msg as ProductDBFileMessage).name);\n          print((msg).link);\n          print((msg).size);\n          // Show message/return state to show file message UI.\n\n          break;\n      }\n    });\n  }\n\n  void onNewChatMessage(ProductDBChatMessage message) {\n      // your code to handle new chat message\n  }\n  ...\n}\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"dyteClient.addChatEventsListener(ChatEventsListener());\n"})}),"\n",(0,n.jsxs)(t.p,{children:["In this context, ",(0,n.jsx)(t.code,{children:"messages"})," refers to a list of all the chat messages in the meeting. The type of message used is ",(0,n.jsx)(t.code,{children:"ProductDBChatMessage"}),", which was introduced earlier in the ",(0,n.jsx)(t.a,{href:"/flutter-core/chat/introduction",children:"introduction"})," to Chat topic."]}),"\n",(0,n.jsxs)(t.p,{children:["Whenever a chat message is received, the ",(0,n.jsx)(t.code,{children:"dyteClient.chat.messages"})," list is automatically updated."]}),"\n",(0,n.jsxs)(s,{children:[(0,n.jsx)("title",{children:"Flutter Core Receiving chat messages"}),(0,n.jsx)("meta",{name:"description",content:"Understand how to receive chat messages in your Flutter app using ProductDB's features. Follow our documentation for effective implementation."})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(96540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);