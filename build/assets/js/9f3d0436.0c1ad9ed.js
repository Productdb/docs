"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[13748],{18217:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>a});var t=o(74848),i=o(28453);const l={title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with ProductDB's Polls Introduction guide.",sidebar_position:1,tags:["android-core","polls"]},s="Introduction",r={id:"polls/introduction",title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with ProductDB's Polls Introduction guide.",source:"@site/docs/android-core/polls/introduction.mdx",sourceDirName:"polls",slug:"/polls/introduction",permalink:"/android-core/polls/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/android-core/polls/introduction.mdx",tags:[{label:"android-core",permalink:"/android-core/tags/android-core"},{label:"polls",permalink:"/android-core/tags/polls"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:1,frontMatter:{title:"Introduction",description:"Learn the fundamentals of integrating polls into your Android application with ProductDB's Polls Introduction guide.",sidebar_position:1,tags:["android-core","polls"]},sidebar:"tutorialSidebar",previous:{title:"Livestream Event Listeners",permalink:"/android-core/livestream/productdb-livestream-listener"},next:{title:"Creating a poll",permalink:"/android-core/polls/creating-a-poll"}},d={},a=[{value:"Listening to new polls in a meeting",id:"listening-to-new-polls-in-a-meeting",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Head:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.p,{children:["The meetings polls object can be accessed using ",(0,t.jsx)(n.code,{children:"meeting.polls"}),". It provides\nmethods to create polls, vote, and more."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"meeting.polls.polls"})," returns an array of all polls created in a meeting, where\neach element is an object of type ",(0,t.jsx)(n.code,{children:"ProductDBPollMessage"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"data class ProductDBPollMessage(\n  val id: String,\n  val question: String,\n  val anonymous: Boolean,\n  val hideVotes: Boolean,\n  val createdBy: String,\n  val options: List<ProductDBPollOption>,\n)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The type ",(0,t.jsx)(n.code,{children:"ProductDBPollMessage"})," represents a poll in a ProductDB meeting. It also\ncontains list of ",(0,t.jsx)(n.code,{children:"ProductDBPollOption"})," which are options for a given poll. And every\n",(0,t.jsx)(n.code,{children:"ProductDBPollOption"})," has list of votes inside of it. Votes are objects of class\n",(0,t.jsx)(n.code,{children:"ProductDBPollVote"})," which internally has id and name of the vote."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"data class ProductDBPollOption(\n  val text: String,\n  val votes: List<ProductDBPollVote>,\n  val count: Int\n)\n\ndata class ProductDBPollVote(\n  val id: String,\n  val name: String\n)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["One can easily create, vote and view polls by listening to callbacks on\n",(0,t.jsx)(n.code,{children:"meeting"})," object."]}),"\n",(0,t.jsx)(n.h2,{id:"listening-to-new-polls-in-a-meeting",children:"Listening to new polls in a meeting"}),"\n",(0,t.jsxs)(n.p,{children:["To be able to receive new poll messages you need to implement a method\n",(0,t.jsx)(n.code,{children:"onPollUpdates()"})," method from callback ",(0,t.jsx)(n.code,{children:"ProductDBMeetingRoomEventsListener"}),". You can\nsubscribe to this events by calling\n",(0,t.jsx)(n.code,{children:"meeting.addMeetingEventsListener(dyteMeetingRoomEventsListener)"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-kotlin",children:"meeting.addMeetingRoomEventsListener(object :\n  ProductDBMeetingRoomEventsListener {\n    override fun onNewPoll(poll: ProductDBPollMessage) {\n      // code to handle new poll\n    }\n\n    override fun onPollUpdates(pollMessages: List<ProductDBPollMessage>) {\n      // code to handle polls and their vote updates.\n    }\n  })\n"})}),"\n",(0,t.jsx)(o,{children:(0,t.jsx)("title",{children:"Android Core Polls Introduction"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(96540);const i={},l=t.createContext(i);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);