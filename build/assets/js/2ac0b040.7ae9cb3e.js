"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[50179],{14396:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var o=n(74848),r=n(28453);const i={},c="ProductDBEndMeetingControlBarButton",d={id:"components/productdb-end-meeting",title:"ProductDBEndMeetingControlBarButton",description:"Overview",source:"@site/docs/ios/components/productdb-end-meeting.mdx",sourceDirName:"components",slug:"/components/productdb-end-meeting",permalink:"/ios/components/productdb-end-meeting",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios/components/productdb-end-meeting.mdx",tags:[],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ProductDBControlBarButton",permalink:"/ios/components/productdb-controlbar-button"},next:{title:"ProductDBMeetingHeaderView",permalink:"/ios/components/productdb-grid-pagination"}},s={},a=[{value:"Overview",id:"overview",level:2},{value:"Topics:",id:"topics",level:3},{value:"Creating a End meeting button which you mostly add inside Control Bar",id:"creating-a-end-meeting-button-which-you-mostly-add-inside-control-bar",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Override the onClick action.",id:"override-the-onclick-action",level:3}];function l(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"productdbendmeetingcontrolbarbutton",children:"ProductDBEndMeetingControlBarButton"}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"This button is use to implement the action for leaving the meeting. You can add functionality to leave the meeting\ninside the app by using this button."}),"\n",(0,o.jsx)(t.h3,{id:"topics",children:"Topics:"}),"\n",(0,o.jsx)(t.h3,{id:"creating-a-end-meeting-button-which-you-mostly-add-inside-control-bar",children:"Creating a End meeting button which you mostly add inside Control Bar"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"init(meeting: ProductDBMobileClient, alertViewController: UIViewController , onClick:((ProductDBEndMeetingControlBarButton, ProductDBLeaveDialog.ProductDBLeaveDialogAlertButtonType)->Void)? = nil, appearance: ProductDBControlBarButtonAppearance = AppTheme.shared.controlBarButtonAppearance)\n"})}),"\n",(0,o.jsx)(t.p,{children:"Creates a ProductDBEndMeetingControlBarButton with multiple parameters."}),"\n",(0,o.jsx)(t.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.em,{children:"Required"}),(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.strong,{children:"meeting:"})," Current ongoing meeting object.",(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.strong,{children:"alertViewController:"})," UIViewController object on which you want to present the UIAlertViewController. UIAlertView shown as final confirmation\nto leave meeting from the user.",(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.em,{children:"Optional"}),(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.strong,{children:"onClick:"}),' Closure that you passed to get callback when user take action on UIAlertView\nappearance: Any type which conforms to protocol "ProductDBControlBarButtonAppearance"']}),"\n",(0,o.jsx)(t.h3,{id:"override-the-onclick-action",children:"Override the onClick action."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"open func onClick(button: ProductDBEndMeetingControlBarButton) \n"})}),"\n",(0,o.jsxs)(t.p,{children:["You can override this method inside the subclass of ",(0,o.jsx)(t.code,{children:"ProductDBEndMeetingControlBarButton"})," to customize the functionality when user presses this button."]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>d});var o=n(96540);const r={},i=o.createContext(r);function c(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);