"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[75895],{58889:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var o=n(74848),i=n(28453);const r={title:"ProductDBSetupScreen",sidebar_position:4},s="SetupViewController",l={id:"build-pre-call-ui/default-setup-screen",title:"ProductDBSetupScreen",description:"ProductDB provides a default pre-call preview UI, also known as setup screen as part of our UI components.",source:"@site/docs/ios/build-pre-call-ui/default-setup-screen.mdx",sourceDirName:"build-pre-call-ui",slug:"/build-pre-call-ui/default-setup-screen",permalink:"/ios/build-pre-call-ui/default-setup-screen",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/ios/build-pre-call-ui/default-setup-screen.mdx",tags:[],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:4,frontMatter:{title:"ProductDBSetupScreen",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/ios/events"},next:{title:"Basic structure",permalink:"/ios/build-pre-call-ui/build-your-own/initial-code-skeleton"}},c={},a=[{value:"Overview",id:"overview",level:2},{value:"Topics:",id:"topics",level:2},{value:"Create SetupViewController",id:"create-setupviewcontroller",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Customising flow of SetupViewController using protocol",id:"customising-flow-of-setupviewcontroller-using-protocol",level:3}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"ProductDB provides a default pre-call preview UI, also known as setup screen as part of our UI components."}),"\n",(0,o.jsx)(t.h1,{id:"setupviewcontroller",children:"SetupViewController"}),"\n",(0,o.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(t.p,{children:"A screen shown before joining the meeting, where you can edit your display name,\nand media settings. This screen initialize the meeting and on successfull initialization\nit shows a join button to join meeting."}),"\n",(0,o.jsx)(t.h2,{id:"topics",children:"Topics:"}),"\n",(0,o.jsx)(t.h3,{id:"create-setupviewcontroller",children:"Create SetupViewController"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:" init(meetingInfo: ProductDBMeetingInfoV2, mobileClient: ProductDBMobileClient, completion:@escaping()->Void)\n\n"})}),"\n",(0,o.jsxs)(t.p,{children:["Creates setup screen with the configuration object of type ",(0,o.jsx)(t.code,{children:"ProductDBMeetingInfoV2"})]}),"\n",(0,o.jsx)(t.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,o.jsxs)(t.p,{children:["Required:\nmeetingInfo: An instance of type ",(0,o.jsx)(t.code,{children:"ProductDBMeetingInfoV2"}),"\nmeeting: Default meeting object\ncompletion: escaping closure to get a callback when Meetings ends up. For eg. When user leaved the meeting then\nyou want to present the starting screen."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"let controller =  SetupViewController(meetingInfo: dyteMeetingInfo,\n                                              meeting: metting) {  [weak self] in\n    guard let self = self else {return}\n    self.dismiss(animated: true)\n    self.view.hideActivityIndicator()\n}\ncontroller.modalPresentationStyle = .fullScreen\nself.present(controller, animated: true)\n\n"})}),"\n",(0,o.jsx)(t.h3,{id:"customising-flow-of-setupviewcontroller-using-protocol",children:"Customising flow of SetupViewController using protocol"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"/ios/components/productdb-setup-screen-delegate",children:"SetupViewControllerDelegate"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-swift",children:"  weak var delegate: SetupViewControllerDelegate?\n"})}),"\n",(0,o.jsxs)(t.p,{children:["The delegate of the ",(0,o.jsx)(t.a,{href:"/ios/components/productdb-setup-screen",children:"SetupViewController"})," object."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var o=n(96540);const i={},r=o.createContext(i);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);