"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[72698],{47548:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var r=s(74848),i=s(28453);const o={title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["react-web-core","local-user","self","self events"]},t="Local User - Events",a={id:"local-user/events",title:"Events",description:"Local user events guide.",source:"@site/docs/react-web-core/local-user/events.mdx",sourceDirName:"local-user",slug:"/local-user/events",permalink:"/react-web-core/local-user/events",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/react-web-core/local-user/events.mdx",tags:[{label:"react-web-core",permalink:"/react-web-core/tags/react-web-core"},{label:"local-user",permalink:"/react-web-core/tags/local-user"},{label:"self",permalink:"/react-web-core/tags/self"},{label:"self events",permalink:"/react-web-core/tags/self-events"}],version:"current",lastUpdatedAt:1723758501,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:2,frontMatter:{title:"Events",description:"Local user events guide.",sidebar_position:2,tags:["react-web-core","local-user","self","self events"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/react-web-core/local-user/introduction"},next:{title:"Manage Media Devices",permalink:"/react-web-core/local-user/manage-media-devices"}},d={},c=[{value:"Room joined / leave",id:"room-joined--leave",level:2},{value:"Video update",id:"video-update",level:2},{value:"Audio update",id:"audio-update",level:2},{value:"Screenshare update",id:"screenshare-update",level:2},{value:"Device update",id:"device-update",level:2},{value:"Network quality score",id:"network-quality-score",level:2},{value:"Permission Updates",id:"permission-updates",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components},{Head:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"local-user---events",children:"Local User - Events"}),"\n",(0,r.jsx)(n.h2,{id:"room-joined--leave",children:"Room joined / leave"}),"\n",(0,r.jsx)(n.p,{children:"Trigger an update when the local user joins / leave a room."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const roomJoined = useDyteSelector((meeting) => meeting.self.roomJoined);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"video-update",children:"Video update"}),"\n",(0,r.jsxs)(n.p,{children:["Triggered when the user starts / stops the video using ",(0,r.jsx)(n.code,{children:"enableVideo"})," or\n",(0,r.jsx)(n.code,{children:"disableVideo"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const videoEnabled = useDyteSelector((meeting) => meeting.self.videoEnabled);\nconst videoTrack = useDyteSelector((meeting) => meeting.self.videoTrack);\n\nuseEffect(() => {\n  const videoElem = document.getElementById('my-video');\n  if (videoEnabled && videoTrack) {\n    const stream = new MediaStream();\n    stream.addTrack(videoTrack);\n    videoElem.srcObject = stream;\n    videoElem.play();\n  }\n}, [videoEnabled, videoTrack]);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"audio-update",children:"Audio update"}),"\n",(0,r.jsxs)(n.p,{children:["Triggered when the user starts / stops the audio using ",(0,r.jsx)(n.code,{children:"enableAudio"})," or\n",(0,r.jsx)(n.code,{children:"disableAudio"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const audioEnabled = useDyteSelector((meeting) => meeting.self.audioEnabled);\nconst audioTrack = useDyteSelector((meeting) => meeting.self.audioTrack);\n\nuseEffect(() => {\n  const audioElem = document.getElementById('my-audio');\n  if (audioEnabled && audioTrack) {\n    const stream = new MediaStream();\n    stream.addTrack(audioTrack);\n    audioElem.srcObject = stream;\n    audioElem.play();\n  }\n}, [audioEnabled, audioTrack]);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"screenshare-update",children:"Screenshare update"}),"\n",(0,r.jsxs)(n.p,{children:["Triggered when the user starts / stops the screen share using\n",(0,r.jsx)(n.code,{children:"enableScreenShare()"})," or ",(0,r.jsx)(n.code,{children:"disableScreenShare()"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"const screenShareEnabled = useDyteSelector(\n  (meeting) => meeting.self.screenShareEnabled\n);\nconst screenShareTrack = useDyteSelector(\n  (meeting) => meeting.self.screenShareTrack\n);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"device-update",children:"Device update"}),"\n",(0,r.jsxs)(n.p,{children:["Subscribe to the ",(0,r.jsx)(n.code,{children:"deviceUpdate"})," event to handle the changing video, audio and\nspeaker devices"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('deviceUpdate', ({ device }) => {\n  // handle microphone device change\n  if (device.kind === 'audioinput') {\n    console.log('mic change', device);\n  }\n  // handle camera device change\n  if (device.kind === 'videoinput') {\n    console.log('camera change', device);\n  }\n  // handle speaker device change\n  if (device.kind === 'audiooutput') {\n    console.log('speaker change', device);\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"network-quality-score",children:"Network quality score"}),"\n",(0,r.jsxs)(n.p,{children:["Subscribe to the ",(0,r.jsx)(n.code,{children:"mediaScoreUpdate"})," event to monitor network"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"meeting.self.on('mediaScoreUpdate', ({ kind, isScreenshare, score }) => {\n  if (kind === 'video') {\n    console.log(\n      `Your ${isScreenshare ? 'screenshare' : 'video'} quality score is `,\n      score\n    );\n  }\n\n  if (kind === 'audio') {\n    console.log('Your audio quality score is ', score);\n  }\n\n  if (score < 5) {\n    console.log('Your media quality is poor');\n  }\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"permission-updates",children:"Permission Updates"}),"\n",(0,r.jsx)(n.p,{children:"Triggered when permissions are updated dynamically by a privileged user"}),"\n",(0,r.jsxs)(n.p,{children:["Subscribe to ",(0,r.jsx)(n.code,{children:"chatUpdate"}),", ",(0,r.jsx)(n.code,{children:"pollsUpdate"}),", ",(0,r.jsx)(n.code,{children:"pluginsUpdate"})," or ",(0,r.jsx)(n.code,{children:"*"})," for any kind of permission updates\nExample:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"meeting.self.permissions.on('chatUpdate', () => {\n  // Chat permissions are updated\n  // check meeting.self.permissions for updated permissions\n});\n"})}),"\n",(0,r.jsx)(s,{children:(0,r.jsx)("title",{children:"React Web Core Events"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(96540);const i={},o=r.createContext(i);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);