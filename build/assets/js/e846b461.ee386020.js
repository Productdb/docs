"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[82867],{3620:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var i=t(74848),o=t(28453);const d={title:"Audio/video - Device Selection",sidebar_position:4},a=void 0,r={id:"build-pre-call-ui/build-your-own/add-audio-video-device",title:"Audio/video - Device Selection",description:"To let the user choose between multiple available input / output devices, you can use the `` component",source:"@site/docs/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-device.mdx",sourceDirName:"build-pre-call-ui/build-your-own",slug:"/build-pre-call-ui/build-your-own/add-audio-video-device",permalink:"/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-device",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-device.mdx",tags:[],version:"current",lastUpdatedAt:1723758501,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:4,frontMatter:{title:"Audio/video - Device Selection",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Audio/video - Preview",permalink:"/react-ui-kit/build-pre-call-ui/build-your-own/add-audio-video-preview"},next:{title:"Virtual background",permalink:"/react-ui-kit/build-pre-call-ui/build-your-own/add-middleware"}},c={},l=[];function s(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["To let the user choose between multiple available input / output devices, you can use the ",(0,i.jsx)(n.code,{children:"<ProductDBSettings >"})," component"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"function DeviceSettings({ open, onClose }) {\n  const { meeting } = useDyteMeeting();\n  return (\n    <SomeDialogComponent open={open} onClose={onClose}>\n      <ProductDBSettings meeting={meeting} />\n    </SomeDialogComponent>\n  );\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you added ",(0,i.jsx)(n.code,{children:"ProductDBDialogManager"})," as suggested in the ",(0,i.jsx)(n.a,{href:"/react-ui-kit/build-pre-call-ui/build-your-own/initial-code-skeleton#file-meetingtsx",children:"Basic Structure"})," guide, you can also use ",(0,i.jsx)(n.code,{children:"<ProductDBSettingsToggle>"})," component to trigger the inbuilt Dialog."]}),"\n",(0,i.jsx)(n.p,{children:"Extending the last code sample with device selector."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:"live showLineNumbers",live:!0,children:'function CustomMeetingPreview() {\n  const { meeting } = useDyteMeeting();\n\n  return (\n    <div\n      className="bg-secondary-900 flex flex-col items-center justify-center"\n      style={{ minHeight: \'400px\' }}\n    >\n      {/* Do not re-add this, if already added in the parent component */}\n      <ProductDBDialogManager meeting={meeting} />\n      <div className="flex w-full items-center justify-around p-[10%]">\n        <div className="relative">\n          <ProductDBParticipantTile meeting={meeting} participant={meeting.self}>\n            <ProductDBAvatar participant={meeting.self} />\n            <ProductDBNameTag participant={meeting.self}>\n              <ProductDBAudioVisualizer participant={meeting.self} slot="start" />\n            </ProductDBNameTag>\n            <div\n              className="absolute flex"\n              style={{\n                top: \'8px\',\n                right: \'8px\',\n              }}\n            >\n              <ProductDBSettingsToggle meeting={meeting} size="sm" />\n            </div>\n            <div\n              id="user-actions"\n              className="absolute flex"\n              style={{\n                bottom: \'8px\',\n                right: \'8px\',\n              }}\n            >\n              <ProductDBMicToggle meeting={meeting} size="sm" />\n              <ProductDBCameraToggle meeting={meeting} size="sm" />\n            </div>\n          </ProductDBParticipantTile>\n        </div>\n        <div className="flex w-1/4 flex-col justify-between">\n          <div className="flex flex-col items-center">\n            <p>Joining as {meeting.self.name}</p>\n          </div>\n          <ProductDBButton\n            kind="wide"\n            size="lg"\n            onClick={async () => {\n              await meeting.join();\n            }}\n          >\n            Join\n          </ProductDBButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const o={},d=i.createContext(o);function a(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);