"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[80659],{5666:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var t=n(74848),i=n(28453);const o={title:"Recording",description:"Explore recording features in Flutter with ProductDB's documentation. Learn how to enable and configure recording for a seamless user experience.",sidebar_position:9,tags:["flutter-core","recording"]},d="Recording",c={id:"recording",title:"Recording",description:"Explore recording features in Flutter with ProductDB's documentation. Learn how to enable and configure recording for a seamless user experience.",source:"@site/docs/flutter-core/recording.mdx",sourceDirName:".",slug:"/recording",permalink:"/flutter-core/recording",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/flutter-core/recording.mdx",tags:[{label:"flutter-core",permalink:"/flutter-core/tags/flutter-core"},{label:"recording",permalink:"/flutter-core/tags/recording"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:9,frontMatter:{title:"Recording",description:"Explore recording features in Flutter with ProductDB's documentation. Learn how to enable and configure recording for a seamless user experience.",sidebar_position:9,tags:["flutter-core","recording"]},sidebar:"tutorialSidebar",previous:{title:"Stage Access for Viewers",permalink:"/flutter-core/stage-management/viewer-participants"},next:{title:"Host Actions & Permissions",permalink:"/flutter-core/host-actions"}},s={},a=[{value:"Recording State",id:"recording-state",level:3},{value:"Start a recording",id:"start-a-recording",level:3},{value:"Stop a recording",id:"stop-a-recording",level:3},{value:"Listening for Recording Events",id:"listening-for-recording-events",level:3},{value:"Listen to recording state changes",id:"listen-to-recording-state-changes",level:3}];function l(e){const r={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Head:n}=r;return n||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"recording",children:"Recording"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"dyteClient.recording"})," object can be used start and stop recordings in a\nmeeting."]}),"\n",(0,t.jsx)(r.h3,{id:"recording-state",children:"Recording State"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"dyteClient.recording.recordingState"})," property indicates the current state of the recording. Possible states include ",(0,t.jsx)(r.code,{children:"idle"}),", ",(0,t.jsx)(r.code,{children:"recording"}),", ",(0,t.jsx)(r.code,{children:"starting"}),", ",(0,t.jsx)(r.code,{children:"stopping"}),"."]}),"\n",(0,t.jsx)(r.h3,{id:"start-a-recording",children:"Start a recording"}),"\n",(0,t.jsxs)(r.p,{children:["To start a recording, you need to call the ",(0,t.jsx)(r.code,{children:"start()"})," method in the\n",(0,t.jsx)(r.code,{children:"dyteClient.recording"})," object, as shown below."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-dart",children:"dyteClient.recording.start();\n"})}),"\n",(0,t.jsx)(r.h3,{id:"stop-a-recording",children:"Stop a recording"}),"\n",(0,t.jsxs)(r.p,{children:["To stop a recording, you need to call the ",(0,t.jsx)(r.code,{children:"stop()"})," method in the\n",(0,t.jsx)(r.code,{children:"dyteClient.recording"})," object, as shown below."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-dart",children:"dyteClient.recording.stop();\n"})}),"\n",(0,t.jsx)(r.h3,{id:"listening-for-recording-events",children:"Listening for Recording Events"}),"\n",(0,t.jsxs)(r.p,{children:["To handle recording-related updates, you need to listen for\n",(0,t.jsx)(r.code,{children:"onMeetingRecordingStateUpdated()"})," event. This returns ",(0,t.jsx)(r.code,{children:"ProductDBRecordingState"}),"\nobject with it."]}),"\n",(0,t.jsx)(r.h3,{id:"listen-to-recording-state-changes",children:"Listen to recording state changes"}),"\n",(0,t.jsxs)(r.p,{children:["To handle recording-related updates, you need to implement ",(0,t.jsx)(r.code,{children:"ProductDBMeetingRoomEventsListener"}),". This interface provides callbacks for various recording events as described in excerpt below:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingStarted()"}),": Called when the recording is started or resumed, either by the user or their peer."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingEnded()"}),": Called when the recording is stopped or paused, either by the user or their peer."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingStateUpdated(ProductDBRecordingState"})," recordingState): Notifies when there is a change in the recording state."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingStopError(String error)"}),": Indicates an error occurred while stopping an active recording."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingPauseError(String error)"}),": Indicates an error occurred while pausing an active recording."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"onMeetingRecordingResumeError(String error)"}),": Indicates an error occurred while resuming a paused recording."]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-dart",children:"\nclass RecordingListener with ProductDBRecordingEventsListener {\n\n  @override\n  void onMeetingRecordingStarted() {\n    /// Handle starting of recording\n  }\n\n  @override\n  void onMeetingRecordingStateUpdated(ProductDBRecordingState recordingState) {\n    /// Handle status update of recording\n  }\n\n   @override\n  void onMeetingRecordingEnded() {\n    /// Handle recording ended\n  }\n\n  @override\n  void onMeetingRecordingStopError(String error) {\n    /// Handle recording error\n  }\n\n}\n\n"})}),"\n",(0,t.jsxs)(r.p,{children:["You can subscribe to this events by ",(0,t.jsx)(r.code,{children:"addRecordingListener"})," method:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-dart",children:"dyteClient.addRecordingListener(RecordingListener());\n"})}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("title",{children:"Flutter Core Recording"}),(0,t.jsx)("meta",{name:"description",content:"Explore recording features in Flutter with ProductDB's documentation. Learn how to enable and configure recording for a seamless user experience."})]})]})}function g(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>c});var t=n(96540);const i={},o=t.createContext(i);function d(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);