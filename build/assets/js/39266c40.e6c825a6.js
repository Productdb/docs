"use strict";(self.webpackChunkproductdb_docs=self.webpackChunkproductdb_docs||[]).push([[94950],{61:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>s});var t=i(74848),l=i(28453);const o={title:"Other methods",description:"Methods on a plugin in a meeting.",sidebar_position:3,tags:["android-core","plugins"]},d=void 0,a={id:"plugins/extra",title:"Other methods",description:"Methods on a plugin in a meeting.",source:"@site/docs/android-core/plugins/extra.mdx",sourceDirName:"plugins",slug:"/plugins/extra",permalink:"/android-core/plugins/extra",draft:!1,unlisted:!1,editUrl:"https://github.com/productdb/docs/tree/main/docs/android-core/plugins/extra.mdx",tags:[{label:"android-core",permalink:"/android-core/tags/android-core"},{label:"plugins",permalink:"/android-core/tags/plugins"}],version:"current",lastUpdatedAt:1723755734,formattedLastUpdatedAt:"Aug 15, 2024",sidebarPosition:3,frontMatter:{title:"Other methods",description:"Methods on a plugin in a meeting.",sidebar_position:3,tags:["android-core","plugins"]},sidebar:"tutorialSidebar",previous:{title:"Functions to enable plugins",permalink:"/android-core/plugins/enable-disable-plugin"},next:{title:"Recording",permalink:"/android-core/recording"}},r={},s=[{value:"Send data to the plugin",id:"send-data-to-the-plugin",level:2},{value:"Listening to plugin events",id:"listening-to-plugin-events",level:2},{value:"Upload file to a plugin",id:"upload-file-to-a-plugin",level:2}];function u(n){const e={code:"code",h2:"h2",p:"p",pre:"pre",...(0,l.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"send-data-to-the-plugin",children:"Send data to the plugin"}),"\n",(0,t.jsxs)(e.p,{children:["You can send data (type ",(0,t.jsx)(e.code,{children:"any"}),") to a plugin using the ",(0,t.jsx)(e.code,{children:"sendData()"})," method. This method comes in handy when building your own plugin."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:'val pluginId = \'...\';\nval plugin = meeting.plugins.active.firstOrNull { it.id == pluginId }\n\nplugin?.let { p ->\n  p.sendData(\n    eventName = "my-custom-event",\n    data = "Hello world"\n  )\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"listening-to-plugin-events",children:"Listening to plugin events"}),"\n",(0,t.jsxs)(e.p,{children:["You can receive data from a plugin by implementing the ",(0,t.jsx)(e.code,{children:"onPluginMessage()"})," method defined in ",(0,t.jsx)(e.code,{children:"ProductDBPluginEventsListener"})," interface. This method comes in handy when building your own plugin."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"val pluginEventListener = object : ProductDBPluginEventsListener {\n  override fun onPluginActivated(plugim: ProductDBPlugin) {\n    ...\n  }\n\n  override fun onPluginDeactivated(plugin: ProductDBPlugin) {\n    ...\n  }\n\n  override onPluginMessage(plugin: ProductDBPlugin, eventName: String, data: Any?) {\n    ...\n  }\n\n  override onPluginFileRequest(plugin: ProductDBPlugin) {\n    ...\n  }\n}\n\nmeeting.addPluginEventsListener(pluginEventListener)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"upload-file-to-a-plugin",children:"Upload file to a plugin"}),"\n",(0,t.jsxs)(e.p,{children:["You can upload a file to a plugin that supports file uploads using the ",(0,t.jsx)(e.code,{children:"uploadFile()"})," method. This method comes in handy when\nbuilding your own plugin."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-kotlin",children:"val pluginId = '...';\nval plugin = meeting.plugins.active.firstOrNull { it.id == pluginId }\n\nplugin?.let { p ->\n  p.uploadFile(\n    ProductDBPluginFile(\n      resultCode = 1,\n      data = Intent() // Intent with the file data\n    )\n  )\n}\n"})})]})}function c(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>d,x:()=>a});var t=i(96540);const l={},o=t.createContext(l);function d(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:d(n.components),t.createElement(o.Provider,{value:e},n.children)}}}]);